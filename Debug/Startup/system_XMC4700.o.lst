   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "system_XMC4700.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .global SystemCoreClock
  20              	 .section .no_init,"aw",%progbits
  21              	 .align 2
  24              	SystemCoreClock:
  25 0000 00000000 	 .space 4
  26              	 .global g_chipid
  27              	 .align 2
  30              	g_chipid:
  31 0004 00000000 	 .space 16
  31      00000000 
  31      00000000 
  31      00000000 
  32              	 .section .text.delay,"ax",%progbits
  33              	 .align 2
  34              	 .thumb
  35              	 .thumb_func
  37              	delay:
  38              	.LFB123:
  39              	 .file 1 "../Startup/system_XMC4700.c"
   1:../Startup/system_XMC4700.c **** /**************************************************************************************************
   2:../Startup/system_XMC4700.c ****  * @file     system_XMC4700.c
   3:../Startup/system_XMC4700.c ****  * @brief    CMSIS Cortex-M4 Device Peripheral Access Layer Header File for the Infineon XMC4700 De
   4:../Startup/system_XMC4700.c ****  * @version  V1.0.2
   5:../Startup/system_XMC4700.c ****  * @date     01. Jun 2016
   6:../Startup/system_XMC4700.c ****  *
   7:../Startup/system_XMC4700.c ****  * @cond
   8:../Startup/system_XMC4700.c ****  **************************************************************************************************
   9:../Startup/system_XMC4700.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Startup/system_XMC4700.c ****  * All rights reserved.
  11:../Startup/system_XMC4700.c ****  *
  12:../Startup/system_XMC4700.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Startup/system_XMC4700.c ****  * following conditions are met:
  14:../Startup/system_XMC4700.c ****  *
  15:../Startup/system_XMC4700.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Startup/system_XMC4700.c ****  * disclaimer.
  17:../Startup/system_XMC4700.c ****  *
  18:../Startup/system_XMC4700.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Startup/system_XMC4700.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  20:../Startup/system_XMC4700.c ****  *
  21:../Startup/system_XMC4700.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Startup/system_XMC4700.c ****  * products derived from this software without specific prior written permission.
  23:../Startup/system_XMC4700.c ****  *
  24:../Startup/system_XMC4700.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Startup/system_XMC4700.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Startup/system_XMC4700.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Startup/system_XMC4700.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Startup/system_XMC4700.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Startup/system_XMC4700.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Startup/system_XMC4700.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:../Startup/system_XMC4700.c ****  *
  32:../Startup/system_XMC4700.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Startup/system_XMC4700.c ****  * Infineon Technologies AG dave@infineon.com).
  34:../Startup/system_XMC4700.c ****  **************************************************************************************************
  35:../Startup/system_XMC4700.c ****  *
  36:../Startup/system_XMC4700.c ****  ********************** Version History ***************************************
  37:../Startup/system_XMC4700.c ****  * V1.0.0, 03. Sep 2015, Initial version
  38:../Startup/system_XMC4700.c ****  * V1.0.1, 26. Jan 2016, Disable trap generation from clock unit
  39:../Startup/system_XMC4700.c ****  * V1.0.2, 01. Jun 2016, Fix masking of OSCHPCTRL value
  40:../Startup/system_XMC4700.c ****  ******************************************************************************
  41:../Startup/system_XMC4700.c ****  * @endcond
  42:../Startup/system_XMC4700.c ****  */
  43:../Startup/system_XMC4700.c **** 
  44:../Startup/system_XMC4700.c **** /*******************************************************************************
  45:../Startup/system_XMC4700.c ****  * Default clock initialization
  46:../Startup/system_XMC4700.c ****  * fPLL = 288MHz => fSYS = 144MHz => fCPU = 144MHz
  47:../Startup/system_XMC4700.c ****  *                                => fPB  = 144MHz
  48:../Startup/system_XMC4700.c ****  *                                => fCCU = 144MHz
  49:../Startup/system_XMC4700.c ****  *                                => fETH = 72MHz
  50:../Startup/system_XMC4700.c ****  *               => fUSB = 48MHz
  51:../Startup/system_XMC4700.c ****  *               => fEBU = 72MHz
  52:../Startup/system_XMC4700.c ****  *
  53:../Startup/system_XMC4700.c ****  * fUSBPLL Disabled, only enabled if SCU_CLK_USBCLKCR_USBSEL_USBPLL is selected
  54:../Startup/system_XMC4700.c ****  *
  55:../Startup/system_XMC4700.c ****  * fOFI = 24MHz => fWDT = 24MHz
  56:../Startup/system_XMC4700.c ****  *******************************************************************************/
  57:../Startup/system_XMC4700.c **** 
  58:../Startup/system_XMC4700.c **** /*******************************************************************************
  59:../Startup/system_XMC4700.c ****  * HEADER FILES
  60:../Startup/system_XMC4700.c ****  *******************************************************************************/
  61:../Startup/system_XMC4700.c **** #include <string.h>
  62:../Startup/system_XMC4700.c **** 
  63:../Startup/system_XMC4700.c **** #include <XMC4700.h>
  64:../Startup/system_XMC4700.c **** #include "system_XMC4700.h"
  65:../Startup/system_XMC4700.c **** 
  66:../Startup/system_XMC4700.c **** /*******************************************************************************
  67:../Startup/system_XMC4700.c ****  * MACROS
  68:../Startup/system_XMC4700.c ****  *******************************************************************************/
  69:../Startup/system_XMC4700.c **** 
  70:../Startup/system_XMC4700.c **** #define CHIPID_LOC ((uint8_t *)0x20000000UL)
  71:../Startup/system_XMC4700.c **** 
  72:../Startup/system_XMC4700.c **** /* Define WEAK attribute */
  73:../Startup/system_XMC4700.c **** #if !defined(__WEAK)
  74:../Startup/system_XMC4700.c **** #if defined ( __CC_ARM )
  75:../Startup/system_XMC4700.c **** #define __WEAK __attribute__ ((weak))
  76:../Startup/system_XMC4700.c **** #elif defined ( __ICCARM__ )
  77:../Startup/system_XMC4700.c **** #define __WEAK __weak
  78:../Startup/system_XMC4700.c **** #elif defined ( __GNUC__ )
  79:../Startup/system_XMC4700.c **** #define __WEAK __attribute__ ((weak))
  80:../Startup/system_XMC4700.c **** #elif defined ( __TASKING__ )
  81:../Startup/system_XMC4700.c **** #define __WEAK __attribute__ ((weak))
  82:../Startup/system_XMC4700.c **** #endif
  83:../Startup/system_XMC4700.c **** #endif
  84:../Startup/system_XMC4700.c **** 
  85:../Startup/system_XMC4700.c **** #define PMU_FLASH_WS          (0x4U)
  86:../Startup/system_XMC4700.c **** 
  87:../Startup/system_XMC4700.c **** #define FOSCREF               (2500000U)
  88:../Startup/system_XMC4700.c **** 
  89:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_50MHZ  (2500UL)
  90:../Startup/system_XMC4700.c **** #define DELAY_CNT_150US_50MHZ (7500UL)
  91:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_48MHZ  (2400UL)
  92:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_72MHZ  (3600UL)
  93:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_96MHZ  (4800UL)
  94:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_120MHZ (6000UL)
  95:../Startup/system_XMC4700.c **** #define DELAY_CNT_50US_144MHZ (7200UL)
  96:../Startup/system_XMC4700.c **** 
  97:../Startup/system_XMC4700.c **** #define SCU_PLL_PLLSTAT_OSC_USABLE  (SCU_PLL_PLLSTAT_PLLHV_Msk | \
  98:../Startup/system_XMC4700.c ****                                      SCU_PLL_PLLSTAT_PLLLV_Msk | \
  99:../Startup/system_XMC4700.c ****                                      SCU_PLL_PLLSTAT_PLLSP_Msk)
 100:../Startup/system_XMC4700.c **** 
 101:../Startup/system_XMC4700.c **** /*
 102:../Startup/system_XMC4700.c **** //-------- <<< Use Configuration Wizard in Context Menu >>> ------------------
 103:../Startup/system_XMC4700.c **** */
 104:../Startup/system_XMC4700.c **** 
 105:../Startup/system_XMC4700.c **** /*
 106:../Startup/system_XMC4700.c **** // <h> Clock configuration
 107:../Startup/system_XMC4700.c **** */
 108:../Startup/system_XMC4700.c **** 
 109:../Startup/system_XMC4700.c **** /*
 110:../Startup/system_XMC4700.c **** //    <o> External crystal frequency [Hz]
 111:../Startup/system_XMC4700.c **** //       <8000000=> 8MHz
 112:../Startup/system_XMC4700.c **** //       <12000000=> 12MHz
 113:../Startup/system_XMC4700.c **** //       <16000000=> 16MHz
 114:../Startup/system_XMC4700.c **** //    <i> Defines external crystal frequency
 115:../Startup/system_XMC4700.c **** //    <i> Default: 8MHz
 116:../Startup/system_XMC4700.c **** */
 117:../Startup/system_XMC4700.c **** #define OSCHP_FREQUENCY (12000000U)
 118:../Startup/system_XMC4700.c **** 
 119:../Startup/system_XMC4700.c **** /* USB PLL settings, fUSBPLL = 48MHz and fUSBPLLVCO = 384 MHz */
 120:../Startup/system_XMC4700.c **** /* Note: Implicit divider of 2 and fUSBPLLVCO >= 260 MHz and fUSBPLLVCO <= 520 MHz*/
 121:../Startup/system_XMC4700.c **** #if OSCHP_FREQUENCY == 8000000U
 122:../Startup/system_XMC4700.c **** #define USB_PDIV (1U)
 123:../Startup/system_XMC4700.c **** #define USB_NDIV (95U)
 124:../Startup/system_XMC4700.c **** 
 125:../Startup/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 12000000U
 126:../Startup/system_XMC4700.c **** #define USB_PDIV (1U)
 127:../Startup/system_XMC4700.c **** #define USB_NDIV (63U)
 128:../Startup/system_XMC4700.c **** 
 129:../Startup/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 16000000U
 130:../Startup/system_XMC4700.c **** #define USB_PDIV (1U)
 131:../Startup/system_XMC4700.c **** #define USB_NDIV (47U)
 132:../Startup/system_XMC4700.c **** 
 133:../Startup/system_XMC4700.c **** #else
 134:../Startup/system_XMC4700.c **** #error "External crystal frequency not supported"
 135:../Startup/system_XMC4700.c **** 
 136:../Startup/system_XMC4700.c **** #endif
 137:../Startup/system_XMC4700.c **** 
 138:../Startup/system_XMC4700.c **** /*
 139:../Startup/system_XMC4700.c **** //    <o> Backup clock calibration mode
 140:../Startup/system_XMC4700.c **** //       <0=> Factory calibration
 141:../Startup/system_XMC4700.c **** //       <1=> Automatic calibration
 142:../Startup/system_XMC4700.c **** //    <i> Default: Automatic calibration
 143:../Startup/system_XMC4700.c **** */
 144:../Startup/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE 1
 145:../Startup/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE_FACTORY 0
 146:../Startup/system_XMC4700.c **** #define FOFI_CALIBRATION_MODE_AUTOMATIC 1
 147:../Startup/system_XMC4700.c **** 
 148:../Startup/system_XMC4700.c **** /*
 149:../Startup/system_XMC4700.c **** //    <o> Standby clock (fSTDBY) source selection
 150:../Startup/system_XMC4700.c **** //       <0=> Internal slow oscillator (32768Hz)
 151:../Startup/system_XMC4700.c **** //       <1=> External crystal (32768Hz)
 152:../Startup/system_XMC4700.c **** //    <i> Default: Internal slow oscillator (32768Hz)
 153:../Startup/system_XMC4700.c **** */
 154:../Startup/system_XMC4700.c **** #define STDBY_CLOCK_SRC 0
 155:../Startup/system_XMC4700.c **** #define STDBY_CLOCK_SRC_OSI 0
 156:../Startup/system_XMC4700.c **** #define STDBY_CLOCK_SRC_OSCULP 1
 157:../Startup/system_XMC4700.c **** 
 158:../Startup/system_XMC4700.c **** /*
 159:../Startup/system_XMC4700.c **** //    <o> PLL clock source selection
 160:../Startup/system_XMC4700.c **** //       <0=> External crystal
 161:../Startup/system_XMC4700.c **** //       <1=> Internal fast oscillator
 162:../Startup/system_XMC4700.c **** //    <i> Default: External crystal
 163:../Startup/system_XMC4700.c **** */
 164:../Startup/system_XMC4700.c **** #define PLL_CLOCK_SRC 0
 165:../Startup/system_XMC4700.c **** #define PLL_CLOCK_SRC_EXT_XTAL 0
 166:../Startup/system_XMC4700.c **** #define PLL_CLOCK_SRC_OFI 1
 167:../Startup/system_XMC4700.c **** 
 168:../Startup/system_XMC4700.c **** /* PLL settings, fPLL = 288MHz */
 169:../Startup/system_XMC4700.c **** #if PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL
 170:../Startup/system_XMC4700.c **** #if OSCHP_FREQUENCY == 8000000U
 171:../Startup/system_XMC4700.c **** #define PLL_PDIV (1U)
 172:../Startup/system_XMC4700.c **** #define PLL_NDIV (71U)
 173:../Startup/system_XMC4700.c **** #define PLL_K2DIV (0U)
 174:../Startup/system_XMC4700.c **** 
 175:../Startup/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 12000000U
 176:../Startup/system_XMC4700.c **** #define PLL_PDIV (1U)
 177:../Startup/system_XMC4700.c **** #define PLL_NDIV (47U)
 178:../Startup/system_XMC4700.c **** #define PLL_K2DIV (0U)
 179:../Startup/system_XMC4700.c **** 
 180:../Startup/system_XMC4700.c **** #elif OSCHP_FREQUENCY == 16000000U
 181:../Startup/system_XMC4700.c **** #define PLL_PDIV (1U)
 182:../Startup/system_XMC4700.c **** #define PLL_NDIV (35U)
 183:../Startup/system_XMC4700.c **** #define PLL_K2DIV (0U)
 184:../Startup/system_XMC4700.c **** 
 185:../Startup/system_XMC4700.c **** #else
 186:../Startup/system_XMC4700.c **** #error "External crystal frequency not supported"
 187:../Startup/system_XMC4700.c **** 
 188:../Startup/system_XMC4700.c **** #endif
 189:../Startup/system_XMC4700.c **** 
 190:../Startup/system_XMC4700.c **** #define VCO ((OSCHP_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 191:../Startup/system_XMC4700.c **** 
 192:../Startup/system_XMC4700.c **** #else /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_EXT_XTAL */
 193:../Startup/system_XMC4700.c **** #define PLL_PDIV (1U)
 194:../Startup/system_XMC4700.c **** #define PLL_NDIV (23U)
 195:../Startup/system_XMC4700.c **** #define PLL_K2DIV (0U)
 196:../Startup/system_XMC4700.c **** 
 197:../Startup/system_XMC4700.c **** #define VCO ((OFI_FREQUENCY / (PLL_PDIV + 1UL)) * (PLL_NDIV + 1UL))
 198:../Startup/system_XMC4700.c **** 
 199:../Startup/system_XMC4700.c **** #endif /* PLL_CLOCK_SRC == PLL_CLOCK_SRC_OFI */
 200:../Startup/system_XMC4700.c **** 
 201:../Startup/system_XMC4700.c **** #define PLL_K2DIV_24MHZ  ((VCO / OFI_FREQUENCY) - 1UL)
 202:../Startup/system_XMC4700.c **** #define PLL_K2DIV_48MHZ  ((VCO / 48000000U) - 1UL)
 203:../Startup/system_XMC4700.c **** #define PLL_K2DIV_72MHZ  ((VCO / 72000000U) - 1UL)
 204:../Startup/system_XMC4700.c **** #define PLL_K2DIV_96MHZ  ((VCO / 96000000U) - 1UL)
 205:../Startup/system_XMC4700.c **** #define PLL_K2DIV_120MHZ ((VCO / 120000000U) - 1UL)
 206:../Startup/system_XMC4700.c **** 
 207:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_USBCLK SCU_CLK_CLKCLR_USBCDI_Msk
 208:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_MMCCLK SCU_CLK_CLKCLR_MMCCDI_Msk
 209:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_ETHCLK SCU_CLK_CLKCLR_ETH0CDI_Msk
 210:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_EBUCLK SCU_CLK_CLKCLR_EBUCDI_Msk
 211:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_CCUCLK SCU_CLK_CLKCLR_CCUCDI_Msk
 212:../Startup/system_XMC4700.c **** #define SCU_CLK_CLKCLR_ENABLE_WDTCLK SCU_CLK_CLKCLR_WDTCDI_Msk
 213:../Startup/system_XMC4700.c **** 
 214:../Startup/system_XMC4700.c **** #define SCU_CLK_SYSCLKCR_SYSSEL_OFI      (0U << SCU_CLK_SYSCLKCR_SYSSEL_Pos)
 215:../Startup/system_XMC4700.c **** #define SCU_CLK_SYSCLKCR_SYSSEL_PLL      (1U << SCU_CLK_SYSCLKCR_SYSSEL_Pos)
 216:../Startup/system_XMC4700.c **** 
 217:../Startup/system_XMC4700.c **** #define SCU_CLK_USBCLKCR_USBSEL_USBPLL   (0U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 218:../Startup/system_XMC4700.c **** #define SCU_CLK_USBCLKCR_USBSEL_PLL      (1U << SCU_CLK_USBCLKCR_USBSEL_Pos)
 219:../Startup/system_XMC4700.c **** 
 220:../Startup/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_OFI      (0U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 221:../Startup/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_STANDBY  (1U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 222:../Startup/system_XMC4700.c **** #define SCU_CLK_WDTCLKCR_WDTSEL_PLL      (2U << SCU_CLK_WDTCLKCR_WDTSEL_Pos)
 223:../Startup/system_XMC4700.c **** 
 224:../Startup/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_SYS      (0U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 225:../Startup/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_USBPLL   (2U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 226:../Startup/system_XMC4700.c **** #define SCU_CLK_EXTCLKCR_ECKSEL_PLL      (3U << SCU_CLK_EXTCLKCR_ECKSEL_Pos)
 227:../Startup/system_XMC4700.c **** 
 228:../Startup/system_XMC4700.c **** #define EXTCLK_PIN_P0_8  (1)
 229:../Startup/system_XMC4700.c **** #define EXTCLK_PIN_P1_15 (2)
 230:../Startup/system_XMC4700.c **** 
 231:../Startup/system_XMC4700.c **** /*
 232:../Startup/system_XMC4700.c **** //    <h> Clock tree
 233:../Startup/system_XMC4700.c **** //        <o1.16> System clock source selection
 234:../Startup/system_XMC4700.c **** //                      <0=> fOFI
 235:../Startup/system_XMC4700.c **** //                      <1=> fPLL
 236:../Startup/system_XMC4700.c **** //                      <i> Default: fPLL
 237:../Startup/system_XMC4700.c **** //        <o1.0..7> System clock divider <1-256><#-1>
 238:../Startup/system_XMC4700.c **** //                      <i> Default: 2
 239:../Startup/system_XMC4700.c **** //        <o2.0> CPU clock divider
 240:../Startup/system_XMC4700.c **** //                      <0=> fCPU = fSYS
 241:../Startup/system_XMC4700.c **** //                      <1=> fCPU = fSYS / 2
 242:../Startup/system_XMC4700.c **** //                      <i> Default: fCPU = fSYS
 243:../Startup/system_XMC4700.c **** //        <o3.0>  Peripheral clock divider
 244:../Startup/system_XMC4700.c **** //                      <0=> fPB = fCPU
 245:../Startup/system_XMC4700.c **** //                      <1=> fPB = fCPU / 2
 246:../Startup/system_XMC4700.c **** //                      <i> Default: fPB = fCPU
 247:../Startup/system_XMC4700.c **** //        <o4.0>  CCU clock divider
 248:../Startup/system_XMC4700.c **** //                      <0=> fCCU = fCPU
 249:../Startup/system_XMC4700.c **** //                      <1=> fCCU = fCPU / 2
 250:../Startup/system_XMC4700.c **** //                      <i> Default: fCCU = fCPU
 251:../Startup/system_XMC4700.c **** //        <e.5> Enable WDT clock
 252:../Startup/system_XMC4700.c **** //             <o5.16..17> WDT clock source <0=> fOFI
 253:../Startup/system_XMC4700.c **** //                                          <1=> fSTDBY
 254:../Startup/system_XMC4700.c **** //                                          <2=> fPLL
 255:../Startup/system_XMC4700.c **** //                      <i> Default: fOFI
 256:../Startup/system_XMC4700.c **** //             <o5.0..7> WDT clock divider <1-256><#-1>
 257:../Startup/system_XMC4700.c **** //                      <i> Default: 1
 258:../Startup/system_XMC4700.c **** //        </e>
 259:../Startup/system_XMC4700.c **** //        <e.3> Enable EBU clock
 260:../Startup/system_XMC4700.c **** //             <o6.0..5>  EBU clock divider  <1-64><#-1>
 261:../Startup/system_XMC4700.c **** //             <i> Default: 4
 262:../Startup/system_XMC4700.c **** //        </e>
 263:../Startup/system_XMC4700.c **** //        <e.2> Enable ETH clock
 264:../Startup/system_XMC4700.c **** //        </e>
 265:../Startup/system_XMC4700.c **** //        <e.1> Enable MMC clock
 266:../Startup/system_XMC4700.c **** //        </e>
 267:../Startup/system_XMC4700.c **** //        <e.0> Enable USB clock
 268:../Startup/system_XMC4700.c **** //             <o7.16> USB clock source <0=> fUSBPLL
 269:../Startup/system_XMC4700.c **** //                                      <1=> fPLL
 270:../Startup/system_XMC4700.c **** //             <i> Default: fPLL
 271:../Startup/system_XMC4700.c **** //        </e>
 272:../Startup/system_XMC4700.c **** //        <e8> Enable external clock
 273:../Startup/system_XMC4700.c **** //             <o8.0..1> External Clock Source Selection
 274:../Startup/system_XMC4700.c **** //                  <0=> fSYS
 275:../Startup/system_XMC4700.c **** //                  <2=> fUSB
 276:../Startup/system_XMC4700.c **** //                  <3=> fPLL
 277:../Startup/system_XMC4700.c **** //                  <i> Default: fPLL
 278:../Startup/system_XMC4700.c **** //             <o8.16..24> External Clock divider <1-512><#-1>
 279:../Startup/system_XMC4700.c **** //                  <i> Default: 288
 280:../Startup/system_XMC4700.c **** //                  <i> Only valid for USB PLL and PLL clocks
 281:../Startup/system_XMC4700.c **** //             <o9.0> External Clock Pin Selection
 282:../Startup/system_XMC4700.c **** //                  <0=> Disabled
 283:../Startup/system_XMC4700.c **** //                  <1=> P0.8
 284:../Startup/system_XMC4700.c **** //                  <2=> P1.15
 285:../Startup/system_XMC4700.c **** //                  <i> Default: Disabled
 286:../Startup/system_XMC4700.c **** //        </e>
 287:../Startup/system_XMC4700.c **** //    </h>
 288:../Startup/system_XMC4700.c **** */
 289:../Startup/system_XMC4700.c **** #define __CLKSET    (0x00000000UL)
 290:../Startup/system_XMC4700.c **** #define __SYSCLKCR  (0x00010001UL)
 291:../Startup/system_XMC4700.c **** #define __CPUCLKCR  (0x00000000UL)
 292:../Startup/system_XMC4700.c **** #define __PBCLKCR   (0x00000000UL)
 293:../Startup/system_XMC4700.c **** #define __CCUCLKCR  (0x00000000UL)
 294:../Startup/system_XMC4700.c **** #define __WDTCLKCR  (0x00000000UL)
 295:../Startup/system_XMC4700.c **** #define __EBUCLKCR  (0x00000003UL)
 296:../Startup/system_XMC4700.c **** #define __USBCLKCR  (0x00010000UL)
 297:../Startup/system_XMC4700.c **** 
 298:../Startup/system_XMC4700.c **** #define __EXTCLKCR (0x01200003UL)
 299:../Startup/system_XMC4700.c **** #define __EXTCLKPIN (0U)
 300:../Startup/system_XMC4700.c **** 
 301:../Startup/system_XMC4700.c **** /*
 302:../Startup/system_XMC4700.c **** // </h>
 303:../Startup/system_XMC4700.c **** */
 304:../Startup/system_XMC4700.c **** 
 305:../Startup/system_XMC4700.c **** /*
 306:../Startup/system_XMC4700.c **** //-------- <<< end of configuration section >>> ------------------
 307:../Startup/system_XMC4700.c **** */
 308:../Startup/system_XMC4700.c **** 
 309:../Startup/system_XMC4700.c **** #define ENABLE_PLL \
 310:../Startup/system_XMC4700.c ****     (((__SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk) == SCU_CLK_SYSCLKCR_SYSSEL_PLL) || \
 311:../Startup/system_XMC4700.c ****      ((__CLKSET & SCU_CLK_CLKSET_EBUCEN_Msk) != 0) || \
 312:../Startup/system_XMC4700.c ****      (((__CLKSET & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk) 
 313:../Startup/system_XMC4700.c ****      (((__CLKSET & SCU_CLK_CLKSET_WDTCEN_Msk) != 0) && ((__WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk) 
 314:../Startup/system_XMC4700.c **** 
 315:../Startup/system_XMC4700.c **** #define ENABLE_USBPLL \
 316:../Startup/system_XMC4700.c ****      (((__CLKSET & SCU_CLK_CLKSET_USBCEN_Msk) != 0) && ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk) 
 317:../Startup/system_XMC4700.c ****                      
 318:../Startup/system_XMC4700.c **** #if ((__USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk) == SCU_CLK_USBCLKCR_USBSEL_USBPLL)
 319:../Startup/system_XMC4700.c **** #define USB_DIV (3U)
 320:../Startup/system_XMC4700.c **** #else
 321:../Startup/system_XMC4700.c **** #define USB_DIV (5U)
 322:../Startup/system_XMC4700.c **** #endif
 323:../Startup/system_XMC4700.c ****     
 324:../Startup/system_XMC4700.c **** /*******************************************************************************
 325:../Startup/system_XMC4700.c ****  * GLOBAL VARIABLES
 326:../Startup/system_XMC4700.c ****  *******************************************************************************/
 327:../Startup/system_XMC4700.c **** #if defined ( __CC_ARM )
 328:../Startup/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048)
 329:../Startup/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((at(0x2003FFC0)));
 330:../Startup/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((at(0x2003FFC4)));
 331:../Startup/system_XMC4700.c **** #elif defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 332:../Startup/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((at(0x2002CFC0)));
 333:../Startup/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((at(0x2002CFC4)));
 334:../Startup/system_XMC4700.c **** #else
 335:../Startup/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 336:../Startup/system_XMC4700.c **** #endif
 337:../Startup/system_XMC4700.c **** #elif defined ( __ICCARM__ )
 338:../Startup/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048) || \
 339:../Startup/system_XMC4700.c ****     defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 340:../Startup/system_XMC4700.c **** __no_init uint32_t SystemCoreClock;
 341:../Startup/system_XMC4700.c **** __no_init uint8_t g_chipid[16];
 342:../Startup/system_XMC4700.c **** #else
 343:../Startup/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 344:../Startup/system_XMC4700.c **** #endif    
 345:../Startup/system_XMC4700.c **** #elif defined ( __GNUC__ )
 346:../Startup/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048) || \
 347:../Startup/system_XMC4700.c ****     defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 348:../Startup/system_XMC4700.c **** uint32_t SystemCoreClock __attribute__((section(".no_init")));
 349:../Startup/system_XMC4700.c **** uint8_t g_chipid[16] __attribute__((section(".no_init")));
 350:../Startup/system_XMC4700.c **** #else
 351:../Startup/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 352:../Startup/system_XMC4700.c **** #endif    
 353:../Startup/system_XMC4700.c **** #elif defined ( __TASKING__ )
 354:../Startup/system_XMC4700.c **** #if defined(XMC4700_E196x2048) || defined(XMC4700_F144x2048) || defined(XMC4700_F100x2048)
 355:../Startup/system_XMC4700.c **** uint32_t SystemCoreClock __at( 0x2003FFC0 );
 356:../Startup/system_XMC4700.c **** uint8_t g_chipid[16] __at( 0x2003FFC4 );
 357:../Startup/system_XMC4700.c **** #elif defined(XMC4700_E196x1536) || defined(XMC4700_F144x1536) || defined(XMC4700_F100x1536)
 358:../Startup/system_XMC4700.c **** uint32_t SystemCoreClock __at( 0x2002CFC0 );
 359:../Startup/system_XMC4700.c **** uint8_t g_chipid[16] __at( 0x2002CFC4 );
 360:../Startup/system_XMC4700.c **** #else
 361:../Startup/system_XMC4700.c **** #error "system_XMC4700.c: device not supported" 
 362:../Startup/system_XMC4700.c **** #endif    
 363:../Startup/system_XMC4700.c **** #else
 364:../Startup/system_XMC4700.c **** #error "system_XMC4700.c: compiler not supported" 
 365:../Startup/system_XMC4700.c **** #endif    
 366:../Startup/system_XMC4700.c **** 
 367:../Startup/system_XMC4700.c **** extern uint32_t __Vectors;
 368:../Startup/system_XMC4700.c **** 
 369:../Startup/system_XMC4700.c **** /*******************************************************************************
 370:../Startup/system_XMC4700.c ****  * LOCAL FUNCTIONS
 371:../Startup/system_XMC4700.c ****  *******************************************************************************/
 372:../Startup/system_XMC4700.c **** static void delay(uint32_t cycles)
 373:../Startup/system_XMC4700.c **** {
  40              	 .loc 1 373 0
  41              	 .cfi_startproc
  42              	 
  43              	 
  44              	 
  45 0000 80B4     	 push {r7}
  46              	.LCFI0:
  47              	 .cfi_def_cfa_offset 4
  48              	 .cfi_offset 7,-4
  49 0002 85B0     	 sub sp,sp,#20
  50              	.LCFI1:
  51              	 .cfi_def_cfa_offset 24
  52 0004 00AF     	 add r7,sp,#0
  53              	.LCFI2:
  54              	 .cfi_def_cfa_register 7
  55 0006 7860     	 str r0,[r7,#4]
 374:../Startup/system_XMC4700.c ****   volatile uint32_t i;
 375:../Startup/system_XMC4700.c **** 
 376:../Startup/system_XMC4700.c ****   for(i = 0UL; i < cycles ;++i)
  56              	 .loc 1 376 0
  57 0008 0023     	 movs r3,#0
  58 000a FB60     	 str r3,[r7,#12]
  59 000c 03E0     	 b .L2
  60              	.L3:
  61              	.LBB10:
  62              	.LBB11:
  63              	 .file 2 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V4.30
   5:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     20. October 2015
   6:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
   9:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    All rights reserved.
  10:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****      specific prior written permission.
  20:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    *
  21:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  35:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  38:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  39:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  41:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  45:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  46:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  47:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
  51:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  52:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  53:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  54:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  58:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  60:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  62:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  63:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  64:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  65:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  69:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  71:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  73:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  74:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  75:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  76:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
  77:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
  79:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  80:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  82:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
  83:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  84:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
  86:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  87:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  88:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  89:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
  90:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
  91:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  94:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
  96:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
  98:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  99:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 100:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 101:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 102:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 104:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 105:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 107:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 108:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 109:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 111:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 112:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 113:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 114:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 115:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 116:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 118:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 119:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 121:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 122:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 123:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 125:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 126:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 127:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 128:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 129:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 130:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 132:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****     \return               xPSR Register value
 133:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 134:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 136:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 137:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 138:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 140:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 141:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 142:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 143:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 144:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 147:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 148:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 150:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 151:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 152:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 154:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 155:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 156:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 157:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 158:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 162:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 164:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 166:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 167:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 168:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 169:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 172:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 173:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 175:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   register uint32_t result;
 176:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 179:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 180:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 182:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 183:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 186:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 188:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 190:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 192:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 193:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 194:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 195:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 196:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 198:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 199:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 201:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 202:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 203:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 205:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 206:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 207:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 208:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 209:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 210:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 213:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 215:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 217:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 218:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 219:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 221:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 222:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 223:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 226:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 228:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 230:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 231:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 232:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 233:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 234:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 237:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 239:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 241:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 245:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 247:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 251:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 252:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 254:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 255:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 256:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 257:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 258:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 259:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 262:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 264:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 266:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 268:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 269:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 274:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 276:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 278:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 279:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 281:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 282:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 284:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 285:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 287:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 288:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 289:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 291:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 292:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 293:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 295:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 296:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 299:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 301:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 303:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 306:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 307:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 311:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 318:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 319:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 321:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 323:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 324:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 325:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****    return(0);
 326:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 327:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 328:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 329:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 330:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 331:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 332:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 335:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 337:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 340:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("");
 342:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 343:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 344:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 345:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 347:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 348:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 351:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 352:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 355:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 356:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 357:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 358:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 365:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 368:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 369:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 370:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 371:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 373:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 375:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("nop");
  64              	 .loc 2 375 0 discriminator 3
  65              	
  66 000e 00BF     	 nop
  67              	
  68              	 .thumb
  69              	.LBE11:
  70              	.LBE10:
  71              	 .loc 1 376 0 discriminator 3
  72 0010 FB68     	 ldr r3,[r7,#12]
  73 0012 0133     	 adds r3,r3,#1
  74 0014 FB60     	 str r3,[r7,#12]
  75              	.L2:
  76              	 .loc 1 376 0 is_stmt 0 discriminator 1
  77 0016 FA68     	 ldr r2,[r7,#12]
  78 0018 7B68     	 ldr r3,[r7,#4]
  79 001a 9A42     	 cmp r2,r3
  80 001c F7D3     	 bcc .L3
 377:../Startup/system_XMC4700.c ****   {
 378:../Startup/system_XMC4700.c ****     __NOP();
 379:../Startup/system_XMC4700.c ****   }
 380:../Startup/system_XMC4700.c **** }
  81              	 .loc 1 380 0 is_stmt 1
  82 001e 1437     	 adds r7,r7,#20
  83              	.LCFI3:
  84              	 .cfi_def_cfa_offset 4
  85 0020 BD46     	 mov sp,r7
  86              	.LCFI4:
  87              	 .cfi_def_cfa_register 13
  88              	 
  89 0022 5DF8047B 	 ldr r7,[sp],#4
  90              	.LCFI5:
  91              	 .cfi_restore 7
  92              	 .cfi_def_cfa_offset 0
  93 0026 7047     	 bx lr
  94              	 .cfi_endproc
  95              	.LFE123:
  97              	 .section .text.SystemInit,"ax",%progbits
  98              	 .align 2
  99              	 .weak SystemInit
 100              	 .thumb
 101              	 .thumb_func
 103              	SystemInit:
 104              	.LFB124:
 381:../Startup/system_XMC4700.c **** 
 382:../Startup/system_XMC4700.c **** /*******************************************************************************
 383:../Startup/system_XMC4700.c ****  * API IMPLEMENTATION
 384:../Startup/system_XMC4700.c ****  *******************************************************************************/
 385:../Startup/system_XMC4700.c **** 
 386:../Startup/system_XMC4700.c **** __WEAK void SystemInit(void)
 387:../Startup/system_XMC4700.c **** {
 105              	 .loc 1 387 0
 106              	 .cfi_startproc
 107              	 
 108              	 
 109 0000 98B5     	 push {r3,r4,r7,lr}
 110              	.LCFI6:
 111              	 .cfi_def_cfa_offset 16
 112              	 .cfi_offset 3,-16
 113              	 .cfi_offset 4,-12
 114              	 .cfi_offset 7,-8
 115              	 .cfi_offset 14,-4
 116 0002 00AF     	 add r7,sp,#0
 117              	.LCFI7:
 118              	 .cfi_def_cfa_register 7
 388:../Startup/system_XMC4700.c ****   memcpy(g_chipid, CHIPID_LOC, 16);
 119              	 .loc 1 388 0
 120 0004 054A     	 ldr r2,.L5
 121 0006 4FF00053 	 mov r3,#536870912
 122 000a 1446     	 mov r4,r2
 123 000c 0FCB     	 ldmia r3,{r0,r1,r2,r3}
 124 000e 84E80F00 	 stmia r4,{r0,r1,r2,r3}
 389:../Startup/system_XMC4700.c ****   
 390:../Startup/system_XMC4700.c ****   SystemCoreSetup();
 125              	 .loc 1 390 0
 126 0012 FFF7FEFF 	 bl SystemCoreSetup
 391:../Startup/system_XMC4700.c ****   SystemCoreClockSetup(); 
 127              	 .loc 1 391 0
 128 0016 FFF7FEFF 	 bl SystemCoreClockSetup
 392:../Startup/system_XMC4700.c **** }
 129              	 .loc 1 392 0
 130 001a 98BD     	 pop {r3,r4,r7,pc}
 131              	.L6:
 132              	 .align 2
 133              	.L5:
 134 001c 00000000 	 .word g_chipid
 135              	 .cfi_endproc
 136              	.LFE124:
 138              	 .section .text.SystemCoreSetup,"ax",%progbits
 139              	 .align 2
 140              	 .weak SystemCoreSetup
 141              	 .thumb
 142              	 .thumb_func
 144              	SystemCoreSetup:
 145              	.LFB125:
 393:../Startup/system_XMC4700.c **** 
 394:../Startup/system_XMC4700.c **** __WEAK void SystemCoreSetup(void)
 395:../Startup/system_XMC4700.c **** {
 146              	 .loc 1 395 0
 147              	 .cfi_startproc
 148              	 
 149              	 
 150              	 
 151 0000 80B4     	 push {r7}
 152              	.LCFI8:
 153              	 .cfi_def_cfa_offset 4
 154              	 .cfi_offset 7,-4
 155 0002 83B0     	 sub sp,sp,#12
 156              	.LCFI9:
 157              	 .cfi_def_cfa_offset 16
 158 0004 00AF     	 add r7,sp,#0
 159              	.LCFI10:
 160              	 .cfi_def_cfa_register 7
 161              	.LBB12:
 162              	.LBB13:
  71:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 163              	 .loc 2 71 0
 164              	
 165 0006 72B6     	 cpsid i
 166              	
 167              	 .thumb
 168              	.LBE13:
 169              	.LBE12:
 396:../Startup/system_XMC4700.c ****   uint32_t temp;
 397:../Startup/system_XMC4700.c **** 	
 398:../Startup/system_XMC4700.c ****   /* relocate vector table */
 399:../Startup/system_XMC4700.c ****   __disable_irq();
 400:../Startup/system_XMC4700.c ****   SCB->VTOR = (uint32_t)(&__Vectors);
 170              	 .loc 1 400 0
 171 0008 164B     	 ldr r3,.L8
 172 000a 174A     	 ldr r2,.L8+4
 173 000c 9A60     	 str r2,[r3,#8]
 174              	.LBB14:
 175              	.LBB15:
 376:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 377:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 378:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 379:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 380:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 387:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 388:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 389:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 390:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 391:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 394:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 396:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 398:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 399:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 400:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 401:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 402:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 404:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 406:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("sev");
 407:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 408:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 409:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 410:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 411:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 415:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 416:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 418:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 420:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 421:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 422:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 423:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 427:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 429:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 176              	 .loc 2 429 0
 177              	
 178 000e BFF34F8F 	 dsb 0xF
 179              	
 180              	 .thumb
 181              	.LBE15:
 182              	.LBE14:
 183              	.LBB16:
 184              	.LBB17:
  60:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 185              	 .loc 2 60 0
 186              	
 187 0012 62B6     	 cpsie i
 188              	
 189              	 .thumb
 190              	.LBE17:
 191              	.LBE16:
 401:../Startup/system_XMC4700.c ****   __DSB();
 402:../Startup/system_XMC4700.c ****   __enable_irq();
 403:../Startup/system_XMC4700.c ****     
 404:../Startup/system_XMC4700.c **** #if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
 405:../Startup/system_XMC4700.c ****   SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 192              	 .loc 1 405 0
 193 0014 134A     	 ldr r2,.L8
 194 0016 134B     	 ldr r3,.L8
 195 0018 D3F88830 	 ldr r3,[r3,#136]
 196 001c 43F47003 	 orr r3,r3,#15728640
 197 0020 C2F88830 	 str r3,[r2,#136]
 406:../Startup/system_XMC4700.c ****                  (3UL << 11*2)  );               /* set CP11 Full Access */
 407:../Startup/system_XMC4700.c **** #endif
 408:../Startup/system_XMC4700.c **** 
 409:../Startup/system_XMC4700.c ****   /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
 410:../Startup/system_XMC4700.c ****   SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 198              	 .loc 1 410 0
 199 0024 0F4A     	 ldr r2,.L8
 200 0026 0F4B     	 ldr r3,.L8
 201 0028 5B69     	 ldr r3,[r3,#20]
 202 002a 23F00803 	 bic r3,r3,#8
 203 002e 5361     	 str r3,[r2,#20]
 411:../Startup/system_XMC4700.c **** 
 412:../Startup/system_XMC4700.c ****   temp = FLASH0->FCON;
 204              	 .loc 1 412 0
 205 0030 0E4B     	 ldr r3,.L8+8
 206 0032 03F58053 	 add r3,r3,#4096
 207 0036 1433     	 adds r3,r3,#20
 208 0038 1B68     	 ldr r3,[r3]
 209 003a 7B60     	 str r3,[r7,#4]
 413:../Startup/system_XMC4700.c ****   temp &= ~FLASH_FCON_WSPFLASH_Msk;
 210              	 .loc 1 413 0
 211 003c 7B68     	 ldr r3,[r7,#4]
 212 003e 23F00F03 	 bic r3,r3,#15
 213 0042 7B60     	 str r3,[r7,#4]
 414:../Startup/system_XMC4700.c ****   temp |= PMU_FLASH_WS;
 214              	 .loc 1 414 0
 215 0044 7B68     	 ldr r3,[r7,#4]
 216 0046 43F00403 	 orr r3,r3,#4
 217 004a 7B60     	 str r3,[r7,#4]
 415:../Startup/system_XMC4700.c ****   FLASH0->FCON = temp;
 218              	 .loc 1 415 0
 219 004c 074B     	 ldr r3,.L8+8
 220 004e 03F58053 	 add r3,r3,#4096
 221 0052 1433     	 adds r3,r3,#20
 222 0054 7A68     	 ldr r2,[r7,#4]
 223 0056 1A60     	 str r2,[r3]
 416:../Startup/system_XMC4700.c **** }
 224              	 .loc 1 416 0
 225 0058 0C37     	 adds r7,r7,#12
 226              	.LCFI11:
 227              	 .cfi_def_cfa_offset 4
 228 005a BD46     	 mov sp,r7
 229              	.LCFI12:
 230              	 .cfi_def_cfa_register 13
 231              	 
 232 005c 5DF8047B 	 ldr r7,[sp],#4
 233              	.LCFI13:
 234              	 .cfi_restore 7
 235              	 .cfi_def_cfa_offset 0
 236 0060 7047     	 bx lr
 237              	.L9:
 238 0062 00BF     	 .align 2
 239              	.L8:
 240 0064 00ED00E0 	 .word -536810240
 241 0068 00000000 	 .word __Vectors
 242 006c 00100058 	 .word 1476399104
 243              	 .cfi_endproc
 244              	.LFE125:
 246              	 .section .text.SystemCoreClockSetup,"ax",%progbits
 247              	 .align 2
 248              	 .weak SystemCoreClockSetup
 249              	 .thumb
 250              	 .thumb_func
 252              	SystemCoreClockSetup:
 253              	.LFB126:
 417:../Startup/system_XMC4700.c **** 
 418:../Startup/system_XMC4700.c **** __WEAK void SystemCoreClockSetup(void)
 419:../Startup/system_XMC4700.c **** {
 254              	 .loc 1 419 0
 255              	 .cfi_startproc
 256              	 
 257              	 
 258 0000 80B5     	 push {r7,lr}
 259              	.LCFI14:
 260              	 .cfi_def_cfa_offset 8
 261              	 .cfi_offset 7,-8
 262              	 .cfi_offset 14,-4
 263 0002 00AF     	 add r7,sp,#0
 264              	.LCFI15:
 265              	 .cfi_def_cfa_register 7
 420:../Startup/system_XMC4700.c **** #if FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_FACTORY
 421:../Startup/system_XMC4700.c ****   /* Enable factory calibration */
 422:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FOTR_Msk;
 423:../Startup/system_XMC4700.c **** #else
 424:../Startup/system_XMC4700.c ****   /* Automatic calibration uses the fSTDBY */
 425:../Startup/system_XMC4700.c **** 
 426:../Startup/system_XMC4700.c ****   /* Enable HIB domain */
 427:../Startup/system_XMC4700.c ****   /* Power up HIB domain if and only if it is currently powered down */
 428:../Startup/system_XMC4700.c ****   if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 266              	 .loc 1 428 0
 267 0004 704B     	 ldr r3,.L18
 268 0006 1B68     	 ldr r3,[r3]
 269 0008 03F00103 	 and r3,r3,#1
 270 000c 002B     	 cmp r3,#0
 271 000e 0CD1     	 bne .L11
 429:../Startup/system_XMC4700.c ****   {
 430:../Startup/system_XMC4700.c ****     SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 272              	 .loc 1 430 0
 273 0010 6D4A     	 ldr r2,.L18
 274 0012 6D4B     	 ldr r3,.L18
 275 0014 5B68     	 ldr r3,[r3,#4]
 276 0016 43F00103 	 orr r3,r3,#1
 277 001a 5360     	 str r3,[r2,#4]
 431:../Startup/system_XMC4700.c **** 
 432:../Startup/system_XMC4700.c ****     while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 278              	 .loc 1 432 0
 279 001c 00BF     	 nop
 280              	.L12:
 281              	 .loc 1 432 0 is_stmt 0 discriminator 1
 282 001e 6A4B     	 ldr r3,.L18
 283 0020 1B68     	 ldr r3,[r3]
 284 0022 03F00103 	 and r3,r3,#1
 285 0026 002B     	 cmp r3,#0
 286 0028 F9D0     	 beq .L12
 287              	.L11:
 433:../Startup/system_XMC4700.c ****     {
 434:../Startup/system_XMC4700.c ****       /* wait until HIB domain is enabled */
 435:../Startup/system_XMC4700.c ****     }
 436:../Startup/system_XMC4700.c ****   }
 437:../Startup/system_XMC4700.c **** 
 438:../Startup/system_XMC4700.c ****   /* Remove the reset only if HIB domain were in a state of reset */
 439:../Startup/system_XMC4700.c ****   if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 288              	 .loc 1 439 0 is_stmt 1
 289 002a 684B     	 ldr r3,.L18+4
 290 002c 1B68     	 ldr r3,[r3]
 291 002e 03F40073 	 and r3,r3,#512
 292 0032 002B     	 cmp r3,#0
 293 0034 09D0     	 beq .L13
 440:../Startup/system_XMC4700.c ****   {
 441:../Startup/system_XMC4700.c ****     SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 294              	 .loc 1 441 0
 295 0036 654A     	 ldr r2,.L18+4
 296 0038 644B     	 ldr r3,.L18+4
 297 003a 9B68     	 ldr r3,[r3,#8]
 298 003c 43F40073 	 orr r3,r3,#512
 299 0040 9360     	 str r3,[r2,#8]
 442:../Startup/system_XMC4700.c ****     delay(DELAY_CNT_150US_50MHZ);
 300              	 .loc 1 442 0
 301 0042 41F64C50 	 movw r0,#7500
 302 0046 FFF7FEFF 	 bl delay
 303              	.L13:
 443:../Startup/system_XMC4700.c ****   }
 444:../Startup/system_XMC4700.c ****   
 445:../Startup/system_XMC4700.c **** #if STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP
 446:../Startup/system_XMC4700.c ****   /* Enable OSC_ULP */
 447:../Startup/system_XMC4700.c ****   if ((SCU_HIBERNATE->OSCULCTRL & SCU_HIBERNATE_OSCULCTRL_MODE_Msk) != 0UL)
 448:../Startup/system_XMC4700.c ****   {
 449:../Startup/system_XMC4700.c ****     /*enable OSC_ULP*/
 450:../Startup/system_XMC4700.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_OSCULCTRL_Msk)
 451:../Startup/system_XMC4700.c ****     {
 452:../Startup/system_XMC4700.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 453:../Startup/system_XMC4700.c ****     }
 454:../Startup/system_XMC4700.c ****     SCU_HIBERNATE->OSCULCTRL &= ~SCU_HIBERNATE_OSCULCTRL_MODE_Msk;
 455:../Startup/system_XMC4700.c **** 
 456:../Startup/system_XMC4700.c ****     /* Check if the clock is OK using OSCULP Oscillator Watchdog*/
 457:../Startup/system_XMC4700.c ****     while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 458:../Startup/system_XMC4700.c ****     {
 459:../Startup/system_XMC4700.c ****       /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 460:../Startup/system_XMC4700.c ****     }
 461:../Startup/system_XMC4700.c ****     SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_ULPWDGEN_Msk;
 462:../Startup/system_XMC4700.c **** 
 463:../Startup/system_XMC4700.c ****     /* wait till clock is stable */
 464:../Startup/system_XMC4700.c ****     do
 465:../Startup/system_XMC4700.c ****     {
 466:../Startup/system_XMC4700.c ****       while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCLR_Msk)
 467:../Startup/system_XMC4700.c ****       {
 468:../Startup/system_XMC4700.c ****         /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 469:../Startup/system_XMC4700.c ****       }
 470:../Startup/system_XMC4700.c ****       SCU_HIBERNATE->HDCLR |= SCU_HIBERNATE_HDCLR_ULPWDG_Msk;
 471:../Startup/system_XMC4700.c **** 
 472:../Startup/system_XMC4700.c ****       delay(DELAY_CNT_50US_50MHZ);
 473:../Startup/system_XMC4700.c **** 
 474:../Startup/system_XMC4700.c ****     } while ((SCU_HIBERNATE->HDSTAT & SCU_HIBERNATE_HDSTAT_ULPWDG_Msk) != 0UL);
 475:../Startup/system_XMC4700.c **** 
 476:../Startup/system_XMC4700.c ****   }
 477:../Startup/system_XMC4700.c **** 
 478:../Startup/system_XMC4700.c ****   /* now OSC_ULP is running and can be used*/
 479:../Startup/system_XMC4700.c ****   /* Select OSC_ULP as the clock source for RTC and STDBY*/
 480:../Startup/system_XMC4700.c ****   while (SCU_GENERAL->MIRRSTS & SCU_GENERAL_MIRRSTS_HDCR_Msk)
 481:../Startup/system_XMC4700.c ****   {
 482:../Startup/system_XMC4700.c ****     /* check SCU_MIRRSTS to ensure that no transfer over serial interface is pending */
 483:../Startup/system_XMC4700.c ****   }
 484:../Startup/system_XMC4700.c ****   SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;
 485:../Startup/system_XMC4700.c **** #endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */
 486:../Startup/system_XMC4700.c **** 
 487:../Startup/system_XMC4700.c ****   /* Enable automatic calibration of internal fast oscillator */
 488:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 304              	 .loc 1 488 0
 305 004a 614A     	 ldr r2,.L18+8
 306 004c 604B     	 ldr r3,.L18+8
 307 004e 5B68     	 ldr r3,[r3,#4]
 308 0050 43F40023 	 orr r3,r3,#524288
 309 0054 5360     	 str r3,[r2,#4]
 489:../Startup/system_XMC4700.c **** #endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */
 490:../Startup/system_XMC4700.c **** 
 491:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_50MHZ);
 310              	 .loc 1 491 0
 311 0056 40F6C410 	 movw r0,#2500
 312 005a FFF7FEFF 	 bl delay
 492:../Startup/system_XMC4700.c **** 
 493:../Startup/system_XMC4700.c **** #if ENABLE_PLL
 494:../Startup/system_XMC4700.c **** 
 495:../Startup/system_XMC4700.c ****   /* enable PLL */
 496:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 313              	 .loc 1 496 0
 314 005e 5C4A     	 ldr r2,.L18+8
 315 0060 5B4B     	 ldr r3,.L18+8
 316 0062 5B68     	 ldr r3,[r3,#4]
 317 0064 23F48033 	 bic r3,r3,#65536
 318 0068 23F00203 	 bic r3,r3,#2
 319 006c 5360     	 str r3,[r2,#4]
 497:../Startup/system_XMC4700.c **** 
 498:../Startup/system_XMC4700.c **** #if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
 499:../Startup/system_XMC4700.c ****   /* enable OSC_HP */
 500:../Startup/system_XMC4700.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 320              	 .loc 1 500 0
 321 006e 594B     	 ldr r3,.L18+12
 322 0070 5B68     	 ldr r3,[r3,#4]
 323 0072 03F03003 	 and r3,r3,#48
 324 0076 002B     	 cmp r3,#0
 325 0078 29D0     	 beq .L14
 501:../Startup/system_XMC4700.c ****   {
 502:../Startup/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 326              	 .loc 1 502 0
 327 007a 564A     	 ldr r2,.L18+12
 328 007c 554B     	 ldr r3,.L18+12
 329 007e 5B68     	 ldr r3,[r3,#4]
 330 0080 23F47023 	 bic r3,r3,#983040
 331 0084 23F03003 	 bic r3,r3,#48
 332 0088 5360     	 str r3,[r2,#4]
 503:../Startup/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 333              	 .loc 1 503 0
 334 008a FFF7FEFF 	 bl OSCHP_GetFrequency
 335 008e 0246     	 mov r2,r0
 336 0090 514B     	 ldr r3,.L18+16
 337 0092 A3FB0223 	 umull r2,r3,r3,r2
 338 0096 1B0D     	 lsrs r3,r3,#20
 339 0098 013B     	 subs r3,r3,#1
 340 009a 1B04     	 lsls r3,r3,#16
 341 009c 4D49     	 ldr r1,.L18+12
 342 009e 4D4A     	 ldr r2,.L18+12
 343 00a0 5268     	 ldr r2,[r2,#4]
 344 00a2 1343     	 orrs r3,r3,r2
 345 00a4 4B60     	 str r3,[r1,#4]
 504:../Startup/system_XMC4700.c **** 
 505:../Startup/system_XMC4700.c ****     /* select OSC_HP clock as PLL input */
 506:../Startup/system_XMC4700.c ****     SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 346              	 .loc 1 506 0
 347 00a6 4A4A     	 ldr r2,.L18+8
 348 00a8 494B     	 ldr r3,.L18+8
 349 00aa DB68     	 ldr r3,[r3,#12]
 350 00ac 23F00103 	 bic r3,r3,#1
 351 00b0 D360     	 str r3,[r2,#12]
 507:../Startup/system_XMC4700.c **** 
 508:../Startup/system_XMC4700.c ****     /* restart OSC Watchdog */
 509:../Startup/system_XMC4700.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 352              	 .loc 1 509 0
 353 00b2 474A     	 ldr r2,.L18+8
 354 00b4 464B     	 ldr r3,.L18+8
 355 00b6 5B68     	 ldr r3,[r3,#4]
 356 00b8 23F40033 	 bic r3,r3,#131072
 357 00bc 5360     	 str r3,[r2,#4]
 510:../Startup/system_XMC4700.c **** 
 511:../Startup/system_XMC4700.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 358              	 .loc 1 511 0
 359 00be 00BF     	 nop
 360              	.L15:
 361              	 .loc 1 511 0 is_stmt 0 discriminator 1
 362 00c0 434B     	 ldr r3,.L18+8
 363 00c2 1B68     	 ldr r3,[r3]
 364 00c4 03F46073 	 and r3,r3,#896
 365 00c8 B3F5607F 	 cmp r3,#896
 366 00cc F8D1     	 bne .L15
 367              	.L14:
 512:../Startup/system_XMC4700.c ****     {
 513:../Startup/system_XMC4700.c ****       /* wait till OSC_HP output frequency is usable */
 514:../Startup/system_XMC4700.c ****     }   
 515:../Startup/system_XMC4700.c ****   }
 516:../Startup/system_XMC4700.c **** #else /* PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI */
 517:../Startup/system_XMC4700.c **** 
 518:../Startup/system_XMC4700.c ****   /* select backup clock as PLL input */
 519:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
 520:../Startup/system_XMC4700.c **** #endif
 521:../Startup/system_XMC4700.c **** 
 522:../Startup/system_XMC4700.c ****   /* Go to bypass the Main PLL */
 523:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 368              	 .loc 1 523 0 is_stmt 1
 369 00ce 404A     	 ldr r2,.L18+8
 370 00d0 3F4B     	 ldr r3,.L18+8
 371 00d2 5B68     	 ldr r3,[r3,#4]
 372 00d4 43F00103 	 orr r3,r3,#1
 373 00d8 5360     	 str r3,[r2,#4]
 524:../Startup/system_XMC4700.c **** 
 525:../Startup/system_XMC4700.c ****   /* disconnect Oscillator from PLL */
 526:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 374              	 .loc 1 526 0
 375 00da 3D4A     	 ldr r2,.L18+8
 376 00dc 3C4B     	 ldr r3,.L18+8
 377 00de 5B68     	 ldr r3,[r3,#4]
 378 00e0 43F01003 	 orr r3,r3,#16
 379 00e4 5360     	 str r3,[r2,#4]
 527:../Startup/system_XMC4700.c **** 
 528:../Startup/system_XMC4700.c ****   /* Setup divider settings for main PLL */
 529:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 380              	 .loc 1 529 0
 381 00e6 3A4B     	 ldr r3,.L18+8
 382 00e8 3C4A     	 ldr r2,.L18+20
 383 00ea 9A60     	 str r2,[r3,#8]
 530:../Startup/system_XMC4700.c ****                       (PLL_K2DIV_24MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 531:../Startup/system_XMC4700.c ****                       (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 532:../Startup/system_XMC4700.c **** 
 533:../Startup/system_XMC4700.c ****   /* Set OSCDISCDIS */
 534:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 384              	 .loc 1 534 0
 385 00ec 384A     	 ldr r2,.L18+8
 386 00ee 384B     	 ldr r3,.L18+8
 387 00f0 5B68     	 ldr r3,[r3,#4]
 388 00f2 43F04003 	 orr r3,r3,#64
 389 00f6 5360     	 str r3,[r2,#4]
 535:../Startup/system_XMC4700.c **** 
 536:../Startup/system_XMC4700.c ****   /* connect Oscillator to PLL */
 537:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 390              	 .loc 1 537 0
 391 00f8 354A     	 ldr r2,.L18+8
 392 00fa 354B     	 ldr r3,.L18+8
 393 00fc 5B68     	 ldr r3,[r3,#4]
 394 00fe 23F01003 	 bic r3,r3,#16
 395 0102 5360     	 str r3,[r2,#4]
 538:../Startup/system_XMC4700.c **** 
 539:../Startup/system_XMC4700.c ****   /* restart PLL Lock detection */
 540:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 396              	 .loc 1 540 0
 397 0104 324A     	 ldr r2,.L18+8
 398 0106 324B     	 ldr r3,.L18+8
 399 0108 5B68     	 ldr r3,[r3,#4]
 400 010a 43F48023 	 orr r3,r3,#262144
 401 010e 5360     	 str r3,[r2,#4]
 541:../Startup/system_XMC4700.c **** 
 542:../Startup/system_XMC4700.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 402              	 .loc 1 542 0
 403 0110 00BF     	 nop
 404              	.L16:
 405              	 .loc 1 542 0 is_stmt 0 discriminator 1
 406 0112 2F4B     	 ldr r3,.L18+8
 407 0114 1B68     	 ldr r3,[r3]
 408 0116 03F00403 	 and r3,r3,#4
 409 011a 002B     	 cmp r3,#0
 410 011c F9D0     	 beq .L16
 543:../Startup/system_XMC4700.c ****   {
 544:../Startup/system_XMC4700.c ****     /* wait for PLL Lock at 24MHz*/
 545:../Startup/system_XMC4700.c ****   }
 546:../Startup/system_XMC4700.c **** 
 547:../Startup/system_XMC4700.c ****   /* Disable bypass- put PLL clock back */
 548:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 411              	 .loc 1 548 0 is_stmt 1
 412 011e 2C4A     	 ldr r2,.L18+8
 413 0120 2B4B     	 ldr r3,.L18+8
 414 0122 5B68     	 ldr r3,[r3,#4]
 415 0124 23F00103 	 bic r3,r3,#1
 416 0128 5360     	 str r3,[r2,#4]
 549:../Startup/system_XMC4700.c ****   while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 417              	 .loc 1 549 0
 418 012a 00BF     	 nop
 419              	.L17:
 420              	 .loc 1 549 0 is_stmt 0 discriminator 1
 421 012c 284B     	 ldr r3,.L18+8
 422 012e 1B68     	 ldr r3,[r3]
 423 0130 03F00103 	 and r3,r3,#1
 424 0134 002B     	 cmp r3,#0
 425 0136 F9D1     	 bne .L17
 550:../Startup/system_XMC4700.c ****   {
 551:../Startup/system_XMC4700.c ****     /* wait for normal mode */
 552:../Startup/system_XMC4700.c ****   } 
 553:../Startup/system_XMC4700.c **** #endif /* ENABLE_PLL */
 554:../Startup/system_XMC4700.c **** 
 555:../Startup/system_XMC4700.c ****   /* Before scaling to final frequency we need to setup the clock dividers */
 556:../Startup/system_XMC4700.c ****   SCU_CLK->SYSCLKCR = __SYSCLKCR;
 426              	 .loc 1 556 0 is_stmt 1
 427 0138 294B     	 ldr r3,.L18+24
 428 013a 4FF00112 	 mov r2,#65537
 429 013e DA60     	 str r2,[r3,#12]
 557:../Startup/system_XMC4700.c ****   SCU_CLK->PBCLKCR = __PBCLKCR;
 430              	 .loc 1 557 0
 431 0140 274B     	 ldr r3,.L18+24
 432 0142 0022     	 movs r2,#0
 433 0144 5A61     	 str r2,[r3,#20]
 558:../Startup/system_XMC4700.c ****   SCU_CLK->CPUCLKCR = __CPUCLKCR;
 434              	 .loc 1 558 0
 435 0146 264B     	 ldr r3,.L18+24
 436 0148 0022     	 movs r2,#0
 437 014a 1A61     	 str r2,[r3,#16]
 559:../Startup/system_XMC4700.c ****   SCU_CLK->CCUCLKCR = __CCUCLKCR;
 438              	 .loc 1 559 0
 439 014c 244B     	 ldr r3,.L18+24
 440 014e 0022     	 movs r2,#0
 441 0150 1A62     	 str r2,[r3,#32]
 560:../Startup/system_XMC4700.c ****   SCU_CLK->WDTCLKCR = __WDTCLKCR;
 442              	 .loc 1 560 0
 443 0152 234B     	 ldr r3,.L18+24
 444 0154 0022     	 movs r2,#0
 445 0156 5A62     	 str r2,[r3,#36]
 561:../Startup/system_XMC4700.c ****   SCU_CLK->EBUCLKCR = __EBUCLKCR;
 446              	 .loc 1 561 0
 447 0158 214B     	 ldr r3,.L18+24
 448 015a 0322     	 movs r2,#3
 449 015c DA61     	 str r2,[r3,#28]
 562:../Startup/system_XMC4700.c ****   SCU_CLK->USBCLKCR = __USBCLKCR | USB_DIV;
 450              	 .loc 1 562 0
 451 015e 204B     	 ldr r3,.L18+24
 452 0160 204A     	 ldr r2,.L18+28
 453 0162 9A61     	 str r2,[r3,#24]
 563:../Startup/system_XMC4700.c ****   SCU_CLK->EXTCLKCR = __EXTCLKCR;
 454              	 .loc 1 563 0
 455 0164 1E4B     	 ldr r3,.L18+24
 456 0166 204A     	 ldr r2,.L18+32
 457 0168 9A62     	 str r2,[r3,#40]
 564:../Startup/system_XMC4700.c **** 
 565:../Startup/system_XMC4700.c **** #if ENABLE_PLL
 566:../Startup/system_XMC4700.c ****   /* PLL frequency stepping...*/
 567:../Startup/system_XMC4700.c ****   /* Reset OSCDISCDIS */
 568:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 458              	 .loc 1 568 0
 459 016a 194A     	 ldr r2,.L18+8
 460 016c 184B     	 ldr r3,.L18+8
 461 016e 5B68     	 ldr r3,[r3,#4]
 462 0170 23F04003 	 bic r3,r3,#64
 463 0174 5360     	 str r3,[r2,#4]
 569:../Startup/system_XMC4700.c ****   
 570:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 464              	 .loc 1 570 0
 465 0176 164B     	 ldr r3,.L18+8
 466 0178 1C4A     	 ldr r2,.L18+36
 467 017a 9A60     	 str r2,[r3,#8]
 571:../Startup/system_XMC4700.c **** 	                  (PLL_K2DIV_48MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 572:../Startup/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 573:../Startup/system_XMC4700.c **** 
 574:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_48MHZ);
 468              	 .loc 1 574 0
 469 017c 4FF41660 	 mov r0,#2400
 470 0180 FFF7FEFF 	 bl delay
 575:../Startup/system_XMC4700.c **** 
 576:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 471              	 .loc 1 576 0
 472 0184 124B     	 ldr r3,.L18+8
 473 0186 1A4A     	 ldr r2,.L18+40
 474 0188 9A60     	 str r2,[r3,#8]
 577:../Startup/system_XMC4700.c **** 	                  (PLL_K2DIV_72MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 578:../Startup/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 579:../Startup/system_XMC4700.c **** 
 580:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_72MHZ);
 475              	 .loc 1 580 0
 476 018a 4FF46160 	 mov r0,#3600
 477 018e FFF7FEFF 	 bl delay
 581:../Startup/system_XMC4700.c **** 
 582:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 478              	 .loc 1 582 0
 479 0192 0F4B     	 ldr r3,.L18+8
 480 0194 174A     	 ldr r2,.L18+44
 481 0196 9A60     	 str r2,[r3,#8]
 583:../Startup/system_XMC4700.c **** 	                  (PLL_K2DIV_96MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 584:../Startup/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 585:../Startup/system_XMC4700.c **** 
 586:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_96MHZ);
 482              	 .loc 1 586 0
 483 0198 4FF49650 	 mov r0,#4800
 484 019c FFF7FEFF 	 bl delay
 587:../Startup/system_XMC4700.c **** 
 588:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 485              	 .loc 1 588 0
 486 01a0 0B4B     	 ldr r3,.L18+8
 487 01a2 154A     	 ldr r2,.L18+48
 488 01a4 9A60     	 str r2,[r3,#8]
 589:../Startup/system_XMC4700.c **** 	                  (PLL_K2DIV_120MHZ << SCU_PLL_PLLCON1_K2DIV_Pos) |
 590:../Startup/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 591:../Startup/system_XMC4700.c **** 
 592:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_120MHZ);
 489              	 .loc 1 592 0
 490 01a6 41F27070 	 movw r0,#6000
 491 01aa FFF7FEFF 	 bl delay
 593:../Startup/system_XMC4700.c **** 
 594:../Startup/system_XMC4700.c ****   SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 492              	 .loc 1 594 0
 493 01ae 084B     	 ldr r3,.L18+8
 494 01b0 124A     	 ldr r2,.L18+52
 495 01b2 9A60     	 str r2,[r3,#8]
 595:../Startup/system_XMC4700.c **** 	                  (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
 596:../Startup/system_XMC4700.c **** 	                  (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));
 597:../Startup/system_XMC4700.c **** 
 598:../Startup/system_XMC4700.c ****   delay(DELAY_CNT_50US_144MHZ);
 496              	 .loc 1 598 0
 497 01b4 4FF4E150 	 mov r0,#7200
 498 01b8 FFF7FEFF 	 bl delay
 599:../Startup/system_XMC4700.c ****   
 600:../Startup/system_XMC4700.c **** #endif /* ENABLE_PLL */
 601:../Startup/system_XMC4700.c **** 
 602:../Startup/system_XMC4700.c **** #if ENABLE_USBPLL
 603:../Startup/system_XMC4700.c ****   /* enable USB PLL first */
 604:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON &= ~(SCU_PLL_USBPLLCON_VCOPWD_Msk | SCU_PLL_USBPLLCON_PLLPWD_Msk);
 605:../Startup/system_XMC4700.c **** 
 606:../Startup/system_XMC4700.c ****   /* USB PLL uses as clock input the OSC_HP */
 607:../Startup/system_XMC4700.c ****   /* check and if not already running enable OSC_HP */
 608:../Startup/system_XMC4700.c ****   if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 609:../Startup/system_XMC4700.c ****   {
 610:../Startup/system_XMC4700.c ****     /* check if Main PLL is switched on for OSC WDG*/
 611:../Startup/system_XMC4700.c ****     if ((SCU_PLL->PLLCON0 &(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk)) != 0UL)
 612:../Startup/system_XMC4700.c ****     {
 613:../Startup/system_XMC4700.c ****       /* enable PLL first */
 614:../Startup/system_XMC4700.c ****       SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 615:../Startup/system_XMC4700.c ****     }
 616:../Startup/system_XMC4700.c **** 
 617:../Startup/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 618:../Startup/system_XMC4700.c ****     SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 619:../Startup/system_XMC4700.c **** 
 620:../Startup/system_XMC4700.c ****     /* restart OSC Watchdog */
 621:../Startup/system_XMC4700.c ****     SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 622:../Startup/system_XMC4700.c **** 
 623:../Startup/system_XMC4700.c ****     while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 624:../Startup/system_XMC4700.c ****     {
 625:../Startup/system_XMC4700.c ****       /* wait till OSC_HP output frequency is usable */
 626:../Startup/system_XMC4700.c ****     }
 627:../Startup/system_XMC4700.c ****   }
 628:../Startup/system_XMC4700.c **** 
 629:../Startup/system_XMC4700.c **** 
 630:../Startup/system_XMC4700.c ****   /* Setup USB PLL */
 631:../Startup/system_XMC4700.c ****   /* Go to bypass the USB PLL */
 632:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_VCOBYP_Msk;
 633:../Startup/system_XMC4700.c **** 
 634:../Startup/system_XMC4700.c ****   /* disconnect Oscillator from USB PLL */
 635:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_FINDIS_Msk;
 636:../Startup/system_XMC4700.c **** 
 637:../Startup/system_XMC4700.c ****   /* Setup Divider settings for USB PLL */
 638:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON = ((USB_NDIV << SCU_PLL_USBPLLCON_NDIV_Pos) |
 639:../Startup/system_XMC4700.c ****                         (USB_PDIV << SCU_PLL_USBPLLCON_PDIV_Pos));
 640:../Startup/system_XMC4700.c **** 
 641:../Startup/system_XMC4700.c ****   /* Set OSCDISCDIS */
 642:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_OSCDISCDIS_Msk;
 643:../Startup/system_XMC4700.c **** 
 644:../Startup/system_XMC4700.c ****   /* connect Oscillator to USB PLL */
 645:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON &= ~SCU_PLL_USBPLLCON_FINDIS_Msk;
 646:../Startup/system_XMC4700.c **** 
 647:../Startup/system_XMC4700.c ****   /* restart PLL Lock detection */
 648:../Startup/system_XMC4700.c ****   SCU_PLL->USBPLLCON |= SCU_PLL_USBPLLCON_RESLD_Msk;
 649:../Startup/system_XMC4700.c **** 
 650:../Startup/system_XMC4700.c ****   while ((SCU_PLL->USBPLLSTAT & SCU_PLL_USBPLLSTAT_VCOLOCK_Msk) == 0U)
 651:../Startup/system_XMC4700.c ****   {
 652:../Startup/system_XMC4700.c ****     /* wait for PLL Lock */
 653:../Startup/system_XMC4700.c ****   }  
 654:../Startup/system_XMC4700.c **** #endif
 655:../Startup/system_XMC4700.c **** 
 656:../Startup/system_XMC4700.c **** 
 657:../Startup/system_XMC4700.c ****   /* Enable selected clocks */
 658:../Startup/system_XMC4700.c ****   SCU_CLK->CLKSET = __CLKSET;
 499              	 .loc 1 658 0
 500 01bc 084B     	 ldr r3,.L18+24
 501 01be 0022     	 movs r2,#0
 502 01c0 5A60     	 str r2,[r3,#4]
 659:../Startup/system_XMC4700.c **** 
 660:../Startup/system_XMC4700.c **** #if __EXTCLKPIN != 0
 661:../Startup/system_XMC4700.c **** #if __EXTCLKPIN == EXTCLK_PIN_P1_15
 662:../Startup/system_XMC4700.c ****   /* P1.15 */
 663:../Startup/system_XMC4700.c ****   PORT1->PDR1 &= ~PORT1_PDR1_PD15_Msk;
 664:../Startup/system_XMC4700.c ****   PORT1->IOCR12 = (PORT1->IOCR12 & ~PORT0_IOCR12_PC15_Msk) | (0x11U << PORT0_IOCR12_PC15_Pos);
 665:../Startup/system_XMC4700.c **** #else
 666:../Startup/system_XMC4700.c ****   /* P0.8 */
 667:../Startup/system_XMC4700.c ****   PORT0->HWSEL &= ~PORT0_HWSEL_HW8_Msk;
 668:../Startup/system_XMC4700.c ****   PORT0->PDR1 &= ~PORT0_PDR1_PD8_Msk;
 669:../Startup/system_XMC4700.c ****   PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
 670:../Startup/system_XMC4700.c **** #endif
 671:../Startup/system_XMC4700.c **** #endif  /* ENABLE_EXTCLK == 1  */
 672:../Startup/system_XMC4700.c **** 
 673:../Startup/system_XMC4700.c ****   SystemCoreClockUpdate();
 503              	 .loc 1 673 0
 504 01c2 FFF7FEFF 	 bl SystemCoreClockUpdate
 674:../Startup/system_XMC4700.c **** }
 505              	 .loc 1 674 0
 506 01c6 80BD     	 pop {r7,pc}
 507              	.L19:
 508              	 .align 2
 509              	.L18:
 510 01c8 00420050 	 .word 1342194176
 511 01cc 00440050 	 .word 1342194688
 512 01d0 10470050 	 .word 1342195472
 513 01d4 00470050 	 .word 1342195456
 514 01d8 6BCA5F6B 	 .word 1801439851
 515 01dc 002F0B01 	 .word 17510144
 516 01e0 00460050 	 .word 1342195200
 517 01e4 05000100 	 .word 65541
 518 01e8 03002001 	 .word 18874371
 519 01ec 002F0501 	 .word 17116928
 520 01f0 002F0301 	 .word 16985856
 521 01f4 002F0201 	 .word 16920320
 522 01f8 002F0101 	 .word 16854784
 523 01fc 002F0001 	 .word 16789248
 524              	 .cfi_endproc
 525              	.LFE126:
 527              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
 528              	 .align 2
 529              	 .weak SystemCoreClockUpdate
 530              	 .thumb
 531              	 .thumb_func
 533              	SystemCoreClockUpdate:
 534              	.LFB127:
 675:../Startup/system_XMC4700.c **** 
 676:../Startup/system_XMC4700.c **** __WEAK void SystemCoreClockUpdate(void)
 677:../Startup/system_XMC4700.c **** {
 535              	 .loc 1 677 0
 536              	 .cfi_startproc
 537              	 
 538              	 
 539 0000 80B5     	 push {r7,lr}
 540              	.LCFI16:
 541              	 .cfi_def_cfa_offset 8
 542              	 .cfi_offset 7,-8
 543              	 .cfi_offset 14,-4
 544 0002 84B0     	 sub sp,sp,#16
 545              	.LCFI17:
 546              	 .cfi_def_cfa_offset 24
 547 0004 00AF     	 add r7,sp,#0
 548              	.LCFI18:
 549              	 .cfi_def_cfa_register 7
 678:../Startup/system_XMC4700.c ****   uint32_t pdiv;
 679:../Startup/system_XMC4700.c ****   uint32_t ndiv;
 680:../Startup/system_XMC4700.c ****   uint32_t kdiv;
 681:../Startup/system_XMC4700.c ****   uint32_t temp;
 682:../Startup/system_XMC4700.c **** 
 683:../Startup/system_XMC4700.c ****   if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 550              	 .loc 1 683 0
 551 0006 2F4B     	 ldr r3,.L27
 552 0008 DB68     	 ldr r3,[r3,#12]
 553 000a 03F48033 	 and r3,r3,#65536
 554 000e 002B     	 cmp r3,#0
 555 0010 3ED0     	 beq .L21
 684:../Startup/system_XMC4700.c ****   {
 685:../Startup/system_XMC4700.c ****     /* fPLL is clock source for fSYS */
 686:../Startup/system_XMC4700.c ****     if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 556              	 .loc 1 686 0
 557 0012 2D4B     	 ldr r3,.L27+4
 558 0014 DB68     	 ldr r3,[r3,#12]
 559 0016 03F00103 	 and r3,r3,#1
 560 001a 002B     	 cmp r3,#0
 561 001c 02D0     	 beq .L22
 687:../Startup/system_XMC4700.c ****     {
 688:../Startup/system_XMC4700.c ****       /* PLL input clock is the backup clock (fOFI) */
 689:../Startup/system_XMC4700.c ****       temp = OFI_FREQUENCY;
 562              	 .loc 1 689 0
 563 001e 2B4B     	 ldr r3,.L27+8
 564 0020 FB60     	 str r3,[r7,#12]
 565 0022 02E0     	 b .L23
 566              	.L22:
 690:../Startup/system_XMC4700.c ****     }
 691:../Startup/system_XMC4700.c ****     else
 692:../Startup/system_XMC4700.c ****     {
 693:../Startup/system_XMC4700.c ****       /* PLL input clock is the high performance osicllator (fOSCHP) */
 694:../Startup/system_XMC4700.c ****       temp = OSCHP_GetFrequency();
 567              	 .loc 1 694 0
 568 0024 FFF7FEFF 	 bl OSCHP_GetFrequency
 569 0028 F860     	 str r0,[r7,#12]
 570              	.L23:
 695:../Startup/system_XMC4700.c ****     }
 696:../Startup/system_XMC4700.c **** 
 697:../Startup/system_XMC4700.c ****     /* check if PLL is locked */
 698:../Startup/system_XMC4700.c ****     if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 571              	 .loc 1 698 0
 572 002a 274B     	 ldr r3,.L27+4
 573 002c 1B68     	 ldr r3,[r3]
 574 002e 03F00403 	 and r3,r3,#4
 575 0032 002B     	 cmp r3,#0
 576 0034 20D0     	 beq .L24
 699:../Startup/system_XMC4700.c ****     {
 700:../Startup/system_XMC4700.c ****       /* PLL normal mode */
 701:../Startup/system_XMC4700.c ****       /* read back divider settings */
 702:../Startup/system_XMC4700.c ****       pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 577              	 .loc 1 702 0
 578 0036 244B     	 ldr r3,.L27+4
 579 0038 9B68     	 ldr r3,[r3,#8]
 580 003a 03F07063 	 and r3,r3,#251658240
 581 003e 1B0E     	 lsrs r3,r3,#24
 582 0040 0133     	 adds r3,r3,#1
 583 0042 BB60     	 str r3,[r7,#8]
 703:../Startup/system_XMC4700.c ****       ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 584              	 .loc 1 703 0
 585 0044 204B     	 ldr r3,.L27+4
 586 0046 9B68     	 ldr r3,[r3,#8]
 587 0048 03F4FE43 	 and r3,r3,#32512
 588 004c 1B0A     	 lsrs r3,r3,#8
 589 004e 0133     	 adds r3,r3,#1
 590 0050 7B60     	 str r3,[r7,#4]
 704:../Startup/system_XMC4700.c ****       kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 591              	 .loc 1 704 0
 592 0052 1D4B     	 ldr r3,.L27+4
 593 0054 9B68     	 ldr r3,[r3,#8]
 594 0056 03F4FE03 	 and r3,r3,#8323072
 595 005a 1B0C     	 lsrs r3,r3,#16
 596 005c 0133     	 adds r3,r3,#1
 597 005e 3B60     	 str r3,[r7]
 705:../Startup/system_XMC4700.c **** 
 706:../Startup/system_XMC4700.c ****       temp = (temp / (pdiv * kdiv)) * ndiv;
 598              	 .loc 1 706 0
 599 0060 BB68     	 ldr r3,[r7,#8]
 600 0062 3A68     	 ldr r2,[r7]
 601 0064 02FB03F3 	 mul r3,r2,r3
 602 0068 FA68     	 ldr r2,[r7,#12]
 603 006a B2FBF3F3 	 udiv r3,r2,r3
 604 006e 7A68     	 ldr r2,[r7,#4]
 605 0070 02FB03F3 	 mul r3,r2,r3
 606 0074 FB60     	 str r3,[r7,#12]
 607 0076 0DE0     	 b .L26
 608              	.L24:
 707:../Startup/system_XMC4700.c ****     }
 708:../Startup/system_XMC4700.c ****     else
 709:../Startup/system_XMC4700.c ****     {
 710:../Startup/system_XMC4700.c ****       /* PLL prescalar mode */
 711:../Startup/system_XMC4700.c ****       /* read back divider settings */
 712:../Startup/system_XMC4700.c ****       kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 609              	 .loc 1 712 0
 610 0078 134B     	 ldr r3,.L27+4
 611 007a 9B68     	 ldr r3,[r3,#8]
 612 007c 03F07F03 	 and r3,r3,#127
 613 0080 0133     	 adds r3,r3,#1
 614 0082 3B60     	 str r3,[r7]
 713:../Startup/system_XMC4700.c ****       
 714:../Startup/system_XMC4700.c ****       temp = (temp / kdiv);
 615              	 .loc 1 714 0
 616 0084 FA68     	 ldr r2,[r7,#12]
 617 0086 3B68     	 ldr r3,[r7]
 618 0088 B2FBF3F3 	 udiv r3,r2,r3
 619 008c FB60     	 str r3,[r7,#12]
 620 008e 01E0     	 b .L26
 621              	.L21:
 715:../Startup/system_XMC4700.c ****     }
 716:../Startup/system_XMC4700.c ****   }
 717:../Startup/system_XMC4700.c ****   else
 718:../Startup/system_XMC4700.c ****   {
 719:../Startup/system_XMC4700.c ****     /* fOFI is clock source for fSYS */    
 720:../Startup/system_XMC4700.c ****     temp = OFI_FREQUENCY;
 622              	 .loc 1 720 0
 623 0090 0E4B     	 ldr r3,.L27+8
 624 0092 FB60     	 str r3,[r7,#12]
 625              	.L26:
 721:../Startup/system_XMC4700.c ****   }
 722:../Startup/system_XMC4700.c **** 
 723:../Startup/system_XMC4700.c ****   temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 626              	 .loc 1 723 0
 627 0094 0B4B     	 ldr r3,.L27
 628 0096 DB68     	 ldr r3,[r3,#12]
 629 0098 DBB2     	 uxtb r3,r3
 630 009a 0133     	 adds r3,r3,#1
 631 009c FA68     	 ldr r2,[r7,#12]
 632 009e B2FBF3F3 	 udiv r3,r2,r3
 633 00a2 FB60     	 str r3,[r7,#12]
 724:../Startup/system_XMC4700.c ****   temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 634              	 .loc 1 724 0
 635 00a4 074B     	 ldr r3,.L27
 636 00a6 1B69     	 ldr r3,[r3,#16]
 637 00a8 03F00103 	 and r3,r3,#1
 638 00ac 0133     	 adds r3,r3,#1
 639 00ae FA68     	 ldr r2,[r7,#12]
 640 00b0 B2FBF3F3 	 udiv r3,r2,r3
 641 00b4 FB60     	 str r3,[r7,#12]
 725:../Startup/system_XMC4700.c **** 
 726:../Startup/system_XMC4700.c ****   SystemCoreClock = temp;
 642              	 .loc 1 726 0
 643 00b6 064A     	 ldr r2,.L27+12
 644 00b8 FB68     	 ldr r3,[r7,#12]
 645 00ba 1360     	 str r3,[r2]
 727:../Startup/system_XMC4700.c **** }
 646              	 .loc 1 727 0
 647 00bc 1037     	 adds r7,r7,#16
 648              	.LCFI19:
 649              	 .cfi_def_cfa_offset 8
 650 00be BD46     	 mov sp,r7
 651              	.LCFI20:
 652              	 .cfi_def_cfa_register 13
 653              	 
 654 00c0 80BD     	 pop {r7,pc}
 655              	.L28:
 656 00c2 00BF     	 .align 2
 657              	.L27:
 658 00c4 00460050 	 .word 1342195200
 659 00c8 10470050 	 .word 1342195472
 660 00cc 00366E01 	 .word 24000000
 661 00d0 00000000 	 .word SystemCoreClock
 662              	 .cfi_endproc
 663              	.LFE127:
 665              	 .section .text.OSCHP_GetFrequency,"ax",%progbits
 666              	 .align 2
 667              	 .weak OSCHP_GetFrequency
 668              	 .thumb
 669              	 .thumb_func
 671              	OSCHP_GetFrequency:
 672              	.LFB128:
 728:../Startup/system_XMC4700.c **** 
 729:../Startup/system_XMC4700.c **** __WEAK uint32_t OSCHP_GetFrequency(void)
 730:../Startup/system_XMC4700.c **** {
 673              	 .loc 1 730 0
 674              	 .cfi_startproc
 675              	 
 676              	 
 677              	 
 678 0000 80B4     	 push {r7}
 679              	.LCFI21:
 680              	 .cfi_def_cfa_offset 4
 681              	 .cfi_offset 7,-4
 682 0002 00AF     	 add r7,sp,#0
 683              	.LCFI22:
 684              	 .cfi_def_cfa_register 7
 731:../Startup/system_XMC4700.c ****   return OSCHP_FREQUENCY;
 685              	 .loc 1 731 0
 686 0004 024B     	 ldr r3,.L31
 732:../Startup/system_XMC4700.c **** }
 687              	 .loc 1 732 0
 688 0006 1846     	 mov r0,r3
 689 0008 BD46     	 mov sp,r7
 690              	.LCFI23:
 691              	 .cfi_def_cfa_register 13
 692              	 
 693 000a 5DF8047B 	 ldr r7,[sp],#4
 694              	.LCFI24:
 695              	 .cfi_restore 7
 696              	 .cfi_def_cfa_offset 0
 697 000e 7047     	 bx lr
 698              	.L32:
 699              	 .align 2
 700              	.L31:
 701 0010 001BB700 	 .word 12000000
 702              	 .cfi_endproc
 703              	.LFE128:
 705              	 .text
 706              	.Letext0:
 707              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 708              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 709              	 .file 5 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include/core_cm4.h"
 710              	 .file 6 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_XMC4700.c
    {standard input}:24     .no_init:00000000 SystemCoreClock
    {standard input}:21     .no_init:00000000 $d
    {standard input}:30     .no_init:00000004 g_chipid
    {standard input}:33     .text.delay:00000000 $t
    {standard input}:37     .text.delay:00000000 delay
    {standard input}:98     .text.SystemInit:00000000 $t
    {standard input}:103    .text.SystemInit:00000000 SystemInit
    {standard input}:144    .text.SystemCoreSetup:00000000 SystemCoreSetup
    {standard input}:252    .text.SystemCoreClockSetup:00000000 SystemCoreClockSetup
    {standard input}:134    .text.SystemInit:0000001c $d
    {standard input}:139    .text.SystemCoreSetup:00000000 $t
    {standard input}:240    .text.SystemCoreSetup:00000064 $d
    {standard input}:247    .text.SystemCoreClockSetup:00000000 $t
    {standard input}:671    .text.OSCHP_GetFrequency:00000000 OSCHP_GetFrequency
    {standard input}:533    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:510    .text.SystemCoreClockSetup:000001c8 $d
    {standard input}:528    .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:658    .text.SystemCoreClockUpdate:000000c4 $d
    {standard input}:666    .text.OSCHP_GetFrequency:00000000 $t
    {standard input}:701    .text.OSCHP_GetFrequency:00000010 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__Vectors
