   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB162:
  26              	 .file 1 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2016-06-07
   4:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  64:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  65:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  66:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  67:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  68:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  69:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  70:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  71:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  72:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  73:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  74:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  75:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  76:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  77:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  78:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  79:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  80:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  81:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  82:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  83:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  84:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  85:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  86:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  87:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  88:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  89:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  90:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
  91:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
  92:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
  93:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
  94:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
  95:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
  96:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
  97:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
  98:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  99:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 100:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 101:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 102:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 103:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 104:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 105:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 106:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 107:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 108:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 109:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 110:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 111:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 112:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 113:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 114:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 115:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 116:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 117:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 118:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 119:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 120:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 121:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 122:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 123:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 124:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 
 125:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 126:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 127:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 128:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 129:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 130:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 
 131:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 132:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 133:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 134:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 135:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 136:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 137:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 138:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 139:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 140:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 141:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 142:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 143:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 144:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 145:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 146:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 147:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 148:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 149:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 150:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 151:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 152:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 153:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 154:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 155:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 156:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 157:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 158:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 159:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 160:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 161:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)		/**< Standard Identifier bitposition */
 162:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 163:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 164:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 165:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL)	/**< Node event mask */
 166:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 167:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)	/**< Message Object event mask */
 168:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 169:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 170:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 171:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 172:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 173:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 174:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 175:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 176:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 177:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 178:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 179:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 180:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 181:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 182:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 183:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 184:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 185:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 186:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 187:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 188:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 189:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 190:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 191:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 192:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 193:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,	  /**< Remove a message object from the list and insert
 194:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 195:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 196:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 197:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 198:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 199:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 200:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 201:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 202:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 203:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 204:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 205:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 206:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 207:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 208:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 209:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 210:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 211:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 212:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 213:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 214:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 215:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 216:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 217:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 218:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 219:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 220:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 221:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 222:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 223:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 224:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 225:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 226:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 227:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 228:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 229:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 230:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 231:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 232:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 233:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 234:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 235:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 236:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 237:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 238:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 239:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 240:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 241:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 242:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 243:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U, 			 /**< Frame Count Mode */
 244:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 245:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 246:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 247:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 248:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 249:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 250:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 251:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 252:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 253:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 254:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 255:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 256:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 257:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 258:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 259:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 260:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 261:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 262:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 263:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 264:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 265:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 266:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 267:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 268:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 269:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 270:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 271:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 272:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 273:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 274:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 275:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 276:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 277:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 278:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 279:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 280:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 281:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 282:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 283:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 284:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 285:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 286:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 287:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 288:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 289:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 290:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 291:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 292:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 293:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 294:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 295:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 296:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 297:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 298:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 299:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 300:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 301:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 302:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 303:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 304:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 305:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 306:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 307:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 308:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 309:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 310:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 311:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 312:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 313:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 314:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,    	/**< Pointer to previous 
 315:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 316:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 317:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 318:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 319:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 320:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 321:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 322:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 323:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 324:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 325:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 326:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 327:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 328:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,				/**< Bus-off status */
 329:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 330:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 331:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 332:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 333:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 334:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 335:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 336:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 337:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 338:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 339:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 340:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 341:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 342:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 343:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 344:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 345:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 346:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 347:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 348:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 349:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 350:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 351:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 352:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 353:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 354:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 355:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 356:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 357:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 358:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 359:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 360:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 361:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 362:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 363:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 364:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 365:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 366:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 367:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 368:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 369:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 370:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 371:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 372:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 373:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 374:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 375:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 376:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 377:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 378:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 379:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 380:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 381:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 382:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 383:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 384:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 385:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 386:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 387:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 388:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 389:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 390:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 391:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 392:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 393:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 394:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 395:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 396:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 397:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 398:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 399:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 400:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA, 	/**< CAN Receive Input A */
 401:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,		/**< CAN Receive Input B */
 402:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,		/**< CAN Receive Input C */
 403:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,		/**< CAN Receive Input D */
 404:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,		/**< CAN Receive Input E */
 405:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,		/**< CAN Receive Input F */
 406:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,		/**< CAN Receive Input G */
 407:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH		/**< CAN Receive Input H */
 408:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 409:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 410:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 411:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 412:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 413:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 414:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 415:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 416:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 417:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 418:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 419:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 420:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 421:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 422:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 423:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 424:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 425:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 426:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 427:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 428:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 429:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 430:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 431:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 432:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 433:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 434:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 435:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 436:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 437:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 438:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 439:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 440:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 441:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 442:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 443:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 444:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 445:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 446:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN peripheral. @note Only available for XMC1400, XMC4800
 447:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 448:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 449:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 450:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if UC_FAMILY == XMC4
 451:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U,
 452:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U,
 453:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #else
 454:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U,
 455:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U
 456:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 457:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 458:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 459:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 460:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 461:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 462:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 463:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 464:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 465:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 466:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 467:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 468:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 469:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;        	/**< Specifies the node baud rate. Unit: baud \a baudrate shall be ran
 470:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;    	/**< Sample point is used to compensate mismatch between transmitter a
 471:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 									 the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 100%] of 
 472:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;             	/**< (Re) Synchronization Jump Width. Range:0-3 */
 473:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 474:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 475:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 476:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 477:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 478:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 479:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 480:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 481:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;		/**< points to the first element(slave object) in a FIFO structure.Range :0
 482:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;			/**< points to the last element(slave object) in a FIFO structure. Range :0-6
 483:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;		/**< points to the actual target object(Base object) within a FIFO/Gateway st
 484:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 485:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 486:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 487:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 488:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 489:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 490:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 491:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 492:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom; 			/**< points to the first element(gateway destination object) in a FIFO
 493:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;				/**< points to the last element(gateway destination object) in a FIFO str
 494:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;				/**< points to the actual target object within a FIFO/Gateway structure.
 495:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;		/**< TXRQ updated in the gateway destination object after the inte
 496:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object */
 497:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;		/**< The identifier of the gateway source object (after storing th
 498:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	 to the gateway destination object. */
 499:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 500:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 501:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	  	  	   gateway destination object */
 502:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 503:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   	  	  	  	  	  	  	  	are copied to the gateway destination.*/
 504:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 505:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 506:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 507:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 508:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 509:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 510:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 511:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 512:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 513:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 514:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 515:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 516:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 517:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 518:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 519:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 520:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 521:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 522:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 523:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 524:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 525:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 526:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 527:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 528:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   union{
 529:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	  struct{
 530:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 16;
 531:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_selection:3;		/**<   Defines function of the frame counter  */
 532:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t can_frame_count_mode:2;			/**<   Determines the operation mode of the frame counter */
 533:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		  uint32_t : 11;
 534:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	  };
 535:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	  uint32_t nfcr;
 536:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 537:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   };
 538:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 539:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 540:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 541:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 542:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** */
 543:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 544:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 545:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 546:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 547:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 548:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 549:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 550:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register */
 551:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 552:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 553:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message identifi
 554:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 555:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 556:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		};
 557:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_ar;
 558:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	};
 559:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	union{
 560:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		struct{
 561:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 562:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 			uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 563:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		};
 564:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		uint32_t mo_amr;
 565:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	};
 566:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 567:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 568:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   union{
 569:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 570:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   		uint8_t can_data_byte[8];                 /**< Each position of the array represents a data byt
 571:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   		uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bits 
 572:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   		uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_data[
 573:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   		 	 	 	 	 	 	 	 	 	 	    of the data */
 574:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   		uint64_t can_data_long;                   /** Data of the Message Object*/
 575:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   	  };
 576:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 577:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 578:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 579:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 580:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 581:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 582:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 583:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 584:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 585:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 586:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 587:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 588:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 589:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 590:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 591:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 592:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 593:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 594:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 595:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj	Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 596:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 				for details.
 597:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 598:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 599:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 600:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 601:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 602:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 603:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 604:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 605:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 606:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 607:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 608:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 609:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 610:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 611:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 612:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 613:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 			   for details.
 614:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 615:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 616:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 617:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 618:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 619:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 620:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 621:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 622:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 623:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 624:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 625:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 626:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 627:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 628:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 629:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 630:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 631:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 		   for details.
 632:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 633:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num	CAN node number,Range : 0-2
 634:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num 	CAN Message Object number,Range : 0-63
 635:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 636:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 637:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 639:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 640:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 641:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 642:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 643:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 644:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 645:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 646:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 647:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 648:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 649:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 650:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 651:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 652:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 653:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 654:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 655:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 656:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 658:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 659:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 660:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 661:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 662:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 663:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 664:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 665:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 665 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 666:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  43              	 .loc 1 666 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F8C431 	 ldr r3,[r3,#452]
  46 000e 03F44073 	 and r3,r3,#768
  47 0012 002B     	 cmp r3,#0
  48 0014 0CBF     	 ite eq
  49 0016 0123     	 moveq r3,#1
  50 0018 0023     	 movne r3,#0
  51 001a DBB2     	 uxtb r3,r3
 667:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
  52              	 .loc 1 667 0
  53 001c 1846     	 mov r0,r3
  54 001e 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0020 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0022 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0026 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE162:
  69              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  70              	 .align 2
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_CAN_PanelControl:
  75              	.LFB163:
 668:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 669:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 670:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 671:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 672:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 673:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 674:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 675:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1	 Panel Argument 1,Range : 0-2
 676:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2 	 Panel Argument 2, Range : 0-63
 677:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 678:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 679:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 680:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 681:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 682:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 683:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 684:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 685:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 686:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 687:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 688:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 689:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 690:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 691:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 692:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 693:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 694:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg1,
 695:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		                                  const uint8_t arg2)
 696:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
  76              	 .loc 1 696 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80              	 
  81 0000 80B4     	 push {r7}
  82              	.LCFI6:
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
  92 0008 0846     	 mov r0,r1
  93 000a 1146     	 mov r1,r2
  94 000c 1A46     	 mov r2,r3
  95 000e 0346     	 mov r3,r0
  96 0010 FB70     	 strb r3,[r7,#3]
  97 0012 0B46     	 mov r3,r1
  98 0014 BB70     	 strb r3,[r7,#2]
  99 0016 1346     	 mov r3,r2
 100 0018 7B70     	 strb r3,[r7,#1]
 697:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 101              	 .loc 1 697 0
 102 001a FA78     	 ldrb r2,[r7,#3]
 698:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 103              	 .loc 1 698 0
 104 001c BB78     	 ldrb r3,[r7,#2]
 105 001e 1B04     	 lsls r3,r3,#16
 106 0020 03F47F03 	 and r3,r3,#16711680
 697:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 107              	 .loc 1 697 0
 108 0024 1A43     	 orrs r2,r2,r3
 699:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 109              	 .loc 1 699 0
 110 0026 7B78     	 ldrb r3,[r7,#1]
 111 0028 1B06     	 lsls r3,r3,#24
 698:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		        (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 112              	 .loc 1 698 0
 113 002a 1A43     	 orrs r2,r2,r3
 697:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 114              	 .loc 1 697 0
 115 002c 7B68     	 ldr r3,[r7,#4]
 116 002e C3F8C421 	 str r2,[r3,#452]
 700:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 117              	 .loc 1 700 0
 118 0032 0C37     	 adds r7,r7,#12
 119              	.LCFI9:
 120              	 .cfi_def_cfa_offset 4
 121 0034 BD46     	 mov sp,r7
 122              	.LCFI10:
 123              	 .cfi_def_cfa_register 13
 124              	 
 125 0036 5DF8047B 	 ldr r7,[sp],#4
 126              	.LCFI11:
 127              	 .cfi_restore 7
 128              	 .cfi_def_cfa_offset 0
 129 003a 7047     	 bx lr
 130              	 .cfi_endproc
 131              	.LFE163:
 133              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 134              	 .align 2
 135              	 .thumb
 136              	 .thumb_func
 138              	XMC_CAN_NODE_EnableConfigurationChange:
 139              	.LFB179:
 701:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 702:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 703:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 704:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 705:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 706:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 707:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 708:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr	Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_TR
 709:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 							 Multiple interrupt trigger events can be ORed.
 710:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 711:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 712:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 713:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 714:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 715:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 716:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 717:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 718:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 719:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 720:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 721:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 722:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 723:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 724:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 725:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 726:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 727:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 728:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 729:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 								/*INIT APIs*/
 730:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 731:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 732:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 733:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 734:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 			  for details.
 735:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 736:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency	CAN module frequency(fCAN). Range : 5MHz to 120MHz
 737:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 739:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 740:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 741:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 742:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() to configure baud rate for current CAN frequency.It 
 743:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 744:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 745:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure()\n\n\n
 746:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 747:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 748:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 749:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 750:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS)
 751:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 752:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 753:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 754:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 755:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 756:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 757:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 758:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 759:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 760:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 761:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 762:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 763:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 764:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #else
 765:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 766:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** #endif
 767:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 768:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 769:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 770:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 771:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 772:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 773:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 774:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 775:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 776:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 777:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 778:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 779:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * None
 780:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 781:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 782:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 783:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 784:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 785:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 786:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 	  /*NODE APIs*/
 787:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 788:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 789:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 790:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 791:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  	  Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 792:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event		  CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_t
 793:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 794:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 795:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 796:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 797:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 798:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 799:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 800:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 801:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * None
 802:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 803:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 804:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 805:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 806:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 807:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		                                      const uint32_t service_request)
 808:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 809:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 810:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 811:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 812:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 813:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 814:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 815:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node		Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CAN_
 816:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time	Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMIN
 817:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 818:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 819:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 820:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 821:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 822:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 823:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 824:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 825:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * None
 826:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 827:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 828:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 829:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 830:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 831:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 832:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 833:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 834:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 835:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 836:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 837:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 838:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 839:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 840:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 841:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 842:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 843:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 844:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * None
 845:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 846:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 847:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 848:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 849:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 850:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 851:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 852:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 		                                          const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 853:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 854:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 855:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 856:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 857:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 858:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 859:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 860:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node	Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 861:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 862:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 863:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 865:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 866:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 867:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 868:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 869:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 870:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 871:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 872:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 873:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 874:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 875:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 876:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 877:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 878:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 879:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 880:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 881:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 882:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 883:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 884:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 885:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 886:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 887:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 889:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 890:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 891:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 892:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 893:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 894:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 895:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 896:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 897:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 898:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 899:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 900:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 901:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 902:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 903:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 904:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 905:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 906:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 907:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 908:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 909:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 910:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 911:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 912:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 913:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 914:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 915:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 916:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 917:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 919:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
 920:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 921:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 922:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
 923:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 924:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 925:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 926:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 927:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 928:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 929:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 930:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 931:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 932:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param event	   CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 933:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * 				   multiple events can be ORed.
 934:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 935:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 936:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 937:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 938:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
 939:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 940:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 941:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
 942:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 943:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 944:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 945:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
 946:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 947:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 948:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 949:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 950:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
 951:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 952:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
 953:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 955:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
 956:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 957:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 958:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
 959:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 960:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 961:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 962:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
 963:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 964:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
 965:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 966:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 967:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 968:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 969:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 970:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
 971:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 972:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
 973:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 974:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 975:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
 976:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 977:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 978:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
 979:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 980:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
 981:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 982:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
 983:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 984:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
 985:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 986:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
 988:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
 989:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 990:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 991:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level	Error Warning level value. Range :0-255.
 992:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 993:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 994:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 995:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 996:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
 997:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
 998:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
 999:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1000:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1001:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1002:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1003:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1004:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1005:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1006:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1007:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1008:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1009:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1010:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1011:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1012:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1013:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1014:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1015:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1016:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1017:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1018:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1019:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1020:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1021:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1022:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1023:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1024:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1025:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1026:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1027:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1028:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1029:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1030:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1031:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1032:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1033:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1034:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1035:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1036:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1037:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1038:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1039:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1040:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1041:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1042:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1043:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1044:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1045:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1046:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1047:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1048:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1049:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1050:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1051:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1052:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1053:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1054:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1055:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1056:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1057:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1058:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1059:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1060:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1061:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1062:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1063:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1064:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1065:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1066:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1067:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1068:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1069:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1070:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1071:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1072:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1073:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1074:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns error warning level. This determines the threshold value (warning level, default 96) to 
1075:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	to set the corresponding error warning bit EWRN. It reads NECNT register.
1076:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1077:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1078:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1079:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1080:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1081:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1082:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1083:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1084:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1085:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1086:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1087:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1088:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1089:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1090:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1091:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1092:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1093:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1094:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1095:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1096:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a transm
1097:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the erro
1098:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1099:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1100:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1101:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1102:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1103:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1104:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1105:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1106:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1107:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1108:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1109:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1110:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1111:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1112:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1113:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1114:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1115:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1116:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1117:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1118:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t	receive error counter value.
1119:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1120:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1121:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	Returns Receive Error Counter value. It reads NECNT register.
1122:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1123:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1124:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1125:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1126:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1127:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1128:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1129:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1130:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1131:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1132:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1133:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1134:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1135:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1136:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1137:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1139:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1140:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1141:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1142:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1143:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1144:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1145:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1146:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1147:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1148:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1149:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1150:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1151:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1152:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1153:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1154:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1155:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1156:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1157:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1158:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1159:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1161:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1162:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1164:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1165:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1166:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1167:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1168:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1169:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
1170:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1171:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
1172:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1173:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1174:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1175:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1176:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1177:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1178:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1179:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1180:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1181:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1182:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1183:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1184:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1185:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1186:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1187:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1188:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1189:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1190:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 140              	 .loc 1 1190 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144              	 
 145 0000 80B4     	 push {r7}
 146              	.LCFI12:
 147              	 .cfi_def_cfa_offset 4
 148              	 .cfi_offset 7,-4
 149 0002 83B0     	 sub sp,sp,#12
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
1191:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 156              	 .loc 1 1191 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 1B68     	 ldr r3,[r3]
 159 000c 43F04002 	 orr r2,r3,#64
 160 0010 7B68     	 ldr r3,[r7,#4]
 161 0012 1A60     	 str r2,[r3]
1192:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 162              	 .loc 1 1192 0
 163 0014 0C37     	 adds r7,r7,#12
 164              	.LCFI15:
 165              	 .cfi_def_cfa_offset 4
 166 0016 BD46     	 mov sp,r7
 167              	.LCFI16:
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 0018 5DF8047B 	 ldr r7,[sp],#4
 171              	.LCFI17:
 172              	 .cfi_restore 7
 173              	 .cfi_def_cfa_offset 0
 174 001c 7047     	 bx lr
 175              	 .cfi_endproc
 176              	.LFE179:
 178 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 179              	 .align 2
 180              	 .thumb
 181              	 .thumb_func
 183              	XMC_CAN_NODE_DisableConfigurationChange:
 184              	.LFB180:
1193:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1194:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1195:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** /**
1196:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1197:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1198:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1199:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1200:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1201:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1202:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *	Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1203:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1204:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1205:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1206:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  *
1207:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****  */
1208:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** 
1209:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1210:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** {
 185              	 .loc 1 1210 0
 186              	 .cfi_startproc
 187              	 
 188              	 
 189              	 
 190 0000 80B4     	 push {r7}
 191              	.LCFI18:
 192              	 .cfi_def_cfa_offset 4
 193              	 .cfi_offset 7,-4
 194 0002 83B0     	 sub sp,sp,#12
 195              	.LCFI19:
 196              	 .cfi_def_cfa_offset 16
 197 0004 00AF     	 add r7,sp,#0
 198              	.LCFI20:
 199              	 .cfi_def_cfa_register 7
 200 0006 7860     	 str r0,[r7,#4]
1211:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 201              	 .loc 1 1211 0
 202 0008 7B68     	 ldr r3,[r7,#4]
 203 000a 1B68     	 ldr r3,[r3]
 204 000c 23F04002 	 bic r2,r3,#64
 205 0010 7B68     	 ldr r3,[r7,#4]
 206 0012 1A60     	 str r2,[r3]
1212:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_can.h **** }
 207              	 .loc 1 1212 0
 208 0014 0C37     	 adds r7,r7,#12
 209              	.LCFI21:
 210              	 .cfi_def_cfa_offset 4
 211 0016 BD46     	 mov sp,r7
 212              	.LCFI22:
 213              	 .cfi_def_cfa_register 13
 214              	 
 215 0018 5DF8047B 	 ldr r7,[sp],#4
 216              	.LCFI23:
 217              	 .cfi_restore 7
 218              	 .cfi_def_cfa_offset 0
 219 001c 7047     	 bx lr
 220              	 .cfi_endproc
 221              	.LFE180:
 223 001e 00BF     	 .section .text.max,"ax",%progbits
 224              	 .align 2
 225              	 .thumb
 226              	 .thumb_func
 228              	max:
 229              	.LFB215:
 230              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2016-06-20
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *
  50:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  51:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  52:../Libraries/XMCLib/src/xmc_can.c ****  *
  53:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  54:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  55:../Libraries/XMCLib/src/xmc_can.c ****  *
  56:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  57:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  58:../Libraries/XMCLib/src/xmc_can.c ****  *
  59:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  60:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br> 
  61:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_can.c ****  *
  63:../Libraries/XMCLib/src/xmc_can.c ****  */ 
  64:../Libraries/XMCLib/src/xmc_can.c **** 
  65:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  66:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  67:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  68:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  69:../Libraries/XMCLib/src/xmc_can.c **** 
  70:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  71:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
  72:../Libraries/XMCLib/src/xmc_can.c **** 
  73:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  74:../Libraries/XMCLib/src/xmc_can.c **** {
 231              	 .loc 2 74 0
 232              	 .cfi_startproc
 233              	 
 234              	 
 235              	 
 236 0000 80B4     	 push {r7}
 237              	.LCFI24:
 238              	 .cfi_def_cfa_offset 4
 239              	 .cfi_offset 7,-4
 240 0002 83B0     	 sub sp,sp,#12
 241              	.LCFI25:
 242              	 .cfi_def_cfa_offset 16
 243 0004 00AF     	 add r7,sp,#0
 244              	.LCFI26:
 245              	 .cfi_def_cfa_register 7
 246 0006 7860     	 str r0,[r7,#4]
 247 0008 3960     	 str r1,[r7]
  75:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 248              	 .loc 2 75 0
 249 000a 3A68     	 ldr r2,[r7]
 250 000c 7B68     	 ldr r3,[r7,#4]
 251 000e 9342     	 cmp r3,r2
 252 0010 38BF     	 it cc
 253 0012 1346     	 movcc r3,r2
  76:../Libraries/XMCLib/src/xmc_can.c **** }
 254              	 .loc 2 76 0
 255 0014 1846     	 mov r0,r3
 256 0016 0C37     	 adds r7,r7,#12
 257              	.LCFI27:
 258              	 .cfi_def_cfa_offset 4
 259 0018 BD46     	 mov sp,r7
 260              	.LCFI28:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 001a 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI29:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 001e 7047     	 bx lr
 268              	 .cfi_endproc
 269              	.LFE215:
 271              	 .section .text.min,"ax",%progbits
 272              	 .align 2
 273              	 .thumb
 274              	 .thumb_func
 276              	min:
 277              	.LFB216:
  77:../Libraries/XMCLib/src/xmc_can.c **** 
  78:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  79:../Libraries/XMCLib/src/xmc_can.c **** {
 278              	 .loc 2 79 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 0000 80B4     	 push {r7}
 284              	.LCFI30:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 0002 83B0     	 sub sp,sp,#12
 288              	.LCFI31:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI32:
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
 294 0008 3960     	 str r1,[r7]
  80:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 295              	 .loc 2 80 0
 296 000a 3A68     	 ldr r2,[r7]
 297 000c 7B68     	 ldr r3,[r7,#4]
 298 000e 9342     	 cmp r3,r2
 299 0010 28BF     	 it cs
 300 0012 1346     	 movcs r3,r2
  81:../Libraries/XMCLib/src/xmc_can.c **** }
 301              	 .loc 2 81 0
 302 0014 1846     	 mov r0,r3
 303 0016 0C37     	 adds r7,r7,#12
 304              	.LCFI33:
 305              	 .cfi_def_cfa_offset 4
 306 0018 BD46     	 mov sp,r7
 307              	.LCFI34:
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 001a 5DF8047B 	 ldr r7,[sp],#4
 311              	.LCFI35:
 312              	 .cfi_restore 7
 313              	 .cfi_def_cfa_offset 0
 314 001e 7047     	 bx lr
 315              	 .cfi_endproc
 316              	.LFE216:
 318              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_CAN_NODE_NominalBitTimeConfigure:
 325              	.LFB217:
  82:../Libraries/XMCLib/src/xmc_can.c **** 
  83:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
  85:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_can.c **** 
  87:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
  88:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
  89:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
  90:../Libraries/XMCLib/src/xmc_can.c **** {
 326              	 .loc 2 90 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI36:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 90B0     	 sub sp,sp,#64
 336              	.LCFI37:
 337              	 .cfi_def_cfa_offset 72
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI38:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 342 0008 3960     	 str r1,[r7]
  91:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 343              	 .loc 2 91 0
 344 000a 0C23     	 movs r3,#12
 345 000c FB63     	 str r3,[r7,#60]
  92:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 346              	 .loc 2 92 0
 347 000e 0C23     	 movs r3,#12
 348 0010 BB63     	 str r3,[r7,#56]
  93:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 349              	 .loc 2 93 0
 350 0012 0023     	 movs r3,#0
 351 0014 7B63     	 str r3,[r7,#52]
  94:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 352              	 .loc 2 94 0
 353 0016 0123     	 movs r3,#1
 354 0018 3B63     	 str r3,[r7,#48]
  95:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 355              	 .loc 2 95 0
 356 001a 0023     	 movs r3,#0
 357 001c 7B61     	 str r3,[r7,#20]
  96:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 358              	 .loc 2 96 0
 359 001e 0023     	 movs r3,#0
 360 0020 FB62     	 str r3,[r7,#44]
  97:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 361              	 .loc 2 97 0
 362 0022 42F21073 	 movw r3,#10000
 363 0026 BB62     	 str r3,[r7,#40]
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 100:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 101:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 102:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 103:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 104:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 105:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 106:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 107:../Libraries/XMCLib/src/xmc_can.c **** 			 
 108:../Libraries/XMCLib/src/xmc_can.c ****   /*
 109:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 110:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 111:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 112:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 113:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 114:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 115:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 116:../Libraries/XMCLib/src/xmc_can.c ****    *
 117:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 118:../Libraries/XMCLib/src/xmc_can.c ****    *
 119:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 120:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 121:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 122:../Libraries/XMCLib/src/xmc_can.c ****    */
 123:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 124:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 364              	 .loc 2 124 0
 365 0028 0123     	 movs r3,#1
 366 002a FB63     	 str r3,[r7,#60]
 367 002c 67E0     	 b .L11
 368              	.L20:
 369              	.LBB2:
 125:../Libraries/XMCLib/src/xmc_can.c ****   {
 126:../Libraries/XMCLib/src/xmc_can.c **** 
 127:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 370              	 .loc 2 127 0
 371 002e 3B68     	 ldr r3,[r7]
 372 0030 1A68     	 ldr r2,[r3]
 373 0032 1346     	 mov r3,r2
 374 0034 9B00     	 lsls r3,r3,#2
 375 0036 1344     	 add r3,r3,r2
 376 0038 5B00     	 lsls r3,r3,#1
 377 003a 1A46     	 mov r2,r3
 378 003c FB6B     	 ldr r3,[r7,#60]
 379 003e B2FBF3F3 	 udiv r3,r2,r3
 380 0042 3B61     	 str r3,[r7,#16]
 128:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 381              	 .loc 2 128 0
 382 0044 3B68     	 ldr r3,[r7]
 383 0046 5B68     	 ldr r3,[r3,#4]
 384 0048 3A69     	 ldr r2,[r7,#16]
 385 004a B2FBF3F3 	 udiv r3,r2,r3
 386 004e 7B62     	 str r3,[r7,#36]
 129:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 130:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 131:../Libraries/XMCLib/src/xmc_can.c **** 
 132:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
 387              	 .loc 2 132 0
 388 0050 796A     	 ldr r1,[r7,#36]
 389 0052 5B4B     	 ldr r3,.L28
 390 0054 A3FB0123 	 umull r2,r3,r3,r1
 391 0058 DA08     	 lsrs r2,r3,#3
 392 005a 1346     	 mov r3,r2
 393 005c 9B00     	 lsls r3,r3,#2
 394 005e 1344     	 add r3,r3,r2
 395 0060 5B00     	 lsls r3,r3,#1
 396 0062 CA1A     	 subs r2,r1,r3
 397 0064 052A     	 cmp r2,#5
 398 0066 09D9     	 bls .L12
 133:../Libraries/XMCLib/src/xmc_can.c ****   {
 134:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 399              	 .loc 2 134 0
 400 0068 7B6A     	 ldr r3,[r7,#36]
 401 006a 554A     	 ldr r2,.L28
 402 006c A2FB0323 	 umull r2,r3,r2,r3
 403 0070 DB08     	 lsrs r3,r3,#3
 404 0072 7B62     	 str r3,[r7,#36]
 135:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud++;
 405              	 .loc 2 135 0
 406 0074 7B6A     	 ldr r3,[r7,#36]
 407 0076 0133     	 adds r3,r3,#1
 408 0078 7B62     	 str r3,[r7,#36]
 409 007a 05E0     	 b .L13
 410              	.L12:
 136:../Libraries/XMCLib/src/xmc_can.c ****   }
 137:../Libraries/XMCLib/src/xmc_can.c ****   else
 138:../Libraries/XMCLib/src/xmc_can.c ****   {
 139:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 411              	 .loc 2 139 0
 412 007c 7B6A     	 ldr r3,[r7,#36]
 413 007e 504A     	 ldr r2,.L28
 414 0080 A2FB0323 	 umull r2,r3,r2,r3
 415 0084 DB08     	 lsrs r3,r3,#3
 416 0086 7B62     	 str r3,[r7,#36]
 417              	.L13:
 140:../Libraries/XMCLib/src/xmc_can.c ****   }
 141:../Libraries/XMCLib/src/xmc_can.c **** 
 142:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 418              	 .loc 2 142 0
 419 0088 7B6A     	 ldr r3,[r7,#36]
 420 008a 002B     	 cmp r3,#0
 421 008c 0AD0     	 beq .L14
 143:../Libraries/XMCLib/src/xmc_can.c ****   {
 144:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 422              	 .loc 2 144 0
 423 008e 7A6A     	 ldr r2,[r7,#36]
 424 0090 1346     	 mov r3,r2
 425 0092 9B00     	 lsls r3,r3,#2
 426 0094 1344     	 add r3,r3,r2
 427 0096 5B00     	 lsls r3,r3,#1
 428 0098 1A46     	 mov r2,r3
 429 009a 3B69     	 ldr r3,[r7,#16]
 430 009c B3FBF2F3 	 udiv r3,r3,r2
 431 00a0 3B62     	 str r3,[r7,#32]
 432 00a2 07E0     	 b .L15
 433              	.L14:
 145:../Libraries/XMCLib/src/xmc_can.c ****   }
 146:../Libraries/XMCLib/src/xmc_can.c ****   else
 147:../Libraries/XMCLib/src/xmc_can.c ****   {
 148:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 434              	 .loc 2 148 0
 435 00a4 3B69     	 ldr r3,[r7,#16]
 436 00a6 464A     	 ldr r2,.L28
 437 00a8 A2FB0323 	 umull r2,r3,r2,r3
 438 00ac DB08     	 lsrs r3,r3,#3
 439 00ae 3B62     	 str r3,[r7,#32]
 149:../Libraries/XMCLib/src/xmc_can.c **** 	temp_tbaud = 1;
 440              	 .loc 2 149 0
 441 00b0 0123     	 movs r3,#1
 442 00b2 7B62     	 str r3,[r7,#36]
 443              	.L15:
 150:../Libraries/XMCLib/src/xmc_can.c ****   }
 151:../Libraries/XMCLib/src/xmc_can.c **** 
 152:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
 444              	 .loc 2 152 0
 445 00b4 3B68     	 ldr r3,[r7]
 446 00b6 5A68     	 ldr r2,[r3,#4]
 447 00b8 3B6A     	 ldr r3,[r7,#32]
 448 00ba 9A42     	 cmp r2,r3
 449 00bc 05D8     	 bhi .L16
 153:../Libraries/XMCLib/src/xmc_can.c ****   {
 154:../Libraries/XMCLib/src/xmc_can.c **** 	error = temp_baudrate - can_bit_time->baudrate;
 450              	 .loc 2 154 0
 451 00be 3B68     	 ldr r3,[r7]
 452 00c0 5B68     	 ldr r3,[r3,#4]
 453 00c2 3A6A     	 ldr r2,[r7,#32]
 454 00c4 D31A     	 subs r3,r2,r3
 455 00c6 FB61     	 str r3,[r7,#28]
 456 00c8 04E0     	 b .L17
 457              	.L16:
 155:../Libraries/XMCLib/src/xmc_can.c ****   }
 156:../Libraries/XMCLib/src/xmc_can.c ****   else
 157:../Libraries/XMCLib/src/xmc_can.c ****   {
 158:../Libraries/XMCLib/src/xmc_can.c **** 	error = can_bit_time->baudrate - temp_baudrate;
 458              	 .loc 2 158 0
 459 00ca 3B68     	 ldr r3,[r7]
 460 00cc 5A68     	 ldr r2,[r3,#4]
 461 00ce 3B6A     	 ldr r3,[r7,#32]
 462 00d0 D31A     	 subs r3,r2,r3
 463 00d2 FB61     	 str r3,[r7,#28]
 464              	.L17:
 159:../Libraries/XMCLib/src/xmc_can.c ****   }
 160:../Libraries/XMCLib/src/xmc_can.c **** 
 161:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
 465              	 .loc 2 161 0
 466 00d4 7B6A     	 ldr r3,[r7,#36]
 467 00d6 142B     	 cmp r3,#20
 468 00d8 0ED8     	 bhi .L18
 469              	 .loc 2 161 0 is_stmt 0 discriminator 1
 470 00da BA6A     	 ldr r2,[r7,#40]
 471 00dc FB69     	 ldr r3,[r7,#28]
 472 00de 9A42     	 cmp r2,r3
 473 00e0 0AD9     	 bls .L18
 162:../Libraries/XMCLib/src/xmc_can.c ****   {
 163:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 474              	 .loc 2 163 0 is_stmt 1
 475 00e2 FB6B     	 ldr r3,[r7,#60]
 476 00e4 7B63     	 str r3,[r7,#52]
 164:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 477              	 .loc 2 164 0
 478 00e6 7B6A     	 ldr r3,[r7,#36]
 479 00e8 FB62     	 str r3,[r7,#44]
 165:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 480              	 .loc 2 165 0
 481 00ea FB69     	 ldr r3,[r7,#28]
 482 00ec BB62     	 str r3,[r7,#40]
 166:../Libraries/XMCLib/src/xmc_can.c **** 
 167:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
 483              	 .loc 2 167 0
 484 00ee FB69     	 ldr r3,[r7,#28]
 485 00f0 B3F57A7F 	 cmp r3,#1000
 486 00f4 00D2     	 bcs .L18
 168:../Libraries/XMCLib/src/xmc_can.c ****     {
 169:../Libraries/XMCLib/src/xmc_can.c ****       break;
 487              	 .loc 2 169 0
 488 00f6 05E0     	 b .L19
 489              	.L18:
 490              	.LBE2:
 124:../Libraries/XMCLib/src/xmc_can.c ****   {
 491              	 .loc 2 124 0 discriminator 2
 492 00f8 FB6B     	 ldr r3,[r7,#60]
 493 00fa 0133     	 adds r3,r3,#1
 494 00fc FB63     	 str r3,[r7,#60]
 495              	.L11:
 124:../Libraries/XMCLib/src/xmc_can.c ****   {
 496              	 .loc 2 124 0 is_stmt 0 discriminator 1
 497 00fe FB6B     	 ldr r3,[r7,#60]
 498 0100 402B     	 cmp r3,#64
 499 0102 94D9     	 bls .L20
 500              	.L19:
 170:../Libraries/XMCLib/src/xmc_can.c ****     }
 171:../Libraries/XMCLib/src/xmc_can.c ****    }
 172:../Libraries/XMCLib/src/xmc_can.c ****   }
 173:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 174:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 501              	 .loc 2 174 0 is_stmt 1
 502 0104 42F21073 	 movw r3,#10000
 503 0108 BB62     	 str r3,[r7,#40]
 175:../Libraries/XMCLib/src/xmc_can.c **** 
 176:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 504              	 .loc 2 176 0
 505 010a 4023     	 movs r3,#64
 506 010c BB63     	 str r3,[r7,#56]
 507 010e 2EE0     	 b .L21
 508              	.L27:
 509              	.LBB3:
 177:../Libraries/XMCLib/src/xmc_can.c ****   {
 178:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 510              	 .loc 2 178 0
 511 0110 BB6B     	 ldr r3,[r7,#56]
 512 0112 0133     	 adds r3,r3,#1
 513 0114 42F21072 	 movw r2,#10000
 514 0118 02FB03F2 	 mul r2,r2,r3
 515 011c FB6A     	 ldr r3,[r7,#44]
 516 011e B2FBF3F3 	 udiv r3,r2,r3
 517 0122 FB60     	 str r3,[r7,#12]
 179:../Libraries/XMCLib/src/xmc_can.c **** 	uint32_t error;
 180:../Libraries/XMCLib/src/xmc_can.c **** 	if (tempSamplePoint >= can_bit_time->sample_point)
 518              	 .loc 2 180 0
 519 0124 3B68     	 ldr r3,[r7]
 520 0126 1B89     	 ldrh r3,[r3,#8]
 521 0128 1A46     	 mov r2,r3
 522 012a FB68     	 ldr r3,[r7,#12]
 523 012c 9A42     	 cmp r2,r3
 524 012e 06D8     	 bhi .L22
 181:../Libraries/XMCLib/src/xmc_can.c **** 	{
 182:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 525              	 .loc 2 182 0
 526 0130 3B68     	 ldr r3,[r7]
 527 0132 1B89     	 ldrh r3,[r3,#8]
 528 0134 1A46     	 mov r2,r3
 529 0136 FB68     	 ldr r3,[r7,#12]
 530 0138 9B1A     	 subs r3,r3,r2
 531 013a BB61     	 str r3,[r7,#24]
 532 013c 05E0     	 b .L23
 533              	.L22:
 183:../Libraries/XMCLib/src/xmc_can.c **** 	}
 184:../Libraries/XMCLib/src/xmc_can.c **** 	else
 185:../Libraries/XMCLib/src/xmc_can.c **** 	{
 186:../Libraries/XMCLib/src/xmc_can.c **** 	  error = can_bit_time->sample_point  - tempSamplePoint;
 534              	 .loc 2 186 0
 535 013e 3B68     	 ldr r3,[r7]
 536 0140 1B89     	 ldrh r3,[r3,#8]
 537 0142 1A46     	 mov r2,r3
 538 0144 FB68     	 ldr r3,[r7,#12]
 539 0146 D31A     	 subs r3,r2,r3
 540 0148 BB61     	 str r3,[r7,#24]
 541              	.L23:
 187:../Libraries/XMCLib/src/xmc_can.c **** 	}
 188:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 542              	 .loc 2 188 0
 543 014a BA6A     	 ldr r2,[r7,#40]
 544 014c BB69     	 ldr r3,[r7,#24]
 545 014e 9A42     	 cmp r2,r3
 546 0150 03D9     	 bls .L24
 189:../Libraries/XMCLib/src/xmc_can.c ****     {
 190:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 547              	 .loc 2 190 0
 548 0152 BB6B     	 ldr r3,[r7,#56]
 549 0154 3B63     	 str r3,[r7,#48]
 191:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 550              	 .loc 2 191 0
 551 0156 BB69     	 ldr r3,[r7,#24]
 552 0158 BB62     	 str r3,[r7,#40]
 553              	.L24:
 192:../Libraries/XMCLib/src/xmc_can.c ****     }
 193:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 554              	 .loc 2 193 0
 555 015a 3B68     	 ldr r3,[r7]
 556 015c 1B89     	 ldrh r3,[r3,#8]
 557 015e 1A46     	 mov r2,r3
 558 0160 FB68     	 ldr r3,[r7,#12]
 559 0162 9A42     	 cmp r2,r3
 560 0164 00D9     	 bls .L25
 194:../Libraries/XMCLib/src/xmc_can.c ****     {
 195:../Libraries/XMCLib/src/xmc_can.c ****       break;
 561              	 .loc 2 195 0
 562 0166 05E0     	 b .L26
 563              	.L25:
 564              	.LBE3:
 176:../Libraries/XMCLib/src/xmc_can.c ****   {
 565              	 .loc 2 176 0 discriminator 2
 566 0168 BB6B     	 ldr r3,[r7,#56]
 567 016a 013B     	 subs r3,r3,#1
 568 016c BB63     	 str r3,[r7,#56]
 569              	.L21:
 176:../Libraries/XMCLib/src/xmc_can.c ****   {
 570              	 .loc 2 176 0 is_stmt 0 discriminator 1
 571 016e BB6B     	 ldr r3,[r7,#56]
 572 0170 022B     	 cmp r3,#2
 573 0172 CDD8     	 bhi .L27
 574              	.L26:
 196:../Libraries/XMCLib/src/xmc_can.c ****     }
 197:../Libraries/XMCLib/src/xmc_can.c ****   }
 198:../Libraries/XMCLib/src/xmc_can.c **** 
 199:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 575              	 .loc 2 199 0 is_stmt 1
 576 0174 FA6A     	 ldr r2,[r7,#44]
 577 0176 3B6B     	 ldr r3,[r7,#48]
 578 0178 D31A     	 subs r3,r2,r3
 579 017a 013B     	 subs r3,r3,#1
 580 017c 7B61     	 str r3,[r7,#20]
 200:../Libraries/XMCLib/src/xmc_can.c **** 
 201:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 581              	 .loc 2 201 0
 582 017e 7868     	 ldr r0,[r7,#4]
 583 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 202:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 203:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 584              	 .loc 2 203 0
 585 0184 7B69     	 ldr r3,[r7,#20]
 586 0186 013B     	 subs r3,r3,#1
 587 0188 1B03     	 lsls r3,r3,#12
 588 018a 03F4E042 	 and r2,r3,#28672
 204:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 589              	 .loc 2 204 0
 590 018e 3B68     	 ldr r3,[r7]
 591 0190 5B89     	 ldrh r3,[r3,#10]
 592 0192 013B     	 subs r3,r3,#1
 593 0194 9B01     	 lsls r3,r3,#6
 594 0196 DBB2     	 uxtb r3,r3
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 595              	 .loc 2 203 0
 596 0198 1A43     	 orrs r2,r2,r3
 205:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 597              	 .loc 2 205 0
 598 019a 3B6B     	 ldr r3,[r7,#48]
 599 019c 013B     	 subs r3,r3,#1
 600 019e 1B02     	 lsls r3,r3,#8
 601 01a0 03F47063 	 and r3,r3,#3840
 204:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 602              	 .loc 2 204 0
 603 01a4 1A43     	 orrs r2,r2,r3
 206:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 604              	 .loc 2 206 0
 605 01a6 7B6B     	 ldr r3,[r7,#52]
 606 01a8 013B     	 subs r3,r3,#1
 607 01aa 03F03F03 	 and r3,r3,#63
 608 01ae 1A43     	 orrs r2,r2,r3
 203:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 609              	 .loc 2 203 0
 610 01b0 7B68     	 ldr r3,[r7,#4]
 611 01b2 1A61     	 str r2,[r3,#16]
 207:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 208:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 612              	 .loc 2 208 0
 613 01b4 7868     	 ldr r0,[r7,#4]
 614 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 209:../Libraries/XMCLib/src/xmc_can.c **** }
 615              	 .loc 2 209 0
 616 01ba 4037     	 adds r7,r7,#64
 617              	.LCFI39:
 618              	 .cfi_def_cfa_offset 8
 619 01bc BD46     	 mov sp,r7
 620              	.LCFI40:
 621              	 .cfi_def_cfa_register 13
 622              	 
 623 01be 80BD     	 pop {r7,pc}
 624              	.L29:
 625              	 .align 2
 626              	.L28:
 627 01c0 CDCCCCCC 	 .word -858993459
 628              	 .cfi_endproc
 629              	.LFE217:
 631              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 632              	 .align 2
 633              	 .global XMC_CAN_AllocateMOtoNodeList
 634              	 .thumb
 635              	 .thumb_func
 637              	XMC_CAN_AllocateMOtoNodeList:
 638              	.LFB218:
 210:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 211:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 212:../Libraries/XMCLib/src/xmc_can.c **** {
 639              	 .loc 2 212 0
 640              	 .cfi_startproc
 641              	 
 642              	 
 643 0000 80B5     	 push {r7,lr}
 644              	.LCFI41:
 645              	 .cfi_def_cfa_offset 8
 646              	 .cfi_offset 7,-8
 647              	 .cfi_offset 14,-4
 648 0002 82B0     	 sub sp,sp,#8
 649              	.LCFI42:
 650              	 .cfi_def_cfa_offset 16
 651 0004 00AF     	 add r7,sp,#0
 652              	.LCFI43:
 653              	 .cfi_def_cfa_register 7
 654 0006 7860     	 str r0,[r7,#4]
 655 0008 0B46     	 mov r3,r1
 656 000a FB70     	 strb r3,[r7,#3]
 657 000c 1346     	 mov r3,r2
 658 000e BB70     	 strb r3,[r7,#2]
 213:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 214:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 659              	 .loc 2 214 0
 660 0010 00BF     	 nop
 661              	.L31:
 662              	 .loc 2 214 0 is_stmt 0 discriminator 1
 663 0012 7868     	 ldr r0,[r7,#4]
 664 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 665 0018 0346     	 mov r3,r0
 666 001a 83F00103 	 eor r3,r3,#1
 667 001e DBB2     	 uxtb r3,r3
 668 0020 002B     	 cmp r3,#0
 669 0022 F6D1     	 bne .L31
 215:../Libraries/XMCLib/src/xmc_can.c ****   {
 216:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 217:../Libraries/XMCLib/src/xmc_can.c ****   };
 218:../Libraries/XMCLib/src/xmc_can.c **** 
 219:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 220:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 670              	 .loc 2 220 0 is_stmt 1
 671 0024 FB78     	 ldrb r3,[r7,#3]
 672 0026 0133     	 adds r3,r3,#1
 673 0028 DBB2     	 uxtb r3,r3
 674 002a BA78     	 ldrb r2,[r7,#2]
 675 002c 7868     	 ldr r0,[r7,#4]
 676 002e 0221     	 movs r1,#2
 677 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 221:../Libraries/XMCLib/src/xmc_can.c **** }
 678              	 .loc 2 221 0
 679 0034 0837     	 adds r7,r7,#8
 680              	.LCFI44:
 681              	 .cfi_def_cfa_offset 8
 682 0036 BD46     	 mov sp,r7
 683              	.LCFI45:
 684              	 .cfi_def_cfa_register 13
 685              	 
 686 0038 80BD     	 pop {r7,pc}
 687              	 .cfi_endproc
 688              	.LFE218:
 690 003a 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 691              	 .align 2
 692              	 .global XMC_CAN_Disable
 693              	 .thumb
 694              	 .thumb_func
 696              	XMC_CAN_Disable:
 697              	.LFB219:
 222:../Libraries/XMCLib/src/xmc_can.c **** 
 223:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 224:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 225:../Libraries/XMCLib/src/xmc_can.c **** {
 698              	 .loc 2 225 0
 699              	 .cfi_startproc
 700              	 
 701              	 
 702 0000 80B5     	 push {r7,lr}
 703              	.LCFI46:
 704              	 .cfi_def_cfa_offset 8
 705              	 .cfi_offset 7,-8
 706              	 .cfi_offset 14,-4
 707 0002 82B0     	 sub sp,sp,#8
 708              	.LCFI47:
 709              	 .cfi_def_cfa_offset 16
 710 0004 00AF     	 add r7,sp,#0
 711              	.LCFI48:
 712              	 .cfi_def_cfa_register 7
 713 0006 7860     	 str r0,[r7,#4]
 226:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 227:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 714              	 .loc 2 227 0
 715 0008 7B68     	 ldr r3,[r7,#4]
 716 000a 0122     	 movs r2,#1
 717 000c 1A60     	 str r2,[r3]
 228:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 229:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 718              	 .loc 2 229 0
 719 000e 0448     	 ldr r0,.L33
 720 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 230:../Libraries/XMCLib/src/xmc_can.c **** #endif
 231:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 232:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 721              	 .loc 2 232 0
 722 0014 0248     	 ldr r0,.L33
 723 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 233:../Libraries/XMCLib/src/xmc_can.c **** #endif
 234:../Libraries/XMCLib/src/xmc_can.c **** }
 724              	 .loc 2 234 0
 725 001a 0837     	 adds r7,r7,#8
 726              	.LCFI49:
 727              	 .cfi_def_cfa_offset 8
 728 001c BD46     	 mov sp,r7
 729              	.LCFI50:
 730              	 .cfi_def_cfa_register 13
 731              	 
 732 001e 80BD     	 pop {r7,pc}
 733              	.L34:
 734              	 .align 2
 735              	.L33:
 736 0020 10000010 	 .word 268435472
 737              	 .cfi_endproc
 738              	.LFE219:
 740              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 741              	 .align 2
 742              	 .global XMC_CAN_Enable
 743              	 .thumb
 744              	 .thumb_func
 746              	XMC_CAN_Enable:
 747              	.LFB220:
 235:../Libraries/XMCLib/src/xmc_can.c **** 
 236:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 237:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 238:../Libraries/XMCLib/src/xmc_can.c **** {
 748              	 .loc 2 238 0
 749              	 .cfi_startproc
 750              	 
 751              	 
 752 0000 80B5     	 push {r7,lr}
 753              	.LCFI51:
 754              	 .cfi_def_cfa_offset 8
 755              	 .cfi_offset 7,-8
 756              	 .cfi_offset 14,-4
 757 0002 82B0     	 sub sp,sp,#8
 758              	.LCFI52:
 759              	 .cfi_def_cfa_offset 16
 760 0004 00AF     	 add r7,sp,#0
 761              	.LCFI53:
 762              	 .cfi_def_cfa_register 7
 763 0006 7860     	 str r0,[r7,#4]
 239:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 240:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 764              	 .loc 2 240 0
 765 0008 0A48     	 ldr r0,.L37
 766 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 241:../Libraries/XMCLib/src/xmc_can.c **** #endif
 242:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 243:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 767              	 .loc 2 243 0
 768 000e 0948     	 ldr r0,.L37
 769 0010 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 244:../Libraries/XMCLib/src/xmc_can.c **** #endif
 245:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 246:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 770              	 .loc 2 246 0
 771 0014 7B68     	 ldr r3,[r7,#4]
 772 0016 1B68     	 ldr r3,[r3]
 773 0018 23F00102 	 bic r2,r3,#1
 774 001c 7B68     	 ldr r3,[r7,#4]
 775 001e 1A60     	 str r2,[r3]
 247:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 776              	 .loc 2 247 0
 777 0020 00BF     	 nop
 778              	.L36:
 779              	 .loc 2 247 0 is_stmt 0 discriminator 1
 780 0022 7B68     	 ldr r3,[r7,#4]
 781 0024 1B68     	 ldr r3,[r3]
 782 0026 03F00203 	 and r3,r3,#2
 783 002a 002B     	 cmp r3,#0
 784 002c F9D1     	 bne .L36
 248:../Libraries/XMCLib/src/xmc_can.c ****   {
 249:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 250:../Libraries/XMCLib/src/xmc_can.c ****   };
 251:../Libraries/XMCLib/src/xmc_can.c **** }
 785              	 .loc 2 251 0 is_stmt 1
 786 002e 0837     	 adds r7,r7,#8
 787              	.LCFI54:
 788              	 .cfi_def_cfa_offset 8
 789 0030 BD46     	 mov sp,r7
 790              	.LCFI55:
 791              	 .cfi_def_cfa_register 13
 792              	 
 793 0032 80BD     	 pop {r7,pc}
 794              	.L38:
 795              	 .align 2
 796              	.L37:
 797 0034 10000010 	 .word 268435472
 798              	 .cfi_endproc
 799              	.LFE220:
 801              	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 802              	 .align 2
 803              	 .global XMC_CAN_GetBaudrateClockFrequency
 804              	 .thumb
 805              	 .thumb_func
 807              	XMC_CAN_GetBaudrateClockFrequency:
 808              	.LFB221:
 252:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 253:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 254:../Libraries/XMCLib/src/xmc_can.c **** {
 809              	 .loc 2 254 0
 810              	 .cfi_startproc
 811              	 
 812              	 
 813 0000 80B5     	 push {r7,lr}
 814              	.LCFI56:
 815              	 .cfi_def_cfa_offset 8
 816              	 .cfi_offset 7,-8
 817              	 .cfi_offset 14,-4
 818 0002 84B0     	 sub sp,sp,#16
 819              	.LCFI57:
 820              	 .cfi_def_cfa_offset 24
 821 0004 00AF     	 add r7,sp,#0
 822              	.LCFI58:
 823              	 .cfi_def_cfa_register 7
 824 0006 7860     	 str r0,[r7,#4]
 255:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency;
 256:../Libraries/XMCLib/src/xmc_can.c **** 
 257:../Libraries/XMCLib/src/xmc_can.c ****   switch(XMC_CAN_GetBaudrateClockSource(obj))
 825              	 .loc 2 257 0
 826 0008 7868     	 ldr r0,[r7,#4]
 827 000a FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockSource
 828 000e 0346     	 mov r3,r0
 829 0010 012B     	 cmp r3,#1
 830 0012 02D0     	 beq .L41
 831 0014 022B     	 cmp r3,#2
 832 0016 04D0     	 beq .L42
 833 0018 07E0     	 b .L45
 834              	.L41:
 258:../Libraries/XMCLib/src/xmc_can.c ****   {
 259:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 260:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 261:../Libraries/XMCLib/src/xmc_can.c ****          frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 835              	 .loc 2 261 0
 836 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 837 001e F860     	 str r0,[r7,#12]
 262:../Libraries/XMCLib/src/xmc_can.c ****          break;
 838              	 .loc 2 262 0
 839 0020 06E0     	 b .L43
 840              	.L42:
 263:../Libraries/XMCLib/src/xmc_can.c **** #else
 264:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 265:../Libraries/XMCLib/src/xmc_can.c ****            frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 266:../Libraries/XMCLib/src/xmc_can.c ****            break;
 267:../Libraries/XMCLib/src/xmc_can.c **** #endif
 268:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 269:../Libraries/XMCLib/src/xmc_can.c ****          frequency = OSCHP_GetFrequency();
 841              	 .loc 2 269 0
 842 0022 FFF7FEFF 	 bl OSCHP_GetFrequency
 843 0026 F860     	 str r0,[r7,#12]
 270:../Libraries/XMCLib/src/xmc_can.c ****          break;
 844              	 .loc 2 270 0
 845 0028 02E0     	 b .L43
 846              	.L45:
 271:../Libraries/XMCLib/src/xmc_can.c **** 
 272:../Libraries/XMCLib/src/xmc_can.c ****     default:
 273:../Libraries/XMCLib/src/xmc_can.c ****          frequency = 0;
 847              	 .loc 2 273 0
 848 002a 0023     	 movs r3,#0
 849 002c FB60     	 str r3,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_can.c ****          break;
 850              	 .loc 2 274 0
 851 002e 00BF     	 nop
 852              	.L43:
 275:../Libraries/XMCLib/src/xmc_can.c ****   }
 276:../Libraries/XMCLib/src/xmc_can.c **** 
 277:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 853              	 .loc 2 277 0
 854 0030 FB68     	 ldr r3,[r7,#12]
 278:../Libraries/XMCLib/src/xmc_can.c **** }
 855              	 .loc 2 278 0
 856 0032 1846     	 mov r0,r3
 857 0034 1037     	 adds r7,r7,#16
 858              	.LCFI59:
 859              	 .cfi_def_cfa_offset 8
 860 0036 BD46     	 mov sp,r7
 861              	.LCFI60:
 862              	 .cfi_def_cfa_register 13
 863              	 
 864 0038 80BD     	 pop {r7,pc}
 865              	 .cfi_endproc
 866              	.LFE221:
 868 003a 00BF     	 .section .text.XMC_CAN_Init,"ax",%progbits
 869              	 .align 2
 870              	 .global XMC_CAN_Init
 871              	 .thumb
 872              	 .thumb_func
 874              	XMC_CAN_Init:
 875              	.LFB222:
 279:../Libraries/XMCLib/src/xmc_can.c **** 
 280:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 281:../Libraries/XMCLib/src/xmc_can.c **** {
 876              	 .loc 2 281 0
 877              	 .cfi_startproc
 878              	 
 879              	 
 880 0000 80B5     	 push {r7,lr}
 881              	.LCFI61:
 882              	 .cfi_def_cfa_offset 8
 883              	 .cfi_offset 7,-8
 884              	 .cfi_offset 14,-4
 885 0002 8EB0     	 sub sp,sp,#56
 886              	.LCFI62:
 887              	 .cfi_def_cfa_offset 64
 888 0004 00AF     	 add r7,sp,#0
 889              	.LCFI63:
 890              	 .cfi_def_cfa_register 7
 891 0006 F860     	 str r0,[r7,#12]
 892 0008 0B46     	 mov r3,r1
 893 000a 7A60     	 str r2,[r7,#4]
 894 000c FB72     	 strb r3,[r7,#11]
 282:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 283:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 284:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 285:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 286:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 287:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 288:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 289:../Libraries/XMCLib/src/xmc_can.c **** 
 290:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 291:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 292:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 895              	 .loc 2 292 0
 896 000e F868     	 ldr r0,[r7,#12]
 897 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 293:../Libraries/XMCLib/src/xmc_can.c **** 
 294:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 898              	 .loc 2 294 0
 899 0014 FB7A     	 ldrb r3,[r7,#11]
 900 0016 F868     	 ldr r0,[r7,#12]
 901 0018 1946     	 mov r1,r3
 902 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 295:../Libraries/XMCLib/src/xmc_can.c **** 
 296:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 903              	 .loc 2 296 0
 904 001e F868     	 ldr r0,[r7,#12]
 905 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 906 0024 7863     	 str r0,[r7,#52]
 297:../Libraries/XMCLib/src/xmc_can.c **** 
 298:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 299:../Libraries/XMCLib/src/xmc_can.c **** 
 300:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 301:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 907              	 .loc 2 301 0
 908 0026 7A6B     	 ldr r2,[r7,#52]
 909 0028 7B68     	 ldr r3,[r7,#4]
 910 002a B2FBF3F3 	 udiv r3,r2,r3
 911 002e C3F58063 	 rsb r3,r3,#1024
 912 0032 0020     	 movs r0,#0
 913 0034 1946     	 mov r1,r3
 914 0036 FFF7FEFF 	 bl max
 915 003a 0346     	 mov r3,r0
 916 003c 1846     	 mov r0,r3
 917 003e 40F2FF31 	 movw r1,#1023
 918 0042 FFF7FEFF 	 bl min
 919 0046 3863     	 str r0,[r7,#48]
 302:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 920              	 .loc 2 302 0
 921 0048 3B6B     	 ldr r3,[r7,#48]
 922 004a C3F58063 	 rsb r3,r3,#1024
 923 004e 7A6B     	 ldr r2,[r7,#52]
 924 0050 B2FBF3F3 	 udiv r3,r2,r3
 925 0054 FB62     	 str r3,[r7,#44]
 303:../Libraries/XMCLib/src/xmc_can.c **** 
 304:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 305:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 926              	 .loc 2 305 0
 927 0056 7B68     	 ldr r3,[r7,#4]
 928 0058 9B09     	 lsrs r3,r3,#6
 929 005a BB62     	 str r3,[r7,#40]
 306:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 930              	 .loc 2 306 0
 931 005c 7B6B     	 ldr r3,[r7,#52]
 932 005e 9B09     	 lsrs r3,r3,#6
 933 0060 7B62     	 str r3,[r7,#36]
 307:../Libraries/XMCLib/src/xmc_can.c **** 
 308:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 934              	 .loc 2 308 0
 935 0062 BB6A     	 ldr r3,[r7,#40]
 936 0064 9A02     	 lsls r2,r3,#10
 937 0066 7B6A     	 ldr r3,[r7,#36]
 938 0068 B2FBF3F3 	 udiv r3,r2,r3
 939 006c 1846     	 mov r0,r3
 940 006e 40F2FF31 	 movw r1,#1023
 941 0072 FFF7FEFF 	 bl min
 942 0076 3862     	 str r0,[r7,#32]
 309:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 943              	 .loc 2 309 0
 944 0078 7B6A     	 ldr r3,[r7,#36]
 945 007a 3A6A     	 ldr r2,[r7,#32]
 946 007c 02FB03F3 	 mul r3,r2,r3
 947 0080 9B0A     	 lsrs r3,r3,#10
 948 0082 FB61     	 str r3,[r7,#28]
 310:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 949              	 .loc 2 310 0
 950 0084 FB69     	 ldr r3,[r7,#28]
 951 0086 9B01     	 lsls r3,r3,#6
 952 0088 FB61     	 str r3,[r7,#28]
 311:../Libraries/XMCLib/src/xmc_can.c **** 
 312:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 953              	 .loc 2 312 0
 954 008a 7A68     	 ldr r2,[r7,#4]
 955 008c FB6A     	 ldr r3,[r7,#44]
 956 008e D21A     	 subs r2,r2,r3
 957 0090 7968     	 ldr r1,[r7,#4]
 958 0092 FB69     	 ldr r3,[r7,#28]
 959 0094 CB1A     	 subs r3,r1,r3
 960 0096 9A42     	 cmp r2,r3
 961 0098 94BF     	 ite ls
 962 009a 0123     	 movls r3,#1
 963 009c 0023     	 movhi r3,#0
 964 009e FB76     	 strb r3,[r7,#27]
 313:../Libraries/XMCLib/src/xmc_can.c **** 
 314:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 965              	 .loc 2 314 0
 966 00a0 FB7E     	 ldrb r3,[r7,#27]
 967 00a2 002B     	 cmp r3,#0
 968 00a4 01D0     	 beq .L47
 969              	 .loc 2 314 0 is_stmt 0 discriminator 1
 970 00a6 3B6B     	 ldr r3,[r7,#48]
 971 00a8 00E0     	 b .L48
 972              	.L47:
 973              	 .loc 2 314 0 discriminator 2
 974 00aa 3B6A     	 ldr r3,[r7,#32]
 975              	.L48:
 976              	 .loc 2 314 0 discriminator 4
 977 00ac 7B61     	 str r3,[r7,#20]
 315:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 978              	 .loc 2 315 0 is_stmt 1 discriminator 4
 979 00ae FB7E     	 ldrb r3,[r7,#27]
 980 00b0 002B     	 cmp r3,#0
 981 00b2 01D0     	 beq .L49
 982              	 .loc 2 315 0 is_stmt 0 discriminator 1
 983 00b4 0123     	 movs r3,#1
 984 00b6 00E0     	 b .L50
 985              	.L49:
 986              	 .loc 2 315 0 discriminator 2
 987 00b8 0223     	 movs r3,#2
 988              	.L50:
 989              	 .loc 2 315 0 discriminator 4
 990 00ba FB74     	 strb r3,[r7,#19]
 316:../Libraries/XMCLib/src/xmc_can.c **** 
 317:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 991              	 .loc 2 317 0 is_stmt 1 discriminator 4
 992 00bc FB68     	 ldr r3,[r7,#12]
 993 00be DB68     	 ldr r3,[r3,#12]
 994 00c0 23F44343 	 bic r3,r3,#49920
 995 00c4 23F0FF03 	 bic r3,r3,#255
 996 00c8 FA68     	 ldr r2,[r7,#12]
 997 00ca D360     	 str r3,[r2,#12]
 318:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 998              	 .loc 2 318 0 discriminator 4
 999 00cc FB68     	 ldr r3,[r7,#12]
 1000 00ce DA68     	 ldr r2,[r3,#12]
 1001 00d0 FB7C     	 ldrb r3,[r7,#19]
 1002 00d2 9903     	 lsls r1,r3,#14
 1003 00d4 7B69     	 ldr r3,[r7,#20]
 1004 00d6 0B43     	 orrs r3,r3,r1
 1005 00d8 1A43     	 orrs r2,r2,r3
 1006 00da FB68     	 ldr r3,[r7,#12]
 1007 00dc DA60     	 str r2,[r3,#12]
 319:../Libraries/XMCLib/src/xmc_can.c **** 
 320:../Libraries/XMCLib/src/xmc_can.c **** }
 1008              	 .loc 2 320 0 discriminator 4
 1009 00de 3837     	 adds r7,r7,#56
 1010              	.LCFI64:
 1011              	 .cfi_def_cfa_offset 8
 1012 00e0 BD46     	 mov sp,r7
 1013              	.LCFI65:
 1014              	 .cfi_def_cfa_register 13
 1015              	 
 1016 00e2 80BD     	 pop {r7,pc}
 1017              	 .cfi_endproc
 1018              	.LFE222:
 1020              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1021              	 .align 2
 1022              	 .global XMC_CAN_SetBaudrateClockSource
 1023              	 .thumb
 1024              	 .thumb_func
 1026              	XMC_CAN_SetBaudrateClockSource:
 1027              	.LFB223:
 321:../Libraries/XMCLib/src/xmc_can.c **** 
 322:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source)
 323:../Libraries/XMCLib/src/xmc_can.c **** {
 1028              	 .loc 2 323 0
 1029              	 .cfi_startproc
 1030              	 
 1031              	 
 1032              	 
 1033 0000 80B4     	 push {r7}
 1034              	.LCFI66:
 1035              	 .cfi_def_cfa_offset 4
 1036              	 .cfi_offset 7,-4
 1037 0002 83B0     	 sub sp,sp,#12
 1038              	.LCFI67:
 1039              	 .cfi_def_cfa_offset 16
 1040 0004 00AF     	 add r7,sp,#0
 1041              	.LCFI68:
 1042              	 .cfi_def_cfa_register 7
 1043 0006 7860     	 str r0,[r7,#4]
 1044 0008 0B46     	 mov r3,r1
 1045 000a FB70     	 strb r3,[r7,#3]
 324:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 1046              	 .loc 2 324 0
 1047 000c 7B68     	 ldr r3,[r7,#4]
 1048 000e D3F8C831 	 ldr r3,[r3,#456]
 1049 0012 23F00F02 	 bic r2,r3,#15
 1050 0016 FB78     	 ldrb r3,[r7,#3]
 1051 0018 1A43     	 orrs r2,r2,r3
 1052 001a 7B68     	 ldr r3,[r7,#4]
 1053 001c C3F8C821 	 str r2,[r3,#456]
 325:../Libraries/XMCLib/src/xmc_can.c **** }
 1054              	 .loc 2 325 0
 1055 0020 0C37     	 adds r7,r7,#12
 1056              	.LCFI69:
 1057              	 .cfi_def_cfa_offset 4
 1058 0022 BD46     	 mov sp,r7
 1059              	.LCFI70:
 1060              	 .cfi_def_cfa_register 13
 1061              	 
 1062 0024 5DF8047B 	 ldr r7,[sp],#4
 1063              	.LCFI71:
 1064              	 .cfi_restore 7
 1065              	 .cfi_def_cfa_offset 0
 1066 0028 7047     	 bx lr
 1067              	 .cfi_endproc
 1068              	.LFE223:
 1070 002a 00BF     	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1071              	 .align 2
 1072              	 .global XMC_CAN_GetBaudrateClockSource
 1073              	 .thumb
 1074              	 .thumb_func
 1076              	XMC_CAN_GetBaudrateClockSource:
 1077              	.LFB224:
 326:../Libraries/XMCLib/src/xmc_can.c **** 
 327:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 328:../Libraries/XMCLib/src/xmc_can.c **** {
 1078              	 .loc 2 328 0
 1079              	 .cfi_startproc
 1080              	 
 1081              	 
 1082              	 
 1083 0000 80B4     	 push {r7}
 1084              	.LCFI72:
 1085              	 .cfi_def_cfa_offset 4
 1086              	 .cfi_offset 7,-4
 1087 0002 83B0     	 sub sp,sp,#12
 1088              	.LCFI73:
 1089              	 .cfi_def_cfa_offset 16
 1090 0004 00AF     	 add r7,sp,#0
 1091              	.LCFI74:
 1092              	 .cfi_def_cfa_register 7
 1093 0006 7860     	 str r0,[r7,#4]
 329:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 1094              	 .loc 2 329 0
 1095 0008 7B68     	 ldr r3,[r7,#4]
 1096 000a D3F8C831 	 ldr r3,[r3,#456]
 1097 000e DBB2     	 uxtb r3,r3
 1098 0010 03F00F03 	 and r3,r3,#15
 1099 0014 DBB2     	 uxtb r3,r3
 330:../Libraries/XMCLib/src/xmc_can.c **** }
 1100              	 .loc 2 330 0
 1101 0016 1846     	 mov r0,r3
 1102 0018 0C37     	 adds r7,r7,#12
 1103              	.LCFI75:
 1104              	 .cfi_def_cfa_offset 4
 1105 001a BD46     	 mov sp,r7
 1106              	.LCFI76:
 1107              	 .cfi_def_cfa_register 13
 1108              	 
 1109 001c 5DF8047B 	 ldr r7,[sp],#4
 1110              	.LCFI77:
 1111              	 .cfi_restore 7
 1112              	 .cfi_def_cfa_offset 0
 1113 0020 7047     	 bx lr
 1114              	 .cfi_endproc
 1115              	.LFE224:
 1117 0022 00BF     	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1118              	 .align 2
 1119              	 .global XMC_CAN_MO_SetIdentifier
 1120              	 .thumb
 1121              	 .thumb_func
 1123              	XMC_CAN_MO_SetIdentifier:
 1124              	.LFB225:
 331:../Libraries/XMCLib/src/xmc_can.c **** 
 332:../Libraries/XMCLib/src/xmc_can.c **** #else
 333:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 334:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 335:../Libraries/XMCLib/src/xmc_can.c **** {
 336:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 337:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 338:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 339:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 340:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 341:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 342:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 343:../Libraries/XMCLib/src/xmc_can.c **** 
 344:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 345:../Libraries/XMCLib/src/xmc_can.c **** 
 346:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 347:../Libraries/XMCLib/src/xmc_can.c **** 
 348:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 349:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 350:../Libraries/XMCLib/src/xmc_can.c **** 
 351:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 352:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 353:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 354:../Libraries/XMCLib/src/xmc_can.c **** 
 355:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 356:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 357:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 358:../Libraries/XMCLib/src/xmc_can.c **** 
 359:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 360:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 361:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 362:../Libraries/XMCLib/src/xmc_can.c **** 
 363:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 364:../Libraries/XMCLib/src/xmc_can.c **** 
 365:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 366:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 367:../Libraries/XMCLib/src/xmc_can.c **** 
 368:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 369:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 370:../Libraries/XMCLib/src/xmc_can.c **** }
 371:../Libraries/XMCLib/src/xmc_can.c **** #endif
 372:../Libraries/XMCLib/src/xmc_can.c **** 
 373:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 374:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 375:../Libraries/XMCLib/src/xmc_can.c **** {
 1125              	 .loc 2 375 0
 1126              	 .cfi_startproc
 1127              	 
 1128              	 
 1129              	 
 1130 0000 80B4     	 push {r7}
 1131              	.LCFI78:
 1132              	 .cfi_def_cfa_offset 4
 1133              	 .cfi_offset 7,-4
 1134 0002 83B0     	 sub sp,sp,#12
 1135              	.LCFI79:
 1136              	 .cfi_def_cfa_offset 16
 1137 0004 00AF     	 add r7,sp,#0
 1138              	.LCFI80:
 1139              	 .cfi_def_cfa_register 7
 1140 0006 7860     	 str r0,[r7,#4]
 1141 0008 3960     	 str r1,[r7]
 376:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1142              	 .loc 2 376 0
 1143 000a 7B68     	 ldr r3,[r7,#4]
 1144 000c 1B68     	 ldr r3,[r3]
 1145 000e 9B69     	 ldr r3,[r3,#24]
 1146 0010 03F00053 	 and r3,r3,#536870912
 1147 0014 002B     	 cmp r3,#0
 1148 0016 0DD1     	 bne .L55
 377:../Libraries/XMCLib/src/xmc_can.c ****   {
 378:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1149              	 .loc 2 378 0
 1150 0018 7B68     	 ldr r3,[r7,#4]
 1151 001a 1B68     	 ldr r3,[r3]
 1152 001c 7A68     	 ldr r2,[r7,#4]
 1153 001e 1268     	 ldr r2,[r2]
 1154 0020 9269     	 ldr r2,[r2,#24]
 1155 0022 02F06041 	 and r1,r2,#-536870912
 379:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 1156              	 .loc 2 379 0
 1157 0026 3A68     	 ldr r2,[r7]
 1158 0028 9204     	 lsls r2,r2,#18
 1159 002a 22F06042 	 bic r2,r2,#-536870912
 378:../Libraries/XMCLib/src/xmc_can.c **** 	                           ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR_
 1160              	 .loc 2 378 0
 1161 002e 0A43     	 orrs r2,r2,r1
 1162 0030 9A61     	 str r2,[r3,#24]
 1163 0032 0BE0     	 b .L56
 1164              	.L55:
 380:../Libraries/XMCLib/src/xmc_can.c ****   }
 381:../Libraries/XMCLib/src/xmc_can.c ****   else
 382:../Libraries/XMCLib/src/xmc_can.c ****   {
 383:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1165              	 .loc 2 383 0
 1166 0034 7B68     	 ldr r3,[r7,#4]
 1167 0036 1B68     	 ldr r3,[r3]
 1168 0038 7A68     	 ldr r2,[r7,#4]
 1169 003a 1268     	 ldr r2,[r2]
 1170 003c 9269     	 ldr r2,[r2,#24]
 1171 003e 02F06041 	 and r1,r2,#-536870912
 384:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1172              	 .loc 2 384 0
 1173 0042 3A68     	 ldr r2,[r7]
 1174 0044 22F06042 	 bic r2,r2,#-536870912
 383:../Libraries/XMCLib/src/xmc_can.c ****     		                   (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1175              	 .loc 2 383 0
 1176 0048 0A43     	 orrs r2,r2,r1
 1177 004a 9A61     	 str r2,[r3,#24]
 1178              	.L56:
 385:../Libraries/XMCLib/src/xmc_can.c ****   }
 386:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1179              	 .loc 2 386 0
 1180 004c 3B68     	 ldr r3,[r7]
 1181 004e 23F06041 	 bic r1,r3,#-536870912
 1182 0052 7A68     	 ldr r2,[r7,#4]
 1183 0054 5368     	 ldr r3,[r2,#4]
 1184 0056 61F31C03 	 bfi r3,r1,#0,#29
 1185 005a 5360     	 str r3,[r2,#4]
 387:../Libraries/XMCLib/src/xmc_can.c **** }
 1186              	 .loc 2 387 0
 1187 005c 0C37     	 adds r7,r7,#12
 1188              	.LCFI81:
 1189              	 .cfi_def_cfa_offset 4
 1190 005e BD46     	 mov sp,r7
 1191              	.LCFI82:
 1192              	 .cfi_def_cfa_register 13
 1193              	 
 1194 0060 5DF8047B 	 ldr r7,[sp],#4
 1195              	.LCFI83:
 1196              	 .cfi_restore 7
 1197              	 .cfi_def_cfa_offset 0
 1198 0064 7047     	 bx lr
 1199              	 .cfi_endproc
 1200              	.LFE225:
 1202 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1203              	 .align 2
 1204              	 .global XMC_CAN_MO_GetIdentifier
 1205              	 .thumb
 1206              	 .thumb_func
 1208              	XMC_CAN_MO_GetIdentifier:
 1209              	.LFB226:
 388:../Libraries/XMCLib/src/xmc_can.c **** 
 389:../Libraries/XMCLib/src/xmc_can.c **** 
 390:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 391:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 392:../Libraries/XMCLib/src/xmc_can.c **** {
 1210              	 .loc 2 392 0
 1211              	 .cfi_startproc
 1212              	 
 1213              	 
 1214              	 
 1215 0000 80B4     	 push {r7}
 1216              	.LCFI84:
 1217              	 .cfi_def_cfa_offset 4
 1218              	 .cfi_offset 7,-4
 1219 0002 85B0     	 sub sp,sp,#20
 1220              	.LCFI85:
 1221              	 .cfi_def_cfa_offset 24
 1222 0004 00AF     	 add r7,sp,#0
 1223              	.LCFI86:
 1224              	 .cfi_def_cfa_register 7
 1225 0006 7860     	 str r0,[r7,#4]
 393:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 394:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1226              	 .loc 2 394 0
 1227 0008 7B68     	 ldr r3,[r7,#4]
 1228 000a 1B68     	 ldr r3,[r3]
 1229 000c 9B69     	 ldr r3,[r3,#24]
 1230 000e 03F00053 	 and r3,r3,#536870912
 1231 0012 002B     	 cmp r3,#0
 1232 0014 07D1     	 bne .L58
 395:../Libraries/XMCLib/src/xmc_can.c ****   {
 396:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STDI
 1233              	 .loc 2 396 0
 1234 0016 7B68     	 ldr r3,[r7,#4]
 1235 0018 1B68     	 ldr r3,[r3]
 1236 001a 9B69     	 ldr r3,[r3,#24]
 1237 001c 23F06043 	 bic r3,r3,#-536870912
 1238 0020 9B0C     	 lsrs r3,r3,#18
 1239 0022 FB60     	 str r3,[r7,#12]
 1240 0024 05E0     	 b .L59
 1241              	.L58:
 397:../Libraries/XMCLib/src/xmc_can.c ****   }
 398:../Libraries/XMCLib/src/xmc_can.c ****   else
 399:../Libraries/XMCLib/src/xmc_can.c ****   {
 400:../Libraries/XMCLib/src/xmc_can.c **** 	identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1242              	 .loc 2 400 0
 1243 0026 7B68     	 ldr r3,[r7,#4]
 1244 0028 1B68     	 ldr r3,[r3]
 1245 002a 9B69     	 ldr r3,[r3,#24]
 1246 002c 23F06043 	 bic r3,r3,#-536870912
 1247 0030 FB60     	 str r3,[r7,#12]
 1248              	.L59:
 401:../Libraries/XMCLib/src/xmc_can.c ****   }
 402:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1249              	 .loc 2 402 0
 1250 0032 FB68     	 ldr r3,[r7,#12]
 403:../Libraries/XMCLib/src/xmc_can.c **** }
 1251              	 .loc 2 403 0
 1252 0034 1846     	 mov r0,r3
 1253 0036 1437     	 adds r7,r7,#20
 1254              	.LCFI87:
 1255              	 .cfi_def_cfa_offset 4
 1256 0038 BD46     	 mov sp,r7
 1257              	.LCFI88:
 1258              	 .cfi_def_cfa_register 13
 1259              	 
 1260 003a 5DF8047B 	 ldr r7,[sp],#4
 1261              	.LCFI89:
 1262              	 .cfi_restore 7
 1263              	 .cfi_def_cfa_offset 0
 1264 003e 7047     	 bx lr
 1265              	 .cfi_endproc
 1266              	.LFE226:
 1268              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1269              	 .align 2
 1270              	 .global XMC_CAN_MO_GetAcceptanceMask
 1271              	 .thumb
 1272              	 .thumb_func
 1274              	XMC_CAN_MO_GetAcceptanceMask:
 1275              	.LFB227:
 404:../Libraries/XMCLib/src/xmc_can.c **** 
 405:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 406:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 407:../Libraries/XMCLib/src/xmc_can.c **** {
 1276              	 .loc 2 407 0
 1277              	 .cfi_startproc
 1278              	 
 1279              	 
 1280              	 
 1281 0000 80B4     	 push {r7}
 1282              	.LCFI90:
 1283              	 .cfi_def_cfa_offset 4
 1284              	 .cfi_offset 7,-4
 1285 0002 85B0     	 sub sp,sp,#20
 1286              	.LCFI91:
 1287              	 .cfi_def_cfa_offset 24
 1288 0004 00AF     	 add r7,sp,#0
 1289              	.LCFI92:
 1290              	 .cfi_def_cfa_register 7
 1291 0006 7860     	 str r0,[r7,#4]
 408:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 409:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1292              	 .loc 2 409 0
 1293 0008 7B68     	 ldr r3,[r7,#4]
 1294 000a 1B68     	 ldr r3,[r3]
 1295 000c DB68     	 ldr r3,[r3,#12]
 1296 000e 03F00053 	 and r3,r3,#536870912
 1297 0012 002B     	 cmp r3,#0
 1298 0014 0ED1     	 bne .L62
 410:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1299              	 .loc 2 410 0
 1300 0016 7B68     	 ldr r3,[r7,#4]
 1301 0018 1B68     	 ldr r3,[r3]
 1302 001a 9B69     	 ldr r3,[r3,#24]
 1303 001c 03F00053 	 and r3,r3,#536870912
 1304 0020 002B     	 cmp r3,#0
 1305 0022 07D1     	 bne .L62
 411:../Libraries/XMCLib/src/xmc_can.c ****   {
 412:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1306              	 .loc 2 412 0
 1307 0024 7B68     	 ldr r3,[r7,#4]
 1308 0026 1B68     	 ldr r3,[r3]
 1309 0028 DB68     	 ldr r3,[r3,#12]
 1310 002a 23F06043 	 bic r3,r3,#-536870912
 1311 002e 9B0C     	 lsrs r3,r3,#18
 1312 0030 FB60     	 str r3,[r7,#12]
 1313 0032 05E0     	 b .L63
 1314              	.L62:
 413:../Libraries/XMCLib/src/xmc_can.c ****   }
 414:../Libraries/XMCLib/src/xmc_can.c ****   else
 415:../Libraries/XMCLib/src/xmc_can.c ****   {
 416:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1315              	 .loc 2 416 0
 1316 0034 7B68     	 ldr r3,[r7,#4]
 1317 0036 1B68     	 ldr r3,[r3]
 1318 0038 DB68     	 ldr r3,[r3,#12]
 1319 003a 23F06043 	 bic r3,r3,#-536870912
 1320 003e FB60     	 str r3,[r7,#12]
 1321              	.L63:
 417:../Libraries/XMCLib/src/xmc_can.c ****   }
 418:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1322              	 .loc 2 418 0
 1323 0040 FB68     	 ldr r3,[r7,#12]
 419:../Libraries/XMCLib/src/xmc_can.c **** }
 1324              	 .loc 2 419 0
 1325 0042 1846     	 mov r0,r3
 1326 0044 1437     	 adds r7,r7,#20
 1327              	.LCFI93:
 1328              	 .cfi_def_cfa_offset 4
 1329 0046 BD46     	 mov sp,r7
 1330              	.LCFI94:
 1331              	 .cfi_def_cfa_register 13
 1332              	 
 1333 0048 5DF8047B 	 ldr r7,[sp],#4
 1334              	.LCFI95:
 1335              	 .cfi_restore 7
 1336              	 .cfi_def_cfa_offset 0
 1337 004c 7047     	 bx lr
 1338              	 .cfi_endproc
 1339              	.LFE227:
 1341 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1342              	 .align 2
 1343              	 .global XMC_CAN_MO_SetAcceptanceMask
 1344              	 .thumb
 1345              	 .thumb_func
 1347              	XMC_CAN_MO_SetAcceptanceMask:
 1348              	.LFB228:
 420:../Libraries/XMCLib/src/xmc_can.c **** 
 421:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 422:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 423:../Libraries/XMCLib/src/xmc_can.c **** {
 1349              	 .loc 2 423 0
 1350              	 .cfi_startproc
 1351              	 
 1352              	 
 1353              	 
 1354 0000 80B4     	 push {r7}
 1355              	.LCFI96:
 1356              	 .cfi_def_cfa_offset 4
 1357              	 .cfi_offset 7,-4
 1358 0002 83B0     	 sub sp,sp,#12
 1359              	.LCFI97:
 1360              	 .cfi_def_cfa_offset 16
 1361 0004 00AF     	 add r7,sp,#0
 1362              	.LCFI98:
 1363              	 .cfi_def_cfa_register 7
 1364 0006 7860     	 str r0,[r7,#4]
 1365 0008 3960     	 str r1,[r7]
 424:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1366              	 .loc 2 424 0
 1367 000a 7B68     	 ldr r3,[r7,#4]
 1368 000c 1B68     	 ldr r3,[r3]
 1369 000e DB68     	 ldr r3,[r3,#12]
 1370 0010 03F00053 	 and r3,r3,#536870912
 1371 0014 002B     	 cmp r3,#0
 1372 0016 12D1     	 bne .L66
 425:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1373              	 .loc 2 425 0
 1374 0018 7B68     	 ldr r3,[r7,#4]
 1375 001a 1B68     	 ldr r3,[r3]
 1376 001c 9B69     	 ldr r3,[r3,#24]
 1377 001e 03F00053 	 and r3,r3,#536870912
 1378 0022 002B     	 cmp r3,#0
 1379 0024 0BD1     	 bne .L66
 426:../Libraries/XMCLib/src/xmc_can.c ****   {
 427:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1380              	 .loc 2 427 0
 1381 0026 7B68     	 ldr r3,[r7,#4]
 1382 0028 1B68     	 ldr r3,[r3]
 1383 002a 7A68     	 ldr r2,[r7,#4]
 1384 002c 1268     	 ldr r2,[r2]
 1385 002e D268     	 ldr r2,[r2,#12]
 1386 0030 02F06041 	 and r1,r2,#-536870912
 428:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1387              	 .loc 2 428 0
 1388 0034 3A68     	 ldr r2,[r7]
 1389 0036 9204     	 lsls r2,r2,#18
 427:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1390              	 .loc 2 427 0
 1391 0038 0A43     	 orrs r2,r2,r1
 1392 003a DA60     	 str r2,[r3,#12]
 1393 003c 0BE0     	 b .L67
 1394              	.L66:
 429:../Libraries/XMCLib/src/xmc_can.c ****   }
 430:../Libraries/XMCLib/src/xmc_can.c ****   else
 431:../Libraries/XMCLib/src/xmc_can.c ****   {
 432:../Libraries/XMCLib/src/xmc_can.c **** 	can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1395              	 .loc 2 432 0
 1396 003e 7B68     	 ldr r3,[r7,#4]
 1397 0040 1B68     	 ldr r3,[r3]
 1398 0042 7A68     	 ldr r2,[r7,#4]
 1399 0044 1268     	 ldr r2,[r2]
 1400 0046 D268     	 ldr r2,[r2,#12]
 1401 0048 02F06041 	 and r1,r2,#-536870912
 433:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1402              	 .loc 2 433 0
 1403 004c 3A68     	 ldr r2,[r7]
 1404 004e 22F06042 	 bic r2,r2,#-536870912
 432:../Libraries/XMCLib/src/xmc_can.c **** 							    (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1405              	 .loc 2 432 0
 1406 0052 0A43     	 orrs r2,r2,r1
 1407 0054 DA60     	 str r2,[r3,#12]
 1408              	.L67:
 434:../Libraries/XMCLib/src/xmc_can.c ****   }
 435:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1409              	 .loc 2 435 0
 1410 0056 3B68     	 ldr r3,[r7]
 1411 0058 23F06041 	 bic r1,r3,#-536870912
 1412 005c 7A68     	 ldr r2,[r7,#4]
 1413 005e 9368     	 ldr r3,[r2,#8]
 1414 0060 61F31C03 	 bfi r3,r1,#0,#29
 1415 0064 9360     	 str r3,[r2,#8]
 436:../Libraries/XMCLib/src/xmc_can.c **** }
 1416              	 .loc 2 436 0
 1417 0066 0C37     	 adds r7,r7,#12
 1418              	.LCFI99:
 1419              	 .cfi_def_cfa_offset 4
 1420 0068 BD46     	 mov sp,r7
 1421              	.LCFI100:
 1422              	 .cfi_def_cfa_register 13
 1423              	 
 1424 006a 5DF8047B 	 ldr r7,[sp],#4
 1425              	.LCFI101:
 1426              	 .cfi_restore 7
 1427              	 .cfi_def_cfa_offset 0
 1428 006e 7047     	 bx lr
 1429              	 .cfi_endproc
 1430              	.LFE228:
 1432              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1433              	 .align 2
 1434              	 .global XMC_CAN_MO_Config
 1435              	 .thumb
 1436              	 .thumb_func
 1438              	XMC_CAN_MO_Config:
 1439              	.LFB229:
 437:../Libraries/XMCLib/src/xmc_can.c **** 
 438:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 439:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 440:../Libraries/XMCLib/src/xmc_can.c **** {
 1440              	 .loc 2 440 0
 1441              	 .cfi_startproc
 1442              	 
 1443              	 
 1444 0000 80B5     	 push {r7,lr}
 1445              	.LCFI102:
 1446              	 .cfi_def_cfa_offset 8
 1447              	 .cfi_offset 7,-8
 1448              	 .cfi_offset 14,-4
 1449 0002 86B0     	 sub sp,sp,#24
 1450              	.LCFI103:
 1451              	 .cfi_def_cfa_offset 32
 1452 0004 00AF     	 add r7,sp,#0
 1453              	.LCFI104:
 1454              	 .cfi_def_cfa_register 7
 1455 0006 7860     	 str r0,[r7,#4]
 441:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 442:../Libraries/XMCLib/src/xmc_can.c ****   
 443:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 444:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 1456              	 .loc 2 444 0
 1457 0008 7B68     	 ldr r3,[r7,#4]
 1458 000a 1B68     	 ldr r3,[r3]
 1459 000c 03F13843 	 add r3,r3,#-1207959552
 1460 0010 A3F5A833 	 sub r3,r3,#86016
 1461 0014 5B09     	 lsrs r3,r3,#5
 1462 0016 7B61     	 str r3,[r7,#20]
 445:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 1463              	 .loc 2 445 0
 1464 0018 7B69     	 ldr r3,[r7,#20]
 1465 001a 5B09     	 lsrs r3,r3,#5
 1466 001c 5A03     	 lsls r2,r3,#13
 1467 001e 7B69     	 ldr r3,[r7,#20]
 1468 0020 03F01F03 	 and r3,r3,#31
 1469 0024 1B02     	 lsls r3,r3,#8
 1470 0026 1343     	 orrs r3,r3,r2
 1471 0028 3B61     	 str r3,[r7,#16]
 446:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1472              	 .loc 2 446 0
 1473 002a 7B68     	 ldr r3,[r7,#4]
 1474 002c 1B68     	 ldr r3,[r3]
 1475 002e 7A68     	 ldr r2,[r7,#4]
 1476 0030 1268     	 ldr r2,[r2]
 1477 0032 9268     	 ldr r2,[r2,#8]
 1478 0034 22F47F42 	 bic r2,r2,#65280
 1479 0038 9A60     	 str r2,[r3,#8]
 447:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1480              	 .loc 2 447 0
 1481 003a 7B68     	 ldr r3,[r7,#4]
 1482 003c 1B68     	 ldr r3,[r3]
 1483 003e 7A68     	 ldr r2,[r7,#4]
 1484 0040 1268     	 ldr r2,[r2]
 1485 0042 9168     	 ldr r1,[r2,#8]
 1486 0044 3A69     	 ldr r2,[r7,#16]
 1487 0046 0A43     	 orrs r2,r2,r1
 1488 0048 9A60     	 str r2,[r3,#8]
 448:../Libraries/XMCLib/src/xmc_can.c ****   
 449:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1489              	 .loc 2 449 0
 1490 004a 7B68     	 ldr r3,[r7,#4]
 1491 004c DB79     	 ldrb r3,[r3,#7]
 1492 004e 03F02003 	 and r3,r3,#32
 1493 0052 DBB2     	 uxtb r3,r3
 1494 0054 002B     	 cmp r3,#0
 1495 0056 07D0     	 beq .L69
 450:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1496              	 .loc 2 450 0 discriminator 1
 1497 0058 7B68     	 ldr r3,[r7,#4]
 1498 005a DB79     	 ldrb r3,[r3,#7]
 1499 005c 03F02003 	 and r3,r3,#32
 1500 0060 DBB2     	 uxtb r3,r3
 449:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1501              	 .loc 2 449 0 discriminator 1
 1502 0062 002B     	 cmp r3,#0
 1503 0064 00D1     	 bne .L69
 449:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1504              	 .loc 2 449 0 is_stmt 0
 1505 0066 5CE0     	 b .L68
 1506              	.L69:
 451:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1507              	 .loc 2 451 0 is_stmt 1
 1508 0068 7B68     	 ldr r3,[r7,#4]
 1509 006a 1B7E     	 ldrb r3,[r3,#24]
 450:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1510              	 .loc 2 450 0
 1511 006c 002B     	 cmp r3,#0
 1512 006e 04D0     	 beq .L71
 452:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1513              	 .loc 2 452 0
 1514 0070 7B68     	 ldr r3,[r7,#4]
 1515 0072 1B7E     	 ldrb r3,[r3,#24]
 451:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1516              	 .loc 2 451 0
 1517 0074 012B     	 cmp r3,#1
 1518 0076 00D0     	 beq .L71
 1519 0078 53E0     	 b .L68
 1520              	.L71:
 453:../Libraries/XMCLib/src/xmc_can.c ****   {
 454:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 455:../Libraries/XMCLib/src/xmc_can.c ****   }
 456:../Libraries/XMCLib/src/xmc_can.c ****   else
 457:../Libraries/XMCLib/src/xmc_can.c ****   {
 458:../Libraries/XMCLib/src/xmc_can.c **** 
 459:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 460:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1521              	 .loc 2 460 0
 1522 007a 7B68     	 ldr r3,[r7,#4]
 1523 007c 1B68     	 ldr r3,[r3]
 1524 007e 2022     	 movs r2,#32
 1525 0080 DA61     	 str r2,[r3,#28]
 461:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1526              	 .loc 2 461 0
 1527 0082 7B68     	 ldr r3,[r7,#4]
 1528 0084 DB79     	 ldrb r3,[r3,#7]
 1529 0086 03F02003 	 and r3,r3,#32
 1530 008a DBB2     	 uxtb r3,r3
 1531 008c 002B     	 cmp r3,#0
 1532 008e 28D1     	 bne .L72
 462:../Libraries/XMCLib/src/xmc_can.c ****     {
 463:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1533              	 .loc 2 463 0
 1534 0090 7B68     	 ldr r3,[r7,#4]
 1535 0092 5B68     	 ldr r3,[r3,#4]
 1536 0094 FB60     	 str r3,[r7,#12]
 464:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1537              	 .loc 2 464 0
 1538 0096 FB68     	 ldr r3,[r7,#12]
 1539 0098 03F06043 	 and r3,r3,#-536870912
 1540 009c FB60     	 str r3,[r7,#12]
 465:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1541              	 .loc 2 465 0
 1542 009e 7B68     	 ldr r3,[r7,#4]
 1543 00a0 5B68     	 ldr r3,[r3,#4]
 1544 00a2 C3F31C03 	 ubfx r3,r3,#0,#29
 1545 00a6 9B04     	 lsls r3,r3,#18
 1546 00a8 1A46     	 mov r2,r3
 1547 00aa FB68     	 ldr r3,[r7,#12]
 1548 00ac 1343     	 orrs r3,r3,r2
 1549 00ae FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1550              	 .loc 2 466 0
 1551 00b0 7B68     	 ldr r3,[r7,#4]
 1552 00b2 1B68     	 ldr r3,[r3]
 1553 00b4 FA68     	 ldr r2,[r7,#12]
 1554 00b6 9A61     	 str r2,[r3,#24]
 467:../Libraries/XMCLib/src/xmc_can.c **** 
 468:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1555              	 .loc 2 468 0
 1556 00b8 7B68     	 ldr r3,[r7,#4]
 1557 00ba 9B68     	 ldr r3,[r3,#8]
 1558 00bc FB60     	 str r3,[r7,#12]
 469:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1559              	 .loc 2 469 0
 1560 00be FB68     	 ldr r3,[r7,#12]
 1561 00c0 03F06043 	 and r3,r3,#-536870912
 1562 00c4 FB60     	 str r3,[r7,#12]
 470:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1563              	 .loc 2 470 0
 1564 00c6 7B68     	 ldr r3,[r7,#4]
 1565 00c8 9B68     	 ldr r3,[r3,#8]
 1566 00ca C3F31C03 	 ubfx r3,r3,#0,#29
 1567 00ce 9B04     	 lsls r3,r3,#18
 1568 00d0 1A46     	 mov r2,r3
 1569 00d2 FB68     	 ldr r3,[r7,#12]
 1570 00d4 1343     	 orrs r3,r3,r2
 1571 00d6 FB60     	 str r3,[r7,#12]
 471:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1572              	 .loc 2 471 0
 1573 00d8 7B68     	 ldr r3,[r7,#4]
 1574 00da 1B68     	 ldr r3,[r3]
 1575 00dc FA68     	 ldr r2,[r7,#12]
 1576 00de DA60     	 str r2,[r3,#12]
 1577 00e0 09E0     	 b .L73
 1578              	.L72:
 472:../Libraries/XMCLib/src/xmc_can.c ****     }
 473:../Libraries/XMCLib/src/xmc_can.c ****     else
 474:../Libraries/XMCLib/src/xmc_can.c ****     {
 475:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1579              	 .loc 2 475 0
 1580 00e2 7B68     	 ldr r3,[r7,#4]
 1581 00e4 1B68     	 ldr r3,[r3]
 1582 00e6 7A68     	 ldr r2,[r7,#4]
 1583 00e8 5268     	 ldr r2,[r2,#4]
 1584 00ea 9A61     	 str r2,[r3,#24]
 476:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1585              	 .loc 2 476 0
 1586 00ec 7B68     	 ldr r3,[r7,#4]
 1587 00ee 1B68     	 ldr r3,[r3]
 1588 00f0 7A68     	 ldr r2,[r7,#4]
 1589 00f2 9268     	 ldr r2,[r2,#8]
 1590 00f4 DA60     	 str r2,[r3,#12]
 1591              	.L73:
 477:../Libraries/XMCLib/src/xmc_can.c ****     }
 478:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 479:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1592              	 .loc 2 479 0
 1593 00f6 7B68     	 ldr r3,[r7,#4]
 1594 00f8 1B7E     	 ldrb r3,[r3,#24]
 1595 00fa 012B     	 cmp r3,#1
 1596 00fc 08D1     	 bne .L74
 480:../Libraries/XMCLib/src/xmc_can.c ****     {
 481:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 482:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1597              	 .loc 2 482 0
 1598 00fe 7868     	 ldr r0,[r7,#4]
 1599 0100 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 483:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1600              	 .loc 2 483 0
 1601 0104 7B68     	 ldr r3,[r7,#4]
 1602 0106 1B68     	 ldr r3,[r3]
 1603 0108 4FF00062 	 mov r2,#134217728
 1604 010c DA61     	 str r2,[r3,#28]
 1605 010e 04E0     	 b .L75
 1606              	.L74:
 484:../Libraries/XMCLib/src/xmc_can.c ****     }
 485:../Libraries/XMCLib/src/xmc_can.c ****     else
 486:../Libraries/XMCLib/src/xmc_can.c ****     {
 487:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 488:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1607              	 .loc 2 488 0
 1608 0110 7B68     	 ldr r3,[r7,#4]
 1609 0112 1B68     	 ldr r3,[r3]
 1610 0114 4FF40062 	 mov r2,#2048
 1611 0118 DA61     	 str r2,[r3,#28]
 1612              	.L75:
 489:../Libraries/XMCLib/src/xmc_can.c ****     }
 490:../Libraries/XMCLib/src/xmc_can.c **** 
 491:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 492:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_MOC
 1613              	 .loc 2 492 0
 1614 011a 7B68     	 ldr r3,[r7,#4]
 1615 011c 1B68     	 ldr r3,[r3]
 1616 011e 024A     	 ldr r2,.L76
 1617 0120 DA61     	 str r2,[r3,#28]
 1618              	.L68:
 493:../Libraries/XMCLib/src/xmc_can.c ****                                  CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 494:../Libraries/XMCLib/src/xmc_can.c ****   }
 495:../Libraries/XMCLib/src/xmc_can.c **** }
 1619              	 .loc 2 495 0
 1620 0122 1837     	 adds r7,r7,#24
 1621              	.LCFI105:
 1622              	 .cfi_def_cfa_offset 8
 1623 0124 BD46     	 mov sp,r7
 1624              	.LCFI106:
 1625              	 .cfi_def_cfa_register 13
 1626              	 
 1627 0126 80BD     	 pop {r7,pc}
 1628              	.L77:
 1629              	 .align 2
 1630              	.L76:
 1631 0128 4000A006 	 .word 111149120
 1632              	 .cfi_endproc
 1633              	.LFE229:
 1635              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1636              	 .align 2
 1637              	 .global XMC_CAN_MO_UpdateData
 1638              	 .thumb
 1639              	 .thumb_func
 1641              	XMC_CAN_MO_UpdateData:
 1642              	.LFB230:
 496:../Libraries/XMCLib/src/xmc_can.c **** 
 497:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 498:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 499:../Libraries/XMCLib/src/xmc_can.c **** {
 1643              	 .loc 2 499 0
 1644              	 .cfi_startproc
 1645              	 
 1646              	 
 1647              	 
 1648 0000 80B4     	 push {r7}
 1649              	.LCFI107:
 1650              	 .cfi_def_cfa_offset 4
 1651              	 .cfi_offset 7,-4
 1652 0002 85B0     	 sub sp,sp,#20
 1653              	.LCFI108:
 1654              	 .cfi_def_cfa_offset 24
 1655 0004 00AF     	 add r7,sp,#0
 1656              	.LCFI109:
 1657              	 .cfi_def_cfa_register 7
 1658 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1659              	 .loc 2 500 0
 1660 0008 0323     	 movs r3,#3
 1661 000a FB73     	 strb r3,[r7,#15]
 501:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 502:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1662              	 .loc 2 502 0
 1663 000c 7B68     	 ldr r3,[r7,#4]
 1664 000e 1B7E     	 ldrb r3,[r3,#24]
 1665 0010 012B     	 cmp r3,#1
 1666 0012 22D1     	 bne .L79
 503:../Libraries/XMCLib/src/xmc_can.c ****   {
 504:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1667              	 .loc 2 504 0
 1668 0014 7B68     	 ldr r3,[r7,#4]
 1669 0016 1B68     	 ldr r3,[r3]
 1670 0018 2022     	 movs r2,#32
 1671 001a DA61     	 str r2,[r3,#28]
 505:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 506:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1672              	 .loc 2 506 0
 1673 001c 7B68     	 ldr r3,[r7,#4]
 1674 001e 1B68     	 ldr r3,[r3]
 1675 0020 7A68     	 ldr r2,[r7,#4]
 1676 0022 1268     	 ldr r2,[r2]
 1677 0024 1268     	 ldr r2,[r2]
 1678 0026 22F07061 	 bic r1,r2,#251658240
 507:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1679              	 .loc 2 507 0
 1680 002a 7A68     	 ldr r2,[r7,#4]
 1681 002c 127B     	 ldrb r2,[r2,#12]
 1682 002e 1206     	 lsls r2,r2,#24
 1683 0030 02F07062 	 and r2,r2,#251658240
 506:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1684              	 .loc 2 506 0
 1685 0034 0A43     	 orrs r2,r2,r1
 1686 0036 1A60     	 str r2,[r3]
 508:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 509:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 1687              	 .loc 2 509 0
 1688 0038 7B68     	 ldr r3,[r7,#4]
 1689 003a 1B68     	 ldr r3,[r3]
 1690 003c 7A68     	 ldr r2,[r7,#4]
 1691 003e 1269     	 ldr r2,[r2,#16]
 1692 0040 1A61     	 str r2,[r3,#16]
 510:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1693              	 .loc 2 510 0
 1694 0042 7B68     	 ldr r3,[r7,#4]
 1695 0044 1B68     	 ldr r3,[r3]
 1696 0046 7A68     	 ldr r2,[r7,#4]
 1697 0048 5269     	 ldr r2,[r2,#20]
 1698 004a 5A61     	 str r2,[r3,#20]
 511:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 512:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 1699              	 .loc 2 512 0
 1700 004c 7B68     	 ldr r3,[r7,#4]
 1701 004e 1B68     	 ldr r3,[r3]
 1702 0050 064A     	 ldr r2,.L82
 1703 0052 DA61     	 str r2,[r3,#28]
 513:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1704              	 .loc 2 513 0
 1705 0054 0023     	 movs r3,#0
 1706 0056 FB73     	 strb r3,[r7,#15]
 1707 0058 01E0     	 b .L80
 1708              	.L79:
 514:../Libraries/XMCLib/src/xmc_can.c ****   }
 515:../Libraries/XMCLib/src/xmc_can.c ****   else
 516:../Libraries/XMCLib/src/xmc_can.c ****   {
 517:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1709              	 .loc 2 517 0
 1710 005a 0323     	 movs r3,#3
 1711 005c FB73     	 strb r3,[r7,#15]
 1712              	.L80:
 518:../Libraries/XMCLib/src/xmc_can.c ****   }
 519:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1713              	 .loc 2 519 0
 1714 005e FB7B     	 ldrb r3,[r7,#15]
 520:../Libraries/XMCLib/src/xmc_can.c **** }
 1715              	 .loc 2 520 0
 1716 0060 1846     	 mov r0,r3
 1717 0062 1437     	 adds r7,r7,#20
 1718              	.LCFI110:
 1719              	 .cfi_def_cfa_offset 4
 1720 0064 BD46     	 mov sp,r7
 1721              	.LCFI111:
 1722              	 .cfi_def_cfa_register 13
 1723              	 
 1724 0066 5DF8047B 	 ldr r7,[sp],#4
 1725              	.LCFI112:
 1726              	 .cfi_restore 7
 1727              	 .cfi_def_cfa_offset 0
 1728 006a 7047     	 bx lr
 1729              	.L83:
 1730              	 .align 2
 1731              	.L82:
 1732 006c 40002800 	 .word 2621504
 1733              	 .cfi_endproc
 1734              	.LFE230:
 1736              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 1737              	 .align 2
 1738              	 .global XMC_CAN_MO_Transmit
 1739              	 .thumb
 1740              	 .thumb_func
 1742              	XMC_CAN_MO_Transmit:
 1743              	.LFB231:
 521:../Libraries/XMCLib/src/xmc_can.c **** 
 522:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 523:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 524:../Libraries/XMCLib/src/xmc_can.c **** {
 1744              	 .loc 2 524 0
 1745              	 .cfi_startproc
 1746              	 
 1747              	 
 1748              	 
 1749 0000 80B4     	 push {r7}
 1750              	.LCFI113:
 1751              	 .cfi_def_cfa_offset 4
 1752              	 .cfi_offset 7,-4
 1753 0002 87B0     	 sub sp,sp,#28
 1754              	.LCFI114:
 1755              	 .cfi_def_cfa_offset 32
 1756 0004 00AF     	 add r7,sp,#0
 1757              	.LCFI115:
 1758              	 .cfi_def_cfa_register 7
 1759 0006 7860     	 str r0,[r7,#4]
 525:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1760              	 .loc 2 525 0
 1761 0008 0123     	 movs r3,#1
 1762 000a FB75     	 strb r3,[r7,#23]
 526:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 1763              	 .loc 2 526 0
 1764 000c 7B68     	 ldr r3,[r7,#4]
 1765 000e 1B68     	 ldr r3,[r3]
 1766 0010 DB69     	 ldr r3,[r3,#28]
 1767 0012 03F02003 	 and r3,r3,#32
 1768 0016 5B09     	 lsrs r3,r3,#5
 1769 0018 3B61     	 str r3,[r7,#16]
 527:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 1770              	 .loc 2 527 0
 1771 001a 7B68     	 ldr r3,[r7,#4]
 1772 001c 1B68     	 ldr r3,[r3]
 1773 001e DB69     	 ldr r3,[r3,#28]
 1774 0020 03F48073 	 and r3,r3,#256
 1775 0024 1B0A     	 lsrs r3,r3,#8
 1776 0026 FB60     	 str r3,[r7,#12]
 528:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 529:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 1777              	 .loc 2 529 0
 1778 0028 3B69     	 ldr r3,[r7,#16]
 1779 002a 002B     	 cmp r3,#0
 1780 002c 02D1     	 bne .L85
 530:../Libraries/XMCLib/src/xmc_can.c ****   {
 531:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 1781              	 .loc 2 531 0
 1782 002e 0423     	 movs r3,#4
 1783 0030 FB75     	 strb r3,[r7,#23]
 1784 0032 0CE0     	 b .L86
 1785              	.L85:
 532:../Libraries/XMCLib/src/xmc_can.c ****   }
 533:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 534:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 1786              	 .loc 2 534 0
 1787 0034 FB68     	 ldr r3,[r7,#12]
 1788 0036 012B     	 cmp r3,#1
 1789 0038 02D1     	 bne .L87
 535:../Libraries/XMCLib/src/xmc_can.c ****   {
 536:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1790              	 .loc 2 536 0
 1791 003a 0223     	 movs r3,#2
 1792 003c FB75     	 strb r3,[r7,#23]
 1793 003e 06E0     	 b .L86
 1794              	.L87:
 537:../Libraries/XMCLib/src/xmc_can.c ****   }
 538:../Libraries/XMCLib/src/xmc_can.c ****   else
 539:../Libraries/XMCLib/src/xmc_can.c ****   {
 540:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 541:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 1795              	 .loc 2 541 0
 1796 0040 7B68     	 ldr r3,[r7,#4]
 1797 0042 1B68     	 ldr r3,[r3]
 1798 0044 4FF0E062 	 mov r2,#117440512
 1799 0048 DA61     	 str r2,[r3,#28]
 542:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1800              	 .loc 2 542 0
 1801 004a 0023     	 movs r3,#0
 1802 004c FB75     	 strb r3,[r7,#23]
 1803              	.L86:
 543:../Libraries/XMCLib/src/xmc_can.c ****   }
 544:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1804              	 .loc 2 544 0
 1805 004e FB7D     	 ldrb r3,[r7,#23]
 545:../Libraries/XMCLib/src/xmc_can.c **** }
 1806              	 .loc 2 545 0
 1807 0050 1846     	 mov r0,r3
 1808 0052 1C37     	 adds r7,r7,#28
 1809              	.LCFI116:
 1810              	 .cfi_def_cfa_offset 4
 1811 0054 BD46     	 mov sp,r7
 1812              	.LCFI117:
 1813              	 .cfi_def_cfa_register 13
 1814              	 
 1815 0056 5DF8047B 	 ldr r7,[sp],#4
 1816              	.LCFI118:
 1817              	 .cfi_restore 7
 1818              	 .cfi_def_cfa_offset 0
 1819 005a 7047     	 bx lr
 1820              	 .cfi_endproc
 1821              	.LFE231:
 1823              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 1824              	 .align 2
 1825              	 .global XMC_CAN_MO_ReceiveData
 1826              	 .thumb
 1827              	 .thumb_func
 1829              	XMC_CAN_MO_ReceiveData:
 1830              	.LFB232:
 546:../Libraries/XMCLib/src/xmc_can.c **** 
 547:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 548:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 549:../Libraries/XMCLib/src/xmc_can.c **** {
 1831              	 .loc 2 549 0
 1832              	 .cfi_startproc
 1833              	 
 1834              	 
 1835              	 
 1836 0000 80B4     	 push {r7}
 1837              	.LCFI119:
 1838              	 .cfi_def_cfa_offset 4
 1839              	 .cfi_offset 7,-4
 1840 0002 87B0     	 sub sp,sp,#28
 1841              	.LCFI120:
 1842              	 .cfi_def_cfa_offset 32
 1843 0004 00AF     	 add r7,sp,#0
 1844              	.LCFI121:
 1845              	 .cfi_def_cfa_register 7
 1846 0006 7860     	 str r0,[r7,#4]
 550:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1847              	 .loc 2 550 0
 1848 0008 0123     	 movs r3,#1
 1849 000a FB75     	 strb r3,[r7,#23]
 551:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 1850              	 .loc 2 551 0
 1851 000c 0023     	 movs r3,#0
 1852 000e BB75     	 strb r3,[r7,#22]
 552:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 1853              	 .loc 2 552 0
 1854 0010 0023     	 movs r3,#0
 1855 0012 7B75     	 strb r3,[r7,#21]
 553:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1856              	 .loc 2 553 0
 1857 0014 7B68     	 ldr r3,[r7,#4]
 1858 0016 1B68     	 ldr r3,[r3]
 1859 0018 DB69     	 ldr r3,[r3,#28]
 1860 001a 03F40063 	 and r3,r3,#2048
 1861 001e DB0A     	 lsrs r3,r3,#11
 1862 0020 3B61     	 str r3,[r7,#16]
 554:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1863              	 .loc 2 554 0
 1864 0022 7B68     	 ldr r3,[r7,#4]
 1865 0024 1B68     	 ldr r3,[r3]
 1866 0026 DB69     	 ldr r3,[r3,#28]
 1867 0028 03F00403 	 and r3,r3,#4
 1868 002c 9B08     	 lsrs r3,r3,#2
 1869 002e FB60     	 str r3,[r7,#12]
 555:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 556:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1870              	 .loc 2 556 0
 1871 0030 3B69     	 ldr r3,[r7,#16]
 1872 0032 002B     	 cmp r3,#0
 1873 0034 02D0     	 beq .L90
 557:../Libraries/XMCLib/src/xmc_can.c ****   {
 558:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1874              	 .loc 2 558 0
 1875 0036 0323     	 movs r3,#3
 1876 0038 FB75     	 strb r3,[r7,#23]
 1877 003a 25E0     	 b .L91
 1878              	.L90:
 559:../Libraries/XMCLib/src/xmc_can.c ****   }
 560:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 561:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 1879              	 .loc 2 561 0
 1880 003c FB68     	 ldr r3,[r7,#12]
 1881 003e 012B     	 cmp r3,#1
 1882 0040 02D1     	 bne .L92
 562:../Libraries/XMCLib/src/xmc_can.c ****   {
 563:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 1883              	 .loc 2 563 0
 1884 0042 0223     	 movs r3,#2
 1885 0044 FB75     	 strb r3,[r7,#23]
 1886 0046 1FE0     	 b .L91
 1887              	.L92:
 564:../Libraries/XMCLib/src/xmc_can.c ****   }
 565:../Libraries/XMCLib/src/xmc_can.c ****   else
 566:../Libraries/XMCLib/src/xmc_can.c ****   {
 567:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 568:../Libraries/XMCLib/src/xmc_can.c ****     do
 569:../Libraries/XMCLib/src/xmc_can.c ****     {
 570:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 1888              	 .loc 2 570 0 discriminator 2
 1889 0048 7B68     	 ldr r3,[r7,#4]
 1890 004a 1B68     	 ldr r3,[r3]
 1891 004c 1A69     	 ldr r2,[r3,#16]
 1892 004e 7B68     	 ldr r3,[r7,#4]
 1893 0050 1A61     	 str r2,[r3,#16]
 571:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 1894              	 .loc 2 571 0 discriminator 2
 1895 0052 7B68     	 ldr r3,[r7,#4]
 1896 0054 1B68     	 ldr r3,[r3]
 1897 0056 5A69     	 ldr r2,[r3,#20]
 1898 0058 7B68     	 ldr r3,[r7,#4]
 1899 005a 5A61     	 str r2,[r3,#20]
 572:../Libraries/XMCLib/src/xmc_can.c **** 
 573:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 1900              	 .loc 2 573 0 discriminator 2
 1901 005c 7B68     	 ldr r3,[r7,#4]
 1902 005e 1B68     	 ldr r3,[r3]
 1903 0060 DB69     	 ldr r3,[r3,#28]
 1904 0062 03F00403 	 and r3,r3,#4
 1905 0066 9B08     	 lsrs r3,r3,#2
 1906 0068 BB75     	 strb r3,[r7,#22]
 574:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 1907              	 .loc 2 574 0 discriminator 2
 1908 006a 7B68     	 ldr r3,[r7,#4]
 1909 006c 1B68     	 ldr r3,[r3]
 1910 006e DB69     	 ldr r3,[r3,#28]
 1911 0070 03F00803 	 and r3,r3,#8
 1912 0074 DB08     	 lsrs r3,r3,#3
 1913 0076 7B75     	 strb r3,[r7,#21]
 575:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 1914              	 .loc 2 575 0 discriminator 2
 1915 0078 BB7D     	 ldrb r3,[r7,#22]
 1916 007a 002B     	 cmp r3,#0
 1917 007c 02D0     	 beq .L93
 1918              	 .loc 2 575 0 is_stmt 0 discriminator 1
 1919 007e 7B7D     	 ldrb r3,[r7,#21]
 1920 0080 002B     	 cmp r3,#0
 1921 0082 E1D1     	 bne .L92
 1922              	.L93:
 576:../Libraries/XMCLib/src/xmc_can.c **** 
 577:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1923              	 .loc 2 577 0 is_stmt 1
 1924 0084 0023     	 movs r3,#0
 1925 0086 FB75     	 strb r3,[r7,#23]
 1926              	.L91:
 578:../Libraries/XMCLib/src/xmc_can.c ****   }
 579:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1927              	 .loc 2 579 0
 1928 0088 FB7D     	 ldrb r3,[r7,#23]
 580:../Libraries/XMCLib/src/xmc_can.c **** }
 1929              	 .loc 2 580 0
 1930 008a 1846     	 mov r0,r3
 1931 008c 1C37     	 adds r7,r7,#28
 1932              	.LCFI122:
 1933              	 .cfi_def_cfa_offset 4
 1934 008e BD46     	 mov sp,r7
 1935              	.LCFI123:
 1936              	 .cfi_def_cfa_register 13
 1937              	 
 1938 0090 5DF8047B 	 ldr r7,[sp],#4
 1939              	.LCFI124:
 1940              	 .cfi_restore 7
 1941              	 .cfi_def_cfa_offset 0
 1942 0094 7047     	 bx lr
 1943              	 .cfi_endproc
 1944              	.LFE232:
 1946 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 1947              	 .align 2
 1948              	 .global XMC_CAN_MO_Receive
 1949              	 .thumb
 1950              	 .thumb_func
 1952              	XMC_CAN_MO_Receive:
 1953              	.LFB233:
 581:../Libraries/XMCLib/src/xmc_can.c **** 
 582:../Libraries/XMCLib/src/xmc_can.c **** 
 583:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 584:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 585:../Libraries/XMCLib/src/xmc_can.c **** {
 1954              	 .loc 2 585 0
 1955              	 .cfi_startproc
 1956              	 
 1957              	 
 1958              	 
 1959 0000 80B4     	 push {r7}
 1960              	.LCFI125:
 1961              	 .cfi_def_cfa_offset 4
 1962              	 .cfi_offset 7,-4
 1963 0002 87B0     	 sub sp,sp,#28
 1964              	.LCFI126:
 1965              	 .cfi_def_cfa_offset 32
 1966 0004 00AF     	 add r7,sp,#0
 1967              	.LCFI127:
 1968              	 .cfi_def_cfa_register 7
 1969 0006 7860     	 str r0,[r7,#4]
 586:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 1970              	 .loc 2 586 0
 1971 0008 0123     	 movs r3,#1
 1972 000a FB75     	 strb r3,[r7,#23]
 587:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 1973              	 .loc 2 587 0
 1974 000c 0023     	 movs r3,#0
 1975 000e BB75     	 strb r3,[r7,#22]
 588:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 1976              	 .loc 2 588 0
 1977 0010 0023     	 movs r3,#0
 1978 0012 7B75     	 strb r3,[r7,#21]
 589:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 1979              	 .loc 2 589 0
 1980 0014 7B68     	 ldr r3,[r7,#4]
 1981 0016 1B68     	 ldr r3,[r3]
 1982 0018 DB69     	 ldr r3,[r3,#28]
 1983 001a 03F40063 	 and r3,r3,#2048
 1984 001e DB0A     	 lsrs r3,r3,#11
 1985 0020 3B61     	 str r3,[r7,#16]
 590:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 1986              	 .loc 2 590 0
 1987 0022 7B68     	 ldr r3,[r7,#4]
 1988 0024 1B68     	 ldr r3,[r3]
 1989 0026 DB69     	 ldr r3,[r3,#28]
 1990 0028 03F00403 	 and r3,r3,#4
 1991 002c 9B08     	 lsrs r3,r3,#2
 1992 002e FB60     	 str r3,[r7,#12]
 591:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 592:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 1993              	 .loc 2 592 0
 1994 0030 3B69     	 ldr r3,[r7,#16]
 1995 0032 002B     	 cmp r3,#0
 1996 0034 02D0     	 beq .L96
 593:../Libraries/XMCLib/src/xmc_can.c ****   {
 594:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1997              	 .loc 2 594 0
 1998 0036 0323     	 movs r3,#3
 1999 0038 FB75     	 strb r3,[r7,#23]
 2000 003a A7E0     	 b .L97
 2001              	.L96:
 595:../Libraries/XMCLib/src/xmc_can.c ****   }
 596:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 597:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2002              	 .loc 2 597 0
 2003 003c FB68     	 ldr r3,[r7,#12]
 2004 003e 012B     	 cmp r3,#1
 2005 0040 02D1     	 bne .L98
 598:../Libraries/XMCLib/src/xmc_can.c ****   {
 599:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2006              	 .loc 2 599 0
 2007 0042 0223     	 movs r3,#2
 2008 0044 FB75     	 strb r3,[r7,#23]
 2009 0046 A1E0     	 b .L97
 2010              	.L98:
 600:../Libraries/XMCLib/src/xmc_can.c ****   }
 601:../Libraries/XMCLib/src/xmc_can.c ****   else
 602:../Libraries/XMCLib/src/xmc_can.c ****   {
 603:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 604:../Libraries/XMCLib/src/xmc_can.c ****     do
 605:../Libraries/XMCLib/src/xmc_can.c ****     {
 606:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2011              	 .loc 2 606 0
 2012 0048 7B68     	 ldr r3,[r7,#4]
 2013 004a 1B68     	 ldr r3,[r3]
 2014 004c 0822     	 movs r2,#8
 2015 004e DA61     	 str r2,[r3,#28]
 607:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2016              	 .loc 2 607 0
 2017 0050 7B68     	 ldr r3,[r7,#4]
 2018 0052 1B68     	 ldr r3,[r3]
 2019 0054 9B69     	 ldr r3,[r3,#24]
 2020 0056 03F00053 	 and r3,r3,#536870912
 2021 005a 5B0F     	 lsrs r3,r3,#29
 2022 005c 002B     	 cmp r3,#0
 2023 005e 40D1     	 bne .L99
 608:../Libraries/XMCLib/src/xmc_can.c ****       {
 609:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2024              	 .loc 2 609 0
 2025 0060 7A68     	 ldr r2,[r7,#4]
 2026 0062 D379     	 ldrb r3,[r2,#7]
 2027 0064 6FF34513 	 bfc r3,#5,#1
 2028 0068 D371     	 strb r3,[r2,#7]
 610:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2029              	 .loc 2 610 0
 2030 006a 7B68     	 ldr r3,[r7,#4]
 2031 006c 1B68     	 ldr r3,[r3]
 2032 006e 9A69     	 ldr r2,[r3,#24]
 2033 0070 4A4B     	 ldr r3,.L105
 2034 0072 1340     	 ands r3,r3,r2
 2035 0074 9B0C     	 lsrs r3,r3,#18
 2036 0076 23F06041 	 bic r1,r3,#-536870912
 2037 007a 7A68     	 ldr r2,[r7,#4]
 2038 007c 5368     	 ldr r3,[r2,#4]
 2039 007e 61F31C03 	 bfi r3,r1,#0,#29
 2040 0082 5360     	 str r3,[r2,#4]
 611:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2041              	 .loc 2 611 0
 2042 0084 7B68     	 ldr r3,[r7,#4]
 2043 0086 1B68     	 ldr r3,[r3]
 2044 0088 DB68     	 ldr r3,[r3,#12]
 2045 008a 03F00053 	 and r3,r3,#536870912
 2046 008e 5B0F     	 lsrs r3,r3,#29
 2047 0090 DBB2     	 uxtb r3,r3
 2048 0092 03F00103 	 and r3,r3,#1
 2049 0096 D9B2     	 uxtb r1,r3
 2050 0098 7A68     	 ldr r2,[r7,#4]
 2051 009a D37A     	 ldrb r3,[r2,#11]
 2052 009c 61F34513 	 bfi r3,r1,#5,#1
 2053 00a0 D372     	 strb r3,[r2,#11]
 612:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 2054              	 .loc 2 612 0
 2055 00a2 7B68     	 ldr r3,[r7,#4]
 2056 00a4 DB7A     	 ldrb r3,[r3,#11]
 2057 00a6 03F02003 	 and r3,r3,#32
 2058 00aa DBB2     	 uxtb r3,r3
 2059 00ac 002B     	 cmp r3,#0
 2060 00ae 0DD0     	 beq .L100
 613:../Libraries/XMCLib/src/xmc_can.c ****         {
 614:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2061              	 .loc 2 614 0
 2062 00b0 7B68     	 ldr r3,[r7,#4]
 2063 00b2 1B68     	 ldr r3,[r3]
 2064 00b4 DA68     	 ldr r2,[r3,#12]
 2065 00b6 394B     	 ldr r3,.L105
 2066 00b8 1340     	 ands r3,r3,r2
 2067 00ba 9B0C     	 lsrs r3,r3,#18
 2068 00bc 23F06041 	 bic r1,r3,#-536870912
 2069 00c0 7A68     	 ldr r2,[r7,#4]
 2070 00c2 9368     	 ldr r3,[r2,#8]
 2071 00c4 61F31C03 	 bfi r3,r1,#0,#29
 2072 00c8 9360     	 str r3,[r2,#8]
 2073 00ca 32E0     	 b .L102
 2074              	.L100:
 615:../Libraries/XMCLib/src/xmc_can.c ****         }
 616:../Libraries/XMCLib/src/xmc_can.c ****         else
 617:../Libraries/XMCLib/src/xmc_can.c ****         {
 618:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2075              	 .loc 2 618 0
 2076 00cc 7B68     	 ldr r3,[r7,#4]
 2077 00ce 1B68     	 ldr r3,[r3]
 2078 00d0 DB68     	 ldr r3,[r3,#12]
 2079 00d2 23F06041 	 bic r1,r3,#-536870912
 2080 00d6 7A68     	 ldr r2,[r7,#4]
 2081 00d8 9368     	 ldr r3,[r2,#8]
 2082 00da 61F31C03 	 bfi r3,r1,#0,#29
 2083 00de 9360     	 str r3,[r2,#8]
 2084 00e0 27E0     	 b .L102
 2085              	.L99:
 619:../Libraries/XMCLib/src/xmc_can.c ****         }
 620:../Libraries/XMCLib/src/xmc_can.c ****       }
 621:../Libraries/XMCLib/src/xmc_can.c ****       else
 622:../Libraries/XMCLib/src/xmc_can.c ****       {
 623:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2086              	 .loc 2 623 0
 2087 00e2 7A68     	 ldr r2,[r7,#4]
 2088 00e4 D379     	 ldrb r3,[r2,#7]
 2089 00e6 43F02003 	 orr r3,r3,#32
 2090 00ea D371     	 strb r3,[r2,#7]
 624:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2091              	 .loc 2 624 0
 2092 00ec 7B68     	 ldr r3,[r7,#4]
 2093 00ee 1B68     	 ldr r3,[r3]
 2094 00f0 9B69     	 ldr r3,[r3,#24]
 2095 00f2 23F06041 	 bic r1,r3,#-536870912
 2096 00f6 7A68     	 ldr r2,[r7,#4]
 2097 00f8 5368     	 ldr r3,[r2,#4]
 2098 00fa 61F31C03 	 bfi r3,r1,#0,#29
 2099 00fe 5360     	 str r3,[r2,#4]
 625:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2100              	 .loc 2 625 0
 2101 0100 7B68     	 ldr r3,[r7,#4]
 2102 0102 1B68     	 ldr r3,[r3]
 2103 0104 DB68     	 ldr r3,[r3,#12]
 2104 0106 23F06041 	 bic r1,r3,#-536870912
 2105 010a 7A68     	 ldr r2,[r7,#4]
 2106 010c 9368     	 ldr r3,[r2,#8]
 2107 010e 61F31C03 	 bfi r3,r1,#0,#29
 2108 0112 9360     	 str r3,[r2,#8]
 626:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2109              	 .loc 2 626 0
 2110 0114 7B68     	 ldr r3,[r7,#4]
 2111 0116 1B68     	 ldr r3,[r3]
 2112 0118 DB68     	 ldr r3,[r3,#12]
 2113 011a 03F00053 	 and r3,r3,#536870912
 2114 011e 5B0F     	 lsrs r3,r3,#29
 2115 0120 DBB2     	 uxtb r3,r3
 2116 0122 03F00103 	 and r3,r3,#1
 2117 0126 D9B2     	 uxtb r1,r3
 2118 0128 7A68     	 ldr r2,[r7,#4]
 2119 012a D37A     	 ldrb r3,[r2,#11]
 2120 012c 61F34513 	 bfi r3,r1,#5,#1
 2121 0130 D372     	 strb r3,[r2,#11]
 2122              	.L102:
 627:../Libraries/XMCLib/src/xmc_can.c ****       }
 628:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2123              	 .loc 2 628 0
 2124 0132 7B68     	 ldr r3,[r7,#4]
 2125 0134 1B68     	 ldr r3,[r3]
 2126 0136 1B68     	 ldr r3,[r3]
 2127 0138 03F07063 	 and r3,r3,#251658240
 2128 013c 1B0E     	 lsrs r3,r3,#24
 2129 013e DAB2     	 uxtb r2,r3
 2130 0140 7B68     	 ldr r3,[r7,#4]
 2131 0142 1A73     	 strb r2,[r3,#12]
 629:../Libraries/XMCLib/src/xmc_can.c **** 
 630:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2132              	 .loc 2 630 0
 2133 0144 7B68     	 ldr r3,[r7,#4]
 2134 0146 1B68     	 ldr r3,[r3]
 2135 0148 1A69     	 ldr r2,[r3,#16]
 2136 014a 7B68     	 ldr r3,[r7,#4]
 2137 014c 1A61     	 str r2,[r3,#16]
 631:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2138              	 .loc 2 631 0
 2139 014e 7B68     	 ldr r3,[r7,#4]
 2140 0150 1B68     	 ldr r3,[r3]
 2141 0152 5A69     	 ldr r2,[r3,#20]
 2142 0154 7B68     	 ldr r3,[r7,#4]
 2143 0156 5A61     	 str r2,[r3,#20]
 632:../Libraries/XMCLib/src/xmc_can.c **** 
 633:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2144              	 .loc 2 633 0
 2145 0158 7B68     	 ldr r3,[r7,#4]
 2146 015a 1B68     	 ldr r3,[r3]
 2147 015c DB69     	 ldr r3,[r3,#28]
 2148 015e 03F00403 	 and r3,r3,#4
 2149 0162 9B08     	 lsrs r3,r3,#2
 2150 0164 BB75     	 strb r3,[r7,#22]
 634:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2151              	 .loc 2 634 0
 2152 0166 7B68     	 ldr r3,[r7,#4]
 2153 0168 1B68     	 ldr r3,[r3]
 2154 016a DB69     	 ldr r3,[r3,#28]
 2155 016c 03F00803 	 and r3,r3,#8
 2156 0170 DB08     	 lsrs r3,r3,#3
 2157 0172 7B75     	 strb r3,[r7,#21]
 635:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 2158              	 .loc 2 635 0
 2159 0174 BB7D     	 ldrb r3,[r7,#22]
 2160 0176 002B     	 cmp r3,#0
 2161 0178 03D0     	 beq .L103
 2162              	 .loc 2 635 0 is_stmt 0 discriminator 1
 2163 017a 7B7D     	 ldrb r3,[r7,#21]
 2164 017c 002B     	 cmp r3,#0
 2165 017e 7FF463AF 	 bne .L98
 2166              	.L103:
 636:../Libraries/XMCLib/src/xmc_can.c **** 
 637:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2167              	 .loc 2 637 0 is_stmt 1
 2168 0182 7B68     	 ldr r3,[r7,#4]
 2169 0184 0022     	 movs r2,#0
 2170 0186 1A76     	 strb r2,[r3,#24]
 638:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2171              	 .loc 2 638 0
 2172 0188 0023     	 movs r3,#0
 2173 018a FB75     	 strb r3,[r7,#23]
 2174              	.L97:
 639:../Libraries/XMCLib/src/xmc_can.c ****   }
 640:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2175              	 .loc 2 640 0
 2176 018c FB7D     	 ldrb r3,[r7,#23]
 641:../Libraries/XMCLib/src/xmc_can.c **** }
 2177              	 .loc 2 641 0
 2178 018e 1846     	 mov r0,r3
 2179 0190 1C37     	 adds r7,r7,#28
 2180              	.LCFI128:
 2181              	 .cfi_def_cfa_offset 4
 2182 0192 BD46     	 mov sp,r7
 2183              	.LCFI129:
 2184              	 .cfi_def_cfa_register 13
 2185              	 
 2186 0194 5DF8047B 	 ldr r7,[sp],#4
 2187              	.LCFI130:
 2188              	 .cfi_restore 7
 2189              	 .cfi_def_cfa_offset 0
 2190 0198 7047     	 bx lr
 2191              	.L106:
 2192 019a 00BF     	 .align 2
 2193              	.L105:
 2194 019c 0000FC1F 	 .word 536608768
 2195              	 .cfi_endproc
 2196              	.LFE233:
 2198              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2199              	 .align 2
 2200              	 .global XMC_CAN_NODE_EnableEvent
 2201              	 .thumb
 2202              	 .thumb_func
 2204              	XMC_CAN_NODE_EnableEvent:
 2205              	.LFB234:
 642:../Libraries/XMCLib/src/xmc_can.c **** 
 643:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 644:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 645:../Libraries/XMCLib/src/xmc_can.c **** {
 2206              	 .loc 2 645 0
 2207              	 .cfi_startproc
 2208              	 
 2209              	 
 2210              	 
 2211 0000 80B4     	 push {r7}
 2212              	.LCFI131:
 2213              	 .cfi_def_cfa_offset 4
 2214              	 .cfi_offset 7,-4
 2215 0002 83B0     	 sub sp,sp,#12
 2216              	.LCFI132:
 2217              	 .cfi_def_cfa_offset 16
 2218 0004 00AF     	 add r7,sp,#0
 2219              	.LCFI133:
 2220              	 .cfi_def_cfa_register 7
 2221 0006 7860     	 str r0,[r7,#4]
 2222 0008 3960     	 str r1,[r7]
 646:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2223              	 .loc 2 646 0
 2224 000a 3B68     	 ldr r3,[r7]
 2225 000c B3F5800F 	 cmp r3,#4194304
 2226 0010 06D0     	 beq .L108
 647:../Libraries/XMCLib/src/xmc_can.c ****   {
 648:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2227              	 .loc 2 648 0
 2228 0012 7B68     	 ldr r3,[r7,#4]
 2229 0014 1A68     	 ldr r2,[r3]
 2230 0016 3B68     	 ldr r3,[r7]
 2231 0018 1A43     	 orrs r2,r2,r3
 2232 001a 7B68     	 ldr r3,[r7,#4]
 2233 001c 1A60     	 str r2,[r3]
 2234 001e 05E0     	 b .L107
 2235              	.L108:
 649:../Libraries/XMCLib/src/xmc_can.c ****   }
 650:../Libraries/XMCLib/src/xmc_can.c ****   else
 651:../Libraries/XMCLib/src/xmc_can.c ****   {
 652:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 2236              	 .loc 2 652 0
 2237 0020 7B68     	 ldr r3,[r7,#4]
 2238 0022 9A69     	 ldr r2,[r3,#24]
 2239 0024 3B68     	 ldr r3,[r7]
 2240 0026 1A43     	 orrs r2,r2,r3
 2241 0028 7B68     	 ldr r3,[r7,#4]
 2242 002a 9A61     	 str r2,[r3,#24]
 2243              	.L107:
 653:../Libraries/XMCLib/src/xmc_can.c ****   }
 654:../Libraries/XMCLib/src/xmc_can.c **** }
 2244              	 .loc 2 654 0
 2245 002c 0C37     	 adds r7,r7,#12
 2246              	.LCFI134:
 2247              	 .cfi_def_cfa_offset 4
 2248 002e BD46     	 mov sp,r7
 2249              	.LCFI135:
 2250              	 .cfi_def_cfa_register 13
 2251              	 
 2252 0030 5DF8047B 	 ldr r7,[sp],#4
 2253              	.LCFI136:
 2254              	 .cfi_restore 7
 2255              	 .cfi_def_cfa_offset 0
 2256 0034 7047     	 bx lr
 2257              	 .cfi_endproc
 2258              	.LFE234:
 2260 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2261              	 .align 2
 2262              	 .global XMC_CAN_NODE_DisableEvent
 2263              	 .thumb
 2264              	 .thumb_func
 2266              	XMC_CAN_NODE_DisableEvent:
 2267              	.LFB235:
 655:../Libraries/XMCLib/src/xmc_can.c **** 
 656:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 657:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 658:../Libraries/XMCLib/src/xmc_can.c **** {
 2268              	 .loc 2 658 0
 2269              	 .cfi_startproc
 2270              	 
 2271              	 
 2272              	 
 2273 0000 80B4     	 push {r7}
 2274              	.LCFI137:
 2275              	 .cfi_def_cfa_offset 4
 2276              	 .cfi_offset 7,-4
 2277 0002 83B0     	 sub sp,sp,#12
 2278              	.LCFI138:
 2279              	 .cfi_def_cfa_offset 16
 2280 0004 00AF     	 add r7,sp,#0
 2281              	.LCFI139:
 2282              	 .cfi_def_cfa_register 7
 2283 0006 7860     	 str r0,[r7,#4]
 2284 0008 3960     	 str r1,[r7]
 659:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2285              	 .loc 2 659 0
 2286 000a 3B68     	 ldr r3,[r7]
 2287 000c B3F5800F 	 cmp r3,#4194304
 2288 0010 07D0     	 beq .L111
 660:../Libraries/XMCLib/src/xmc_can.c ****   {
 661:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2289              	 .loc 2 661 0
 2290 0012 7B68     	 ldr r3,[r7,#4]
 2291 0014 1A68     	 ldr r2,[r3]
 2292 0016 3B68     	 ldr r3,[r7]
 2293 0018 DB43     	 mvns r3,r3
 2294 001a 1A40     	 ands r2,r2,r3
 2295 001c 7B68     	 ldr r3,[r7,#4]
 2296 001e 1A60     	 str r2,[r3]
 2297 0020 06E0     	 b .L110
 2298              	.L111:
 662:../Libraries/XMCLib/src/xmc_can.c ****   }
 663:../Libraries/XMCLib/src/xmc_can.c ****   else
 664:../Libraries/XMCLib/src/xmc_can.c ****   {
 665:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2299              	 .loc 2 665 0
 2300 0022 7B68     	 ldr r3,[r7,#4]
 2301 0024 9A69     	 ldr r2,[r3,#24]
 2302 0026 3B68     	 ldr r3,[r7]
 2303 0028 DB43     	 mvns r3,r3
 2304 002a 1A40     	 ands r2,r2,r3
 2305 002c 7B68     	 ldr r3,[r7,#4]
 2306 002e 9A61     	 str r2,[r3,#24]
 2307              	.L110:
 666:../Libraries/XMCLib/src/xmc_can.c ****   }
 667:../Libraries/XMCLib/src/xmc_can.c **** }
 2308              	 .loc 2 667 0
 2309 0030 0C37     	 adds r7,r7,#12
 2310              	.LCFI140:
 2311              	 .cfi_def_cfa_offset 4
 2312 0032 BD46     	 mov sp,r7
 2313              	.LCFI141:
 2314              	 .cfi_def_cfa_register 13
 2315              	 
 2316 0034 5DF8047B 	 ldr r7,[sp],#4
 2317              	.LCFI142:
 2318              	 .cfi_restore 7
 2319              	 .cfi_def_cfa_offset 0
 2320 0038 7047     	 bx lr
 2321              	 .cfi_endproc
 2322              	.LFE235:
 2324 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2325              	 .align 2
 2326              	 .global XMC_CAN_TXFIFO_Transmit
 2327              	 .thumb
 2328              	 .thumb_func
 2330              	XMC_CAN_TXFIFO_Transmit:
 2331              	.LFB236:
 668:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 669:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 670:../Libraries/XMCLib/src/xmc_can.c **** {
 2332              	 .loc 2 670 0
 2333              	 .cfi_startproc
 2334              	 
 2335              	 
 2336              	 
 2337 0000 80B4     	 push {r7}
 2338              	.LCFI143:
 2339              	 .cfi_def_cfa_offset 4
 2340              	 .cfi_offset 7,-4
 2341 0002 89B0     	 sub sp,sp,#36
 2342              	.LCFI144:
 2343              	 .cfi_def_cfa_offset 40
 2344 0004 00AF     	 add r7,sp,#0
 2345              	.LCFI145:
 2346              	 .cfi_def_cfa_register 7
 2347 0006 7860     	 str r0,[r7,#4]
 671:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2348              	 .loc 2 671 0
 2349 0008 0123     	 movs r3,#1
 2350 000a FB77     	 strb r3,[r7,#31]
 672:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2351              	 .loc 2 672 0
 2352 000c 7B68     	 ldr r3,[r7,#4]
 2353 000e 1B68     	 ldr r3,[r3]
 2354 0010 DB69     	 ldr r3,[r3,#28]
 2355 0012 03F02003 	 and r3,r3,#32
 2356 0016 5B09     	 lsrs r3,r3,#5
 2357 0018 BB61     	 str r3,[r7,#24]
 673:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2358              	 .loc 2 673 0
 2359 001a 7B68     	 ldr r3,[r7,#4]
 2360 001c 1B68     	 ldr r3,[r3]
 2361 001e DB69     	 ldr r3,[r3,#28]
 2362 0020 03F48073 	 and r3,r3,#256
 2363 0024 1B0A     	 lsrs r3,r3,#8
 2364 0026 7B61     	 str r3,[r7,#20]
 674:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2365              	 .loc 2 674 0
 2366 0028 7B68     	 ldr r3,[r7,#4]
 2367 002a 1B68     	 ldr r3,[r3]
 2368 002c 5B68     	 ldr r3,[r3,#4]
 2369 002e 03F47F03 	 and r3,r3,#16711680
 2370 0032 1B0C     	 lsrs r3,r3,#16
 2371 0034 3B61     	 str r3,[r7,#16]
 675:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2372              	 .loc 2 675 0
 2373 0036 3B69     	 ldr r3,[r7,#16]
 2374 0038 03F11073 	 add r3,r3,#37748736
 2375 003c 03F52863 	 add r3,r3,#2688
 2376 0040 5B01     	 lsls r3,r3,#5
 2377 0042 FB60     	 str r3,[r7,#12]
 676:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 677:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2378              	 .loc 2 677 0
 2379 0044 BB69     	 ldr r3,[r7,#24]
 2380 0046 002B     	 cmp r3,#0
 2381 0048 02D1     	 bne .L114
 678:../Libraries/XMCLib/src/xmc_can.c ****   {
 679:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2382              	 .loc 2 679 0
 2383 004a 0423     	 movs r3,#4
 2384 004c FB77     	 strb r3,[r7,#31]
 2385 004e 0BE0     	 b .L115
 2386              	.L114:
 680:../Libraries/XMCLib/src/xmc_can.c ****   }
 681:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 682:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2387              	 .loc 2 682 0
 2388 0050 7B69     	 ldr r3,[r7,#20]
 2389 0052 012B     	 cmp r3,#1
 2390 0054 02D1     	 bne .L116
 683:../Libraries/XMCLib/src/xmc_can.c ****   {
 684:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2391              	 .loc 2 684 0
 2392 0056 0223     	 movs r3,#2
 2393 0058 FB77     	 strb r3,[r7,#31]
 2394 005a 05E0     	 b .L115
 2395              	.L116:
 685:../Libraries/XMCLib/src/xmc_can.c ****   }
 686:../Libraries/XMCLib/src/xmc_can.c ****   else
 687:../Libraries/XMCLib/src/xmc_can.c ****   {
 688:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2396              	 .loc 2 688 0
 2397 005c FB68     	 ldr r3,[r7,#12]
 2398 005e 4FF0E062 	 mov r2,#117440512
 2399 0062 DA61     	 str r2,[r3,#28]
 689:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2400              	 .loc 2 689 0
 2401 0064 0023     	 movs r3,#0
 2402 0066 FB77     	 strb r3,[r7,#31]
 2403              	.L115:
 690:../Libraries/XMCLib/src/xmc_can.c ****   }
 691:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2404              	 .loc 2 691 0
 2405 0068 FB7F     	 ldrb r3,[r7,#31]
 692:../Libraries/XMCLib/src/xmc_can.c **** }
 2406              	 .loc 2 692 0
 2407 006a 1846     	 mov r0,r3
 2408 006c 2437     	 adds r7,r7,#36
 2409              	.LCFI146:
 2410              	 .cfi_def_cfa_offset 4
 2411 006e BD46     	 mov sp,r7
 2412              	.LCFI147:
 2413              	 .cfi_def_cfa_register 13
 2414              	 
 2415 0070 5DF8047B 	 ldr r7,[sp],#4
 2416              	.LCFI148:
 2417              	 .cfi_restore 7
 2418              	 .cfi_def_cfa_offset 0
 2419 0074 7047     	 bx lr
 2420              	 .cfi_endproc
 2421              	.LFE236:
 2423 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2424              	 .align 2
 2425              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2426              	 .thumb
 2427              	 .thumb_func
 2429              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2430              	.LFB237:
 693:../Libraries/XMCLib/src/xmc_can.c **** 
 694:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 695:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 696:../Libraries/XMCLib/src/xmc_can.c **** {
 2431              	 .loc 2 696 0
 2432              	 .cfi_startproc
 2433              	 
 2434              	 
 2435              	 
 2436 0000 80B4     	 push {r7}
 2437              	.LCFI149:
 2438              	 .cfi_def_cfa_offset 4
 2439              	 .cfi_offset 7,-4
 2440 0002 83B0     	 sub sp,sp,#12
 2441              	.LCFI150:
 2442              	 .cfi_def_cfa_offset 16
 2443 0004 00AF     	 add r7,sp,#0
 2444              	.LCFI151:
 2445              	 .cfi_def_cfa_register 7
 2446 0006 7860     	 str r0,[r7,#4]
 2447 0008 3960     	 str r1,[r7]
 697:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2448              	 .loc 2 697 0
 2449 000a 7B68     	 ldr r3,[r7,#4]
 2450 000c 1B68     	 ldr r3,[r3]
 2451 000e 7A68     	 ldr r2,[r7,#4]
 2452 0010 1268     	 ldr r2,[r2]
 2453 0012 1268     	 ldr r2,[r2]
 2454 0014 22F00F02 	 bic r2,r2,#15
 2455 0018 42F00202 	 orr r2,r2,#2
 2456 001c 1A60     	 str r2,[r3]
 698:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 699:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2457              	 .loc 2 699 0
 2458 001e 7B68     	 ldr r3,[r7,#4]
 2459 0020 1B68     	 ldr r3,[r3]
 2460 0022 7A68     	 ldr r2,[r7,#4]
 2461 0024 1268     	 ldr r2,[r2]
 2462 0026 5268     	 ldr r2,[r2,#4]
 2463 0028 02F07F42 	 and r2,r2,#-16777216
 700:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 701:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 702:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2464              	 .loc 2 702 0
 2465 002c 3978     	 ldrb r1,[r7]
 701:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2466              	 .loc 2 701 0
 2467 002e 1143     	 orrs r1,r1,r2
 703:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2468              	 .loc 2 703 0
 2469 0030 BA78     	 ldrb r2,[r7,#2]
 2470 0032 1204     	 lsls r2,r2,#16
 2471 0034 02F47F02 	 and r2,r2,#16711680
 702:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2472              	 .loc 2 702 0
 2473 0038 1143     	 orrs r1,r1,r2
 704:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2474              	 .loc 2 704 0
 2475 003a 7A78     	 ldrb r2,[r7,#1]
 2476 003c 1202     	 lsls r2,r2,#8
 2477 003e 92B2     	 uxth r2,r2
 703:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2478              	 .loc 2 703 0
 2479 0040 0A43     	 orrs r2,r2,r1
 699:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2480              	 .loc 2 699 0
 2481 0042 5A60     	 str r2,[r3,#4]
 705:../Libraries/XMCLib/src/xmc_can.c **** }
 2482              	 .loc 2 705 0
 2483 0044 0C37     	 adds r7,r7,#12
 2484              	.LCFI152:
 2485              	 .cfi_def_cfa_offset 4
 2486 0046 BD46     	 mov sp,r7
 2487              	.LCFI153:
 2488              	 .cfi_def_cfa_register 13
 2489              	 
 2490 0048 5DF8047B 	 ldr r7,[sp],#4
 2491              	.LCFI154:
 2492              	 .cfi_restore 7
 2493              	 .cfi_def_cfa_offset 0
 2494 004c 7047     	 bx lr
 2495              	 .cfi_endproc
 2496              	.LFE237:
 2498 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2499              	 .align 2
 2500              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2501              	 .thumb
 2502              	 .thumb_func
 2504              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2505              	.LFB238:
 706:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 707:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 708:../Libraries/XMCLib/src/xmc_can.c **** {
 2506              	 .loc 2 708 0
 2507              	 .cfi_startproc
 2508              	 
 2509              	 
 2510              	 
 2511 0000 80B4     	 push {r7}
 2512              	.LCFI155:
 2513              	 .cfi_def_cfa_offset 4
 2514              	 .cfi_offset 7,-4
 2515 0002 83B0     	 sub sp,sp,#12
 2516              	.LCFI156:
 2517              	 .cfi_def_cfa_offset 16
 2518 0004 00AF     	 add r7,sp,#0
 2519              	.LCFI157:
 2520              	 .cfi_def_cfa_register 7
 2521 0006 7860     	 str r0,[r7,#4]
 2522 0008 3960     	 str r1,[r7]
 709:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2523              	 .loc 2 709 0
 2524 000a 7B68     	 ldr r3,[r7,#4]
 2525 000c 1B68     	 ldr r3,[r3]
 2526 000e 7A68     	 ldr r2,[r7,#4]
 2527 0010 1268     	 ldr r2,[r2]
 2528 0012 1268     	 ldr r2,[r2]
 2529 0014 22F00F02 	 bic r2,r2,#15
 2530 0018 42F00102 	 orr r2,r2,#1
 2531 001c 1A60     	 str r2,[r3]
 710:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 711:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2532              	 .loc 2 711 0
 2533 001e 7B68     	 ldr r3,[r7,#4]
 2534 0020 1B68     	 ldr r3,[r3]
 2535 0022 7A68     	 ldr r2,[r7,#4]
 2536 0024 1268     	 ldr r2,[r2]
 2537 0026 5268     	 ldr r2,[r2,#4]
 2538 0028 02F07F42 	 and r2,r2,#-16777216
 712:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 713:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 714:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2539              	 .loc 2 714 0
 2540 002c 3978     	 ldrb r1,[r7]
 713:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2541              	 .loc 2 713 0
 2542 002e 1143     	 orrs r1,r1,r2
 715:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2543              	 .loc 2 715 0
 2544 0030 BA78     	 ldrb r2,[r7,#2]
 2545 0032 1204     	 lsls r2,r2,#16
 2546 0034 02F47F02 	 and r2,r2,#16711680
 714:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2547              	 .loc 2 714 0
 2548 0038 1143     	 orrs r1,r1,r2
 716:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2549              	 .loc 2 716 0
 2550 003a 7A78     	 ldrb r2,[r7,#1]
 2551 003c 1202     	 lsls r2,r2,#8
 2552 003e 92B2     	 uxth r2,r2
 715:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2553              	 .loc 2 715 0
 2554 0040 0A43     	 orrs r2,r2,r1
 711:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2555              	 .loc 2 711 0
 2556 0042 5A60     	 str r2,[r3,#4]
 717:../Libraries/XMCLib/src/xmc_can.c **** }
 2557              	 .loc 2 717 0
 2558 0044 0C37     	 adds r7,r7,#12
 2559              	.LCFI158:
 2560              	 .cfi_def_cfa_offset 4
 2561 0046 BD46     	 mov sp,r7
 2562              	.LCFI159:
 2563              	 .cfi_def_cfa_register 13
 2564              	 
 2565 0048 5DF8047B 	 ldr r7,[sp],#4
 2566              	.LCFI160:
 2567              	 .cfi_restore 7
 2568              	 .cfi_def_cfa_offset 0
 2569 004c 7047     	 bx lr
 2570              	 .cfi_endproc
 2571              	.LFE238:
 2573 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2574              	 .align 2
 2575              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2576              	 .thumb
 2577              	 .thumb_func
 2579              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2580              	.LFB239:
 718:../Libraries/XMCLib/src/xmc_can.c **** 
 719:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 720:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 721:../Libraries/XMCLib/src/xmc_can.c **** {
 2581              	 .loc 2 721 0
 2582              	 .cfi_startproc
 2583              	 
 2584              	 
 2585              	 
 2586 0000 80B4     	 push {r7}
 2587              	.LCFI161:
 2588              	 .cfi_def_cfa_offset 4
 2589              	 .cfi_offset 7,-4
 2590 0002 83B0     	 sub sp,sp,#12
 2591              	.LCFI162:
 2592              	 .cfi_def_cfa_offset 16
 2593 0004 00AF     	 add r7,sp,#0
 2594              	.LCFI163:
 2595              	 .cfi_def_cfa_register 7
 2596 0006 7860     	 str r0,[r7,#4]
 2597 0008 3960     	 str r1,[r7]
 722:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2598              	 .loc 2 722 0
 2599 000a 7B68     	 ldr r3,[r7,#4]
 2600 000c 1B68     	 ldr r3,[r3]
 2601 000e 7A68     	 ldr r2,[r7,#4]
 2602 0010 1268     	 ldr r2,[r2]
 2603 0012 1268     	 ldr r2,[r2]
 2604 0014 22F00F02 	 bic r2,r2,#15
 2605 0018 42F00302 	 orr r2,r2,#3
 2606 001c 1A60     	 str r2,[r3]
 723:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 724:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2607              	 .loc 2 724 0
 2608 001e 7B68     	 ldr r3,[r7,#4]
 2609 0020 1B68     	 ldr r3,[r3]
 2610 0022 7A68     	 ldr r2,[r7,#4]
 2611 0024 1268     	 ldr r2,[r2]
 2612 0026 5268     	 ldr r2,[r2,#4]
 2613 0028 22F47F01 	 bic r1,r2,#16711680
 725:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2614              	 .loc 2 725 0
 2615 002c BA78     	 ldrb r2,[r7,#2]
 2616 002e 1204     	 lsls r2,r2,#16
 2617 0030 02F47F02 	 and r2,r2,#16711680
 724:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2618              	 .loc 2 724 0
 2619 0034 0A43     	 orrs r2,r2,r1
 2620 0036 5A60     	 str r2,[r3,#4]
 726:../Libraries/XMCLib/src/xmc_can.c **** 
 727:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 2621              	 .loc 2 727 0
 2622 0038 7B68     	 ldr r3,[r7,#4]
 2623 003a 1B68     	 ldr r3,[r3]
 2624 003c 034A     	 ldr r2,.L121
 2625 003e DA61     	 str r2,[r3,#28]
 728:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 729:../Libraries/XMCLib/src/xmc_can.c **** }
 2626              	 .loc 2 729 0
 2627 0040 0C37     	 adds r7,r7,#12
 2628              	.LCFI164:
 2629              	 .cfi_def_cfa_offset 4
 2630 0042 BD46     	 mov sp,r7
 2631              	.LCFI165:
 2632              	 .cfi_def_cfa_register 13
 2633              	 
 2634 0044 5DF8047B 	 ldr r7,[sp],#4
 2635              	.LCFI166:
 2636              	 .cfi_restore 7
 2637              	 .cfi_def_cfa_offset 0
 2638 0048 7047     	 bx lr
 2639              	.L122:
 2640 004a 00BF     	 .align 2
 2641              	.L121:
 2642 004c 00040002 	 .word 33555456
 2643              	 .cfi_endproc
 2644              	.LFE239:
 2646              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2647              	 .align 2
 2648              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2649              	 .thumb
 2650              	 .thumb_func
 2652              	XMC_CAN_GATEWAY_InitSourceObject:
 2653              	.LFB240:
 730:../Libraries/XMCLib/src/xmc_can.c **** 
 731:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 732:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 733:../Libraries/XMCLib/src/xmc_can.c **** {
 2654              	 .loc 2 733 0
 2655              	 .cfi_startproc
 2656              	 
 2657              	 
 2658              	 
 2659 0000 80B4     	 push {r7}
 2660              	.LCFI167:
 2661              	 .cfi_def_cfa_offset 4
 2662              	 .cfi_offset 7,-4
 2663 0002 85B0     	 sub sp,sp,#20
 2664              	.LCFI168:
 2665              	 .cfi_def_cfa_offset 24
 2666 0004 00AF     	 add r7,sp,#0
 2667              	.LCFI169:
 2668              	 .cfi_def_cfa_register 7
 2669 0006 F860     	 str r0,[r7,#12]
 2670 0008 3B1D     	 adds r3,r7,#4
 2671 000a 83E80600 	 stmia r3,{r1,r2}
 734:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2672              	 .loc 2 734 0
 2673 000e FB68     	 ldr r3,[r7,#12]
 2674 0010 1B68     	 ldr r3,[r3]
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2675              	 .loc 2 735 0
 2676 0012 FA79     	 ldrb r2,[r7,#7]
 2677 0014 1202     	 lsls r2,r2,#8
 2678 0016 02F48071 	 and r1,r2,#256
 736:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2679              	 .loc 2 736 0
 2680 001a 7A7A     	 ldrb r2,[r7,#9]
 2681 001c 9202     	 lsls r2,r2,#10
 2682 001e 02F48062 	 and r2,r2,#1024
 735:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2683              	 .loc 2 735 0
 2684 0022 1143     	 orrs r1,r1,r2
 737:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2685              	 .loc 2 737 0
 2686 0024 3A7A     	 ldrb r2,[r7,#8]
 2687 0026 5202     	 lsls r2,r2,#9
 2688 0028 02F40072 	 and r2,r2,#512
 736:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2689              	 .loc 2 736 0
 2690 002c 1143     	 orrs r1,r1,r2
 738:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2691              	 .loc 2 738 0
 2692 002e BA7A     	 ldrb r2,[r7,#10]
 2693 0030 D202     	 lsls r2,r2,#11
 2694 0032 02F40062 	 and r2,r2,#2048
 737:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2695              	 .loc 2 737 0
 2696 0036 0A43     	 orrs r2,r2,r1
 2697 0038 42F00402 	 orr r2,r2,#4
 734:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2698              	 .loc 2 734 0
 2699 003c 1A60     	 str r2,[r3]
 739:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2700              	 .loc 2 739 0
 2701 003e FB68     	 ldr r3,[r7,#12]
 2702 0040 1B68     	 ldr r3,[r3]
 2703 0042 3A79     	 ldrb r2,[r7,#4]
 2704 0044 1146     	 mov r1,r2
 740:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2705              	 .loc 2 740 0
 2706 0046 BA79     	 ldrb r2,[r7,#6]
 2707 0048 1204     	 lsls r2,r2,#16
 2708 004a 02F47F02 	 and r2,r2,#16711680
 739:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2709              	 .loc 2 739 0
 2710 004e 1143     	 orrs r1,r1,r2
 741:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2711              	 .loc 2 741 0
 2712 0050 7A79     	 ldrb r2,[r7,#5]
 2713 0052 1202     	 lsls r2,r2,#8
 2714 0054 92B2     	 uxth r2,r2
 739:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2715              	 .loc 2 739 0
 2716 0056 0A43     	 orrs r2,r2,r1
 2717 0058 5A60     	 str r2,[r3,#4]
 742:../Libraries/XMCLib/src/xmc_can.c **** }
 2718              	 .loc 2 742 0
 2719 005a 1437     	 adds r7,r7,#20
 2720              	.LCFI170:
 2721              	 .cfi_def_cfa_offset 4
 2722 005c BD46     	 mov sp,r7
 2723              	.LCFI171:
 2724              	 .cfi_def_cfa_register 13
 2725              	 
 2726 005e 5DF8047B 	 ldr r7,[sp],#4
 2727              	.LCFI172:
 2728              	 .cfi_restore 7
 2729              	 .cfi_def_cfa_offset 0
 2730 0062 7047     	 bx lr
 2731              	 .cfi_endproc
 2732              	.LFE240:
 2734              	 .text
 2735              	.Letext0:
 2736              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2737              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2738              	 .file 5 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2739              	 .file 6 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc/xmc4_scu.h"
 2740              	 .file 7 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include/core_cm4.h"
 2741              	 .file 8 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:70     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:74     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:134    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:138    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:179    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:183    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:224    .text.max:00000000 $t
    {standard input}:228    .text.max:00000000 max
    {standard input}:272    .text.min:00000000 $t
    {standard input}:276    .text.min:00000000 min
    {standard input}:319    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:324    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:627    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:632    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:637    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:691    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:696    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:736    .text.XMC_CAN_Disable:00000020 $d
    {standard input}:741    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:746    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:797    .text.XMC_CAN_Enable:00000034 $d
    {standard input}:802    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:807    .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1076   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:869    .text.XMC_CAN_Init:00000000 $t
    {standard input}:874    .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1026   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1021   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1071   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1118   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1123   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1203   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1208   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1269   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1274   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1342   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1347   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1433   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1438   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1641   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1631   .text.XMC_CAN_MO_Config:00000128 $d
    {standard input}:1636   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:1732   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:1737   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:1742   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:1824   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:1829   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:1947   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:1952   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2194   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:2199   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2204   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2261   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2266   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2325   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2330   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2424   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2429   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2499   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2504   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2574   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2579   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2642   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:2647   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2652   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
OSCHP_GetFrequency
