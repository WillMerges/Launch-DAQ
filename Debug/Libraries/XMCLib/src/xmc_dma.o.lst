   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dma.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DMA_GetEventStatus:
  25              	.LFB128:
  26              	 .file 1 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
   2:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
   3:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   4:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2015-06-20
   5:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
   6:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   7:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
   8:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   9:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  10:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.                        
  12:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *                                             
  13:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * following conditions are met:   
  15:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  16:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer.                        
  18:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  19:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  22:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  25:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  33:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
  36:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  37:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  38:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  39:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  40:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  41:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  42:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  43:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  44:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  45:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  49:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  51:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  52:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
  53:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  54:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  55:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  56:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  57:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  58:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  59:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  60:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  61:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  62:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  63:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  64:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  65:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  66:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  67:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
  68:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  69:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  70:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
  71:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  72:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
  73:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  74:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  75:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  76:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  77:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  78:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  79:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  80:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  81:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  82:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  83:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
  84:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  85:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  86:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  87:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
  88:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  89:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  90:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
  91:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  92:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  93:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  94:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
  95:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
  96:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
  97:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
  98:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
  99:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 100:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 101:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 102:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 103:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 104:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 105:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 106:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 107:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 108:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 109:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 110:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 111:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 112:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 113:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 114:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 115:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 116:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 117:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 118:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 119:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 120:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 121:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 122:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 123:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 124:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 125:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 126:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 127:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 128:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 129:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 130:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 131:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 132:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 133:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 134:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 135:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 136:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 137:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 138:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 139:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 140:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 141:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 142:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 143:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 144:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 145:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 146:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 147:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 148:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 149:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 150:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 151:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 152:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 153:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 154:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 155:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 156:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 157:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 158:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 159:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 160:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 161:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 162:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 163:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 164:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 165:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 166:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 167:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 168:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 169:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 170:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 171:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 172:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 173:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 174:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 175:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 176:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 177:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 178:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 179:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 180:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 181:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 182:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 183:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 184:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 185:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 186:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 187:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 188:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 189:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 190:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 191:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 192:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 193:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 194:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 195:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 196:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 197:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 198:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 199:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 200:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 201:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 202:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 203:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 204:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 205:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 206:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 207:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 208:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 209:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 210:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 211:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 212:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 213:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 214:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 215:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 216:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 217:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 218:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 219:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 220:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 221:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 222:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 223:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 224:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 225:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 226:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 227:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 228:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 229:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 230:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 231:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 232:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 233:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 234:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 235:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 236:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 237:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 238:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 239:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 240:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 241:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 242:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 243:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 244:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 245:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 246:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 247:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 248:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 249:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 250:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 251:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 252:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 253:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 254:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 255:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 256:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 257:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 258:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 259:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 260:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 261:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  
 262:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 263:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 264:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 265:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 266:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 267:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 268:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 269:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 270:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 271:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 272:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 273:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 274:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 275:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 276:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 277:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 278:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 279:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 280:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 281:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 282:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 283:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 284:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 285:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 286:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 287:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 288:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 289:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 290:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 291:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 292:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 293:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 294:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 295:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 296:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 297:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 298:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 299:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 300:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 301:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 302:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 303:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 304:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 305:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 306:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 307:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 308:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 309:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 310:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 311:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 312:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 313:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 314:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 315:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 316:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 317:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 318:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 319:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 320:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 321:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 322:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 323:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 324:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 325:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 326:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 327:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma push
 328:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma anon_unions
 329:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 330:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning 586
 331:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 332:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 333:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 334:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 335:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 336:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 337:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 338:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 339:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 340:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 341:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 342:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 343:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 344:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 345:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 346:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 347:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 348:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 349:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 350:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 351:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 352:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 353:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 354:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 355:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 356:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 357:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 358:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 359:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 360:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 361:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 362:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 363:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 364:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 365:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 366:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 367:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 368:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 369:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 370:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 371:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 372:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 373:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 374:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 375:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 376:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 377:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 378:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 379:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 380:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 381:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 382:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width */
 383:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width */
 384:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode */
 385:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode */
 386:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length */
 387:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length */
 388:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 389:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 390:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             
 391:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow */
 392:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;                             
 393:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 394:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 395:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 396:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 397:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 398:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 399:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   
 400:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 401:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 402:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 403:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 404:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 405:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 406:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 407:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 408:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 409:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 410:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   union
 411:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   {
 412:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 413:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 414:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     {
 415:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 416:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 417:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****     };
 418:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   };
 419:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   
 420:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [1-204
 421:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type */
 422:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority */
 423:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface */
 424:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request */
 425:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface */
 426:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request */
 427:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 428:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 429:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 430:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 431:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma pop
 432:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 433:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning restore
 434:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 435:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 436:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 437:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 438:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 439:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 440:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 441:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 442:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 443:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 444:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 445:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 446:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 447:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 448:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 449:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 450:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 451:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 452:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 453:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 454:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 455:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 456:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 457:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 458:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 459:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 460:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 461:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 462:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 463:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 464:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 465:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 466:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 467:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 468:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 469:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 470:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 471:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 472:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 473:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 474:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 475:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 476:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 477:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 478:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 479:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 480:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 481:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 482:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 483:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 484:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 485:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 486:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 487:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 488:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 489:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 490:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 491:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 492:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 493:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 494:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 495:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 496:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 497:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 498:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 499:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 500:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 501:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 502:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 503:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 504:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 505:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 506:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 507:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 508:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 509:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 510:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 511:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 512:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 513:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 514:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 515:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 516:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 517:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 518:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 519:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 520:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 521:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 522:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 523:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 524:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 525:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 526:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 526 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 527:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  43              	 .loc 1 527 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F86033 	 ldr r3,[r3,#864]
 528:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
  46              	 .loc 1 528 0
  47 000e 1846     	 mov r0,r3
  48 0010 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0012 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0014 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0018 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE128:
  63 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_DMA_GetChannelsTransferCompleteStatus:
  69              	.LFB129:
 529:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 530:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 531:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 532:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 533:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 534:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 535:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 536:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 537:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 538:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 539:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 540:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 541:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
  70              	 .loc 1 541 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	.LCFI6:
  77              	 .cfi_def_cfa_offset 4
  78              	 .cfi_offset 7,-4
  79 0002 83B0     	 sub sp,sp,#12
  80              	.LCFI7:
  81              	 .cfi_def_cfa_offset 16
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI8:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
 542:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  86              	 .loc 1 542 0
  87 0008 7B68     	 ldr r3,[r7,#4]
  88 000a D3F8E832 	 ldr r3,[r3,#744]
 543:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
  89              	 .loc 1 543 0
  90 000e 1846     	 mov r0,r3
  91 0010 0C37     	 adds r7,r7,#12
  92              	.LCFI9:
  93              	 .cfi_def_cfa_offset 4
  94 0012 BD46     	 mov sp,r7
  95              	.LCFI10:
  96              	 .cfi_def_cfa_register 13
  97              	 
  98 0014 5DF8047B 	 ldr r7,[sp],#4
  99              	.LCFI11:
 100              	 .cfi_restore 7
 101              	 .cfi_def_cfa_offset 0
 102 0018 7047     	 bx lr
 103              	 .cfi_endproc
 104              	.LFE129:
 106 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 107              	 .align 2
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_DMA_GetChannelsBlockCompleteStatus:
 112              	.LFB130:
 544:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 545:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 546:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 547:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 548:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 549:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 550:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 551:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 552:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 553:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 554:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 555:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 556:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 113              	 .loc 1 556 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117              	 
 118 0000 80B4     	 push {r7}
 119              	.LCFI12:
 120              	 .cfi_def_cfa_offset 4
 121              	 .cfi_offset 7,-4
 122 0002 83B0     	 sub sp,sp,#12
 123              	.LCFI13:
 124              	 .cfi_def_cfa_offset 16
 125 0004 00AF     	 add r7,sp,#0
 126              	.LCFI14:
 127              	 .cfi_def_cfa_register 7
 128 0006 7860     	 str r0,[r7,#4]
 557:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 129              	 .loc 1 557 0
 130 0008 7B68     	 ldr r3,[r7,#4]
 131 000a D3F8F032 	 ldr r3,[r3,#752]
 558:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 132              	 .loc 1 558 0
 133 000e 1846     	 mov r0,r3
 134 0010 0C37     	 adds r7,r7,#12
 135              	.LCFI15:
 136              	 .cfi_def_cfa_offset 4
 137 0012 BD46     	 mov sp,r7
 138              	.LCFI16:
 139              	 .cfi_def_cfa_register 13
 140              	 
 141 0014 5DF8047B 	 ldr r7,[sp],#4
 142              	.LCFI17:
 143              	 .cfi_restore 7
 144              	 .cfi_def_cfa_offset 0
 145 0018 7047     	 bx lr
 146              	 .cfi_endproc
 147              	.LFE130:
 149 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 150              	 .align 2
 151              	 .thumb
 152              	 .thumb_func
 154              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 155              	.LFB131:
 559:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 560:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 561:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 562:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 563:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 564:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 565:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 566:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 567:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 568:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 569:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 570:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 571:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 572:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 573:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 574:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 575:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 156              	 .loc 1 575 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160              	 
 161 0000 80B4     	 push {r7}
 162              	.LCFI18:
 163              	 .cfi_def_cfa_offset 4
 164              	 .cfi_offset 7,-4
 165 0002 83B0     	 sub sp,sp,#12
 166              	.LCFI19:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI20:
 170              	 .cfi_def_cfa_register 7
 171 0006 7860     	 str r0,[r7,#4]
 576:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 172              	 .loc 1 576 0
 173 0008 7B68     	 ldr r3,[r7,#4]
 174 000a D3F8F832 	 ldr r3,[r3,#760]
 577:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 175              	 .loc 1 577 0
 176 000e 1846     	 mov r0,r3
 177 0010 0C37     	 adds r7,r7,#12
 178              	.LCFI21:
 179              	 .cfi_def_cfa_offset 4
 180 0012 BD46     	 mov sp,r7
 181              	.LCFI22:
 182              	 .cfi_def_cfa_register 13
 183              	 
 184 0014 5DF8047B 	 ldr r7,[sp],#4
 185              	.LCFI23:
 186              	 .cfi_restore 7
 187              	 .cfi_def_cfa_offset 0
 188 0018 7047     	 bx lr
 189              	 .cfi_endproc
 190              	.LFE131:
 192 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 193              	 .align 2
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 198              	.LFB132:
 578:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 579:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 580:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 581:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 582:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 583:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 584:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 585:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 586:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 587:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 588:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 589:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 590:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 591:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 592:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 593:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 594:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 199              	 .loc 1 594 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203              	 
 204 0000 80B4     	 push {r7}
 205              	.LCFI24:
 206              	 .cfi_def_cfa_offset 4
 207              	 .cfi_offset 7,-4
 208 0002 83B0     	 sub sp,sp,#12
 209              	.LCFI25:
 210              	 .cfi_def_cfa_offset 16
 211 0004 00AF     	 add r7,sp,#0
 212              	.LCFI26:
 213              	 .cfi_def_cfa_register 7
 214 0006 7860     	 str r0,[r7,#4]
 595:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 215              	 .loc 1 595 0
 216 0008 7B68     	 ldr r3,[r7,#4]
 217 000a D3F80033 	 ldr r3,[r3,#768]
 596:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 218              	 .loc 1 596 0
 219 000e 1846     	 mov r0,r3
 220 0010 0C37     	 adds r7,r7,#12
 221              	.LCFI27:
 222              	 .cfi_def_cfa_offset 4
 223 0012 BD46     	 mov sp,r7
 224              	.LCFI28:
 225              	 .cfi_def_cfa_register 13
 226              	 
 227 0014 5DF8047B 	 ldr r7,[sp],#4
 228              	.LCFI29:
 229              	 .cfi_restore 7
 230              	 .cfi_def_cfa_offset 0
 231 0018 7047     	 bx lr
 232              	 .cfi_endproc
 233              	.LFE132:
 235 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 236              	 .align 2
 237              	 .thumb
 238              	 .thumb_func
 240              	XMC_DMA_GetChannelsErrorStatus:
 241              	.LFB133:
 597:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** 
 598:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** /**
 599:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 600:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 601:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 602:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 603:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 604:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  *
 605:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 606:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 607:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****  */
 608:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 609:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** {
 242              	 .loc 1 609 0
 243              	 .cfi_startproc
 244              	 
 245              	 
 246              	 
 247 0000 80B4     	 push {r7}
 248              	.LCFI30:
 249              	 .cfi_def_cfa_offset 4
 250              	 .cfi_offset 7,-4
 251 0002 83B0     	 sub sp,sp,#12
 252              	.LCFI31:
 253              	 .cfi_def_cfa_offset 16
 254 0004 00AF     	 add r7,sp,#0
 255              	.LCFI32:
 256              	 .cfi_def_cfa_register 7
 257 0006 7860     	 str r0,[r7,#4]
 610:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 258              	 .loc 1 610 0
 259 0008 7B68     	 ldr r3,[r7,#4]
 260 000a D3F80833 	 ldr r3,[r3,#776]
 611:C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc\xmc_dma.h **** }
 261              	 .loc 1 611 0
 262 000e 1846     	 mov r0,r3
 263 0010 0C37     	 adds r7,r7,#12
 264              	.LCFI33:
 265              	 .cfi_def_cfa_offset 4
 266 0012 BD46     	 mov sp,r7
 267              	.LCFI34:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 0014 5DF8047B 	 ldr r7,[sp],#4
 271              	.LCFI35:
 272              	 .cfi_restore 7
 273              	 .cfi_def_cfa_offset 0
 274 0018 7047     	 bx lr
 275              	 .cfi_endproc
 276              	.LFE133:
 278              	 .comm dma0_event_handlers,32,4
 279              	 .comm dma1_event_handlers,16,4
 280 001a 00BF     	 .section .text.XMC_DMA_Init,"ax",%progbits
 281              	 .align 2
 282              	 .global XMC_DMA_Init
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_DMA_Init:
 287              	.LFB173:
 288              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2016-04-08
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_dma.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_dma.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_dma.c ****  *
  40:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_dma.c ****  *
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  45:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *
  51:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  56:../Libraries/XMCLib/src/xmc_dma.c ****  *
  57:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *
  60:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  62:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV 
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  65:../Libraries/XMCLib/src/xmc_dma.c ****  *
  66:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  67:../Libraries/XMCLib/src/xmc_dma.c ****  */
  68:../Libraries/XMCLib/src/xmc_dma.c **** 
  69:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  70:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  71:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  72:../Libraries/XMCLib/src/xmc_dma.c **** 
  73:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  74:../Libraries/XMCLib/src/xmc_dma.c **** 
  75:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  76:../Libraries/XMCLib/src/xmc_dma.c **** 
  77:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  78:../Libraries/XMCLib/src/xmc_dma.c **** 
  79:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  80:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  81:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  82:../Libraries/XMCLib/src/xmc_dma.c **** 
  83:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  84:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  85:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  86:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  87:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  88:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
  89:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
  90:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
  91:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
  92:../Libraries/XMCLib/src/xmc_dma.c **** 
  93:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  94:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
  95:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  96:../Libraries/XMCLib/src/xmc_dma.c **** 
  97:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  98:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
  99:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 100:../Libraries/XMCLib/src/xmc_dma.c **** 
 101:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 102:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 103:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 104:../Libraries/XMCLib/src/xmc_dma.c ****  
 105:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 106:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 107:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 108:../Libraries/XMCLib/src/xmc_dma.c **** 
 109:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 110:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 111:../Libraries/XMCLib/src/xmc_dma.c **** {
 289              	 .loc 2 111 0
 290              	 .cfi_startproc
 291              	 
 292              	 
 293 0000 80B5     	 push {r7,lr}
 294              	.LCFI36:
 295              	 .cfi_def_cfa_offset 8
 296              	 .cfi_offset 7,-8
 297              	 .cfi_offset 14,-4
 298 0002 82B0     	 sub sp,sp,#8
 299              	.LCFI37:
 300              	 .cfi_def_cfa_offset 16
 301 0004 00AF     	 add r7,sp,#0
 302              	.LCFI38:
 303              	 .cfi_def_cfa_register 7
 304 0006 7860     	 str r0,[r7,#4]
 112:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 305              	 .loc 2 112 0
 306 0008 7868     	 ldr r0,[r7,#4]
 307 000a FFF7FEFF 	 bl XMC_DMA_Enable
 113:../Libraries/XMCLib/src/xmc_dma.c **** }
 308              	 .loc 2 113 0
 309 000e 0837     	 adds r7,r7,#8
 310              	.LCFI39:
 311              	 .cfi_def_cfa_offset 8
 312 0010 BD46     	 mov sp,r7
 313              	.LCFI40:
 314              	 .cfi_def_cfa_register 13
 315              	 
 316 0012 80BD     	 pop {r7,pc}
 317              	 .cfi_endproc
 318              	.LFE173:
 320              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 321              	 .align 2
 322              	 .global XMC_DMA_Enable
 323              	 .thumb
 324              	 .thumb_func
 326              	XMC_DMA_Enable:
 327              	.LFB174:
 114:../Libraries/XMCLib/src/xmc_dma.c **** 
 115:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 116:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 117:../Libraries/XMCLib/src/xmc_dma.c **** {
 328              	 .loc 2 117 0
 329              	 .cfi_startproc
 330              	 
 331              	 
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI41:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 82B0     	 sub sp,sp,#8
 338              	.LCFI42:
 339              	 .cfi_def_cfa_offset 16
 340 0004 00AF     	 add r7,sp,#0
 341              	.LCFI43:
 342              	 .cfi_def_cfa_register 7
 343 0006 7860     	 str r0,[r7,#4]
 118:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 119:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 344              	 .loc 2 119 0
 345 0008 7B68     	 ldr r3,[r7,#4]
 346 000a 0B4A     	 ldr r2,.L17
 347 000c 9342     	 cmp r3,r2
 348 000e 06D1     	 bne .L15
 120:../Libraries/XMCLib/src/xmc_dma.c ****   {
 121:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 122:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 123:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 349              	 .loc 2 123 0
 350 0010 0A48     	 ldr r0,.L17+4
 351 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 124:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 125:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 352              	 .loc 2 125 0
 353 0016 0948     	 ldr r0,.L17+4
 354 0018 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 355 001c 05E0     	 b .L16
 356              	.L15:
 126:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 127:../Libraries/XMCLib/src/xmc_dma.c ****   }
 128:../Libraries/XMCLib/src/xmc_dma.c ****   else
 129:../Libraries/XMCLib/src/xmc_dma.c ****   {
 130:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 131:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 357              	 .loc 2 131 0
 358 001e 0848     	 ldr r0,.L17+8
 359 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 132:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 133:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 360              	 .loc 2 133 0
 361 0024 0648     	 ldr r0,.L17+8
 362 0026 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 363              	.L16:
 134:../Libraries/XMCLib/src/xmc_dma.c ****   }
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c **** 
 137:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 364              	 .loc 2 137 0
 365 002a 7B68     	 ldr r3,[r7,#4]
 366 002c 0122     	 movs r2,#1
 367 002e C3F89823 	 str r2,[r3,#920]
 138:../Libraries/XMCLib/src/xmc_dma.c **** }
 368              	 .loc 2 138 0
 369 0032 0837     	 adds r7,r7,#8
 370              	.LCFI44:
 371              	 .cfi_def_cfa_offset 8
 372 0034 BD46     	 mov sp,r7
 373              	.LCFI45:
 374              	 .cfi_def_cfa_register 13
 375              	 
 376 0036 80BD     	 pop {r7,pc}
 377              	.L18:
 378              	 .align 2
 379              	.L17:
 380 0038 00400150 	 .word 1342259200
 381 003c 10000020 	 .word 536870928
 382 0040 20000020 	 .word 536870944
 383              	 .cfi_endproc
 384              	.LFE174:
 386              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 387              	 .align 2
 388              	 .global XMC_DMA_Disable
 389              	 .thumb
 390              	 .thumb_func
 392              	XMC_DMA_Disable:
 393              	.LFB175:
 139:../Libraries/XMCLib/src/xmc_dma.c **** 
 140:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 141:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 142:../Libraries/XMCLib/src/xmc_dma.c **** {
 394              	 .loc 2 142 0
 395              	 .cfi_startproc
 396              	 
 397              	 
 398 0000 80B5     	 push {r7,lr}
 399              	.LCFI46:
 400              	 .cfi_def_cfa_offset 8
 401              	 .cfi_offset 7,-8
 402              	 .cfi_offset 14,-4
 403 0002 82B0     	 sub sp,sp,#8
 404              	.LCFI47:
 405              	 .cfi_def_cfa_offset 16
 406 0004 00AF     	 add r7,sp,#0
 407              	.LCFI48:
 408              	 .cfi_def_cfa_register 7
 409 0006 7860     	 str r0,[r7,#4]
 143:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 410              	 .loc 2 143 0
 411 0008 7B68     	 ldr r3,[r7,#4]
 412 000a 0022     	 movs r2,#0
 413 000c C3F89823 	 str r2,[r3,#920]
 144:../Libraries/XMCLib/src/xmc_dma.c **** 
 145:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 146:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 414              	 .loc 2 146 0
 415 0010 7B68     	 ldr r3,[r7,#4]
 416 0012 094A     	 ldr r2,.L22
 417 0014 9342     	 cmp r3,r2
 418 0016 06D1     	 bne .L20
 147:../Libraries/XMCLib/src/xmc_dma.c ****   {
 148:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 149:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 419              	 .loc 2 149 0
 420 0018 0848     	 ldr r0,.L22+4
 421 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 150:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 151:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 422              	 .loc 2 151 0
 423 001e 0748     	 ldr r0,.L22+4
 424 0020 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 425 0024 05E0     	 b .L19
 426              	.L20:
 152:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 153:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 154:../Libraries/XMCLib/src/xmc_dma.c ****   }
 155:../Libraries/XMCLib/src/xmc_dma.c ****   else
 156:../Libraries/XMCLib/src/xmc_dma.c ****   {
 157:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 427              	 .loc 2 157 0
 428 0026 0648     	 ldr r0,.L22+8
 429 0028 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 158:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 159:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 430              	 .loc 2 159 0
 431 002c 0448     	 ldr r0,.L22+8
 432 002e FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 433              	.L19:
 160:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 161:../Libraries/XMCLib/src/xmc_dma.c ****   }
 162:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 163:../Libraries/XMCLib/src/xmc_dma.c **** }
 434              	 .loc 2 163 0
 435 0032 0837     	 adds r7,r7,#8
 436              	.LCFI49:
 437              	 .cfi_def_cfa_offset 8
 438 0034 BD46     	 mov sp,r7
 439              	.LCFI50:
 440              	 .cfi_def_cfa_register 13
 441              	 
 442 0036 80BD     	 pop {r7,pc}
 443              	.L23:
 444              	 .align 2
 445              	.L22:
 446 0038 00400150 	 .word 1342259200
 447 003c 10000020 	 .word 536870928
 448 0040 20000020 	 .word 536870944
 449              	 .cfi_endproc
 450              	.LFE175:
 452              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 453              	 .align 2
 454              	 .global XMC_DMA_IsEnabled
 455              	 .thumb
 456              	 .thumb_func
 458              	XMC_DMA_IsEnabled:
 459              	.LFB176:
 164:../Libraries/XMCLib/src/xmc_dma.c **** 
 165:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 166:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 167:../Libraries/XMCLib/src/xmc_dma.c **** {
 460              	 .loc 2 167 0
 461              	 .cfi_startproc
 462              	 
 463              	 
 464 0000 80B5     	 push {r7,lr}
 465              	.LCFI51:
 466              	 .cfi_def_cfa_offset 8
 467              	 .cfi_offset 7,-8
 468              	 .cfi_offset 14,-4
 469 0002 84B0     	 sub sp,sp,#16
 470              	.LCFI52:
 471              	 .cfi_def_cfa_offset 24
 472 0004 00AF     	 add r7,sp,#0
 473              	.LCFI53:
 474              	 .cfi_def_cfa_register 7
 475 0006 7860     	 str r0,[r7,#4]
 168:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 169:../Libraries/XMCLib/src/xmc_dma.c **** 
 170:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 171:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 476              	 .loc 2 171 0
 477 0008 7B68     	 ldr r3,[r7,#4]
 478 000a 334A     	 ldr r2,.L35
 479 000c 9342     	 cmp r3,r2
 480 000e 25D1     	 bne .L25
 172:../Libraries/XMCLib/src/xmc_dma.c ****   {
 173:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 174:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 481              	 .loc 2 174 0
 482 0010 3248     	 ldr r0,.L35+4
 483 0012 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 484 0016 0346     	 mov r3,r0
 485 0018 002B     	 cmp r3,#0
 486 001a 14BF     	 ite ne
 487 001c 0123     	 movne r3,#1
 488 001e 0023     	 moveq r3,#0
 489 0020 DBB2     	 uxtb r3,r3
 490 0022 83F00103 	 eor r3,r3,#1
 491 0026 DBB2     	 uxtb r3,r3
 492 0028 FB73     	 strb r3,[r7,#15]
 493 002a FB7B     	 ldrb r3,[r7,#15]
 494 002c 03F00103 	 and r3,r3,#1
 495 0030 FB73     	 strb r3,[r7,#15]
 175:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 176:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 496              	 .loc 2 176 0
 497 0032 FB7B     	 ldrb r3,[r7,#15]
 498 0034 002B     	 cmp r3,#0
 499 0036 0AD0     	 beq .L26
 500              	 .loc 2 176 0 is_stmt 0 discriminator 1
 501 0038 2848     	 ldr r0,.L35+4
 502 003a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 503 003e 0346     	 mov r3,r0
 504 0040 83F00103 	 eor r3,r3,#1
 505 0044 DBB2     	 uxtb r3,r3
 506 0046 002B     	 cmp r3,#0
 507 0048 01D0     	 beq .L26
 508              	 .loc 2 176 0 discriminator 3
 509 004a 0123     	 movs r3,#1
 510 004c 00E0     	 b .L27
 511              	.L26:
 512              	 .loc 2 176 0 discriminator 4
 513 004e 0023     	 movs r3,#0
 514              	.L27:
 515              	 .loc 2 176 0 discriminator 6
 516 0050 FB73     	 strb r3,[r7,#15]
 517 0052 FB7B     	 ldrb r3,[r7,#15]
 518 0054 03F00103 	 and r3,r3,#1
 519 0058 FB73     	 strb r3,[r7,#15]
 520 005a 24E0     	 b .L28
 521              	.L25:
 177:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 178:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 179:../Libraries/XMCLib/src/xmc_dma.c ****   }
 180:../Libraries/XMCLib/src/xmc_dma.c ****   else
 181:../Libraries/XMCLib/src/xmc_dma.c ****   {
 182:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 522              	 .loc 2 182 0 is_stmt 1
 523 005c 2048     	 ldr r0,.L35+8
 524 005e FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 525 0062 0346     	 mov r3,r0
 526 0064 002B     	 cmp r3,#0
 527 0066 14BF     	 ite ne
 528 0068 0123     	 movne r3,#1
 529 006a 0023     	 moveq r3,#0
 530 006c DBB2     	 uxtb r3,r3
 531 006e 83F00103 	 eor r3,r3,#1
 532 0072 DBB2     	 uxtb r3,r3
 533 0074 FB73     	 strb r3,[r7,#15]
 534 0076 FB7B     	 ldrb r3,[r7,#15]
 535 0078 03F00103 	 and r3,r3,#1
 536 007c FB73     	 strb r3,[r7,#15]
 183:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 184:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 537              	 .loc 2 184 0
 538 007e FB7B     	 ldrb r3,[r7,#15]
 539 0080 002B     	 cmp r3,#0
 540 0082 0AD0     	 beq .L29
 541              	 .loc 2 184 0 is_stmt 0 discriminator 1
 542 0084 1648     	 ldr r0,.L35+8
 543 0086 FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 544 008a 0346     	 mov r3,r0
 545 008c 83F00103 	 eor r3,r3,#1
 546 0090 DBB2     	 uxtb r3,r3
 547 0092 002B     	 cmp r3,#0
 548 0094 01D0     	 beq .L29
 549              	 .loc 2 184 0 discriminator 3
 550 0096 0123     	 movs r3,#1
 551 0098 00E0     	 b .L30
 552              	.L29:
 553              	 .loc 2 184 0 discriminator 4
 554 009a 0023     	 movs r3,#0
 555              	.L30:
 556              	 .loc 2 184 0 discriminator 6
 557 009c FB73     	 strb r3,[r7,#15]
 558 009e FB7B     	 ldrb r3,[r7,#15]
 559 00a0 03F00103 	 and r3,r3,#1
 560 00a4 FB73     	 strb r3,[r7,#15]
 561              	.L28:
 185:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 186:../Libraries/XMCLib/src/xmc_dma.c ****   }
 187:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 188:../Libraries/XMCLib/src/xmc_dma.c **** 
 189:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 190:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 562              	 .loc 2 190 0 is_stmt 1
 563 00a6 FB7B     	 ldrb r3,[r7,#15]
 564 00a8 002B     	 cmp r3,#0
 565 00aa 0FD0     	 beq .L31
 191:../Libraries/XMCLib/src/xmc_dma.c ****   {
 192:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 566              	 .loc 2 192 0
 567 00ac FB7B     	 ldrb r3,[r7,#15]
 568 00ae 002B     	 cmp r3,#0
 569 00b0 06D0     	 beq .L32
 570              	 .loc 2 192 0 is_stmt 0 discriminator 1
 571 00b2 7B68     	 ldr r3,[r7,#4]
 572 00b4 D3F89833 	 ldr r3,[r3,#920]
 573 00b8 002B     	 cmp r3,#0
 574 00ba 01D0     	 beq .L32
 575              	 .loc 2 192 0 discriminator 3
 576 00bc 0123     	 movs r3,#1
 577 00be 00E0     	 b .L33
 578              	.L32:
 579              	 .loc 2 192 0 discriminator 4
 580 00c0 0023     	 movs r3,#0
 581              	.L33:
 582              	 .loc 2 192 0 discriminator 6
 583 00c2 FB73     	 strb r3,[r7,#15]
 584 00c4 FB7B     	 ldrb r3,[r7,#15]
 585 00c6 03F00103 	 and r3,r3,#1
 586 00ca FB73     	 strb r3,[r7,#15]
 587              	.L31:
 193:../Libraries/XMCLib/src/xmc_dma.c ****   }
 194:../Libraries/XMCLib/src/xmc_dma.c **** 
 195:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 588              	 .loc 2 195 0 is_stmt 1
 589 00cc FB7B     	 ldrb r3,[r7,#15]
 196:../Libraries/XMCLib/src/xmc_dma.c **** }
 590              	 .loc 2 196 0
 591 00ce 1846     	 mov r0,r3
 592 00d0 1037     	 adds r7,r7,#16
 593              	.LCFI54:
 594              	 .cfi_def_cfa_offset 8
 595 00d2 BD46     	 mov sp,r7
 596              	.LCFI55:
 597              	 .cfi_def_cfa_register 13
 598              	 
 599 00d4 80BD     	 pop {r7,pc}
 600              	.L36:
 601 00d6 00BF     	 .align 2
 602              	.L35:
 603 00d8 00400150 	 .word 1342259200
 604 00dc 10000020 	 .word 536870928
 605 00e0 20000020 	 .word 536870944
 606              	 .cfi_endproc
 607              	.LFE176:
 609              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 610              	 .align 2
 611              	 .global XMC_DMA_EnableRequestLine
 612              	 .thumb
 613              	 .thumb_func
 615              	XMC_DMA_EnableRequestLine:
 616              	.LFB177:
 197:../Libraries/XMCLib/src/xmc_dma.c **** 
 198:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 199:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 200:../Libraries/XMCLib/src/xmc_dma.c **** {
 617              	 .loc 2 200 0
 618              	 .cfi_startproc
 619              	 
 620              	 
 621              	 
 622 0000 80B4     	 push {r7}
 623              	.LCFI56:
 624              	 .cfi_def_cfa_offset 4
 625              	 .cfi_offset 7,-4
 626 0002 83B0     	 sub sp,sp,#12
 627              	.LCFI57:
 628              	 .cfi_def_cfa_offset 16
 629 0004 00AF     	 add r7,sp,#0
 630              	.LCFI58:
 631              	 .cfi_def_cfa_register 7
 632 0006 7860     	 str r0,[r7,#4]
 633 0008 0B46     	 mov r3,r1
 634 000a FB70     	 strb r3,[r7,#3]
 635 000c 1346     	 mov r3,r2
 636 000e BB70     	 strb r3,[r7,#2]
 201:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 202:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 637              	 .loc 2 202 0
 638 0010 7B68     	 ldr r3,[r7,#4]
 639 0012 1F4A     	 ldr r2,.L40
 640 0014 9342     	 cmp r3,r2
 641 0016 1BD1     	 bne .L38
 203:../Libraries/XMCLib/src/xmc_dma.c ****   {
 204:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 205:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 642              	 .loc 2 205 0
 643 0018 1E48     	 ldr r0,.L40+4
 644 001a 1E4B     	 ldr r3,.L40+4
 645 001c 9A68     	 ldr r2,[r3,#8]
 646 001e FB78     	 ldrb r3,[r7,#3]
 647 0020 9B00     	 lsls r3,r3,#2
 648 0022 1946     	 mov r1,r3
 649 0024 0F23     	 movs r3,#15
 650 0026 8B40     	 lsls r3,r3,r1
 651 0028 DB43     	 mvns r3,r3
 652 002a 1A40     	 ands r2,r2,r3
 206:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 653              	 .loc 2 206 0
 654 002c BB78     	 ldrb r3,[r7,#2]
 655 002e F978     	 ldrb r1,[r7,#3]
 656 0030 8900     	 lsls r1,r1,#2
 657 0032 8B40     	 lsls r3,r3,r1
 205:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 658              	 .loc 2 205 0
 659 0034 1343     	 orrs r3,r3,r2
 660 0036 8360     	 str r3,[r0,#8]
 207:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 661              	 .loc 2 207 0
 662 0038 1649     	 ldr r1,.L40+4
 663 003a 164B     	 ldr r3,.L40+4
 664 003c 1A69     	 ldr r2,[r3,#16]
 665 003e FB78     	 ldrb r3,[r7,#3]
 666 0040 03F00703 	 and r3,r3,#7
 667 0044 0120     	 movs r0,#1
 668 0046 00FA03F3 	 lsl r3,r0,r3
 669 004a 1343     	 orrs r3,r3,r2
 670 004c 0B61     	 str r3,[r1,#16]
 671 004e 19E0     	 b .L37
 672              	.L38:
 208:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 209:../Libraries/XMCLib/src/xmc_dma.c ****   }
 210:../Libraries/XMCLib/src/xmc_dma.c ****   else
 211:../Libraries/XMCLib/src/xmc_dma.c ****   {
 212:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 673              	 .loc 2 212 0
 674 0050 1048     	 ldr r0,.L40+4
 675 0052 104B     	 ldr r3,.L40+4
 676 0054 DA68     	 ldr r2,[r3,#12]
 677 0056 FB78     	 ldrb r3,[r7,#3]
 678 0058 9B00     	 lsls r3,r3,#2
 679 005a 1946     	 mov r1,r3
 680 005c 0F23     	 movs r3,#15
 681 005e 8B40     	 lsls r3,r3,r1
 682 0060 DB43     	 mvns r3,r3
 683 0062 1A40     	 ands r2,r2,r3
 213:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 684              	 .loc 2 213 0
 685 0064 BB78     	 ldrb r3,[r7,#2]
 686 0066 F978     	 ldrb r1,[r7,#3]
 687 0068 8900     	 lsls r1,r1,#2
 688 006a 8B40     	 lsls r3,r3,r1
 212:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 689              	 .loc 2 212 0
 690 006c 1343     	 orrs r3,r3,r2
 691 006e C360     	 str r3,[r0,#12]
 214:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 692              	 .loc 2 214 0
 693 0070 0849     	 ldr r1,.L40+4
 694 0072 084B     	 ldr r3,.L40+4
 695 0074 1A69     	 ldr r2,[r3,#16]
 696 0076 FB78     	 ldrb r3,[r7,#3]
 697 0078 4FF48070 	 mov r0,#256
 698 007c 00FA03F3 	 lsl r3,r0,r3
 699 0080 1343     	 orrs r3,r3,r2
 700 0082 0B61     	 str r3,[r1,#16]
 701              	.L37:
 215:../Libraries/XMCLib/src/xmc_dma.c ****   }
 216:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 217:../Libraries/XMCLib/src/xmc_dma.c **** }
 702              	 .loc 2 217 0
 703 0084 0C37     	 adds r7,r7,#12
 704              	.LCFI59:
 705              	 .cfi_def_cfa_offset 4
 706 0086 BD46     	 mov sp,r7
 707              	.LCFI60:
 708              	 .cfi_def_cfa_register 13
 709              	 
 710 0088 5DF8047B 	 ldr r7,[sp],#4
 711              	.LCFI61:
 712              	 .cfi_restore 7
 713              	 .cfi_def_cfa_offset 0
 714 008c 7047     	 bx lr
 715              	.L41:
 716 008e 00BF     	 .align 2
 717              	.L40:
 718 0090 00400150 	 .word 1342259200
 719 0094 00490050 	 .word 1342195968
 720              	 .cfi_endproc
 721              	.LFE177:
 723              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 724              	 .align 2
 725              	 .global XMC_DMA_DisableRequestLine
 726              	 .thumb
 727              	 .thumb_func
 729              	XMC_DMA_DisableRequestLine:
 730              	.LFB178:
 218:../Libraries/XMCLib/src/xmc_dma.c **** 
 219:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 220:../Libraries/XMCLib/src/xmc_dma.c **** {
 731              	 .loc 2 220 0
 732              	 .cfi_startproc
 733              	 
 734              	 
 735              	 
 736 0000 80B4     	 push {r7}
 737              	.LCFI62:
 738              	 .cfi_def_cfa_offset 4
 739              	 .cfi_offset 7,-4
 740 0002 83B0     	 sub sp,sp,#12
 741              	.LCFI63:
 742              	 .cfi_def_cfa_offset 16
 743 0004 00AF     	 add r7,sp,#0
 744              	.LCFI64:
 745              	 .cfi_def_cfa_register 7
 746 0006 7860     	 str r0,[r7,#4]
 747 0008 0B46     	 mov r3,r1
 748 000a FB70     	 strb r3,[r7,#3]
 221:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 222:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 749              	 .loc 2 222 0
 750 000c 7B68     	 ldr r3,[r7,#4]
 751 000e 0F4A     	 ldr r2,.L45
 752 0010 9342     	 cmp r3,r2
 753 0012 0AD1     	 bne .L43
 223:../Libraries/XMCLib/src/xmc_dma.c ****   {
 224:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 225:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 754              	 .loc 2 225 0
 755 0014 0E49     	 ldr r1,.L45+4
 756 0016 0E4B     	 ldr r3,.L45+4
 757 0018 1A69     	 ldr r2,[r3,#16]
 758 001a FB78     	 ldrb r3,[r7,#3]
 759 001c 0120     	 movs r0,#1
 760 001e 00FA03F3 	 lsl r3,r0,r3
 761 0022 DB43     	 mvns r3,r3
 762 0024 1340     	 ands r3,r3,r2
 763 0026 0B61     	 str r3,[r1,#16]
 764 0028 0AE0     	 b .L42
 765              	.L43:
 226:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 227:../Libraries/XMCLib/src/xmc_dma.c ****   }
 228:../Libraries/XMCLib/src/xmc_dma.c ****   else
 229:../Libraries/XMCLib/src/xmc_dma.c ****   {
 230:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 766              	 .loc 2 230 0
 767 002a 0949     	 ldr r1,.L45+4
 768 002c 084B     	 ldr r3,.L45+4
 769 002e 1A69     	 ldr r2,[r3,#16]
 770 0030 FB78     	 ldrb r3,[r7,#3]
 771 0032 4FF48070 	 mov r0,#256
 772 0036 00FA03F3 	 lsl r3,r0,r3
 773 003a DB43     	 mvns r3,r3
 774 003c 1340     	 ands r3,r3,r2
 775 003e 0B61     	 str r3,[r1,#16]
 776              	.L42:
 231:../Libraries/XMCLib/src/xmc_dma.c ****   }
 232:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 233:../Libraries/XMCLib/src/xmc_dma.c **** }
 777              	 .loc 2 233 0
 778 0040 0C37     	 adds r7,r7,#12
 779              	.LCFI65:
 780              	 .cfi_def_cfa_offset 4
 781 0042 BD46     	 mov sp,r7
 782              	.LCFI66:
 783              	 .cfi_def_cfa_register 13
 784              	 
 785 0044 5DF8047B 	 ldr r7,[sp],#4
 786              	.LCFI67:
 787              	 .cfi_restore 7
 788              	 .cfi_def_cfa_offset 0
 789 0048 7047     	 bx lr
 790              	.L46:
 791 004a 00BF     	 .align 2
 792              	.L45:
 793 004c 00400150 	 .word 1342259200
 794 0050 00490050 	 .word 1342195968
 795              	 .cfi_endproc
 796              	.LFE178:
 798              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 799              	 .align 2
 800              	 .global XMC_DMA_ClearRequestLine
 801              	 .thumb
 802              	 .thumb_func
 804              	XMC_DMA_ClearRequestLine:
 805              	.LFB179:
 234:../Libraries/XMCLib/src/xmc_dma.c **** 
 235:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 236:../Libraries/XMCLib/src/xmc_dma.c **** {
 806              	 .loc 2 236 0
 807              	 .cfi_startproc
 808              	 
 809              	 
 810              	 
 811 0000 80B4     	 push {r7}
 812              	.LCFI68:
 813              	 .cfi_def_cfa_offset 4
 814              	 .cfi_offset 7,-4
 815 0002 83B0     	 sub sp,sp,#12
 816              	.LCFI69:
 817              	 .cfi_def_cfa_offset 16
 818 0004 00AF     	 add r7,sp,#0
 819              	.LCFI70:
 820              	 .cfi_def_cfa_register 7
 821 0006 7860     	 str r0,[r7,#4]
 822 0008 0B46     	 mov r3,r1
 823 000a FB70     	 strb r3,[r7,#3]
 237:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 238:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 824              	 .loc 2 238 0
 825 000c 7B68     	 ldr r3,[r7,#4]
 826 000e 184A     	 ldr r2,.L50
 827 0010 9342     	 cmp r3,r2
 828 0012 13D1     	 bne .L48
 239:../Libraries/XMCLib/src/xmc_dma.c ****   {
 240:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 241:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 829              	 .loc 2 241 0
 830 0014 1749     	 ldr r1,.L50+4
 831 0016 174B     	 ldr r3,.L50+4
 832 0018 1A69     	 ldr r2,[r3,#16]
 833 001a FB78     	 ldrb r3,[r7,#3]
 834 001c 0120     	 movs r0,#1
 835 001e 00FA03F3 	 lsl r3,r0,r3
 836 0022 DB43     	 mvns r3,r3
 837 0024 1340     	 ands r3,r3,r2
 838 0026 0B61     	 str r3,[r1,#16]
 242:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 839              	 .loc 2 242 0
 840 0028 1249     	 ldr r1,.L50+4
 841 002a 124B     	 ldr r3,.L50+4
 842 002c 1A69     	 ldr r2,[r3,#16]
 843 002e FB78     	 ldrb r3,[r7,#3]
 844 0030 0120     	 movs r0,#1
 845 0032 00FA03F3 	 lsl r3,r0,r3
 846 0036 1343     	 orrs r3,r3,r2
 847 0038 0B61     	 str r3,[r1,#16]
 848 003a 14E0     	 b .L47
 849              	.L48:
 243:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 244:../Libraries/XMCLib/src/xmc_dma.c ****   }
 245:../Libraries/XMCLib/src/xmc_dma.c ****   else
 246:../Libraries/XMCLib/src/xmc_dma.c ****   {
 247:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 850              	 .loc 2 247 0
 851 003c 0D49     	 ldr r1,.L50+4
 852 003e 0D4B     	 ldr r3,.L50+4
 853 0040 1A69     	 ldr r2,[r3,#16]
 854 0042 FB78     	 ldrb r3,[r7,#3]
 855 0044 4FF48070 	 mov r0,#256
 856 0048 00FA03F3 	 lsl r3,r0,r3
 857 004c DB43     	 mvns r3,r3
 858 004e 1340     	 ands r3,r3,r2
 859 0050 0B61     	 str r3,[r1,#16]
 248:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 860              	 .loc 2 248 0
 861 0052 0849     	 ldr r1,.L50+4
 862 0054 074B     	 ldr r3,.L50+4
 863 0056 1A69     	 ldr r2,[r3,#16]
 864 0058 FB78     	 ldrb r3,[r7,#3]
 865 005a 4FF48070 	 mov r0,#256
 866 005e 00FA03F3 	 lsl r3,r0,r3
 867 0062 1343     	 orrs r3,r3,r2
 868 0064 0B61     	 str r3,[r1,#16]
 869              	.L47:
 249:../Libraries/XMCLib/src/xmc_dma.c ****   }
 250:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 251:../Libraries/XMCLib/src/xmc_dma.c **** }
 870              	 .loc 2 251 0
 871 0066 0C37     	 adds r7,r7,#12
 872              	.LCFI71:
 873              	 .cfi_def_cfa_offset 4
 874 0068 BD46     	 mov sp,r7
 875              	.LCFI72:
 876              	 .cfi_def_cfa_register 13
 877              	 
 878 006a 5DF8047B 	 ldr r7,[sp],#4
 879              	.LCFI73:
 880              	 .cfi_restore 7
 881              	 .cfi_def_cfa_offset 0
 882 006e 7047     	 bx lr
 883              	.L51:
 884              	 .align 2
 885              	.L50:
 886 0070 00400150 	 .word 1342259200
 887 0074 00490050 	 .word 1342195968
 888              	 .cfi_endproc
 889              	.LFE179:
 891              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 892              	 .align 2
 893              	 .global XMC_DMA_GetOverrunStatus
 894              	 .thumb
 895              	 .thumb_func
 897              	XMC_DMA_GetOverrunStatus:
 898              	.LFB180:
 252:../Libraries/XMCLib/src/xmc_dma.c **** 
 253:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 254:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 255:../Libraries/XMCLib/src/xmc_dma.c **** {
 899              	 .loc 2 255 0
 900              	 .cfi_startproc
 901              	 
 902              	 
 903              	 
 904 0000 80B4     	 push {r7}
 905              	.LCFI74:
 906              	 .cfi_def_cfa_offset 4
 907              	 .cfi_offset 7,-4
 908 0002 85B0     	 sub sp,sp,#20
 909              	.LCFI75:
 910              	 .cfi_def_cfa_offset 24
 911 0004 00AF     	 add r7,sp,#0
 912              	.LCFI76:
 913              	 .cfi_def_cfa_register 7
 914 0006 7860     	 str r0,[r7,#4]
 915 0008 0B46     	 mov r3,r1
 916 000a FB70     	 strb r3,[r7,#3]
 256:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 257:../Libraries/XMCLib/src/xmc_dma.c **** 
 258:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 259:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 917              	 .loc 2 259 0
 918 000c 7B68     	 ldr r3,[r7,#4]
 919 000e 124A     	 ldr r2,.L56
 920 0010 9342     	 cmp r3,r2
 921 0012 0CD1     	 bne .L53
 260:../Libraries/XMCLib/src/xmc_dma.c ****   {
 261:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 262:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 922              	 .loc 2 262 0
 923 0014 114B     	 ldr r3,.L56+4
 924 0016 1A68     	 ldr r2,[r3]
 925 0018 FB78     	 ldrb r3,[r7,#3]
 926 001a 22FA03F3 	 lsr r3,r2,r3
 927 001e 03F00103 	 and r3,r3,#1
 928 0022 002B     	 cmp r3,#0
 929 0024 14BF     	 ite ne
 930 0026 0123     	 movne r3,#1
 931 0028 0023     	 moveq r3,#0
 932 002a FB73     	 strb r3,[r7,#15]
 933 002c 0CE0     	 b .L54
 934              	.L53:
 263:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 264:../Libraries/XMCLib/src/xmc_dma.c ****   }
 265:../Libraries/XMCLib/src/xmc_dma.c ****   else
 266:../Libraries/XMCLib/src/xmc_dma.c ****   {
 267:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 935              	 .loc 2 267 0
 936 002e 0B4B     	 ldr r3,.L56+4
 937 0030 1A68     	 ldr r2,[r3]
 938 0032 FB78     	 ldrb r3,[r7,#3]
 939 0034 4FF48071 	 mov r1,#256
 940 0038 01FA03F3 	 lsl r3,r1,r3
 941 003c 1340     	 ands r3,r3,r2
 942 003e 002B     	 cmp r3,#0
 943 0040 14BF     	 ite ne
 944 0042 0123     	 movne r3,#1
 945 0044 0023     	 moveq r3,#0
 946 0046 FB73     	 strb r3,[r7,#15]
 947              	.L54:
 268:../Libraries/XMCLib/src/xmc_dma.c ****   }
 269:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 270:../Libraries/XMCLib/src/xmc_dma.c **** 
 271:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 948              	 .loc 2 271 0
 949 0048 FB7B     	 ldrb r3,[r7,#15]
 272:../Libraries/XMCLib/src/xmc_dma.c **** }
 950              	 .loc 2 272 0
 951 004a 1846     	 mov r0,r3
 952 004c 1437     	 adds r7,r7,#20
 953              	.LCFI77:
 954              	 .cfi_def_cfa_offset 4
 955 004e BD46     	 mov sp,r7
 956              	.LCFI78:
 957              	 .cfi_def_cfa_register 13
 958              	 
 959 0050 5DF8047B 	 ldr r7,[sp],#4
 960              	.LCFI79:
 961              	 .cfi_restore 7
 962              	 .cfi_def_cfa_offset 0
 963 0054 7047     	 bx lr
 964              	.L57:
 965 0056 00BF     	 .align 2
 966              	.L56:
 967 0058 00400150 	 .word 1342259200
 968 005c 00490050 	 .word 1342195968
 969              	 .cfi_endproc
 970              	.LFE180:
 972              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 973              	 .align 2
 974              	 .global XMC_DMA_ClearOverrunStatus
 975              	 .thumb
 976              	 .thumb_func
 978              	XMC_DMA_ClearOverrunStatus:
 979              	.LFB181:
 273:../Libraries/XMCLib/src/xmc_dma.c **** 
 274:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 275:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 276:../Libraries/XMCLib/src/xmc_dma.c **** {
 980              	 .loc 2 276 0
 981              	 .cfi_startproc
 982              	 
 983              	 
 984              	 
 985 0000 80B4     	 push {r7}
 986              	.LCFI80:
 987              	 .cfi_def_cfa_offset 4
 988              	 .cfi_offset 7,-4
 989 0002 83B0     	 sub sp,sp,#12
 990              	.LCFI81:
 991              	 .cfi_def_cfa_offset 16
 992 0004 00AF     	 add r7,sp,#0
 993              	.LCFI82:
 994              	 .cfi_def_cfa_register 7
 995 0006 7860     	 str r0,[r7,#4]
 996 0008 0B46     	 mov r3,r1
 997 000a FB70     	 strb r3,[r7,#3]
 277:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 278:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 998              	 .loc 2 278 0
 999 000c 7B68     	 ldr r3,[r7,#4]
 1000 000e 0B4A     	 ldr r2,.L61
 1001 0010 9342     	 cmp r3,r2
 1002 0012 06D1     	 bne .L59
 279:../Libraries/XMCLib/src/xmc_dma.c ****   {
 280:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 281:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 1003              	 .loc 2 281 0
 1004 0014 0A4A     	 ldr r2,.L61+4
 1005 0016 FB78     	 ldrb r3,[r7,#3]
 1006 0018 0121     	 movs r1,#1
 1007 001a 01FA03F3 	 lsl r3,r1,r3
 1008 001e 5360     	 str r3,[r2,#4]
 1009 0020 06E0     	 b .L58
 1010              	.L59:
 282:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 283:../Libraries/XMCLib/src/xmc_dma.c ****   }
 284:../Libraries/XMCLib/src/xmc_dma.c ****   else
 285:../Libraries/XMCLib/src/xmc_dma.c ****   {
 286:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 1011              	 .loc 2 286 0
 1012 0022 074A     	 ldr r2,.L61+4
 1013 0024 FB78     	 ldrb r3,[r7,#3]
 1014 0026 4FF48071 	 mov r1,#256
 1015 002a 01FA03F3 	 lsl r3,r1,r3
 1016 002e 5360     	 str r3,[r2,#4]
 1017              	.L58:
 287:../Libraries/XMCLib/src/xmc_dma.c ****   }
 288:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 289:../Libraries/XMCLib/src/xmc_dma.c **** }
 1018              	 .loc 2 289 0
 1019 0030 0C37     	 adds r7,r7,#12
 1020              	.LCFI83:
 1021              	 .cfi_def_cfa_offset 4
 1022 0032 BD46     	 mov sp,r7
 1023              	.LCFI84:
 1024              	 .cfi_def_cfa_register 13
 1025              	 
 1026 0034 5DF8047B 	 ldr r7,[sp],#4
 1027              	.LCFI85:
 1028              	 .cfi_restore 7
 1029              	 .cfi_def_cfa_offset 0
 1030 0038 7047     	 bx lr
 1031              	.L62:
 1032 003a 00BF     	 .align 2
 1033              	.L61:
 1034 003c 00400150 	 .word 1342259200
 1035 0040 00490050 	 .word 1342195968
 1036              	 .cfi_endproc
 1037              	.LFE181:
 1039              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 1040              	 .align 2
 1041              	 .global XMC_DMA_CH_Disable
 1042              	 .thumb
 1043              	 .thumb_func
 1045              	XMC_DMA_CH_Disable:
 1046              	.LFB182:
 290:../Libraries/XMCLib/src/xmc_dma.c **** 
 291:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 292:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 293:../Libraries/XMCLib/src/xmc_dma.c **** {
 1047              	 .loc 2 293 0
 1048              	 .cfi_startproc
 1049              	 
 1050              	 
 1051              	 
 1052 0000 80B4     	 push {r7}
 1053              	.LCFI86:
 1054              	 .cfi_def_cfa_offset 4
 1055              	 .cfi_offset 7,-4
 1056 0002 83B0     	 sub sp,sp,#12
 1057              	.LCFI87:
 1058              	 .cfi_def_cfa_offset 16
 1059 0004 00AF     	 add r7,sp,#0
 1060              	.LCFI88:
 1061              	 .cfi_def_cfa_register 7
 1062 0006 7860     	 str r0,[r7,#4]
 1063 0008 0B46     	 mov r3,r1
 1064 000a FB70     	 strb r3,[r7,#3]
 294:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 1065              	 .loc 2 294 0
 1066 000c FB78     	 ldrb r3,[r7,#3]
 1067 000e 4FF48072 	 mov r2,#256
 1068 0012 9A40     	 lsls r2,r2,r3
 1069 0014 7B68     	 ldr r3,[r7,#4]
 1070 0016 C3F8A023 	 str r2,[r3,#928]
 295:../Libraries/XMCLib/src/xmc_dma.c ****   while((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 1071              	 .loc 2 295 0
 1072 001a 00BF     	 nop
 1073              	.L64:
 1074              	 .loc 2 295 0 is_stmt 0 discriminator 1
 1075 001c 7B68     	 ldr r3,[r7,#4]
 1076 001e D3F8A023 	 ldr r2,[r3,#928]
 1077 0022 FB78     	 ldrb r3,[r7,#3]
 1078 0024 22FA03F3 	 lsr r3,r2,r3
 1079 0028 03F00103 	 and r3,r3,#1
 1080 002c 002B     	 cmp r3,#0
 1081 002e F5D1     	 bne .L64
 296:../Libraries/XMCLib/src/xmc_dma.c ****   {
 297:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 298:../Libraries/XMCLib/src/xmc_dma.c ****   }
 299:../Libraries/XMCLib/src/xmc_dma.c **** }
 1082              	 .loc 2 299 0 is_stmt 1
 1083 0030 0C37     	 adds r7,r7,#12
 1084              	.LCFI89:
 1085              	 .cfi_def_cfa_offset 4
 1086 0032 BD46     	 mov sp,r7
 1087              	.LCFI90:
 1088              	 .cfi_def_cfa_register 13
 1089              	 
 1090 0034 5DF8047B 	 ldr r7,[sp],#4
 1091              	.LCFI91:
 1092              	 .cfi_restore 7
 1093              	 .cfi_def_cfa_offset 0
 1094 0038 7047     	 bx lr
 1095              	 .cfi_endproc
 1096              	.LFE182:
 1098 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 1099              	 .align 2
 1100              	 .global XMC_DMA_CH_IsEnabled
 1101              	 .thumb
 1102              	 .thumb_func
 1104              	XMC_DMA_CH_IsEnabled:
 1105              	.LFB183:
 300:../Libraries/XMCLib/src/xmc_dma.c **** 
 301:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 302:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 303:../Libraries/XMCLib/src/xmc_dma.c **** {
 1106              	 .loc 2 303 0
 1107              	 .cfi_startproc
 1108              	 
 1109              	 
 1110              	 
 1111 0000 80B4     	 push {r7}
 1112              	.LCFI92:
 1113              	 .cfi_def_cfa_offset 4
 1114              	 .cfi_offset 7,-4
 1115 0002 83B0     	 sub sp,sp,#12
 1116              	.LCFI93:
 1117              	 .cfi_def_cfa_offset 16
 1118 0004 00AF     	 add r7,sp,#0
 1119              	.LCFI94:
 1120              	 .cfi_def_cfa_register 7
 1121 0006 7860     	 str r0,[r7,#4]
 1122 0008 0B46     	 mov r3,r1
 1123 000a FB70     	 strb r3,[r7,#3]
 304:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 1124              	 .loc 2 304 0
 1125 000c 7B68     	 ldr r3,[r7,#4]
 1126 000e D3F8A023 	 ldr r2,[r3,#928]
 1127 0012 FB78     	 ldrb r3,[r7,#3]
 1128 0014 22FA03F3 	 lsr r3,r2,r3
 1129 0018 03F00103 	 and r3,r3,#1
 1130 001c 002B     	 cmp r3,#0
 1131 001e 14BF     	 ite ne
 1132 0020 0123     	 movne r3,#1
 1133 0022 0023     	 moveq r3,#0
 1134 0024 DBB2     	 uxtb r3,r3
 305:../Libraries/XMCLib/src/xmc_dma.c **** }
 1135              	 .loc 2 305 0
 1136 0026 1846     	 mov r0,r3
 1137 0028 0C37     	 adds r7,r7,#12
 1138              	.LCFI95:
 1139              	 .cfi_def_cfa_offset 4
 1140 002a BD46     	 mov sp,r7
 1141              	.LCFI96:
 1142              	 .cfi_def_cfa_register 13
 1143              	 
 1144 002c 5DF8047B 	 ldr r7,[sp],#4
 1145              	.LCFI97:
 1146              	 .cfi_restore 7
 1147              	 .cfi_def_cfa_offset 0
 1148 0030 7047     	 bx lr
 1149              	 .cfi_endproc
 1150              	.LFE183:
 1152 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1153              	 .align 2
 1154              	 .global XMC_DMA_CH_Init
 1155              	 .thumb
 1156              	 .thumb_func
 1158              	XMC_DMA_CH_Init:
 1159              	.LFB184:
 306:../Libraries/XMCLib/src/xmc_dma.c **** 
 307:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 308:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 309:../Libraries/XMCLib/src/xmc_dma.c **** {
 1160              	 .loc 2 309 0
 1161              	 .cfi_startproc
 1162              	 
 1163              	 
 1164 0000 80B5     	 push {r7,lr}
 1165              	.LCFI98:
 1166              	 .cfi_def_cfa_offset 8
 1167              	 .cfi_offset 7,-8
 1168              	 .cfi_offset 14,-4
 1169 0002 86B0     	 sub sp,sp,#24
 1170              	.LCFI99:
 1171              	 .cfi_def_cfa_offset 32
 1172 0004 00AF     	 add r7,sp,#0
 1173              	.LCFI100:
 1174              	 .cfi_def_cfa_register 7
 1175 0006 F860     	 str r0,[r7,#12]
 1176 0008 0B46     	 mov r3,r1
 1177 000a 7A60     	 str r2,[r7,#4]
 1178 000c FB72     	 strb r3,[r7,#11]
 310:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 311:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 312:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 313:../Libraries/XMCLib/src/xmc_dma.c **** 
 314:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1179              	 .loc 2 314 0
 1180 000e F868     	 ldr r0,[r7,#12]
 1181 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1182 0014 0346     	 mov r3,r0
 1183 0016 002B     	 cmp r3,#0
 1184 0018 00F0F181 	 beq .L68
 315:../Libraries/XMCLib/src/xmc_dma.c ****   {
 316:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1185              	 .loc 2 316 0
 1186 001c FB7A     	 ldrb r3,[r7,#11]
 1187 001e F868     	 ldr r0,[r7,#12]
 1188 0020 1946     	 mov r1,r3
 1189 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1190 0026 0346     	 mov r3,r0
 1191 0028 83F00103 	 eor r3,r3,#1
 1192 002c DBB2     	 uxtb r3,r3
 1193 002e 002B     	 cmp r3,#0
 1194 0030 00F0E281 	 beq .L69
 317:../Libraries/XMCLib/src/xmc_dma.c ****     {
 318:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1195              	 .loc 2 318 0
 1196 0034 FB7A     	 ldrb r3,[r7,#11]
 1197 0036 7A68     	 ldr r2,[r7,#4]
 1198 0038 5268     	 ldr r2,[r2,#4]
 1199 003a F968     	 ldr r1,[r7,#12]
 1200 003c 5820     	 movs r0,#88
 1201 003e 00FB03F3 	 mul r3,r0,r3
 1202 0042 0B44     	 add r3,r3,r1
 1203 0044 1A60     	 str r2,[r3]
 319:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1204              	 .loc 2 319 0
 1205 0046 FB7A     	 ldrb r3,[r7,#11]
 1206 0048 7A68     	 ldr r2,[r7,#4]
 1207 004a 9268     	 ldr r2,[r2,#8]
 1208 004c F968     	 ldr r1,[r7,#12]
 1209 004e 5820     	 movs r0,#88
 1210 0050 00FB03F3 	 mul r3,r0,r3
 1211 0054 0B44     	 add r3,r3,r1
 1212 0056 0833     	 adds r3,r3,#8
 1213 0058 1A60     	 str r2,[r3]
 320:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1214              	 .loc 2 320 0
 1215 005a FB7A     	 ldrb r3,[r7,#11]
 1216 005c 7A68     	 ldr r2,[r7,#4]
 1217 005e D268     	 ldr r2,[r2,#12]
 1218 0060 1046     	 mov r0,r2
 1219 0062 FA68     	 ldr r2,[r7,#12]
 1220 0064 5821     	 movs r1,#88
 1221 0066 01FB03F3 	 mul r3,r1,r3
 1222 006a 1344     	 add r3,r3,r2
 1223 006c 1033     	 adds r3,r3,#16
 1224 006e 1860     	 str r0,[r3]
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1225              	 .loc 2 321 0
 1226 0070 FB7A     	 ldrb r3,[r7,#11]
 1227 0072 7A68     	 ldr r2,[r7,#4]
 1228 0074 128B     	 ldrh r2,[r2,#24]
 1229 0076 1046     	 mov r0,r2
 1230 0078 FA68     	 ldr r2,[r7,#12]
 1231 007a 5821     	 movs r1,#88
 1232 007c 01FB03F3 	 mul r3,r1,r3
 1233 0080 1344     	 add r3,r3,r2
 1234 0082 1833     	 adds r3,r3,#24
 1235 0084 5860     	 str r0,[r3,#4]
 322:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1236              	 .loc 2 322 0
 1237 0086 FB7A     	 ldrb r3,[r7,#11]
 1238 0088 7A68     	 ldr r2,[r7,#4]
 1239 008a 1268     	 ldr r2,[r2]
 1240 008c F968     	 ldr r1,[r7,#12]
 1241 008e 5820     	 movs r0,#88
 1242 0090 00FB03F3 	 mul r3,r0,r3
 1243 0094 0B44     	 add r3,r3,r1
 1244 0096 1833     	 adds r3,r3,#24
 1245 0098 1A60     	 str r2,[r3]
 323:../Libraries/XMCLib/src/xmc_dma.c **** 
 324:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1246              	 .loc 2 324 0
 1247 009a FB7A     	 ldrb r3,[r7,#11]
 1248 009c 7A68     	 ldr r2,[r7,#4]
 1249 009e D27E     	 ldrb r2,[r2,#27]
 1250 00a0 42F44062 	 orr r2,r2,#3072
 1251 00a4 F968     	 ldr r1,[r7,#12]
 1252 00a6 5820     	 movs r0,#88
 1253 00a8 00FB03F3 	 mul r3,r0,r3
 1254 00ac 0B44     	 add r3,r3,r1
 1255 00ae 4033     	 adds r3,r3,#64
 1256 00b0 1A60     	 str r2,[r3]
 325:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 326:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 327:../Libraries/XMCLib/src/xmc_dma.c **** 
 328:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1257              	 .loc 2 328 0
 1258 00b2 FB68     	 ldr r3,[r7,#12]
 1259 00b4 B14A     	 ldr r2,.L95
 1260 00b6 9342     	 cmp r3,r2
 1261 00b8 16D1     	 bne .L70
 1262              	 .loc 2 328 0 is_stmt 0 discriminator 1
 1263 00ba FB7A     	 ldrb r3,[r7,#11]
 1264 00bc 012B     	 cmp r3,#1
 1265 00be 13D8     	 bhi .L70
 329:../Libraries/XMCLib/src/xmc_dma.c ****       {
 330:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 331:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1266              	 .loc 2 331 0 is_stmt 1
 1267 00c0 FB7A     	 ldrb r3,[r7,#11]
 1268 00c2 7A68     	 ldr r2,[r7,#4]
 1269 00c4 1269     	 ldr r2,[r2,#16]
 1270 00c6 F968     	 ldr r1,[r7,#12]
 1271 00c8 5820     	 movs r0,#88
 1272 00ca 00FB03F3 	 mul r3,r0,r3
 1273 00ce 0B44     	 add r3,r3,r1
 1274 00d0 4833     	 adds r3,r3,#72
 1275 00d2 1A60     	 str r2,[r3]
 332:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1276              	 .loc 2 332 0
 1277 00d4 FB7A     	 ldrb r3,[r7,#11]
 1278 00d6 7A68     	 ldr r2,[r7,#4]
 1279 00d8 5269     	 ldr r2,[r2,#20]
 1280 00da F968     	 ldr r1,[r7,#12]
 1281 00dc 5820     	 movs r0,#88
 1282 00de 00FB03F3 	 mul r3,r0,r3
 1283 00e2 0B44     	 add r3,r3,r1
 1284 00e4 5033     	 adds r3,r3,#80
 1285 00e6 1A60     	 str r2,[r3]
 1286              	.L70:
 333:../Libraries/XMCLib/src/xmc_dma.c ****       }
 334:../Libraries/XMCLib/src/xmc_dma.c **** 
 335:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1287              	 .loc 2 335 0
 1288 00e8 7B68     	 ldr r3,[r7,#4]
 1289 00ea 1B8C     	 ldrh r3,[r3,#32]
 1290 00ec 002B     	 cmp r3,#0
 1291 00ee 4FD1     	 bne .L71
 336:../Libraries/XMCLib/src/xmc_dma.c ****       {
 337:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 338:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1292              	 .loc 2 338 0
 1293 00f0 7B68     	 ldr r3,[r7,#4]
 1294 00f2 9B78     	 ldrb r3,[r3,#2]
 1295 00f4 03F07003 	 and r3,r3,#112
 1296 00f8 DBB2     	 uxtb r3,r3
 1297 00fa 102B     	 cmp r3,#16
 1298 00fc 06D0     	 beq .L72
 339:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1299              	 .loc 2 339 0 discriminator 1
 1300 00fe 7B68     	 ldr r3,[r7,#4]
 1301 0100 9B78     	 ldrb r3,[r3,#2]
 1302 0102 03F07003 	 and r3,r3,#112
 1303 0106 DBB2     	 uxtb r3,r3
 338:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1304              	 .loc 2 338 0 discriminator 1
 1305 0108 302B     	 cmp r3,#48
 1306 010a 41D1     	 bne .L71
 1307              	.L72:
 340:../Libraries/XMCLib/src/xmc_dma.c ****         {
 341:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 342:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1308              	 .loc 2 342 0
 1309 010c FB68     	 ldr r3,[r7,#12]
 1310 010e 9B4A     	 ldr r2,.L95
 1311 0110 9342     	 cmp r3,r2
 1312 0112 06D1     	 bne .L73
 343:../Libraries/XMCLib/src/xmc_dma.c ****           {
 344:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 345:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1313              	 .loc 2 345 0
 1314 0114 7B68     	 ldr r3,[r7,#4]
 1315 0116 93F82230 	 ldrb r3,[r3,#34]
 1316 011a 03F00703 	 and r3,r3,#7
 1317 011e BB75     	 strb r3,[r7,#22]
 1318 0120 05E0     	 b .L74
 1319              	.L73:
 346:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 347:../Libraries/XMCLib/src/xmc_dma.c ****           }
 348:../Libraries/XMCLib/src/xmc_dma.c ****           else
 349:../Libraries/XMCLib/src/xmc_dma.c ****           {
 350:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1320              	 .loc 2 350 0
 1321 0122 7B68     	 ldr r3,[r7,#4]
 1322 0124 93F82230 	 ldrb r3,[r3,#34]
 1323 0128 03F00303 	 and r3,r3,#3
 1324 012c BB75     	 strb r3,[r7,#22]
 1325              	.L74:
 351:../Libraries/XMCLib/src/xmc_dma.c ****           }
 352:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 353:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1326              	 .loc 2 353 0
 1327 012e 7B68     	 ldr r3,[r7,#4]
 1328 0130 93F82230 	 ldrb r3,[r3,#34]
 1329 0134 1B09     	 lsrs r3,r3,#4
 1330 0136 7B75     	 strb r3,[r7,#21]
 354:../Libraries/XMCLib/src/xmc_dma.c **** 
 355:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1331              	 .loc 2 355 0
 1332 0138 FB7A     	 ldrb r3,[r7,#11]
 1333 013a FA7A     	 ldrb r2,[r7,#11]
 1334 013c F968     	 ldr r1,[r7,#12]
 1335 013e 5820     	 movs r0,#88
 1336 0140 00FB02F2 	 mul r2,r0,r2
 1337 0144 0A44     	 add r2,r2,r1
 1338 0146 4032     	 adds r2,r2,#64
 1339 0148 5168     	 ldr r1,[r2,#4]
 1340 014a BA7D     	 ldrb r2,[r7,#22]
 1341 014c D202     	 lsls r2,r2,#11
 1342 014e 0A43     	 orrs r2,r2,r1
 1343 0150 F968     	 ldr r1,[r7,#12]
 1344 0152 5820     	 movs r0,#88
 1345 0154 00FB03F3 	 mul r3,r0,r3
 1346 0158 0B44     	 add r3,r3,r1
 1347 015a 4033     	 adds r3,r3,#64
 1348 015c 5A60     	 str r2,[r3,#4]
 356:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1349              	 .loc 2 356 0
 1350 015e BA7D     	 ldrb r2,[r7,#22]
 1351 0160 7B7D     	 ldrb r3,[r7,#21]
 1352 0162 F868     	 ldr r0,[r7,#12]
 1353 0164 1146     	 mov r1,r2
 1354 0166 1A46     	 mov r2,r3
 1355 0168 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 357:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1356              	 .loc 2 357 0
 1357 016c FB7A     	 ldrb r3,[r7,#11]
 1358 016e FA7A     	 ldrb r2,[r7,#11]
 1359 0170 F968     	 ldr r1,[r7,#12]
 1360 0172 5820     	 movs r0,#88
 1361 0174 00FB02F2 	 mul r2,r0,r2
 1362 0178 0A44     	 add r2,r2,r1
 1363 017a 4032     	 adds r2,r2,#64
 1364 017c 1268     	 ldr r2,[r2]
 1365 017e 22F48062 	 bic r2,r2,#1024
 1366 0182 F968     	 ldr r1,[r7,#12]
 1367 0184 5820     	 movs r0,#88
 1368 0186 00FB03F3 	 mul r3,r0,r3
 1369 018a 0B44     	 add r3,r3,r1
 1370 018c 4033     	 adds r3,r3,#64
 1371 018e 1A60     	 str r2,[r3]
 1372              	.L71:
 358:../Libraries/XMCLib/src/xmc_dma.c ****         }
 359:../Libraries/XMCLib/src/xmc_dma.c ****       }
 360:../Libraries/XMCLib/src/xmc_dma.c **** 
 361:../Libraries/XMCLib/src/xmc_dma.c **** 
 362:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1373              	 .loc 2 362 0
 1374 0190 7B68     	 ldr r3,[r7,#4]
 1375 0192 9B8B     	 ldrh r3,[r3,#28]
 1376 0194 002B     	 cmp r3,#0
 1377 0196 4CD1     	 bne .L75
 363:../Libraries/XMCLib/src/xmc_dma.c ****       {
 364:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1378              	 .loc 2 364 0
 1379 0198 7B68     	 ldr r3,[r7,#4]
 1380 019a 9B78     	 ldrb r3,[r3,#2]
 1381 019c 03F07003 	 and r3,r3,#112
 1382 01a0 DBB2     	 uxtb r3,r3
 1383 01a2 202B     	 cmp r3,#32
 1384 01a4 06D0     	 beq .L76
 365:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1385              	 .loc 2 365 0 discriminator 1
 1386 01a6 7B68     	 ldr r3,[r7,#4]
 1387 01a8 9B78     	 ldrb r3,[r3,#2]
 1388 01aa 03F07003 	 and r3,r3,#112
 1389 01ae DBB2     	 uxtb r3,r3
 364:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1390              	 .loc 2 364 0 discriminator 1
 1391 01b0 302B     	 cmp r3,#48
 1392 01b2 3ED1     	 bne .L75
 1393              	.L76:
 366:../Libraries/XMCLib/src/xmc_dma.c ****         {
 367:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 368:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1394              	 .loc 2 368 0
 1395 01b4 FB68     	 ldr r3,[r7,#12]
 1396 01b6 714A     	 ldr r2,.L95
 1397 01b8 9342     	 cmp r3,r2
 1398 01ba 05D1     	 bne .L77
 369:../Libraries/XMCLib/src/xmc_dma.c ****           {
 370:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 371:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1399              	 .loc 2 371 0
 1400 01bc 7B68     	 ldr r3,[r7,#4]
 1401 01be 9B7F     	 ldrb r3,[r3,#30]
 1402 01c0 03F00703 	 and r3,r3,#7
 1403 01c4 BB75     	 strb r3,[r7,#22]
 1404 01c6 04E0     	 b .L78
 1405              	.L77:
 372:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 373:../Libraries/XMCLib/src/xmc_dma.c ****           }
 374:../Libraries/XMCLib/src/xmc_dma.c ****           else
 375:../Libraries/XMCLib/src/xmc_dma.c ****           {
 376:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1406              	 .loc 2 376 0
 1407 01c8 7B68     	 ldr r3,[r7,#4]
 1408 01ca 9B7F     	 ldrb r3,[r3,#30]
 1409 01cc 03F00303 	 and r3,r3,#3
 1410 01d0 BB75     	 strb r3,[r7,#22]
 1411              	.L78:
 377:../Libraries/XMCLib/src/xmc_dma.c ****           }
 378:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 379:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1412              	 .loc 2 379 0
 1413 01d2 7B68     	 ldr r3,[r7,#4]
 1414 01d4 9B7F     	 ldrb r3,[r3,#30]
 1415 01d6 1B09     	 lsrs r3,r3,#4
 1416 01d8 7B75     	 strb r3,[r7,#21]
 380:../Libraries/XMCLib/src/xmc_dma.c **** 
 381:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1417              	 .loc 2 381 0
 1418 01da FB7A     	 ldrb r3,[r7,#11]
 1419 01dc FA7A     	 ldrb r2,[r7,#11]
 1420 01de F968     	 ldr r1,[r7,#12]
 1421 01e0 5820     	 movs r0,#88
 1422 01e2 00FB02F2 	 mul r2,r0,r2
 1423 01e6 0A44     	 add r2,r2,r1
 1424 01e8 4032     	 adds r2,r2,#64
 1425 01ea 5168     	 ldr r1,[r2,#4]
 1426 01ec BA7D     	 ldrb r2,[r7,#22]
 1427 01ee D201     	 lsls r2,r2,#7
 1428 01f0 0A43     	 orrs r2,r2,r1
 1429 01f2 F968     	 ldr r1,[r7,#12]
 1430 01f4 5820     	 movs r0,#88
 1431 01f6 00FB03F3 	 mul r3,r0,r3
 1432 01fa 0B44     	 add r3,r3,r1
 1433 01fc 4033     	 adds r3,r3,#64
 1434 01fe 5A60     	 str r2,[r3,#4]
 382:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1435              	 .loc 2 382 0
 1436 0200 BA7D     	 ldrb r2,[r7,#22]
 1437 0202 7B7D     	 ldrb r3,[r7,#21]
 1438 0204 F868     	 ldr r0,[r7,#12]
 1439 0206 1146     	 mov r1,r2
 1440 0208 1A46     	 mov r2,r3
 1441 020a FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 383:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1442              	 .loc 2 383 0
 1443 020e FB7A     	 ldrb r3,[r7,#11]
 1444 0210 FA7A     	 ldrb r2,[r7,#11]
 1445 0212 F968     	 ldr r1,[r7,#12]
 1446 0214 5820     	 movs r0,#88
 1447 0216 00FB02F2 	 mul r2,r0,r2
 1448 021a 0A44     	 add r2,r2,r1
 1449 021c 4032     	 adds r2,r2,#64
 1450 021e 1268     	 ldr r2,[r2]
 1451 0220 22F40062 	 bic r2,r2,#2048
 1452 0224 F968     	 ldr r1,[r7,#12]
 1453 0226 5820     	 movs r0,#88
 1454 0228 00FB03F3 	 mul r3,r0,r3
 1455 022c 0B44     	 add r3,r3,r1
 1456 022e 4033     	 adds r3,r3,#64
 1457 0230 1A60     	 str r2,[r3]
 1458              	.L75:
 384:../Libraries/XMCLib/src/xmc_dma.c ****         }
 385:../Libraries/XMCLib/src/xmc_dma.c ****       }
 386:../Libraries/XMCLib/src/xmc_dma.c ****       
 387:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1459              	 .loc 2 387 0
 1460 0232 FB7A     	 ldrb r3,[r7,#11]
 1461 0234 F868     	 ldr r0,[r7,#12]
 1462 0236 1946     	 mov r1,r3
 1463 0238 1F22     	 movs r2,#31
 1464 023a FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 388:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFE
 389:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 390:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 391:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 392:../Libraries/XMCLib/src/xmc_dma.c **** 
 393:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1465              	 .loc 2 393 0
 1466 023e 7B68     	 ldr r3,[r7,#4]
 1467 0240 9B7E     	 ldrb r3,[r3,#26]
 1468 0242 082B     	 cmp r3,#8
 1469 0244 00F2D480 	 bhi .L94
 1470 0248 01A2     	 adr r2,.L81
 1471 024a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1472 024e 00BF     	 .p2align 2
 1473              	.L81:
 1474 0250 F1030000 	 .word .L94+1
 1475 0254 75020000 	 .word .L82+1
 1476 0258 9B020000 	 .word .L83+1
 1477 025c C1020000 	 .word .L84+1
 1478 0260 E7020000 	 .word .L85+1
 1479 0264 0D030000 	 .word .L86+1
 1480 0268 57030000 	 .word .L87+1
 1481 026c 81030000 	 .word .L88+1
 1482 0270 CB030000 	 .word .L89+1
 1483              	 .p2align 1
 1484              	.L82:
 394:../Libraries/XMCLib/src/xmc_dma.c ****       {
 395:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 396:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 397:../Libraries/XMCLib/src/xmc_dma.c **** 
 398:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 399:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1485              	 .loc 2 399 0
 1486 0274 FB7A     	 ldrb r3,[r7,#11]
 1487 0276 FA7A     	 ldrb r2,[r7,#11]
 1488 0278 F968     	 ldr r1,[r7,#12]
 1489 027a 5820     	 movs r0,#88
 1490 027c 00FB02F2 	 mul r2,r0,r2
 1491 0280 0A44     	 add r2,r2,r1
 1492 0282 4032     	 adds r2,r2,#64
 1493 0284 1268     	 ldr r2,[r2]
 1494 0286 42F00042 	 orr r2,r2,#-2147483648
 1495 028a F968     	 ldr r1,[r7,#12]
 1496 028c 5820     	 movs r0,#88
 1497 028e 00FB03F3 	 mul r3,r0,r3
 1498 0292 0B44     	 add r3,r3,r1
 1499 0294 4033     	 adds r3,r3,#64
 1500 0296 1A60     	 str r2,[r3]
 400:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1501              	 .loc 2 400 0
 1502 0298 ABE0     	 b .L90
 1503              	.L83:
 401:../Libraries/XMCLib/src/xmc_dma.c **** 
 402:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 403:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1504              	 .loc 2 403 0
 1505 029a FB7A     	 ldrb r3,[r7,#11]
 1506 029c FA7A     	 ldrb r2,[r7,#11]
 1507 029e F968     	 ldr r1,[r7,#12]
 1508 02a0 5820     	 movs r0,#88
 1509 02a2 00FB02F2 	 mul r2,r0,r2
 1510 02a6 0A44     	 add r2,r2,r1
 1511 02a8 4032     	 adds r2,r2,#64
 1512 02aa 1268     	 ldr r2,[r2]
 1513 02ac 42F08042 	 orr r2,r2,#1073741824
 1514 02b0 F968     	 ldr r1,[r7,#12]
 1515 02b2 5820     	 movs r0,#88
 1516 02b4 00FB03F3 	 mul r3,r0,r3
 1517 02b8 0B44     	 add r3,r3,r1
 1518 02ba 4033     	 adds r3,r3,#64
 1519 02bc 1A60     	 str r2,[r3]
 404:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1520              	 .loc 2 404 0
 1521 02be 98E0     	 b .L90
 1522              	.L84:
 405:../Libraries/XMCLib/src/xmc_dma.c **** 
 406:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 407:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1523              	 .loc 2 407 0
 1524 02c0 FB7A     	 ldrb r3,[r7,#11]
 1525 02c2 FA7A     	 ldrb r2,[r7,#11]
 1526 02c4 F968     	 ldr r1,[r7,#12]
 1527 02c6 5820     	 movs r0,#88
 1528 02c8 00FB02F2 	 mul r2,r0,r2
 1529 02cc 0A44     	 add r2,r2,r1
 1530 02ce 4032     	 adds r2,r2,#64
 1531 02d0 1268     	 ldr r2,[r2]
 1532 02d2 42F04042 	 orr r2,r2,#-1073741824
 1533 02d6 F968     	 ldr r1,[r7,#12]
 1534 02d8 5820     	 movs r0,#88
 1535 02da 00FB03F3 	 mul r3,r0,r3
 1536 02de 0B44     	 add r3,r3,r1
 1537 02e0 4033     	 adds r3,r3,#64
 1538 02e2 1A60     	 str r2,[r3]
 408:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 409:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1539              	 .loc 2 409 0
 1540 02e4 85E0     	 b .L90
 1541              	.L85:
 410:../Libraries/XMCLib/src/xmc_dma.c **** 
 411:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 412:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1542              	 .loc 2 412 0
 1543 02e6 FB7A     	 ldrb r3,[r7,#11]
 1544 02e8 FA7A     	 ldrb r2,[r7,#11]
 1545 02ea F968     	 ldr r1,[r7,#12]
 1546 02ec 5820     	 movs r0,#88
 1547 02ee 00FB02F2 	 mul r2,r0,r2
 1548 02f2 0A44     	 add r2,r2,r1
 1549 02f4 1832     	 adds r2,r2,#24
 1550 02f6 1268     	 ldr r2,[r2]
 1551 02f8 42F00062 	 orr r2,r2,#134217728
 1552 02fc F968     	 ldr r1,[r7,#12]
 1553 02fe 5820     	 movs r0,#88
 1554 0300 00FB03F3 	 mul r3,r0,r3
 1555 0304 0B44     	 add r3,r3,r1
 1556 0306 1833     	 adds r3,r3,#24
 1557 0308 1A60     	 str r2,[r3]
 413:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1558              	 .loc 2 413 0
 1559 030a 72E0     	 b .L90
 1560              	.L86:
 414:../Libraries/XMCLib/src/xmc_dma.c **** 
 415:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 416:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1561              	 .loc 2 416 0
 1562 030c FB7A     	 ldrb r3,[r7,#11]
 1563 030e FA7A     	 ldrb r2,[r7,#11]
 1564 0310 F968     	 ldr r1,[r7,#12]
 1565 0312 5820     	 movs r0,#88
 1566 0314 00FB02F2 	 mul r2,r0,r2
 1567 0318 0A44     	 add r2,r2,r1
 1568 031a 4032     	 adds r2,r2,#64
 1569 031c 1268     	 ldr r2,[r2]
 1570 031e 42F08042 	 orr r2,r2,#1073741824
 1571 0322 F968     	 ldr r1,[r7,#12]
 1572 0324 5820     	 movs r0,#88
 1573 0326 00FB03F3 	 mul r3,r0,r3
 1574 032a 0B44     	 add r3,r3,r1
 1575 032c 4033     	 adds r3,r3,#64
 1576 032e 1A60     	 str r2,[r3]
 417:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1577              	 .loc 2 417 0
 1578 0330 FB7A     	 ldrb r3,[r7,#11]
 1579 0332 FA7A     	 ldrb r2,[r7,#11]
 1580 0334 F968     	 ldr r1,[r7,#12]
 1581 0336 5820     	 movs r0,#88
 1582 0338 00FB02F2 	 mul r2,r0,r2
 1583 033c 0A44     	 add r2,r2,r1
 1584 033e 1832     	 adds r2,r2,#24
 1585 0340 1268     	 ldr r2,[r2]
 1586 0342 42F00062 	 orr r2,r2,#134217728
 1587 0346 F968     	 ldr r1,[r7,#12]
 1588 0348 5820     	 movs r0,#88
 1589 034a 00FB03F3 	 mul r3,r0,r3
 1590 034e 0B44     	 add r3,r3,r1
 1591 0350 1833     	 adds r3,r3,#24
 1592 0352 1A60     	 str r2,[r3]
 418:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1593              	 .loc 2 418 0
 1594 0354 4DE0     	 b .L90
 1595              	.L87:
 419:../Libraries/XMCLib/src/xmc_dma.c **** 
 420:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 421:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1596              	 .loc 2 421 0
 1597 0356 FB7A     	 ldrb r3,[r7,#11]
 1598 0358 FA7A     	 ldrb r2,[r7,#11]
 1599 035a F968     	 ldr r1,[r7,#12]
 1600 035c 5820     	 movs r0,#88
 1601 035e 00FB02F2 	 mul r2,r0,r2
 1602 0362 0A44     	 add r2,r2,r1
 1603 0364 1832     	 adds r2,r2,#24
 1604 0366 1268     	 ldr r2,[r2]
 1605 0368 42F08052 	 orr r2,r2,#268435456
 1606 036c F968     	 ldr r1,[r7,#12]
 1607 036e 5820     	 movs r0,#88
 1608 0370 00FB03F3 	 mul r3,r0,r3
 1609 0374 0B44     	 add r3,r3,r1
 1610 0376 1833     	 adds r3,r3,#24
 1611 0378 1A60     	 str r2,[r3]
 422:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1612              	 .loc 2 422 0
 1613 037a 3AE0     	 b .L90
 1614              	.L96:
 1615              	 .align 2
 1616              	.L95:
 1617 037c 00400150 	 .word 1342259200
 1618              	.L88:
 423:../Libraries/XMCLib/src/xmc_dma.c **** 
 424:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 425:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1619              	 .loc 2 425 0
 1620 0380 FB7A     	 ldrb r3,[r7,#11]
 1621 0382 FA7A     	 ldrb r2,[r7,#11]
 1622 0384 F968     	 ldr r1,[r7,#12]
 1623 0386 5820     	 movs r0,#88
 1624 0388 00FB02F2 	 mul r2,r0,r2
 1625 038c 0A44     	 add r2,r2,r1
 1626 038e 4032     	 adds r2,r2,#64
 1627 0390 1268     	 ldr r2,[r2]
 1628 0392 42F00042 	 orr r2,r2,#-2147483648
 1629 0396 F968     	 ldr r1,[r7,#12]
 1630 0398 5820     	 movs r0,#88
 1631 039a 00FB03F3 	 mul r3,r0,r3
 1632 039e 0B44     	 add r3,r3,r1
 1633 03a0 4033     	 adds r3,r3,#64
 1634 03a2 1A60     	 str r2,[r3]
 426:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1635              	 .loc 2 426 0
 1636 03a4 FB7A     	 ldrb r3,[r7,#11]
 1637 03a6 FA7A     	 ldrb r2,[r7,#11]
 1638 03a8 F968     	 ldr r1,[r7,#12]
 1639 03aa 5820     	 movs r0,#88
 1640 03ac 00FB02F2 	 mul r2,r0,r2
 1641 03b0 0A44     	 add r2,r2,r1
 1642 03b2 1832     	 adds r2,r2,#24
 1643 03b4 1268     	 ldr r2,[r2]
 1644 03b6 42F08052 	 orr r2,r2,#268435456
 1645 03ba F968     	 ldr r1,[r7,#12]
 1646 03bc 5820     	 movs r0,#88
 1647 03be 00FB03F3 	 mul r3,r0,r3
 1648 03c2 0B44     	 add r3,r3,r1
 1649 03c4 1833     	 adds r3,r3,#24
 1650 03c6 1A60     	 str r2,[r3]
 427:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1651              	 .loc 2 427 0
 1652 03c8 13E0     	 b .L90
 1653              	.L89:
 428:../Libraries/XMCLib/src/xmc_dma.c **** 
 429:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 430:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1654              	 .loc 2 430 0
 1655 03ca FB7A     	 ldrb r3,[r7,#11]
 1656 03cc FA7A     	 ldrb r2,[r7,#11]
 1657 03ce F968     	 ldr r1,[r7,#12]
 1658 03d0 5820     	 movs r0,#88
 1659 03d2 00FB02F2 	 mul r2,r0,r2
 1660 03d6 0A44     	 add r2,r2,r1
 1661 03d8 1832     	 adds r2,r2,#24
 1662 03da 1268     	 ldr r2,[r2]
 1663 03dc 42F0C052 	 orr r2,r2,#402653184
 1664 03e0 F968     	 ldr r1,[r7,#12]
 1665 03e2 5820     	 movs r0,#88
 1666 03e4 00FB03F3 	 mul r3,r0,r3
 1667 03e8 0B44     	 add r3,r3,r1
 1668 03ea 1833     	 adds r3,r3,#24
 1669 03ec 1A60     	 str r2,[r3]
 431:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 432:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1670              	 .loc 2 432 0
 1671 03ee 00E0     	 b .L90
 1672              	.L94:
 433:../Libraries/XMCLib/src/xmc_dma.c **** 
 434:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 435:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1673              	 .loc 2 435 0
 1674 03f0 00BF     	 nop
 1675              	.L90:
 436:../Libraries/XMCLib/src/xmc_dma.c ****       }
 437:../Libraries/XMCLib/src/xmc_dma.c **** 
 438:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1676              	 .loc 2 438 0
 1677 03f2 0023     	 movs r3,#0
 1678 03f4 FB75     	 strb r3,[r7,#23]
 1679 03f6 04E0     	 b .L92
 1680              	.L69:
 439:../Libraries/XMCLib/src/xmc_dma.c **** 
 440:../Libraries/XMCLib/src/xmc_dma.c ****     }
 441:../Libraries/XMCLib/src/xmc_dma.c ****     else
 442:../Libraries/XMCLib/src/xmc_dma.c ****     {
 443:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1681              	 .loc 2 443 0
 1682 03f8 0223     	 movs r3,#2
 1683 03fa FB75     	 strb r3,[r7,#23]
 1684 03fc 01E0     	 b .L92
 1685              	.L68:
 444:../Libraries/XMCLib/src/xmc_dma.c ****     }
 445:../Libraries/XMCLib/src/xmc_dma.c ****   }
 446:../Libraries/XMCLib/src/xmc_dma.c ****   else 
 447:../Libraries/XMCLib/src/xmc_dma.c ****   {
 448:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1686              	 .loc 2 448 0
 1687 03fe 0123     	 movs r3,#1
 1688 0400 FB75     	 strb r3,[r7,#23]
 1689              	.L92:
 449:../Libraries/XMCLib/src/xmc_dma.c ****   }
 450:../Libraries/XMCLib/src/xmc_dma.c ****   
 451:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1690              	 .loc 2 451 0
 1691 0402 FB7D     	 ldrb r3,[r7,#23]
 452:../Libraries/XMCLib/src/xmc_dma.c **** }
 1692              	 .loc 2 452 0
 1693 0404 1846     	 mov r0,r3
 1694 0406 1837     	 adds r7,r7,#24
 1695              	.LCFI101:
 1696              	 .cfi_def_cfa_offset 8
 1697 0408 BD46     	 mov sp,r7
 1698              	.LCFI102:
 1699              	 .cfi_def_cfa_register 13
 1700              	 
 1701 040a 80BD     	 pop {r7,pc}
 1702              	 .cfi_endproc
 1703              	.LFE184:
 1705              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1706              	 .align 2
 1707              	 .global XMC_DMA_CH_Suspend
 1708              	 .thumb
 1709              	 .thumb_func
 1711              	XMC_DMA_CH_Suspend:
 1712              	.LFB185:
 453:../Libraries/XMCLib/src/xmc_dma.c **** 
 454:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 455:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 456:../Libraries/XMCLib/src/xmc_dma.c **** {
 1713              	 .loc 2 456 0
 1714              	 .cfi_startproc
 1715              	 
 1716              	 
 1717              	 
 1718 0000 80B4     	 push {r7}
 1719              	.LCFI103:
 1720              	 .cfi_def_cfa_offset 4
 1721              	 .cfi_offset 7,-4
 1722 0002 83B0     	 sub sp,sp,#12
 1723              	.LCFI104:
 1724              	 .cfi_def_cfa_offset 16
 1725 0004 00AF     	 add r7,sp,#0
 1726              	.LCFI105:
 1727              	 .cfi_def_cfa_register 7
 1728 0006 7860     	 str r0,[r7,#4]
 1729 0008 0B46     	 mov r3,r1
 1730 000a FB70     	 strb r3,[r7,#3]
 457:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1731              	 .loc 2 457 0
 1732 000c FB78     	 ldrb r3,[r7,#3]
 1733 000e FA78     	 ldrb r2,[r7,#3]
 1734 0010 7968     	 ldr r1,[r7,#4]
 1735 0012 5820     	 movs r0,#88
 1736 0014 00FB02F2 	 mul r2,r0,r2
 1737 0018 0A44     	 add r2,r2,r1
 1738 001a 4032     	 adds r2,r2,#64
 1739 001c 1268     	 ldr r2,[r2]
 1740 001e 42F48072 	 orr r2,r2,#256
 1741 0022 7968     	 ldr r1,[r7,#4]
 1742 0024 5820     	 movs r0,#88
 1743 0026 00FB03F3 	 mul r3,r0,r3
 1744 002a 0B44     	 add r3,r3,r1
 1745 002c 4033     	 adds r3,r3,#64
 1746 002e 1A60     	 str r2,[r3]
 458:../Libraries/XMCLib/src/xmc_dma.c **** }
 1747              	 .loc 2 458 0
 1748 0030 0C37     	 adds r7,r7,#12
 1749              	.LCFI106:
 1750              	 .cfi_def_cfa_offset 4
 1751 0032 BD46     	 mov sp,r7
 1752              	.LCFI107:
 1753              	 .cfi_def_cfa_register 13
 1754              	 
 1755 0034 5DF8047B 	 ldr r7,[sp],#4
 1756              	.LCFI108:
 1757              	 .cfi_restore 7
 1758              	 .cfi_def_cfa_offset 0
 1759 0038 7047     	 bx lr
 1760              	 .cfi_endproc
 1761              	.LFE185:
 1763 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1764              	 .align 2
 1765              	 .global XMC_DMA_CH_Resume
 1766              	 .thumb
 1767              	 .thumb_func
 1769              	XMC_DMA_CH_Resume:
 1770              	.LFB186:
 459:../Libraries/XMCLib/src/xmc_dma.c **** 
 460:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 461:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 462:../Libraries/XMCLib/src/xmc_dma.c **** {
 1771              	 .loc 2 462 0
 1772              	 .cfi_startproc
 1773              	 
 1774              	 
 1775              	 
 1776 0000 80B4     	 push {r7}
 1777              	.LCFI109:
 1778              	 .cfi_def_cfa_offset 4
 1779              	 .cfi_offset 7,-4
 1780 0002 83B0     	 sub sp,sp,#12
 1781              	.LCFI110:
 1782              	 .cfi_def_cfa_offset 16
 1783 0004 00AF     	 add r7,sp,#0
 1784              	.LCFI111:
 1785              	 .cfi_def_cfa_register 7
 1786 0006 7860     	 str r0,[r7,#4]
 1787 0008 0B46     	 mov r3,r1
 1788 000a FB70     	 strb r3,[r7,#3]
 463:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1789              	 .loc 2 463 0
 1790 000c FB78     	 ldrb r3,[r7,#3]
 1791 000e FA78     	 ldrb r2,[r7,#3]
 1792 0010 7968     	 ldr r1,[r7,#4]
 1793 0012 5820     	 movs r0,#88
 1794 0014 00FB02F2 	 mul r2,r0,r2
 1795 0018 0A44     	 add r2,r2,r1
 1796 001a 4032     	 adds r2,r2,#64
 1797 001c 1268     	 ldr r2,[r2]
 1798 001e 22F48072 	 bic r2,r2,#256
 1799 0022 7968     	 ldr r1,[r7,#4]
 1800 0024 5820     	 movs r0,#88
 1801 0026 00FB03F3 	 mul r3,r0,r3
 1802 002a 0B44     	 add r3,r3,r1
 1803 002c 4033     	 adds r3,r3,#64
 1804 002e 1A60     	 str r2,[r3]
 464:../Libraries/XMCLib/src/xmc_dma.c **** }
 1805              	 .loc 2 464 0
 1806 0030 0C37     	 adds r7,r7,#12
 1807              	.LCFI112:
 1808              	 .cfi_def_cfa_offset 4
 1809 0032 BD46     	 mov sp,r7
 1810              	.LCFI113:
 1811              	 .cfi_def_cfa_register 13
 1812              	 
 1813 0034 5DF8047B 	 ldr r7,[sp],#4
 1814              	.LCFI114:
 1815              	 .cfi_restore 7
 1816              	 .cfi_def_cfa_offset 0
 1817 0038 7047     	 bx lr
 1818              	 .cfi_endproc
 1819              	.LFE186:
 1821 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1822              	 .align 2
 1823              	 .global XMC_DMA_CH_IsSuspended
 1824              	 .thumb
 1825              	 .thumb_func
 1827              	XMC_DMA_CH_IsSuspended:
 1828              	.LFB187:
 465:../Libraries/XMCLib/src/xmc_dma.c **** 
 466:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 467:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 468:../Libraries/XMCLib/src/xmc_dma.c **** {
 1829              	 .loc 2 468 0
 1830              	 .cfi_startproc
 1831              	 
 1832              	 
 1833              	 
 1834 0000 80B4     	 push {r7}
 1835              	.LCFI115:
 1836              	 .cfi_def_cfa_offset 4
 1837              	 .cfi_offset 7,-4
 1838 0002 83B0     	 sub sp,sp,#12
 1839              	.LCFI116:
 1840              	 .cfi_def_cfa_offset 16
 1841 0004 00AF     	 add r7,sp,#0
 1842              	.LCFI117:
 1843              	 .cfi_def_cfa_register 7
 1844 0006 7860     	 str r0,[r7,#4]
 1845 0008 0B46     	 mov r3,r1
 1846 000a FB70     	 strb r3,[r7,#3]
 469:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1847              	 .loc 2 469 0
 1848 000c FB78     	 ldrb r3,[r7,#3]
 1849 000e 7A68     	 ldr r2,[r7,#4]
 1850 0010 5821     	 movs r1,#88
 1851 0012 01FB03F3 	 mul r3,r1,r3
 1852 0016 1344     	 add r3,r3,r2
 1853 0018 4033     	 adds r3,r3,#64
 1854 001a 1B68     	 ldr r3,[r3]
 1855 001c 03F48073 	 and r3,r3,#256
 1856 0020 002B     	 cmp r3,#0
 1857 0022 14BF     	 ite ne
 1858 0024 0123     	 movne r3,#1
 1859 0026 0023     	 moveq r3,#0
 1860 0028 DBB2     	 uxtb r3,r3
 470:../Libraries/XMCLib/src/xmc_dma.c **** }
 1861              	 .loc 2 470 0
 1862 002a 1846     	 mov r0,r3
 1863 002c 0C37     	 adds r7,r7,#12
 1864              	.LCFI118:
 1865              	 .cfi_def_cfa_offset 4
 1866 002e BD46     	 mov sp,r7
 1867              	.LCFI119:
 1868              	 .cfi_def_cfa_register 13
 1869              	 
 1870 0030 5DF8047B 	 ldr r7,[sp],#4
 1871              	.LCFI120:
 1872              	 .cfi_restore 7
 1873              	 .cfi_def_cfa_offset 0
 1874 0034 7047     	 bx lr
 1875              	 .cfi_endproc
 1876              	.LFE187:
 1878 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1879              	 .align 2
 1880              	 .global XMC_DMA_CH_EnableEvent
 1881              	 .thumb
 1882              	 .thumb_func
 1884              	XMC_DMA_CH_EnableEvent:
 1885              	.LFB188:
 471:../Libraries/XMCLib/src/xmc_dma.c **** 
 472:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 473:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 474:../Libraries/XMCLib/src/xmc_dma.c **** {
 1886              	 .loc 2 474 0
 1887              	 .cfi_startproc
 1888              	 
 1889              	 
 1890              	 
 1891 0000 80B4     	 push {r7}
 1892              	.LCFI121:
 1893              	 .cfi_def_cfa_offset 4
 1894              	 .cfi_offset 7,-4
 1895 0002 87B0     	 sub sp,sp,#28
 1896              	.LCFI122:
 1897              	 .cfi_def_cfa_offset 32
 1898 0004 00AF     	 add r7,sp,#0
 1899              	.LCFI123:
 1900              	 .cfi_def_cfa_register 7
 1901 0006 F860     	 str r0,[r7,#12]
 1902 0008 0B46     	 mov r3,r1
 1903 000a 7A60     	 str r2,[r7,#4]
 1904 000c FB72     	 strb r3,[r7,#11]
 475:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 476:../Libraries/XMCLib/src/xmc_dma.c **** 
 477:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1905              	 .loc 2 477 0
 1906 000e 0023     	 movs r3,#0
 1907 0010 7B61     	 str r3,[r7,#20]
 1908 0012 14E0     	 b .L102
 1909              	.L104:
 478:../Libraries/XMCLib/src/xmc_dma.c ****   {
 479:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1910              	 .loc 2 479 0
 1911 0014 7B69     	 ldr r3,[r7,#20]
 1912 0016 7A68     	 ldr r2,[r7,#4]
 1913 0018 22FA03F3 	 lsr r3,r2,r3
 1914 001c 03F00103 	 and r3,r3,#1
 1915 0020 002B     	 cmp r3,#0
 1916 0022 09D0     	 beq .L103
 480:../Libraries/XMCLib/src/xmc_dma.c ****     {
 481:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 1917              	 .loc 2 481 0
 1918 0024 7B69     	 ldr r3,[r7,#20]
 1919 0026 5A00     	 lsls r2,r3,#1
 1920 0028 FB7A     	 ldrb r3,[r7,#11]
 1921 002a 40F20111 	 movw r1,#257
 1922 002e 9940     	 lsls r1,r1,r3
 1923 0030 FB68     	 ldr r3,[r7,#12]
 1924 0032 C432     	 adds r2,r2,#196
 1925 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1926              	.L103:
 477:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1927              	 .loc 2 477 0 discriminator 2
 1928 0038 7B69     	 ldr r3,[r7,#20]
 1929 003a 0133     	 adds r3,r3,#1
 1930 003c 7B61     	 str r3,[r7,#20]
 1931              	.L102:
 477:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1932              	 .loc 2 477 0 is_stmt 0 discriminator 1
 1933 003e 7B69     	 ldr r3,[r7,#20]
 1934 0040 042B     	 cmp r3,#4
 1935 0042 E7D9     	 bls .L104
 482:../Libraries/XMCLib/src/xmc_dma.c ****     }
 483:../Libraries/XMCLib/src/xmc_dma.c ****   }
 484:../Libraries/XMCLib/src/xmc_dma.c **** }
 1936              	 .loc 2 484 0 is_stmt 1
 1937 0044 1C37     	 adds r7,r7,#28
 1938              	.LCFI124:
 1939              	 .cfi_def_cfa_offset 4
 1940 0046 BD46     	 mov sp,r7
 1941              	.LCFI125:
 1942              	 .cfi_def_cfa_register 13
 1943              	 
 1944 0048 5DF8047B 	 ldr r7,[sp],#4
 1945              	.LCFI126:
 1946              	 .cfi_restore 7
 1947              	 .cfi_def_cfa_offset 0
 1948 004c 7047     	 bx lr
 1949              	 .cfi_endproc
 1950              	.LFE188:
 1952 004e 00BF     	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1953              	 .align 2
 1954              	 .global XMC_DMA_CH_DisableEvent
 1955              	 .thumb
 1956              	 .thumb_func
 1958              	XMC_DMA_CH_DisableEvent:
 1959              	.LFB189:
 485:../Libraries/XMCLib/src/xmc_dma.c **** 
 486:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 487:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 488:../Libraries/XMCLib/src/xmc_dma.c **** {
 1960              	 .loc 2 488 0
 1961              	 .cfi_startproc
 1962              	 
 1963              	 
 1964              	 
 1965 0000 80B4     	 push {r7}
 1966              	.LCFI127:
 1967              	 .cfi_def_cfa_offset 4
 1968              	 .cfi_offset 7,-4
 1969 0002 87B0     	 sub sp,sp,#28
 1970              	.LCFI128:
 1971              	 .cfi_def_cfa_offset 32
 1972 0004 00AF     	 add r7,sp,#0
 1973              	.LCFI129:
 1974              	 .cfi_def_cfa_register 7
 1975 0006 F860     	 str r0,[r7,#12]
 1976 0008 0B46     	 mov r3,r1
 1977 000a 7A60     	 str r2,[r7,#4]
 1978 000c FB72     	 strb r3,[r7,#11]
 489:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 490:../Libraries/XMCLib/src/xmc_dma.c **** 
 491:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1979              	 .loc 2 491 0
 1980 000e 0023     	 movs r3,#0
 1981 0010 7B61     	 str r3,[r7,#20]
 1982 0012 14E0     	 b .L106
 1983              	.L108:
 492:../Libraries/XMCLib/src/xmc_dma.c ****   {
 493:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1984              	 .loc 2 493 0
 1985 0014 7B69     	 ldr r3,[r7,#20]
 1986 0016 7A68     	 ldr r2,[r7,#4]
 1987 0018 22FA03F3 	 lsr r3,r2,r3
 1988 001c 03F00103 	 and r3,r3,#1
 1989 0020 002B     	 cmp r3,#0
 1990 0022 09D0     	 beq .L107
 494:../Libraries/XMCLib/src/xmc_dma.c ****     {
 495:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 1991              	 .loc 2 495 0
 1992 0024 7B69     	 ldr r3,[r7,#20]
 1993 0026 5A00     	 lsls r2,r3,#1
 1994 0028 FB7A     	 ldrb r3,[r7,#11]
 1995 002a 4FF48071 	 mov r1,#256
 1996 002e 9940     	 lsls r1,r1,r3
 1997 0030 FB68     	 ldr r3,[r7,#12]
 1998 0032 C432     	 adds r2,r2,#196
 1999 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 2000              	.L107:
 491:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2001              	 .loc 2 491 0 discriminator 2
 2002 0038 7B69     	 ldr r3,[r7,#20]
 2003 003a 0133     	 adds r3,r3,#1
 2004 003c 7B61     	 str r3,[r7,#20]
 2005              	.L106:
 491:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2006              	 .loc 2 491 0 is_stmt 0 discriminator 1
 2007 003e 7B69     	 ldr r3,[r7,#20]
 2008 0040 042B     	 cmp r3,#4
 2009 0042 E7D9     	 bls .L108
 496:../Libraries/XMCLib/src/xmc_dma.c ****     }
 497:../Libraries/XMCLib/src/xmc_dma.c ****   }
 498:../Libraries/XMCLib/src/xmc_dma.c **** }
 2010              	 .loc 2 498 0 is_stmt 1
 2011 0044 1C37     	 adds r7,r7,#28
 2012              	.LCFI130:
 2013              	 .cfi_def_cfa_offset 4
 2014 0046 BD46     	 mov sp,r7
 2015              	.LCFI131:
 2016              	 .cfi_def_cfa_register 13
 2017              	 
 2018 0048 5DF8047B 	 ldr r7,[sp],#4
 2019              	.LCFI132:
 2020              	 .cfi_restore 7
 2021              	 .cfi_def_cfa_offset 0
 2022 004c 7047     	 bx lr
 2023              	 .cfi_endproc
 2024              	.LFE189:
 2026 004e 00BF     	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 2027              	 .align 2
 2028              	 .global XMC_DMA_CH_ClearEventStatus
 2029              	 .thumb
 2030              	 .thumb_func
 2032              	XMC_DMA_CH_ClearEventStatus:
 2033              	.LFB190:
 499:../Libraries/XMCLib/src/xmc_dma.c **** 
 500:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 501:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 502:../Libraries/XMCLib/src/xmc_dma.c **** {
 2034              	 .loc 2 502 0
 2035              	 .cfi_startproc
 2036              	 
 2037              	 
 2038              	 
 2039 0000 80B4     	 push {r7}
 2040              	.LCFI133:
 2041              	 .cfi_def_cfa_offset 4
 2042              	 .cfi_offset 7,-4
 2043 0002 87B0     	 sub sp,sp,#28
 2044              	.LCFI134:
 2045              	 .cfi_def_cfa_offset 32
 2046 0004 00AF     	 add r7,sp,#0
 2047              	.LCFI135:
 2048              	 .cfi_def_cfa_register 7
 2049 0006 F860     	 str r0,[r7,#12]
 2050 0008 0B46     	 mov r3,r1
 2051 000a 7A60     	 str r2,[r7,#4]
 2052 000c FB72     	 strb r3,[r7,#11]
 503:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 504:../Libraries/XMCLib/src/xmc_dma.c **** 
 505:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2053              	 .loc 2 505 0
 2054 000e 0023     	 movs r3,#0
 2055 0010 7B61     	 str r3,[r7,#20]
 2056 0012 13E0     	 b .L110
 2057              	.L112:
 506:../Libraries/XMCLib/src/xmc_dma.c ****   {
 507:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 2058              	 .loc 2 507 0
 2059 0014 7B69     	 ldr r3,[r7,#20]
 2060 0016 7A68     	 ldr r2,[r7,#4]
 2061 0018 22FA03F3 	 lsr r3,r2,r3
 2062 001c 03F00103 	 and r3,r3,#1
 2063 0020 002B     	 cmp r3,#0
 2064 0022 08D0     	 beq .L111
 508:../Libraries/XMCLib/src/xmc_dma.c ****     {
 509:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 2065              	 .loc 2 509 0
 2066 0024 7B69     	 ldr r3,[r7,#20]
 2067 0026 5A00     	 lsls r2,r3,#1
 2068 0028 FB7A     	 ldrb r3,[r7,#11]
 2069 002a 0121     	 movs r1,#1
 2070 002c 9940     	 lsls r1,r1,r3
 2071 002e FB68     	 ldr r3,[r7,#12]
 2072 0030 CE32     	 adds r2,r2,#206
 2073 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 2074              	.L111:
 505:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2075              	 .loc 2 505 0 discriminator 2
 2076 0036 7B69     	 ldr r3,[r7,#20]
 2077 0038 0133     	 adds r3,r3,#1
 2078 003a 7B61     	 str r3,[r7,#20]
 2079              	.L110:
 505:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2080              	 .loc 2 505 0 is_stmt 0 discriminator 1
 2081 003c 7B69     	 ldr r3,[r7,#20]
 2082 003e 042B     	 cmp r3,#4
 2083 0040 E8D9     	 bls .L112
 510:../Libraries/XMCLib/src/xmc_dma.c ****     }
 511:../Libraries/XMCLib/src/xmc_dma.c ****   }
 512:../Libraries/XMCLib/src/xmc_dma.c **** 
 513:../Libraries/XMCLib/src/xmc_dma.c **** }
 2084              	 .loc 2 513 0 is_stmt 1
 2085 0042 1C37     	 adds r7,r7,#28
 2086              	.LCFI136:
 2087              	 .cfi_def_cfa_offset 4
 2088 0044 BD46     	 mov sp,r7
 2089              	.LCFI137:
 2090              	 .cfi_def_cfa_register 13
 2091              	 
 2092 0046 5DF8047B 	 ldr r7,[sp],#4
 2093              	.LCFI138:
 2094              	 .cfi_restore 7
 2095              	 .cfi_def_cfa_offset 0
 2096 004a 7047     	 bx lr
 2097              	 .cfi_endproc
 2098              	.LFE190:
 2100              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 2101              	 .align 2
 2102              	 .global XMC_DMA_CH_GetEventStatus
 2103              	 .thumb
 2104              	 .thumb_func
 2106              	XMC_DMA_CH_GetEventStatus:
 2107              	.LFB191:
 514:../Libraries/XMCLib/src/xmc_dma.c **** 
 515:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 516:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 517:../Libraries/XMCLib/src/xmc_dma.c **** {
 2108              	 .loc 2 517 0
 2109              	 .cfi_startproc
 2110              	 
 2111              	 
 2112              	 
 2113 0000 80B4     	 push {r7}
 2114              	.LCFI139:
 2115              	 .cfi_def_cfa_offset 4
 2116              	 .cfi_offset 7,-4
 2117 0002 85B0     	 sub sp,sp,#20
 2118              	.LCFI140:
 2119              	 .cfi_def_cfa_offset 24
 2120 0004 00AF     	 add r7,sp,#0
 2121              	.LCFI141:
 2122              	 .cfi_def_cfa_register 7
 2123 0006 7860     	 str r0,[r7,#4]
 2124 0008 0B46     	 mov r3,r1
 2125 000a FB70     	 strb r3,[r7,#3]
 518:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 519:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 2126              	 .loc 2 519 0
 2127 000c 0023     	 movs r3,#0
 2128 000e BB60     	 str r3,[r7,#8]
 520:../Libraries/XMCLib/src/xmc_dma.c **** 
 521:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2129              	 .loc 2 521 0
 2130 0010 0023     	 movs r3,#0
 2131 0012 FB60     	 str r3,[r7,#12]
 2132 0014 18E0     	 b .L114
 2133              	.L117:
 522:../Libraries/XMCLib/src/xmc_dma.c ****   {
 523:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 2134              	 .loc 2 523 0
 2135 0016 FB68     	 ldr r3,[r7,#12]
 2136 0018 5A00     	 lsls r2,r3,#1
 2137 001a 7B68     	 ldr r3,[r7,#4]
 2138 001c BA32     	 adds r2,r2,#186
 2139 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 2140 0022 FB78     	 ldrb r3,[r7,#3]
 2141 0024 22FA03F3 	 lsr r3,r2,r3
 2142 0028 03F00103 	 and r3,r3,#1
 2143 002c 002B     	 cmp r3,#0
 2144 002e 04D0     	 beq .L115
 2145              	 .loc 2 523 0 is_stmt 0 discriminator 1
 2146 0030 FB68     	 ldr r3,[r7,#12]
 2147 0032 0122     	 movs r2,#1
 2148 0034 02FA03F3 	 lsl r3,r2,r3
 2149 0038 00E0     	 b .L116
 2150              	.L115:
 2151              	 .loc 2 523 0 discriminator 2
 2152 003a 0023     	 movs r3,#0
 2153              	.L116:
 2154              	 .loc 2 523 0 discriminator 4
 2155 003c BA68     	 ldr r2,[r7,#8]
 2156 003e 1343     	 orrs r3,r3,r2
 2157 0040 BB60     	 str r3,[r7,#8]
 521:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2158              	 .loc 2 521 0 is_stmt 1 discriminator 4
 2159 0042 FB68     	 ldr r3,[r7,#12]
 2160 0044 0133     	 adds r3,r3,#1
 2161 0046 FB60     	 str r3,[r7,#12]
 2162              	.L114:
 521:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2163              	 .loc 2 521 0 is_stmt 0 discriminator 2
 2164 0048 FB68     	 ldr r3,[r7,#12]
 2165 004a 042B     	 cmp r3,#4
 2166 004c E3D9     	 bls .L117
 524:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 525:../Libraries/XMCLib/src/xmc_dma.c ****   }
 526:../Libraries/XMCLib/src/xmc_dma.c **** 
 527:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2167              	 .loc 2 527 0 is_stmt 1
 2168 004e BB68     	 ldr r3,[r7,#8]
 528:../Libraries/XMCLib/src/xmc_dma.c **** }
 2169              	 .loc 2 528 0
 2170 0050 1846     	 mov r0,r3
 2171 0052 1437     	 adds r7,r7,#20
 2172              	.LCFI142:
 2173              	 .cfi_def_cfa_offset 4
 2174 0054 BD46     	 mov sp,r7
 2175              	.LCFI143:
 2176              	 .cfi_def_cfa_register 13
 2177              	 
 2178 0056 5DF8047B 	 ldr r7,[sp],#4
 2179              	.LCFI144:
 2180              	 .cfi_restore 7
 2181              	 .cfi_def_cfa_offset 0
 2182 005a 7047     	 bx lr
 2183              	 .cfi_endproc
 2184              	.LFE191:
 2186              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2187              	 .align 2
 2188              	 .global XMC_DMA_CH_EnableSourceGather
 2189              	 .thumb
 2190              	 .thumb_func
 2192              	XMC_DMA_CH_EnableSourceGather:
 2193              	.LFB192:
 529:../Libraries/XMCLib/src/xmc_dma.c **** 
 530:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 531:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 532:../Libraries/XMCLib/src/xmc_dma.c **** {
 2194              	 .loc 2 532 0
 2195              	 .cfi_startproc
 2196              	 
 2197              	 
 2198              	 
 2199 0000 80B4     	 push {r7}
 2200              	.LCFI145:
 2201              	 .cfi_def_cfa_offset 4
 2202              	 .cfi_offset 7,-4
 2203 0002 85B0     	 sub sp,sp,#20
 2204              	.LCFI146:
 2205              	 .cfi_def_cfa_offset 24
 2206 0004 00AF     	 add r7,sp,#0
 2207              	.LCFI147:
 2208              	 .cfi_def_cfa_register 7
 2209 0006 F860     	 str r0,[r7,#12]
 2210 0008 7A60     	 str r2,[r7,#4]
 2211 000a 1A46     	 mov r2,r3
 2212 000c 0B46     	 mov r3,r1
 2213 000e FB72     	 strb r3,[r7,#11]
 2214 0010 1346     	 mov r3,r2
 2215 0012 3B81     	 strh r3,[r7,#8]
 533:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2216              	 .loc 2 533 0
 2217 0014 FB7A     	 ldrb r3,[r7,#11]
 2218 0016 FA7A     	 ldrb r2,[r7,#11]
 2219 0018 F968     	 ldr r1,[r7,#12]
 2220 001a 5820     	 movs r0,#88
 2221 001c 00FB02F2 	 mul r2,r0,r2
 2222 0020 0A44     	 add r2,r2,r1
 2223 0022 1832     	 adds r2,r2,#24
 2224 0024 1268     	 ldr r2,[r2]
 2225 0026 42F40032 	 orr r2,r2,#131072
 2226 002a F968     	 ldr r1,[r7,#12]
 2227 002c 5820     	 movs r0,#88
 2228 002e 00FB03F3 	 mul r3,r0,r3
 2229 0032 0B44     	 add r3,r3,r1
 2230 0034 1833     	 adds r3,r3,#24
 2231 0036 1A60     	 str r2,[r3]
 534:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2232              	 .loc 2 534 0
 2233 0038 FB7A     	 ldrb r3,[r7,#11]
 2234 003a 3A89     	 ldrh r2,[r7,#8]
 2235 003c 1105     	 lsls r1,r2,#20
 2236 003e 7A68     	 ldr r2,[r7,#4]
 2237 0040 0A43     	 orrs r2,r2,r1
 2238 0042 F968     	 ldr r1,[r7,#12]
 2239 0044 5820     	 movs r0,#88
 2240 0046 00FB03F3 	 mul r3,r0,r3
 2241 004a 0B44     	 add r3,r3,r1
 2242 004c 4833     	 adds r3,r3,#72
 2243 004e 1A60     	 str r2,[r3]
 535:../Libraries/XMCLib/src/xmc_dma.c **** }
 2244              	 .loc 2 535 0
 2245 0050 1437     	 adds r7,r7,#20
 2246              	.LCFI148:
 2247              	 .cfi_def_cfa_offset 4
 2248 0052 BD46     	 mov sp,r7
 2249              	.LCFI149:
 2250              	 .cfi_def_cfa_register 13
 2251              	 
 2252 0054 5DF8047B 	 ldr r7,[sp],#4
 2253              	.LCFI150:
 2254              	 .cfi_restore 7
 2255              	 .cfi_def_cfa_offset 0
 2256 0058 7047     	 bx lr
 2257              	 .cfi_endproc
 2258              	.LFE192:
 2260 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2261              	 .align 2
 2262              	 .global XMC_DMA_CH_DisableSourceGather
 2263              	 .thumb
 2264              	 .thumb_func
 2266              	XMC_DMA_CH_DisableSourceGather:
 2267              	.LFB193:
 536:../Libraries/XMCLib/src/xmc_dma.c **** 
 537:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 538:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 539:../Libraries/XMCLib/src/xmc_dma.c **** {
 2268              	 .loc 2 539 0
 2269              	 .cfi_startproc
 2270              	 
 2271              	 
 2272              	 
 2273 0000 80B4     	 push {r7}
 2274              	.LCFI151:
 2275              	 .cfi_def_cfa_offset 4
 2276              	 .cfi_offset 7,-4
 2277 0002 83B0     	 sub sp,sp,#12
 2278              	.LCFI152:
 2279              	 .cfi_def_cfa_offset 16
 2280 0004 00AF     	 add r7,sp,#0
 2281              	.LCFI153:
 2282              	 .cfi_def_cfa_register 7
 2283 0006 7860     	 str r0,[r7,#4]
 2284 0008 0B46     	 mov r3,r1
 2285 000a FB70     	 strb r3,[r7,#3]
 540:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2286              	 .loc 2 540 0
 2287 000c FB78     	 ldrb r3,[r7,#3]
 2288 000e FA78     	 ldrb r2,[r7,#3]
 2289 0010 7968     	 ldr r1,[r7,#4]
 2290 0012 5820     	 movs r0,#88
 2291 0014 00FB02F2 	 mul r2,r0,r2
 2292 0018 0A44     	 add r2,r2,r1
 2293 001a 1832     	 adds r2,r2,#24
 2294 001c 1268     	 ldr r2,[r2]
 2295 001e 22F40032 	 bic r2,r2,#131072
 2296 0022 7968     	 ldr r1,[r7,#4]
 2297 0024 5820     	 movs r0,#88
 2298 0026 00FB03F3 	 mul r3,r0,r3
 2299 002a 0B44     	 add r3,r3,r1
 2300 002c 1833     	 adds r3,r3,#24
 2301 002e 1A60     	 str r2,[r3]
 541:../Libraries/XMCLib/src/xmc_dma.c **** }
 2302              	 .loc 2 541 0
 2303 0030 0C37     	 adds r7,r7,#12
 2304              	.LCFI154:
 2305              	 .cfi_def_cfa_offset 4
 2306 0032 BD46     	 mov sp,r7
 2307              	.LCFI155:
 2308              	 .cfi_def_cfa_register 13
 2309              	 
 2310 0034 5DF8047B 	 ldr r7,[sp],#4
 2311              	.LCFI156:
 2312              	 .cfi_restore 7
 2313              	 .cfi_def_cfa_offset 0
 2314 0038 7047     	 bx lr
 2315              	 .cfi_endproc
 2316              	.LFE193:
 2318 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2319              	 .align 2
 2320              	 .global XMC_DMA_CH_EnableDestinationScatter
 2321              	 .thumb
 2322              	 .thumb_func
 2324              	XMC_DMA_CH_EnableDestinationScatter:
 2325              	.LFB194:
 542:../Libraries/XMCLib/src/xmc_dma.c **** 
 543:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 544:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 545:../Libraries/XMCLib/src/xmc_dma.c **** {
 2326              	 .loc 2 545 0
 2327              	 .cfi_startproc
 2328              	 
 2329              	 
 2330              	 
 2331 0000 80B4     	 push {r7}
 2332              	.LCFI157:
 2333              	 .cfi_def_cfa_offset 4
 2334              	 .cfi_offset 7,-4
 2335 0002 85B0     	 sub sp,sp,#20
 2336              	.LCFI158:
 2337              	 .cfi_def_cfa_offset 24
 2338 0004 00AF     	 add r7,sp,#0
 2339              	.LCFI159:
 2340              	 .cfi_def_cfa_register 7
 2341 0006 F860     	 str r0,[r7,#12]
 2342 0008 7A60     	 str r2,[r7,#4]
 2343 000a 1A46     	 mov r2,r3
 2344 000c 0B46     	 mov r3,r1
 2345 000e FB72     	 strb r3,[r7,#11]
 2346 0010 1346     	 mov r3,r2
 2347 0012 3B81     	 strh r3,[r7,#8]
 546:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2348              	 .loc 2 546 0
 2349 0014 FB7A     	 ldrb r3,[r7,#11]
 2350 0016 FA7A     	 ldrb r2,[r7,#11]
 2351 0018 F968     	 ldr r1,[r7,#12]
 2352 001a 5820     	 movs r0,#88
 2353 001c 00FB02F2 	 mul r2,r0,r2
 2354 0020 0A44     	 add r2,r2,r1
 2355 0022 1832     	 adds r2,r2,#24
 2356 0024 1268     	 ldr r2,[r2]
 2357 0026 42F48022 	 orr r2,r2,#262144
 2358 002a F968     	 ldr r1,[r7,#12]
 2359 002c 5820     	 movs r0,#88
 2360 002e 00FB03F3 	 mul r3,r0,r3
 2361 0032 0B44     	 add r3,r3,r1
 2362 0034 1833     	 adds r3,r3,#24
 2363 0036 1A60     	 str r2,[r3]
 547:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2364              	 .loc 2 547 0
 2365 0038 FB7A     	 ldrb r3,[r7,#11]
 2366 003a 3A89     	 ldrh r2,[r7,#8]
 2367 003c 1105     	 lsls r1,r2,#20
 2368 003e 7A68     	 ldr r2,[r7,#4]
 2369 0040 0A43     	 orrs r2,r2,r1
 2370 0042 F968     	 ldr r1,[r7,#12]
 2371 0044 5820     	 movs r0,#88
 2372 0046 00FB03F3 	 mul r3,r0,r3
 2373 004a 0B44     	 add r3,r3,r1
 2374 004c 5033     	 adds r3,r3,#80
 2375 004e 1A60     	 str r2,[r3]
 548:../Libraries/XMCLib/src/xmc_dma.c **** }
 2376              	 .loc 2 548 0
 2377 0050 1437     	 adds r7,r7,#20
 2378              	.LCFI160:
 2379              	 .cfi_def_cfa_offset 4
 2380 0052 BD46     	 mov sp,r7
 2381              	.LCFI161:
 2382              	 .cfi_def_cfa_register 13
 2383              	 
 2384 0054 5DF8047B 	 ldr r7,[sp],#4
 2385              	.LCFI162:
 2386              	 .cfi_restore 7
 2387              	 .cfi_def_cfa_offset 0
 2388 0058 7047     	 bx lr
 2389              	 .cfi_endproc
 2390              	.LFE194:
 2392 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2393              	 .align 2
 2394              	 .global XMC_DMA_CH_DisableDestinationScatter
 2395              	 .thumb
 2396              	 .thumb_func
 2398              	XMC_DMA_CH_DisableDestinationScatter:
 2399              	.LFB195:
 549:../Libraries/XMCLib/src/xmc_dma.c **** 
 550:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 551:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 552:../Libraries/XMCLib/src/xmc_dma.c **** {
 2400              	 .loc 2 552 0
 2401              	 .cfi_startproc
 2402              	 
 2403              	 
 2404              	 
 2405 0000 80B4     	 push {r7}
 2406              	.LCFI163:
 2407              	 .cfi_def_cfa_offset 4
 2408              	 .cfi_offset 7,-4
 2409 0002 83B0     	 sub sp,sp,#12
 2410              	.LCFI164:
 2411              	 .cfi_def_cfa_offset 16
 2412 0004 00AF     	 add r7,sp,#0
 2413              	.LCFI165:
 2414              	 .cfi_def_cfa_register 7
 2415 0006 7860     	 str r0,[r7,#4]
 2416 0008 0B46     	 mov r3,r1
 2417 000a FB70     	 strb r3,[r7,#3]
 553:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2418              	 .loc 2 553 0
 2419 000c FB78     	 ldrb r3,[r7,#3]
 2420 000e FA78     	 ldrb r2,[r7,#3]
 2421 0010 7968     	 ldr r1,[r7,#4]
 2422 0012 5820     	 movs r0,#88
 2423 0014 00FB02F2 	 mul r2,r0,r2
 2424 0018 0A44     	 add r2,r2,r1
 2425 001a 1832     	 adds r2,r2,#24
 2426 001c 1268     	 ldr r2,[r2]
 2427 001e 22F48022 	 bic r2,r2,#262144
 2428 0022 7968     	 ldr r1,[r7,#4]
 2429 0024 5820     	 movs r0,#88
 2430 0026 00FB03F3 	 mul r3,r0,r3
 2431 002a 0B44     	 add r3,r3,r1
 2432 002c 1833     	 adds r3,r3,#24
 2433 002e 1A60     	 str r2,[r3]
 554:../Libraries/XMCLib/src/xmc_dma.c **** }
 2434              	 .loc 2 554 0
 2435 0030 0C37     	 adds r7,r7,#12
 2436              	.LCFI166:
 2437              	 .cfi_def_cfa_offset 4
 2438 0032 BD46     	 mov sp,r7
 2439              	.LCFI167:
 2440              	 .cfi_def_cfa_register 13
 2441              	 
 2442 0034 5DF8047B 	 ldr r7,[sp],#4
 2443              	.LCFI168:
 2444              	 .cfi_restore 7
 2445              	 .cfi_def_cfa_offset 0
 2446 0038 7047     	 bx lr
 2447              	 .cfi_endproc
 2448              	.LFE195:
 2450 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2451              	 .align 2
 2452              	 .global XMC_DMA_CH_TriggerSourceRequest
 2453              	 .thumb
 2454              	 .thumb_func
 2456              	XMC_DMA_CH_TriggerSourceRequest:
 2457              	.LFB196:
 555:../Libraries/XMCLib/src/xmc_dma.c **** 
 556:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 557:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 558:../Libraries/XMCLib/src/xmc_dma.c **** {
 2458              	 .loc 2 558 0
 2459              	 .cfi_startproc
 2460              	 
 2461              	 
 2462              	 
 2463 0000 80B4     	 push {r7}
 2464              	.LCFI169:
 2465              	 .cfi_def_cfa_offset 4
 2466              	 .cfi_offset 7,-4
 2467 0002 83B0     	 sub sp,sp,#12
 2468              	.LCFI170:
 2469              	 .cfi_def_cfa_offset 16
 2470 0004 00AF     	 add r7,sp,#0
 2471              	.LCFI171:
 2472              	 .cfi_def_cfa_register 7
 2473 0006 7860     	 str r0,[r7,#4]
 2474 0008 0846     	 mov r0,r1
 2475 000a 1146     	 mov r1,r2
 2476 000c 1A46     	 mov r2,r3
 2477 000e 0346     	 mov r3,r0
 2478 0010 FB70     	 strb r3,[r7,#3]
 2479 0012 0B46     	 mov r3,r1
 2480 0014 BB70     	 strb r3,[r7,#2]
 2481 0016 1346     	 mov r3,r2
 2482 0018 7B70     	 strb r3,[r7,#1]
 559:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2483              	 .loc 2 559 0
 2484 001a BB78     	 ldrb r3,[r7,#2]
 2485 001c 002B     	 cmp r3,#0
 2486 001e 06D1     	 bne .L124
 560:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 561:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2487              	 .loc 2 561 0
 2488 0020 FB78     	 ldrb r3,[r7,#3]
 2489 0022 40F20112 	 movw r2,#257
 2490 0026 9A40     	 lsls r2,r2,r3
 2491 0028 7B68     	 ldr r3,[r7,#4]
 2492 002a C3F87823 	 str r2,[r3,#888]
 2493              	.L124:
 562:../Libraries/XMCLib/src/xmc_dma.c ****   }
 563:../Libraries/XMCLib/src/xmc_dma.c **** 
 564:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2494              	 .loc 2 564 0
 2495 002e 7B78     	 ldrb r3,[r7,#1]
 2496 0030 002B     	 cmp r3,#0
 2497 0032 06D0     	 beq .L125
 565:../Libraries/XMCLib/src/xmc_dma.c ****   {
 566:../Libraries/XMCLib/src/xmc_dma.c ****   dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2498              	 .loc 2 566 0
 2499 0034 FB78     	 ldrb r3,[r7,#3]
 2500 0036 40F20112 	 movw r2,#257
 2501 003a 9A40     	 lsls r2,r2,r3
 2502 003c 7B68     	 ldr r3,[r7,#4]
 2503 003e C3F88823 	 str r2,[r3,#904]
 2504              	.L125:
 567:../Libraries/XMCLib/src/xmc_dma.c ****   }
 568:../Libraries/XMCLib/src/xmc_dma.c ****   
 569:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2505              	 .loc 2 569 0
 2506 0042 FB78     	 ldrb r3,[r7,#3]
 2507 0044 40F20112 	 movw r2,#257
 2508 0048 9A40     	 lsls r2,r2,r3
 2509 004a 7B68     	 ldr r3,[r7,#4]
 2510 004c C3F86823 	 str r2,[r3,#872]
 570:../Libraries/XMCLib/src/xmc_dma.c **** }
 2511              	 .loc 2 570 0
 2512 0050 0C37     	 adds r7,r7,#12
 2513              	.LCFI172:
 2514              	 .cfi_def_cfa_offset 4
 2515 0052 BD46     	 mov sp,r7
 2516              	.LCFI173:
 2517              	 .cfi_def_cfa_register 13
 2518              	 
 2519 0054 5DF8047B 	 ldr r7,[sp],#4
 2520              	.LCFI174:
 2521              	 .cfi_restore 7
 2522              	 .cfi_def_cfa_offset 0
 2523 0058 7047     	 bx lr
 2524              	 .cfi_endproc
 2525              	.LFE196:
 2527 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2528              	 .align 2
 2529              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2530              	 .thumb
 2531              	 .thumb_func
 2533              	XMC_DMA_CH_TriggerDestinationRequest:
 2534              	.LFB197:
 571:../Libraries/XMCLib/src/xmc_dma.c **** 
 572:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 573:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 574:../Libraries/XMCLib/src/xmc_dma.c **** {
 2535              	 .loc 2 574 0
 2536              	 .cfi_startproc
 2537              	 
 2538              	 
 2539              	 
 2540 0000 80B4     	 push {r7}
 2541              	.LCFI175:
 2542              	 .cfi_def_cfa_offset 4
 2543              	 .cfi_offset 7,-4
 2544 0002 83B0     	 sub sp,sp,#12
 2545              	.LCFI176:
 2546              	 .cfi_def_cfa_offset 16
 2547 0004 00AF     	 add r7,sp,#0
 2548              	.LCFI177:
 2549              	 .cfi_def_cfa_register 7
 2550 0006 7860     	 str r0,[r7,#4]
 2551 0008 0846     	 mov r0,r1
 2552 000a 1146     	 mov r1,r2
 2553 000c 1A46     	 mov r2,r3
 2554 000e 0346     	 mov r3,r0
 2555 0010 FB70     	 strb r3,[r7,#3]
 2556 0012 0B46     	 mov r3,r1
 2557 0014 BB70     	 strb r3,[r7,#2]
 2558 0016 1346     	 mov r3,r2
 2559 0018 7B70     	 strb r3,[r7,#1]
 575:../Libraries/XMCLib/src/xmc_dma.c ****   if(type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2560              	 .loc 2 575 0
 2561 001a BB78     	 ldrb r3,[r7,#2]
 2562 001c 002B     	 cmp r3,#0
 2563 001e 06D1     	 bne .L127
 576:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 577:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2564              	 .loc 2 577 0
 2565 0020 FB78     	 ldrb r3,[r7,#3]
 2566 0022 40F20112 	 movw r2,#257
 2567 0026 9A40     	 lsls r2,r2,r3
 2568 0028 7B68     	 ldr r3,[r7,#4]
 2569 002a C3F88023 	 str r2,[r3,#896]
 2570              	.L127:
 578:../Libraries/XMCLib/src/xmc_dma.c ****   }
 579:../Libraries/XMCLib/src/xmc_dma.c **** 
 580:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2571              	 .loc 2 580 0
 2572 002e 7B78     	 ldrb r3,[r7,#1]
 2573 0030 002B     	 cmp r3,#0
 2574 0032 06D0     	 beq .L128
 581:../Libraries/XMCLib/src/xmc_dma.c ****   {
 582:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2575              	 .loc 2 582 0
 2576 0034 FB78     	 ldrb r3,[r7,#3]
 2577 0036 40F20112 	 movw r2,#257
 2578 003a 9A40     	 lsls r2,r2,r3
 2579 003c 7B68     	 ldr r3,[r7,#4]
 2580 003e C3F89023 	 str r2,[r3,#912]
 2581              	.L128:
 583:../Libraries/XMCLib/src/xmc_dma.c ****   }
 584:../Libraries/XMCLib/src/xmc_dma.c **** 
 585:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2582              	 .loc 2 585 0
 2583 0042 FB78     	 ldrb r3,[r7,#3]
 2584 0044 40F20112 	 movw r2,#257
 2585 0048 9A40     	 lsls r2,r2,r3
 2586 004a 7B68     	 ldr r3,[r7,#4]
 2587 004c C3F87023 	 str r2,[r3,#880]
 586:../Libraries/XMCLib/src/xmc_dma.c **** }
 2588              	 .loc 2 586 0
 2589 0050 0C37     	 adds r7,r7,#12
 2590              	.LCFI178:
 2591              	 .cfi_def_cfa_offset 4
 2592 0052 BD46     	 mov sp,r7
 2593              	.LCFI179:
 2594              	 .cfi_def_cfa_register 13
 2595              	 
 2596 0054 5DF8047B 	 ldr r7,[sp],#4
 2597              	.LCFI180:
 2598              	 .cfi_restore 7
 2599              	 .cfi_def_cfa_offset 0
 2600 0058 7047     	 bx lr
 2601              	 .cfi_endproc
 2602              	.LFE197:
 2604 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2605              	 .align 2
 2606              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2607              	 .thumb
 2608              	 .thumb_func
 2610              	XMC_DMA_CH_EnableSourceAddressReload:
 2611              	.LFB198:
 587:../Libraries/XMCLib/src/xmc_dma.c **** 
 588:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 589:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 590:../Libraries/XMCLib/src/xmc_dma.c **** {
 2612              	 .loc 2 590 0
 2613              	 .cfi_startproc
 2614              	 
 2615              	 
 2616              	 
 2617 0000 80B4     	 push {r7}
 2618              	.LCFI181:
 2619              	 .cfi_def_cfa_offset 4
 2620              	 .cfi_offset 7,-4
 2621 0002 83B0     	 sub sp,sp,#12
 2622              	.LCFI182:
 2623              	 .cfi_def_cfa_offset 16
 2624 0004 00AF     	 add r7,sp,#0
 2625              	.LCFI183:
 2626              	 .cfi_def_cfa_register 7
 2627 0006 7860     	 str r0,[r7,#4]
 2628 0008 0B46     	 mov r3,r1
 2629 000a FB70     	 strb r3,[r7,#3]
 591:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2630              	 .loc 2 591 0
 2631 000c FB78     	 ldrb r3,[r7,#3]
 2632 000e FA78     	 ldrb r2,[r7,#3]
 2633 0010 7968     	 ldr r1,[r7,#4]
 2634 0012 5820     	 movs r0,#88
 2635 0014 00FB02F2 	 mul r2,r0,r2
 2636 0018 0A44     	 add r2,r2,r1
 2637 001a 4032     	 adds r2,r2,#64
 2638 001c 1268     	 ldr r2,[r2]
 2639 001e 42F08042 	 orr r2,r2,#1073741824
 2640 0022 7968     	 ldr r1,[r7,#4]
 2641 0024 5820     	 movs r0,#88
 2642 0026 00FB03F3 	 mul r3,r0,r3
 2643 002a 0B44     	 add r3,r3,r1
 2644 002c 4033     	 adds r3,r3,#64
 2645 002e 1A60     	 str r2,[r3]
 592:../Libraries/XMCLib/src/xmc_dma.c **** }
 2646              	 .loc 2 592 0
 2647 0030 0C37     	 adds r7,r7,#12
 2648              	.LCFI184:
 2649              	 .cfi_def_cfa_offset 4
 2650 0032 BD46     	 mov sp,r7
 2651              	.LCFI185:
 2652              	 .cfi_def_cfa_register 13
 2653              	 
 2654 0034 5DF8047B 	 ldr r7,[sp],#4
 2655              	.LCFI186:
 2656              	 .cfi_restore 7
 2657              	 .cfi_def_cfa_offset 0
 2658 0038 7047     	 bx lr
 2659              	 .cfi_endproc
 2660              	.LFE198:
 2662 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2663              	 .align 2
 2664              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2665              	 .thumb
 2666              	 .thumb_func
 2668              	XMC_DMA_CH_DisableSourceAddressReload:
 2669              	.LFB199:
 593:../Libraries/XMCLib/src/xmc_dma.c **** 
 594:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 595:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 596:../Libraries/XMCLib/src/xmc_dma.c **** {
 2670              	 .loc 2 596 0
 2671              	 .cfi_startproc
 2672              	 
 2673              	 
 2674              	 
 2675 0000 80B4     	 push {r7}
 2676              	.LCFI187:
 2677              	 .cfi_def_cfa_offset 4
 2678              	 .cfi_offset 7,-4
 2679 0002 83B0     	 sub sp,sp,#12
 2680              	.LCFI188:
 2681              	 .cfi_def_cfa_offset 16
 2682 0004 00AF     	 add r7,sp,#0
 2683              	.LCFI189:
 2684              	 .cfi_def_cfa_register 7
 2685 0006 7860     	 str r0,[r7,#4]
 2686 0008 0B46     	 mov r3,r1
 2687 000a FB70     	 strb r3,[r7,#3]
 597:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2688              	 .loc 2 597 0
 2689 000c FB78     	 ldrb r3,[r7,#3]
 2690 000e FA78     	 ldrb r2,[r7,#3]
 2691 0010 7968     	 ldr r1,[r7,#4]
 2692 0012 5820     	 movs r0,#88
 2693 0014 00FB02F2 	 mul r2,r0,r2
 2694 0018 0A44     	 add r2,r2,r1
 2695 001a 4032     	 adds r2,r2,#64
 2696 001c 1268     	 ldr r2,[r2]
 2697 001e 22F08042 	 bic r2,r2,#1073741824
 2698 0022 7968     	 ldr r1,[r7,#4]
 2699 0024 5820     	 movs r0,#88
 2700 0026 00FB03F3 	 mul r3,r0,r3
 2701 002a 0B44     	 add r3,r3,r1
 2702 002c 4033     	 adds r3,r3,#64
 2703 002e 1A60     	 str r2,[r3]
 598:../Libraries/XMCLib/src/xmc_dma.c **** }
 2704              	 .loc 2 598 0
 2705 0030 0C37     	 adds r7,r7,#12
 2706              	.LCFI190:
 2707              	 .cfi_def_cfa_offset 4
 2708 0032 BD46     	 mov sp,r7
 2709              	.LCFI191:
 2710              	 .cfi_def_cfa_register 13
 2711              	 
 2712 0034 5DF8047B 	 ldr r7,[sp],#4
 2713              	.LCFI192:
 2714              	 .cfi_restore 7
 2715              	 .cfi_def_cfa_offset 0
 2716 0038 7047     	 bx lr
 2717              	 .cfi_endproc
 2718              	.LFE199:
 2720 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2721              	 .align 2
 2722              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2723              	 .thumb
 2724              	 .thumb_func
 2726              	XMC_DMA_CH_EnableDestinationAddressReload:
 2727              	.LFB200:
 599:../Libraries/XMCLib/src/xmc_dma.c **** 
 600:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 601:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 602:../Libraries/XMCLib/src/xmc_dma.c **** {
 2728              	 .loc 2 602 0
 2729              	 .cfi_startproc
 2730              	 
 2731              	 
 2732              	 
 2733 0000 80B4     	 push {r7}
 2734              	.LCFI193:
 2735              	 .cfi_def_cfa_offset 4
 2736              	 .cfi_offset 7,-4
 2737 0002 83B0     	 sub sp,sp,#12
 2738              	.LCFI194:
 2739              	 .cfi_def_cfa_offset 16
 2740 0004 00AF     	 add r7,sp,#0
 2741              	.LCFI195:
 2742              	 .cfi_def_cfa_register 7
 2743 0006 7860     	 str r0,[r7,#4]
 2744 0008 0B46     	 mov r3,r1
 2745 000a FB70     	 strb r3,[r7,#3]
 603:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2746              	 .loc 2 603 0
 2747 000c FB78     	 ldrb r3,[r7,#3]
 2748 000e FA78     	 ldrb r2,[r7,#3]
 2749 0010 7968     	 ldr r1,[r7,#4]
 2750 0012 5820     	 movs r0,#88
 2751 0014 00FB02F2 	 mul r2,r0,r2
 2752 0018 0A44     	 add r2,r2,r1
 2753 001a 4032     	 adds r2,r2,#64
 2754 001c 1268     	 ldr r2,[r2]
 2755 001e 42F00042 	 orr r2,r2,#-2147483648
 2756 0022 7968     	 ldr r1,[r7,#4]
 2757 0024 5820     	 movs r0,#88
 2758 0026 00FB03F3 	 mul r3,r0,r3
 2759 002a 0B44     	 add r3,r3,r1
 2760 002c 4033     	 adds r3,r3,#64
 2761 002e 1A60     	 str r2,[r3]
 604:../Libraries/XMCLib/src/xmc_dma.c **** }
 2762              	 .loc 2 604 0
 2763 0030 0C37     	 adds r7,r7,#12
 2764              	.LCFI196:
 2765              	 .cfi_def_cfa_offset 4
 2766 0032 BD46     	 mov sp,r7
 2767              	.LCFI197:
 2768              	 .cfi_def_cfa_register 13
 2769              	 
 2770 0034 5DF8047B 	 ldr r7,[sp],#4
 2771              	.LCFI198:
 2772              	 .cfi_restore 7
 2773              	 .cfi_def_cfa_offset 0
 2774 0038 7047     	 bx lr
 2775              	 .cfi_endproc
 2776              	.LFE200:
 2778 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2779              	 .align 2
 2780              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2781              	 .thumb
 2782              	 .thumb_func
 2784              	XMC_DMA_CH_DisableDestinationAddressReload:
 2785              	.LFB201:
 605:../Libraries/XMCLib/src/xmc_dma.c **** 
 606:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 607:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 608:../Libraries/XMCLib/src/xmc_dma.c **** {
 2786              	 .loc 2 608 0
 2787              	 .cfi_startproc
 2788              	 
 2789              	 
 2790              	 
 2791 0000 80B4     	 push {r7}
 2792              	.LCFI199:
 2793              	 .cfi_def_cfa_offset 4
 2794              	 .cfi_offset 7,-4
 2795 0002 83B0     	 sub sp,sp,#12
 2796              	.LCFI200:
 2797              	 .cfi_def_cfa_offset 16
 2798 0004 00AF     	 add r7,sp,#0
 2799              	.LCFI201:
 2800              	 .cfi_def_cfa_register 7
 2801 0006 7860     	 str r0,[r7,#4]
 2802 0008 0B46     	 mov r3,r1
 2803 000a FB70     	 strb r3,[r7,#3]
 609:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2804              	 .loc 2 609 0
 2805 000c FB78     	 ldrb r3,[r7,#3]
 2806 000e FA78     	 ldrb r2,[r7,#3]
 2807 0010 7968     	 ldr r1,[r7,#4]
 2808 0012 5820     	 movs r0,#88
 2809 0014 00FB02F2 	 mul r2,r0,r2
 2810 0018 0A44     	 add r2,r2,r1
 2811 001a 4032     	 adds r2,r2,#64
 2812 001c 1268     	 ldr r2,[r2]
 2813 001e 22F00042 	 bic r2,r2,#-2147483648
 2814 0022 7968     	 ldr r1,[r7,#4]
 2815 0024 5820     	 movs r0,#88
 2816 0026 00FB03F3 	 mul r3,r0,r3
 2817 002a 0B44     	 add r3,r3,r1
 2818 002c 4033     	 adds r3,r3,#64
 2819 002e 1A60     	 str r2,[r3]
 610:../Libraries/XMCLib/src/xmc_dma.c **** }
 2820              	 .loc 2 610 0
 2821 0030 0C37     	 adds r7,r7,#12
 2822              	.LCFI202:
 2823              	 .cfi_def_cfa_offset 4
 2824 0032 BD46     	 mov sp,r7
 2825              	.LCFI203:
 2826              	 .cfi_def_cfa_register 13
 2827              	 
 2828 0034 5DF8047B 	 ldr r7,[sp],#4
 2829              	.LCFI204:
 2830              	 .cfi_restore 7
 2831              	 .cfi_def_cfa_offset 0
 2832 0038 7047     	 bx lr
 2833              	 .cfi_endproc
 2834              	.LFE201:
 2836 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2837              	 .align 2
 2838              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2839              	 .thumb
 2840              	 .thumb_func
 2842              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2843              	.LFB202:
 611:../Libraries/XMCLib/src/xmc_dma.c **** 
 612:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 613:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 614:../Libraries/XMCLib/src/xmc_dma.c **** {
 2844              	 .loc 2 614 0
 2845              	 .cfi_startproc
 2846              	 
 2847              	 
 2848              	 
 2849 0000 80B4     	 push {r7}
 2850              	.LCFI205:
 2851              	 .cfi_def_cfa_offset 4
 2852              	 .cfi_offset 7,-4
 2853 0002 83B0     	 sub sp,sp,#12
 2854              	.LCFI206:
 2855              	 .cfi_def_cfa_offset 16
 2856 0004 00AF     	 add r7,sp,#0
 2857              	.LCFI207:
 2858              	 .cfi_def_cfa_register 7
 2859 0006 7860     	 str r0,[r7,#4]
 2860 0008 0B46     	 mov r3,r1
 2861 000a FB70     	 strb r3,[r7,#3]
 615:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2862              	 .loc 2 615 0
 2863 000c FB78     	 ldrb r3,[r7,#3]
 2864 000e FA78     	 ldrb r2,[r7,#3]
 2865 0010 7968     	 ldr r1,[r7,#4]
 2866 0012 5820     	 movs r0,#88
 2867 0014 00FB02F2 	 mul r2,r0,r2
 2868 0018 0A44     	 add r2,r2,r1
 2869 001a 4032     	 adds r2,r2,#64
 2870 001c 1268     	 ldr r2,[r2]
 2871 001e 22F04042 	 bic r2,r2,#-1073741824
 2872 0022 7968     	 ldr r1,[r7,#4]
 2873 0024 5820     	 movs r0,#88
 2874 0026 00FB03F3 	 mul r3,r0,r3
 2875 002a 0B44     	 add r3,r3,r1
 2876 002c 4033     	 adds r3,r3,#64
 2877 002e 1A60     	 str r2,[r3]
 616:../Libraries/XMCLib/src/xmc_dma.c **** }
 2878              	 .loc 2 616 0
 2879 0030 0C37     	 adds r7,r7,#12
 2880              	.LCFI208:
 2881              	 .cfi_def_cfa_offset 4
 2882 0032 BD46     	 mov sp,r7
 2883              	.LCFI209:
 2884              	 .cfi_def_cfa_register 13
 2885              	 
 2886 0034 5DF8047B 	 ldr r7,[sp],#4
 2887              	.LCFI210:
 2888              	 .cfi_restore 7
 2889              	 .cfi_def_cfa_offset 0
 2890 0038 7047     	 bx lr
 2891              	 .cfi_endproc
 2892              	.LFE202:
 2894 003a 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2895              	 .align 2
 2896              	 .global XMC_DMA_CH_SetEventHandler
 2897              	 .thumb
 2898              	 .thumb_func
 2900              	XMC_DMA_CH_SetEventHandler:
 2901              	.LFB203:
 617:../Libraries/XMCLib/src/xmc_dma.c **** 
 618:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 619:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 620:../Libraries/XMCLib/src/xmc_dma.c **** {
 2902              	 .loc 2 620 0
 2903              	 .cfi_startproc
 2904              	 
 2905              	 
 2906              	 
 2907 0000 80B4     	 push {r7}
 2908              	.LCFI211:
 2909              	 .cfi_def_cfa_offset 4
 2910              	 .cfi_offset 7,-4
 2911 0002 85B0     	 sub sp,sp,#20
 2912              	.LCFI212:
 2913              	 .cfi_def_cfa_offset 24
 2914 0004 00AF     	 add r7,sp,#0
 2915              	.LCFI213:
 2916              	 .cfi_def_cfa_register 7
 2917 0006 F860     	 str r0,[r7,#12]
 2918 0008 0B46     	 mov r3,r1
 2919 000a 7A60     	 str r2,[r7,#4]
 2920 000c FB72     	 strb r3,[r7,#11]
 621:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 622:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 2921              	 .loc 2 622 0
 2922 000e FB68     	 ldr r3,[r7,#12]
 2923 0010 094A     	 ldr r2,.L137
 2924 0012 9342     	 cmp r3,r2
 2925 0014 05D1     	 bne .L135
 623:../Libraries/XMCLib/src/xmc_dma.c ****   {
 624:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 625:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2926              	 .loc 2 625 0
 2927 0016 FB7A     	 ldrb r3,[r7,#11]
 2928 0018 0849     	 ldr r1,.L137+4
 2929 001a 7A68     	 ldr r2,[r7,#4]
 2930 001c 41F82320 	 str r2,[r1,r3,lsl#2]
 2931 0020 04E0     	 b .L134
 2932              	.L135:
 626:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 627:../Libraries/XMCLib/src/xmc_dma.c ****   }
 628:../Libraries/XMCLib/src/xmc_dma.c ****   else
 629:../Libraries/XMCLib/src/xmc_dma.c ****   {
 630:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 2933              	 .loc 2 630 0
 2934 0022 FB7A     	 ldrb r3,[r7,#11]
 2935 0024 0649     	 ldr r1,.L137+8
 2936 0026 7A68     	 ldr r2,[r7,#4]
 2937 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 2938              	.L134:
 631:../Libraries/XMCLib/src/xmc_dma.c ****   }
 632:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 633:../Libraries/XMCLib/src/xmc_dma.c **** }
 2939              	 .loc 2 633 0
 2940 002c 1437     	 adds r7,r7,#20
 2941              	.LCFI214:
 2942              	 .cfi_def_cfa_offset 4
 2943 002e BD46     	 mov sp,r7
 2944              	.LCFI215:
 2945              	 .cfi_def_cfa_register 13
 2946              	 
 2947 0030 5DF8047B 	 ldr r7,[sp],#4
 2948              	.LCFI216:
 2949              	 .cfi_restore 7
 2950              	 .cfi_def_cfa_offset 0
 2951 0034 7047     	 bx lr
 2952              	.L138:
 2953 0036 00BF     	 .align 2
 2954              	.L137:
 2955 0038 00400150 	 .word 1342259200
 2956 003c 00000000 	 .word dma0_event_handlers
 2957 0040 00000000 	 .word dma1_event_handlers
 2958              	 .cfi_endproc
 2959              	.LFE203:
 2961              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2962              	 .align 2
 2963              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2964              	 .thumb
 2965              	 .thumb_func
 2967              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2968              	.LFB204:
 634:../Libraries/XMCLib/src/xmc_dma.c **** 
 635:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 636:../Libraries/XMCLib/src/xmc_dma.c **** {
 2969              	 .loc 2 636 0
 2970              	 .cfi_startproc
 2971              	 
 2972              	 
 2973 0000 80B5     	 push {r7,lr}
 2974              	.LCFI217:
 2975              	 .cfi_def_cfa_offset 8
 2976              	 .cfi_offset 7,-8
 2977              	 .cfi_offset 14,-4
 2978 0002 84B0     	 sub sp,sp,#16
 2979              	.LCFI218:
 2980              	 .cfi_def_cfa_offset 24
 2981 0004 00AF     	 add r7,sp,#0
 2982              	.LCFI219:
 2983              	 .cfi_def_cfa_register 7
 2984 0006 7860     	 str r0,[r7,#4]
 2985 0008 0B46     	 mov r3,r1
 2986 000a FB70     	 strb r3,[r7,#3]
 637:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 638:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2987              	 .loc 2 638 0
 2988 000c FB78     	 ldrb r3,[r7,#3]
 2989 000e 7A68     	 ldr r2,[r7,#4]
 2990 0010 5821     	 movs r1,#88
 2991 0012 01FB03F3 	 mul r3,r1,r3
 2992 0016 1344     	 add r3,r3,r2
 2993 0018 4033     	 adds r3,r3,#64
 2994 001a 5B68     	 ldr r3,[r3,#4]
 2995 001c 03F4F063 	 and r3,r3,#1920
 2996 0020 DB09     	 lsrs r3,r3,#7
 2997 0022 FB60     	 str r3,[r7,#12]
 639:../Libraries/XMCLib/src/xmc_dma.c **** 
 640:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2998              	 .loc 2 640 0
 2999 0024 FB68     	 ldr r3,[r7,#12]
 3000 0026 DBB2     	 uxtb r3,r3
 3001 0028 7868     	 ldr r0,[r7,#4]
 3002 002a 1946     	 mov r1,r3
 3003 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 641:../Libraries/XMCLib/src/xmc_dma.c **** }
 3004              	 .loc 2 641 0
 3005 0030 1037     	 adds r7,r7,#16
 3006              	.LCFI220:
 3007              	 .cfi_def_cfa_offset 8
 3008 0032 BD46     	 mov sp,r7
 3009              	.LCFI221:
 3010              	 .cfi_def_cfa_register 13
 3011              	 
 3012 0034 80BD     	 pop {r7,pc}
 3013              	 .cfi_endproc
 3014              	.LFE204:
 3016 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 3017              	 .align 2
 3018              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 3019              	 .thumb
 3020              	 .thumb_func
 3022              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 3023              	.LFB205:
 642:../Libraries/XMCLib/src/xmc_dma.c **** 
 643:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 644:../Libraries/XMCLib/src/xmc_dma.c **** {
 3024              	 .loc 2 644 0
 3025              	 .cfi_startproc
 3026              	 
 3027              	 
 3028 0000 80B5     	 push {r7,lr}
 3029              	.LCFI222:
 3030              	 .cfi_def_cfa_offset 8
 3031              	 .cfi_offset 7,-8
 3032              	 .cfi_offset 14,-4
 3033 0002 84B0     	 sub sp,sp,#16
 3034              	.LCFI223:
 3035              	 .cfi_def_cfa_offset 24
 3036 0004 00AF     	 add r7,sp,#0
 3037              	.LCFI224:
 3038              	 .cfi_def_cfa_register 7
 3039 0006 7860     	 str r0,[r7,#4]
 3040 0008 0B46     	 mov r3,r1
 3041 000a FB70     	 strb r3,[r7,#3]
 645:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 646:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 3042              	 .loc 2 646 0
 3043 000c FB78     	 ldrb r3,[r7,#3]
 3044 000e 7A68     	 ldr r2,[r7,#4]
 3045 0010 5821     	 movs r1,#88
 3046 0012 01FB03F3 	 mul r3,r1,r3
 3047 0016 1344     	 add r3,r3,r2
 3048 0018 4033     	 adds r3,r3,#64
 3049 001a 5B68     	 ldr r3,[r3,#4]
 3050 001c 03F4F043 	 and r3,r3,#30720
 3051 0020 DB0A     	 lsrs r3,r3,#11
 3052 0022 FB60     	 str r3,[r7,#12]
 647:../Libraries/XMCLib/src/xmc_dma.c **** 
 648:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3053              	 .loc 2 648 0
 3054 0024 FB68     	 ldr r3,[r7,#12]
 3055 0026 DBB2     	 uxtb r3,r3
 3056 0028 7868     	 ldr r0,[r7,#4]
 3057 002a 1946     	 mov r1,r3
 3058 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 649:../Libraries/XMCLib/src/xmc_dma.c **** }
 3059              	 .loc 2 649 0
 3060 0030 1037     	 adds r7,r7,#16
 3061              	.LCFI225:
 3062              	 .cfi_def_cfa_offset 8
 3063 0032 BD46     	 mov sp,r7
 3064              	.LCFI226:
 3065              	 .cfi_def_cfa_register 13
 3066              	 
 3067 0034 80BD     	 pop {r7,pc}
 3068              	 .cfi_endproc
 3069              	.LFE205:
 3071 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 3072              	 .align 2
 3073              	 .global XMC_DMA_IRQHandler
 3074              	 .thumb
 3075              	 .thumb_func
 3077              	XMC_DMA_IRQHandler:
 3078              	.LFB206:
 650:../Libraries/XMCLib/src/xmc_dma.c **** 
 651:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 652:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 653:../Libraries/XMCLib/src/xmc_dma.c **** {
 3079              	 .loc 2 653 0
 3080              	 .cfi_startproc
 3081              	 
 3082              	 
 3083 0000 80B5     	 push {r7,lr}
 3084              	.LCFI227:
 3085              	 .cfi_def_cfa_offset 8
 3086              	 .cfi_offset 7,-8
 3087              	 .cfi_offset 14,-4
 3088 0002 88B0     	 sub sp,sp,#32
 3089              	.LCFI228:
 3090              	 .cfi_def_cfa_offset 40
 3091 0004 00AF     	 add r7,sp,#0
 3092              	.LCFI229:
 3093              	 .cfi_def_cfa_register 7
 3094 0006 7860     	 str r0,[r7,#4]
 654:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 655:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 656:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 657:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 658:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 659:../Libraries/XMCLib/src/xmc_dma.c **** 
 660:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 661:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 3095              	 .loc 2 661 0
 3096 0008 7B68     	 ldr r3,[r7,#4]
 3097 000a 824A     	 ldr r2,.L174
 3098 000c 9342     	 cmp r3,r2
 3099 000e 02D1     	 bne .L142
 662:../Libraries/XMCLib/src/xmc_dma.c ****   {
 663:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 664:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 3100              	 .loc 2 664 0
 3101 0010 814B     	 ldr r3,.L174+4
 3102 0012 BB61     	 str r3,[r7,#24]
 3103 0014 01E0     	 b .L143
 3104              	.L142:
 665:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 666:../Libraries/XMCLib/src/xmc_dma.c ****   }
 667:../Libraries/XMCLib/src/xmc_dma.c ****   else
 668:../Libraries/XMCLib/src/xmc_dma.c ****   {
 669:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 3105              	 .loc 2 669 0
 3106 0016 814B     	 ldr r3,.L174+8
 3107 0018 BB61     	 str r3,[r7,#24]
 3108              	.L143:
 670:../Libraries/XMCLib/src/xmc_dma.c ****   }
 671:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 672:../Libraries/XMCLib/src/xmc_dma.c ****   
 673:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 3109              	 .loc 2 673 0
 3110 001a 7868     	 ldr r0,[r7,#4]
 3111 001c FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 3112 0020 7861     	 str r0,[r7,#20]
 674:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 3113              	 .loc 2 674 0
 3114 0022 0023     	 movs r3,#0
 3115 0024 FB61     	 str r3,[r7,#28]
 675:../Libraries/XMCLib/src/xmc_dma.c **** 
 676:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 3116              	 .loc 2 676 0
 3117 0026 7B69     	 ldr r3,[r7,#20]
 3118 0028 03F01003 	 and r3,r3,#16
 3119 002c 002B     	 cmp r3,#0
 3120 002e 2BD0     	 beq .L144
 677:../Libraries/XMCLib/src/xmc_dma.c ****   {
 678:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 3121              	 .loc 2 678 0
 3122 0030 7868     	 ldr r0,[r7,#4]
 3123 0032 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 3124 0036 7861     	 str r0,[r7,#20]
 679:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3125              	 .loc 2 679 0
 3126 0038 21E0     	 b .L145
 3127              	.L149:
 680:../Libraries/XMCLib/src/xmc_dma.c ****     {
 681:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3128              	 .loc 2 681 0
 3129 003a 0122     	 movs r2,#1
 3130 003c FB69     	 ldr r3,[r7,#28]
 3131 003e 02FA03F3 	 lsl r3,r2,r3
 3132 0042 3B61     	 str r3,[r7,#16]
 682:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 3133              	 .loc 2 682 0
 3134 0044 7A69     	 ldr r2,[r7,#20]
 3135 0046 3B69     	 ldr r3,[r7,#16]
 3136 0048 1340     	 ands r3,r3,r2
 3137 004a 002B     	 cmp r3,#0
 3138 004c 14D0     	 beq .L146
 683:../Libraries/XMCLib/src/xmc_dma.c ****       {
 684:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 3139              	 .loc 2 684 0
 3140 004e FB69     	 ldr r3,[r7,#28]
 3141 0050 DBB2     	 uxtb r3,r3
 3142 0052 7868     	 ldr r0,[r7,#4]
 3143 0054 1946     	 mov r1,r3
 3144 0056 1022     	 movs r2,#16
 3145 0058 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 685:../Libraries/XMCLib/src/xmc_dma.c **** 
 686:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 687:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3146              	 .loc 2 687 0
 3147 005c FB69     	 ldr r3,[r7,#28]
 3148 005e 9B00     	 lsls r3,r3,#2
 3149 0060 BA69     	 ldr r2,[r7,#24]
 3150 0062 1344     	 add r3,r3,r2
 3151 0064 1B68     	 ldr r3,[r3]
 3152 0066 FB60     	 str r3,[r7,#12]
 688:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3153              	 .loc 2 688 0
 3154 0068 FB68     	 ldr r3,[r7,#12]
 3155 006a 002B     	 cmp r3,#0
 3156 006c 03D0     	 beq .L147
 689:../Libraries/XMCLib/src/xmc_dma.c ****         {
 690:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 3157              	 .loc 2 690 0
 3158 006e FB68     	 ldr r3,[r7,#12]
 3159 0070 1020     	 movs r0,#16
 3160 0072 9847     	 blx r3
 691:../Libraries/XMCLib/src/xmc_dma.c ****         }
 692:../Libraries/XMCLib/src/xmc_dma.c ****        
 693:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3161              	 .loc 2 693 0
 3162 0074 07E0     	 b .L148
 3163              	.L147:
 3164 0076 06E0     	 b .L148
 3165              	.L146:
 694:../Libraries/XMCLib/src/xmc_dma.c ****       }
 695:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3166              	 .loc 2 695 0
 3167 0078 FB69     	 ldr r3,[r7,#28]
 3168 007a 0133     	 adds r3,r3,#1
 3169 007c FB61     	 str r3,[r7,#28]
 3170              	.L145:
 679:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3171              	 .loc 2 679 0
 3172 007e 7B69     	 ldr r3,[r7,#20]
 3173 0080 002B     	 cmp r3,#0
 3174 0082 DAD1     	 bne .L149
 3175 0084 C3E0     	 b .L141
 3176              	.L148:
 3177 0086 C2E0     	 b .L141
 3178              	.L144:
 696:../Libraries/XMCLib/src/xmc_dma.c ****     }
 697:../Libraries/XMCLib/src/xmc_dma.c ****   }
 698:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3179              	 .loc 2 698 0
 3180 0088 7B69     	 ldr r3,[r7,#20]
 3181 008a 03F00103 	 and r3,r3,#1
 3182 008e 002B     	 cmp r3,#0
 3183 0090 2BD0     	 beq .L151
 699:../Libraries/XMCLib/src/xmc_dma.c ****   {
 700:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 3184              	 .loc 2 700 0
 3185 0092 7868     	 ldr r0,[r7,#4]
 3186 0094 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 3187 0098 7861     	 str r0,[r7,#20]
 701:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3188              	 .loc 2 701 0
 3189 009a 21E0     	 b .L152
 3190              	.L156:
 702:../Libraries/XMCLib/src/xmc_dma.c ****     {
 703:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3191              	 .loc 2 703 0
 3192 009c 0122     	 movs r2,#1
 3193 009e FB69     	 ldr r3,[r7,#28]
 3194 00a0 02FA03F3 	 lsl r3,r2,r3
 3195 00a4 3B61     	 str r3,[r7,#16]
 704:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3196              	 .loc 2 704 0
 3197 00a6 7A69     	 ldr r2,[r7,#20]
 3198 00a8 3B69     	 ldr r3,[r7,#16]
 3199 00aa 1340     	 ands r3,r3,r2
 3200 00ac 002B     	 cmp r3,#0
 3201 00ae 14D0     	 beq .L153
 705:../Libraries/XMCLib/src/xmc_dma.c ****       {
 706:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 3202              	 .loc 2 706 0
 3203 00b0 FB69     	 ldr r3,[r7,#28]
 3204 00b2 DBB2     	 uxtb r3,r3
 3205 00b4 7868     	 ldr r0,[r7,#4]
 3206 00b6 1946     	 mov r1,r3
 3207 00b8 0F22     	 movs r2,#15
 3208 00ba FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 707:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_BL
 708:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 709:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 710:../Libraries/XMCLib/src/xmc_dma.c **** 
 711:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 712:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3209              	 .loc 2 712 0
 3210 00be FB69     	 ldr r3,[r7,#28]
 3211 00c0 9B00     	 lsls r3,r3,#2
 3212 00c2 BA69     	 ldr r2,[r7,#24]
 3213 00c4 1344     	 add r3,r3,r2
 3214 00c6 1B68     	 ldr r3,[r3]
 3215 00c8 FB60     	 str r3,[r7,#12]
 713:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3216              	 .loc 2 713 0
 3217 00ca FB68     	 ldr r3,[r7,#12]
 3218 00cc 002B     	 cmp r3,#0
 3219 00ce 03D0     	 beq .L154
 714:../Libraries/XMCLib/src/xmc_dma.c ****         {
 715:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 3220              	 .loc 2 715 0
 3221 00d0 FB68     	 ldr r3,[r7,#12]
 3222 00d2 0120     	 movs r0,#1
 3223 00d4 9847     	 blx r3
 716:../Libraries/XMCLib/src/xmc_dma.c ****         }
 717:../Libraries/XMCLib/src/xmc_dma.c **** 																	  
 718:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3224              	 .loc 2 718 0
 3225 00d6 07E0     	 b .L155
 3226              	.L154:
 3227 00d8 06E0     	 b .L155
 3228              	.L153:
 719:../Libraries/XMCLib/src/xmc_dma.c ****       }
 720:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3229              	 .loc 2 720 0
 3230 00da FB69     	 ldr r3,[r7,#28]
 3231 00dc 0133     	 adds r3,r3,#1
 3232 00de FB61     	 str r3,[r7,#28]
 3233              	.L152:
 701:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3234              	 .loc 2 701 0
 3235 00e0 7B69     	 ldr r3,[r7,#20]
 3236 00e2 002B     	 cmp r3,#0
 3237 00e4 DAD1     	 bne .L156
 3238 00e6 92E0     	 b .L141
 3239              	.L155:
 3240 00e8 91E0     	 b .L141
 3241              	.L151:
 721:../Libraries/XMCLib/src/xmc_dma.c ****     }
 722:../Libraries/XMCLib/src/xmc_dma.c ****   }
 723:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3242              	 .loc 2 723 0
 3243 00ea 7B69     	 ldr r3,[r7,#20]
 3244 00ec 03F00203 	 and r3,r3,#2
 3245 00f0 002B     	 cmp r3,#0
 3246 00f2 2BD0     	 beq .L157
 724:../Libraries/XMCLib/src/xmc_dma.c ****   {
 725:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3247              	 .loc 2 725 0
 3248 00f4 7868     	 ldr r0,[r7,#4]
 3249 00f6 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3250 00fa 7861     	 str r0,[r7,#20]
 726:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3251              	 .loc 2 726 0
 3252 00fc 21E0     	 b .L158
 3253              	.L162:
 727:../Libraries/XMCLib/src/xmc_dma.c ****     {
 728:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3254              	 .loc 2 728 0
 3255 00fe 0122     	 movs r2,#1
 3256 0100 FB69     	 ldr r3,[r7,#28]
 3257 0102 02FA03F3 	 lsl r3,r2,r3
 3258 0106 3B61     	 str r3,[r7,#16]
 729:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3259              	 .loc 2 729 0
 3260 0108 7A69     	 ldr r2,[r7,#20]
 3261 010a 3B69     	 ldr r3,[r7,#16]
 3262 010c 1340     	 ands r3,r3,r2
 3263 010e 002B     	 cmp r3,#0
 3264 0110 14D0     	 beq .L159
 730:../Libraries/XMCLib/src/xmc_dma.c ****       {
 731:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3265              	 .loc 2 731 0
 3266 0112 FB69     	 ldr r3,[r7,#28]
 3267 0114 DBB2     	 uxtb r3,r3
 3268 0116 7868     	 ldr r0,[r7,#4]
 3269 0118 1946     	 mov r1,r3
 3270 011a 0E22     	 movs r2,#14
 3271 011c FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 732:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 733:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 734:../Libraries/XMCLib/src/xmc_dma.c **** 
 735:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 736:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3272              	 .loc 2 736 0
 3273 0120 FB69     	 ldr r3,[r7,#28]
 3274 0122 9B00     	 lsls r3,r3,#2
 3275 0124 BA69     	 ldr r2,[r7,#24]
 3276 0126 1344     	 add r3,r3,r2
 3277 0128 1B68     	 ldr r3,[r3]
 3278 012a FB60     	 str r3,[r7,#12]
 737:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3279              	 .loc 2 737 0
 3280 012c FB68     	 ldr r3,[r7,#12]
 3281 012e 002B     	 cmp r3,#0
 3282 0130 03D0     	 beq .L160
 738:../Libraries/XMCLib/src/xmc_dma.c ****         {
 739:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3283              	 .loc 2 739 0
 3284 0132 FB68     	 ldr r3,[r7,#12]
 3285 0134 0220     	 movs r0,#2
 3286 0136 9847     	 blx r3
 740:../Libraries/XMCLib/src/xmc_dma.c ****         }
 741:../Libraries/XMCLib/src/xmc_dma.c **** 
 742:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3287              	 .loc 2 742 0
 3288 0138 07E0     	 b .L161
 3289              	.L160:
 3290 013a 06E0     	 b .L161
 3291              	.L159:
 743:../Libraries/XMCLib/src/xmc_dma.c ****       }
 744:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3292              	 .loc 2 744 0
 3293 013c FB69     	 ldr r3,[r7,#28]
 3294 013e 0133     	 adds r3,r3,#1
 3295 0140 FB61     	 str r3,[r7,#28]
 3296              	.L158:
 726:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3297              	 .loc 2 726 0
 3298 0142 7B69     	 ldr r3,[r7,#20]
 3299 0144 002B     	 cmp r3,#0
 3300 0146 DAD1     	 bne .L162
 3301 0148 61E0     	 b .L141
 3302              	.L161:
 3303 014a 60E0     	 b .L141
 3304              	.L157:
 745:../Libraries/XMCLib/src/xmc_dma.c ****     }
 746:../Libraries/XMCLib/src/xmc_dma.c ****   }
 747:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3305              	 .loc 2 747 0
 3306 014c 7B69     	 ldr r3,[r7,#20]
 3307 014e 03F00403 	 and r3,r3,#4
 3308 0152 002B     	 cmp r3,#0
 3309 0154 2BD0     	 beq .L163
 748:../Libraries/XMCLib/src/xmc_dma.c ****   {
 749:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3310              	 .loc 2 749 0
 3311 0156 7868     	 ldr r0,[r7,#4]
 3312 0158 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3313 015c 7861     	 str r0,[r7,#20]
 750:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3314              	 .loc 2 750 0
 3315 015e 21E0     	 b .L164
 3316              	.L168:
 751:../Libraries/XMCLib/src/xmc_dma.c ****     {
 752:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3317              	 .loc 2 752 0
 3318 0160 0122     	 movs r2,#1
 3319 0162 FB69     	 ldr r3,[r7,#28]
 3320 0164 02FA03F3 	 lsl r3,r2,r3
 3321 0168 3B61     	 str r3,[r7,#16]
 753:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3322              	 .loc 2 753 0
 3323 016a 7A69     	 ldr r2,[r7,#20]
 3324 016c 3B69     	 ldr r3,[r7,#16]
 3325 016e 1340     	 ands r3,r3,r2
 3326 0170 002B     	 cmp r3,#0
 3327 0172 14D0     	 beq .L165
 754:../Libraries/XMCLib/src/xmc_dma.c ****       {
 755:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3328              	 .loc 2 755 0
 3329 0174 FB69     	 ldr r3,[r7,#28]
 3330 0176 DBB2     	 uxtb r3,r3
 3331 0178 7868     	 ldr r0,[r7,#4]
 3332 017a 1946     	 mov r1,r3
 3333 017c 0422     	 movs r2,#4
 3334 017e FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 756:../Libraries/XMCLib/src/xmc_dma.c **** 
 757:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 758:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3335              	 .loc 2 758 0
 3336 0182 FB69     	 ldr r3,[r7,#28]
 3337 0184 9B00     	 lsls r3,r3,#2
 3338 0186 BA69     	 ldr r2,[r7,#24]
 3339 0188 1344     	 add r3,r3,r2
 3340 018a 1B68     	 ldr r3,[r3]
 3341 018c FB60     	 str r3,[r7,#12]
 759:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3342              	 .loc 2 759 0
 3343 018e FB68     	 ldr r3,[r7,#12]
 3344 0190 002B     	 cmp r3,#0
 3345 0192 03D0     	 beq .L166
 760:../Libraries/XMCLib/src/xmc_dma.c ****         {
 761:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3346              	 .loc 2 761 0
 3347 0194 FB68     	 ldr r3,[r7,#12]
 3348 0196 0420     	 movs r0,#4
 3349 0198 9847     	 blx r3
 762:../Libraries/XMCLib/src/xmc_dma.c ****         }
 763:../Libraries/XMCLib/src/xmc_dma.c ****         
 764:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3350              	 .loc 2 764 0
 3351 019a 07E0     	 b .L167
 3352              	.L166:
 3353 019c 06E0     	 b .L167
 3354              	.L165:
 765:../Libraries/XMCLib/src/xmc_dma.c ****       }
 766:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3355              	 .loc 2 766 0
 3356 019e FB69     	 ldr r3,[r7,#28]
 3357 01a0 0133     	 adds r3,r3,#1
 3358 01a2 FB61     	 str r3,[r7,#28]
 3359              	.L164:
 750:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3360              	 .loc 2 750 0
 3361 01a4 7B69     	 ldr r3,[r7,#20]
 3362 01a6 002B     	 cmp r3,#0
 3363 01a8 DAD1     	 bne .L168
 3364 01aa 30E0     	 b .L141
 3365              	.L167:
 3366 01ac 2FE0     	 b .L141
 3367              	.L163:
 767:../Libraries/XMCLib/src/xmc_dma.c ****     }
 768:../Libraries/XMCLib/src/xmc_dma.c ****   }
 769:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3368              	 .loc 2 769 0
 3369 01ae 7B69     	 ldr r3,[r7,#20]
 3370 01b0 03F00803 	 and r3,r3,#8
 3371 01b4 002B     	 cmp r3,#0
 3372 01b6 2AD0     	 beq .L141
 770:../Libraries/XMCLib/src/xmc_dma.c ****   {
 771:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3373              	 .loc 2 771 0
 3374 01b8 7868     	 ldr r0,[r7,#4]
 3375 01ba FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3376 01be 7861     	 str r0,[r7,#20]
 772:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3377              	 .loc 2 772 0
 3378 01c0 21E0     	 b .L169
 3379              	.L173:
 773:../Libraries/XMCLib/src/xmc_dma.c ****     {
 774:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3380              	 .loc 2 774 0
 3381 01c2 0122     	 movs r2,#1
 3382 01c4 FB69     	 ldr r3,[r7,#28]
 3383 01c6 02FA03F3 	 lsl r3,r2,r3
 3384 01ca 3B61     	 str r3,[r7,#16]
 775:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3385              	 .loc 2 775 0
 3386 01cc 7A69     	 ldr r2,[r7,#20]
 3387 01ce 3B69     	 ldr r3,[r7,#16]
 3388 01d0 1340     	 ands r3,r3,r2
 3389 01d2 002B     	 cmp r3,#0
 3390 01d4 14D0     	 beq .L170
 776:../Libraries/XMCLib/src/xmc_dma.c ****       {
 777:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3391              	 .loc 2 777 0
 3392 01d6 FB69     	 ldr r3,[r7,#28]
 3393 01d8 DBB2     	 uxtb r3,r3
 3394 01da 7868     	 ldr r0,[r7,#4]
 3395 01dc 1946     	 mov r1,r3
 3396 01de 0822     	 movs r2,#8
 3397 01e0 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 778:../Libraries/XMCLib/src/xmc_dma.c **** 
 779:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 780:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3398              	 .loc 2 780 0
 3399 01e4 FB69     	 ldr r3,[r7,#28]
 3400 01e6 9B00     	 lsls r3,r3,#2
 3401 01e8 BA69     	 ldr r2,[r7,#24]
 3402 01ea 1344     	 add r3,r3,r2
 3403 01ec 1B68     	 ldr r3,[r3]
 3404 01ee FB60     	 str r3,[r7,#12]
 781:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3405              	 .loc 2 781 0
 3406 01f0 FB68     	 ldr r3,[r7,#12]
 3407 01f2 002B     	 cmp r3,#0
 3408 01f4 03D0     	 beq .L171
 782:../Libraries/XMCLib/src/xmc_dma.c ****         {
 783:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3409              	 .loc 2 783 0
 3410 01f6 FB68     	 ldr r3,[r7,#12]
 3411 01f8 0820     	 movs r0,#8
 3412 01fa 9847     	 blx r3
 784:../Libraries/XMCLib/src/xmc_dma.c ****         }      
 785:../Libraries/XMCLib/src/xmc_dma.c **** 
 786:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3413              	 .loc 2 786 0
 3414 01fc 07E0     	 b .L172
 3415              	.L171:
 3416 01fe 06E0     	 b .L172
 3417              	.L170:
 787:../Libraries/XMCLib/src/xmc_dma.c ****       }
 788:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3418              	 .loc 2 788 0
 3419 0200 FB69     	 ldr r3,[r7,#28]
 3420 0202 0133     	 adds r3,r3,#1
 3421 0204 FB61     	 str r3,[r7,#28]
 3422              	.L169:
 772:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3423              	 .loc 2 772 0
 3424 0206 7B69     	 ldr r3,[r7,#20]
 3425 0208 002B     	 cmp r3,#0
 3426 020a DAD1     	 bne .L173
 3427 020c FFE7     	 b .L141
 3428              	.L172:
 3429              	.L141:
 789:../Libraries/XMCLib/src/xmc_dma.c ****     }
 790:../Libraries/XMCLib/src/xmc_dma.c ****   }
 791:../Libraries/XMCLib/src/xmc_dma.c ****   else
 792:../Libraries/XMCLib/src/xmc_dma.c ****   {
 793:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 794:../Libraries/XMCLib/src/xmc_dma.c ****   }
 795:../Libraries/XMCLib/src/xmc_dma.c **** 
 796:../Libraries/XMCLib/src/xmc_dma.c **** }
 3430              	 .loc 2 796 0
 3431 020e 2037     	 adds r7,r7,#32
 3432              	.LCFI230:
 3433              	 .cfi_def_cfa_offset 8
 3434 0210 BD46     	 mov sp,r7
 3435              	.LCFI231:
 3436              	 .cfi_def_cfa_register 13
 3437              	 
 3438 0212 80BD     	 pop {r7,pc}
 3439              	.L175:
 3440              	 .align 2
 3441              	.L174:
 3442 0214 00400150 	 .word 1342259200
 3443 0218 00000000 	 .word dma0_event_handlers
 3444 021c 00000000 	 .word dma1_event_handlers
 3445              	 .cfi_endproc
 3446              	.LFE206:
 3448              	 .text
 3449              	.Letext0:
 3450              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3451              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3452              	 .file 5 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3453              	 .file 6 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/XMCLib/inc/xmc4_scu.h"
 3454              	 .file 7 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Include/core_cm4.h"
 3455              	 .file 8 "C:/Users/wdmer/Downloads/jme_DAQ_Final/jme_DAQ_Integrated_XMC4700-F144x2048_0/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:20     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:24     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:64     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:68     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:107    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:111    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:150    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:154    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:193    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:197    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:236    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:240    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
                            *COM*:00000020 dma0_event_handlers
                            *COM*:00000010 dma1_event_handlers
    {standard input}:281    .text.XMC_DMA_Init:00000000 $t
    {standard input}:286    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:326    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:321    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:380    .text.XMC_DMA_Enable:00000038 $d
    {standard input}:387    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:392    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:446    .text.XMC_DMA_Disable:00000038 $d
    {standard input}:453    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:458    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:603    .text.XMC_DMA_IsEnabled:000000d8 $d
    {standard input}:610    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:615    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:718    .text.XMC_DMA_EnableRequestLine:00000090 $d
    {standard input}:724    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:729    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:793    .text.XMC_DMA_DisableRequestLine:0000004c $d
    {standard input}:799    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:804    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:886    .text.XMC_DMA_ClearRequestLine:00000070 $d
    {standard input}:892    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:897    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:967    .text.XMC_DMA_GetOverrunStatus:00000058 $d
    {standard input}:973    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:978    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:1034   .text.XMC_DMA_ClearOverrunStatus:0000003c $d
    {standard input}:1040   .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:1045   .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:1099   .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:1104   .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1153   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1158   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:2032   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1474   .text.XMC_DMA_CH_Init:00000250 $d
    {standard input}:1483   .text.XMC_DMA_CH_Init:00000274 $t
    {standard input}:1617   .text.XMC_DMA_CH_Init:0000037c $d
    {standard input}:1620   .text.XMC_DMA_CH_Init:00000380 $t
    {standard input}:1706   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1711   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1764   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1769   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1822   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1827   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1879   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1884   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1953   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1958   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:2027   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:2101   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:2106   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2187   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2192   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2261   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2266   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2319   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2324   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2393   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2398   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2451   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2456   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2528   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2533   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2605   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2610   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2663   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2668   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2721   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2726   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2779   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2784   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2837   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2842   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2895   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2900   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2955   .text.XMC_DMA_CH_SetEventHandler:00000038 $d
    {standard input}:2962   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2967   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:3017   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:3022   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:3072   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:3077   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3442   .text.XMC_DMA_IRQHandler:00000214 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_RESET_IsPeripheralResetAsserted
XMC_SCU_CLOCK_IsPeripheralClockGated
