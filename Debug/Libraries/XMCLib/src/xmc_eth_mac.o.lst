   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_eth_mac.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_ETH_MAC_Reset,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_ETH_MAC_Reset:
  25              	.LFB128:
  26              	 .file 1 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_eth_mac.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @file xmc_eth_mac.h
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @date 2016-06-08
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @cond
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * All rights reserved.                        
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *                                             
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * following conditions are met:   
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer.                        
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *                                                                              
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Change History
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * --------------
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2015-06-20:
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Initial
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-04-25:
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Change XMC_ETH_MAC_BUF_SIZE to 1524 to allow for Tagged MAC frame format
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *  
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-05-19:
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_GetTxBuffer() and XMC_ETH_MAC_GetRxBuffer()
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_SetTxBufferSize()
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-06-08:
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_IsRxDescriptorOwnedByDma()
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @endcond
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup XMClib XMC Peripheral Library
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup ETH_MAC
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @brief Ethernet Low level driver for XMC4000 microcontroller family.
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The Ethernet MAC (ETH) is a major communication peripheral that supports 10/100
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MBit/s data transfer rates in compliance with the IEEE 802.3-2002 standard. The ETH
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * may be used to implement internet connected applications using IPv4 and IPv6. The
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH also includes support for IEEE1588 time synchronisation to allow implementation
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * of Real Time Ethernet protocols.
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The XMC_ETH_MAC low level driver provides functions to configure and initialize
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the ETH_MAC hardware peripheral.
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifndef XMC_ETH_MAC_H
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_H
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * HEADER FILES
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_common.h"
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (ETH0)
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_eth_mac_map.h"
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MACROS
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_BUF_SIZE           (1524)     /**< ETH MAC buffer size */
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_PHY_MAX_RETRIES    (0xffffUL) /**< Maximum retries */
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_WAKEUP_REGISTER_LENGTH (8U)       /**< Remote wakeup frame reg length */
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * TDES0 Descriptor TX Packet Control/Status
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IC   (0x40000000U) /**< Interrupt on competition */
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LS   (0x20000000U) /**< Last segment */
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FS   (0x10000000U) /**< First segment */
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DC   (0x08000000U) /**< Disable CRC */
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DP   (0x04000000U) /**< Disable pad */
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSE (0x02000000U) /**< Transmit time stamp enable */
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CIC  (0x00C00000U) /**< Checksum insertion control */
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TER  (0x00200000U) /**< Transmit end of ring */
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TCH  (0x00100000U) /**< Second address chained */
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSS (0x00020000U) /**< Transmit time stamp status */
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IHE  (0x00010000U) /**< IP header error */
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ES   (0x00008000U) /**< Error summary */
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_JT   (0x00004000U) /**< Jabber timeout */
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FF   (0x00002000U) /**< Frame flushed */
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IPE  (0x00001000U) /**< IP payload error */
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LOC  (0x00000800U) /**< Loss of carrier */
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_NC   (0x00000400U) /**< No carrier */
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LC   (0x00000200U) /**< Late collision */
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_EC   (0x00000100U) /**< Excessive collision */
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_VF   (0x00000080U) /**< VLAN frame */
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CC   (0x00000078U) /**< Collision count */
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ED   (0x00000004U) /**< Excessive deferral */
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_UF   (0x00000002U) /**< Underflow error */
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DB   (0x00000001U) /**< Deferred bit */
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * RDES0 Descriptor RX Packet Status
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_AFM  (0x40000000U) /**< Destination address filter fail */
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FL   (0x3FFF0000U) /**< Frame length mask */
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ES   (0x00008000U) /**< Error summary */
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DE   (0x00004000U) /**< Descriptor error */
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_SAF  (0x00002000U) /**< Source address filter fail */
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LE   (0x00001000U) /**< Length error */
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OE   (0x00000800U) /**< Overflow error */
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_VLAN (0x00000400U) /**< VLAN tag */
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FS   (0x00000200U) /**< First descriptor */
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LS   (0x00000100U) /**< Last descriptor */
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_TSA  (0x00000080U) /**< Timestamp available */
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LC   (0x00000040U) /**< Late collision */
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FT   (0x00000020U) /**< Frame type */
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RWT  (0x00000010U) /**< Receive watchdog timeout */
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RE   (0x00000008U) /**< Receive error */
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DBE  (0x00000004U) /**< Dribble bit error */
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_CE   (0x00000002U) /**< CRC error */
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ESA  (0x00000001U) /**< Extended Status/Rx MAC address */
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ENUMS
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Ethernet MAC status return values
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_STATUS
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_OK    = 0U, /**< Driver accepted application request */
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_STATUS_t;
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Transmission frame
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TX_FRAME
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_FRAGMENT  = 0x1U, /**< Indicate frame fragment */
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_EVENT     = 0x2U, /**< Generate event when frame is transmitted */
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_TIMESTAMP = 0x4U  /**< Capture frame time stamp */
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TX_FRAME_t;
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC event
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_EVENT
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_PMT = ETH_INTERRUPT_MASK_PMTIM_Msk << 16,        /**< Power management event */
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TIMESTAMP = ETH_INTERRUPT_MASK_TSIM_Msk << 16,   /**< Time stamp event */
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_RECEIVE = ETH_STATUS_ERI_Msk,              /**< Early receive */
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_BUS_ERROR = ETH_STATUS_FBI_Msk,                  /**< Bus error */
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_TRANSMIT = ETH_STATUS_ETI_Msk,             /**< Early transmit */
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT = ETH_STATUS_RWT_Msk,   /**< Receive watchdog time-out
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED = ETH_STATUS_RPS_Msk,    /**< Receive process stopped *
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE = ETH_STATUS_RU_Msk,  /**< Receive buffer unavailabl
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE = ETH_STATUS_RI_Msk,                     /**< Receive event */
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW = ETH_STATUS_UNF_Msk,         /**< Transmit underflow */
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW = ETH_STATUS_OVF_Msk,           /**< Receive overflow */
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT = ETH_STATUS_TJT_Msk,    /**< Transmit jabber time-out 
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE = ETH_STATUS_TU_Msk, /**< Transmit buffer unavailab
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED = ETH_STATUS_TPS_Msk,   /**< Transmit process stopped 
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT = ETH_STATUS_TI_Msk                     /**< Transmit event */
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_EVENT_t;
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Link interface
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_INTERFACE
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_MII, /**< Link interface: Media independent interface */
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_RMII /**< Link interface: Reduced media independent interface */
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_INTERFACE_t;
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link status
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_STATUS
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_DOWN, /**< Link status down */
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_UP    /**< Link status up */
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_STATUS_t;
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link speed
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_SPEED
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_10M  = 0UL << ETH_MAC_CONFIGURATION_FES_Pos, /**< Link speed: 10M */
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_100M = 1UL << ETH_MAC_CONFIGURATION_FES_Pos  /**< Link speed: 100M */
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_SPEED_t;
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH duplex settings (full/half?)
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_DUPLEX
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_HALF = 0UL << ETH_MAC_CONFIGURATION_DM_Pos, /**< Half duplex */
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_FULL = 1UL << ETH_MAC_CONFIGURATION_DM_Pos  /**< Full duplex */
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_DUPLEX_t;
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC address filter
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_ADDR_FILTER
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0 = 0x01000000UL, /**< Address filter mask: byte 0 */
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1 = 0x02000000UL, /**< Address filter mask: byte 1 */
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2 = 0x04000000UL, /**< Address filter mask: byte 2 */
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3 = 0x08000000UL, /**< Address filter mask: byte 3 */
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4 = 0x10000000UL, /**< Address filter mask: byte 4 */
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5 = 0x20000000UL, /**< Address filter mask: byte 5 */
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_SA         = 0x40000000UL  /**< Address filter SA */
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_ADDR_FILTER_t;
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Power management events that triggers a PMT interrupt
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_PMT_EVENT
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME         = ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,  /**< Wakeup
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET         = ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,  /**< Magic 
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER = ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk  /**< Unicas
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PMT_EVENT_t;
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp configuration enable
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_CONFIG
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE = ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,             /**< F
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES = ETH_TIMESTAMP_CONTROL_TSENALL_Msk,        /**< E
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2 = ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,           /**< P
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET = ETH_TIMESTAMP_CONTROL_TSIPENA_Msk, /**< P
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6 = ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,   /**< P
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4 = ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,   /**< P
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER = ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk /*
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_CONFIG_t;
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DATA STRUCTURES
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard start */
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma push
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma anon_unions
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning 586
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC port control
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef union XMC_ETH_MAC_PORT_CTRL
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   struct
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ETH_MAC_PORT_CTRL_RXD0_t) */
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ETH_MAC_PORT_CTRL_RXD1_t) */
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd2: 2;     /**< Receive data bit 2 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD2_t) */
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd3: 2;     /**< Receive data bit 3 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD3_t) */
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_rmii: 2; /**< RMII: Continuous 50 MHz reference clock.
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                MII: Receive clock, 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/s
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                (::XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t) */
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs_dv: 2;   /**< RMII: carrier sense/RX_Data valid. MII: RX_Data valid (::XMC_ETH_MAC
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs: 2;      /**< Carrier sense for only MII (::XMC_ETH_MAC_PORT_CTRL_CRS_t) */
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxer: 2;     /**< Receive error (::XMC_ETH_MAC_PORT_CTRL_RXER_t) */
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t col: 2;      /**< Collision Detect for only MII (::XMC_ETH_MAC_PORT_CTRL_COL_t) */
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_tx: 2;   /**< Transmit clock (only MII), 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mdio: 2;     /**< Bidirectional, push-pull management data I/O line (::XMC_ETH_MAC_POR
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mode: 1;     /**< RMII or MII (::XMC_ETH_MAC_PORT_CTRL_MODE_t) */
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   };
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t raw;
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PORT_CTRL_t;
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC DMA descriptor
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_DMA_DESC
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t status;                 /**< DMA descriptor status */
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t length;                 /**< Descriptor length */
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t buffer1;                /**< Buffer 1 */
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t buffer2;                /**< Buffer 2 */
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t extended_status;        /**< Extended status */
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t reserved;               /**< Reserved */
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t time_stamp_seconds;     /**< Time stamp low */
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t time_stamp_nanoseconds; /**< Time stamp high */
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_DMA_DESC_t;
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_TIME
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   int32_t nanoseconds;
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t seconds;
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIME_t;
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH driver structure
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH_GLOBAL_TypeDef *regs;        /**< ETH module 0 (now, we have a single ETH module) */
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint64_t address;              /**< MAC address */
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc; /**< DMA descriptor: RX */
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc; /**< DMA descriptor: TX */
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *rx_buf;                /**< RX buffer */
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *tx_buf;                /**< TX buffer */
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *frame_end;              /**< End of assembled frame fragments */
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_rx_buf;              /**< How many RX descriptors? */
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_tx_buf;              /**< How many TX descriptors? */
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_index;                /**< Transmit descriptor index */
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t rx_index;                /**< Receive descriptor index */
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_ts_index;             /**< Transmit time-stamp descriptor index */
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_t;
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard end */
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma pop
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning restore
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * API PROTOTYPES
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifdef __cplusplus
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** extern "C" {
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t Initialization status
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral <br>
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac);
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the RX DMA descriptors <br>
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX descriptors in a chained configuration. It sets
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the TX DMA descriptors <br>
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX descriptors in a chained configuration. It sets
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable the Ethernet MAC peripheral <br>
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function de-asserts the peripheral reset.
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac);
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable the Ethernet MAC peripheral <br>
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function asserts the peripheral reset.
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac);
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return bool
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Check if the ETH MAC is enabled <br>
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the ETH MAC is enabled or not. It returns "true" if the
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * peripheral is enabled, "false" otherwise.
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** bool XMC_ETH_MAC_IsEnabled(const XMC_ETH_MAC_t *const eth_mac);
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Reset the ETH MAC peripheral <br>
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the ETH MAC peripheral. It blocks until reset.
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_Reset(XMC_ETH_MAC_t *const eth_mac)
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
  27              	 .loc 1 455 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_SWR_Msk;
  43              	 .loc 1 456 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 1B68     	 ldr r3,[r3]
  46 000c 7A68     	 ldr r2,[r7,#4]
  47 000e 1268     	 ldr r2,[r2]
  48 0010 02F58052 	 add r2,r2,#4096
  49 0014 1268     	 ldr r2,[r2]
  50 0016 42F00102 	 orr r2,r2,#1
  51 001a 03F58053 	 add r3,r3,#4096
  52 001e 1A60     	 str r2,[r3]
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   while ((eth_mac->regs->BUS_MODE & (uint32_t)ETH_BUS_MODE_SWR_Msk) != 0U)
  53              	 .loc 1 457 0
  54 0020 00BF     	 nop
  55              	.L2:
  56              	 .loc 1 457 0 is_stmt 0 discriminator 1
  57 0022 7B68     	 ldr r3,[r7,#4]
  58 0024 1B68     	 ldr r3,[r3]
  59 0026 03F58053 	 add r3,r3,#4096
  60 002a 1B68     	 ldr r3,[r3]
  61 002c 03F00103 	 and r3,r3,#1
  62 0030 002B     	 cmp r3,#0
  63 0032 F6D1     	 bne .L2
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   }
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
  64              	 .loc 1 460 0 is_stmt 1
  65 0034 0C37     	 adds r7,r7,#12
  66              	.LCFI3:
  67              	 .cfi_def_cfa_offset 4
  68 0036 BD46     	 mov sp,r7
  69              	.LCFI4:
  70              	 .cfi_def_cfa_register 13
  71              	 
  72 0038 5DF8047B 	 ldr r7,[sp],#4
  73              	.LCFI5:
  74              	 .cfi_restore 7
  75              	 .cfi_def_cfa_offset 0
  76 003c 7047     	 bx lr
  77              	 .cfi_endproc
  78              	.LFE128:
  80 003e 00BF     	 .section .text.XMC_ETH_MAC_SetAddress,"ax",%progbits
  81              	 .align 2
  82              	 .thumb
  83              	 .thumb_func
  85              	XMC_ETH_MAC_SetAddress:
  86              	.LFB130:
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The destination to which the read data needs to be copied to
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Read a PHY register <br>
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t re
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The data to write
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Write a PHY register <br>
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially writes the data and polls
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the busy bit until it is no longer busy.
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t r
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param port_ctrl Port control configuration
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set port control configuration <br>
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the port control by writing the configuration into the
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * CON register.
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \note
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MII Mode is only available in:
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4500 LQFP144 and BGA144 packages
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4700 LQFP144 and BGA196 packages
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4800 LQFP144 and BGA196 packages
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetPortControl(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_POR
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH0_CON->CON = (uint32_t)port_ctrl.raw;
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set management clock divider <br>
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the management clock divider by writing to the GMII_ADDRESS
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * register.
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac);
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr The MAC address to set
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetAddress(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
  87              	 .loc 1 544 0
  88              	 .cfi_startproc
  89              	 
  90              	 
  91              	 
  92 0000 B0B4     	 push {r4,r5,r7}
  93              	.LCFI6:
  94              	 .cfi_def_cfa_offset 12
  95              	 .cfi_offset 4,-12
  96              	 .cfi_offset 5,-8
  97              	 .cfi_offset 7,-4
  98 0002 85B0     	 sub sp,sp,#20
  99              	.LCFI7:
 100              	 .cfi_def_cfa_offset 32
 101 0004 00AF     	 add r7,sp,#0
 102              	.LCFI8:
 103              	 .cfi_def_cfa_register 7
 104 0006 F860     	 str r0,[r7,#12]
 105 0008 C7E90023 	 strd r2,[r7]
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_HIGH = (uint32_t)(addr >> 32);
 106              	 .loc 1 545 0
 107 000c FB68     	 ldr r3,[r7,#12]
 108 000e 1968     	 ldr r1,[r3]
 109 0010 D7E90023 	 ldrd r2,[r7]
 110 0014 1C00     	 movs r4,r3
 111 0016 0025     	 movs r5,#0
 112 0018 2346     	 mov r3,r4
 113 001a 0B64     	 str r3,[r1,#64]
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_LOW = (uint32_t)addr;
 114              	 .loc 1 546 0
 115 001c FB68     	 ldr r3,[r7,#12]
 116 001e 1B68     	 ldr r3,[r3]
 117 0020 3A68     	 ldr r2,[r7]
 118 0022 5A64     	 str r2,[r3,#68]
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 119              	 .loc 1 547 0
 120 0024 1437     	 adds r7,r7,#20
 121              	.LCFI9:
 122              	 .cfi_def_cfa_offset 12
 123 0026 BD46     	 mov sp,r7
 124              	.LCFI10:
 125              	 .cfi_def_cfa_register 13
 126              	 
 127 0028 B0BC     	 pop {r4,r5,r7}
 128              	.LCFI11:
 129              	 .cfi_restore 7
 130              	 .cfi_restore 5
 131              	 .cfi_restore 4
 132              	 .cfi_def_cfa_offset 0
 133 002a 7047     	 bx lr
 134              	 .cfi_endproc
 135              	.LFE130:
 137              	 .section .text.XMC_SCU_CLOCK_GetSystemClockFrequency,"ax",%progbits
 138              	 .align 2
 139              	 .thumb
 140              	 .thumb_func
 142              	XMC_SCU_CLOCK_GetSystemClockFrequency:
 143              	.LFB197:
 144              	 .file 2 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc4_scu.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @file xmc4_scu.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @date 2016-06-15
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @cond
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   *************************************************************************************************
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * All rights reserved.                        
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                             
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * following conditions are met:   
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer.                        
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                                                                              
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Change History
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * --------------
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-06-20:
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Initial version
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2015-11-30:
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Documentation improved
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *      
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-03-09:
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_EnableMonitor/XMC_SCU_POWER_DisableMonitor
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_POWER_GetEVRStatus, XMC_SCU_POWER_GetEVR13Voltage, XMC_SCU_POWER_GetEVR33Vol
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_GetHibernateControlStatus,
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_GetEventStatus, XMC_SCU_HIB_ClearEventStatus, XMC_SCU_HIB_TriggerEvent, 
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_EnableEvent, XMC_SCU_HIB_DisableEvent
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_SetWakeupTriggerInput, XMC_SCU_HIB_SetPinMode, XMC_SCU_HIB_SetOutputPinL
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_HIB_SetInput0, XMC_SCU_HIB_EnterHibernateState
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-04-15:
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Fixed naming of XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG peripheral clock.
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *       Added enable and disable for peripheral clocks       
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-05-19:
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_IsLowPowerOscillatorStable() and XMC_SCU_CLOCK_IsHighPerformanceOscill
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_POWER_WaitForInterrupt() and XMC_SCU_POWER_WaitForEvent()
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(), 
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(),
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus()
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(), 
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(),
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *             XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus()
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Removed XMC_SCU_INTERRUPT_EVENT_OSCULSTAT_UPDATED, XMC_SCU_INTERRUPT_EVENT_HDSTAT_UPDATED
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-14:
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_IsWakeupEventDetected() and XMC_SCU_HIB_ClearWakeupEventDetectionStatus(
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 2016-06-15:
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added XMC_SCU_HIB_EnterHibernateStateEx() which allows to select between external or inter
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Extended wakeup hibernate events using LPAC wakeup on events. Only available in XMC44, XMC
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *     - Added LPAC APIs. Only available in XMC44, XMC42 and XMC41 series.
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @endcond 
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #ifndef XMC4_SCU_H
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC4_SCU_H
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * HEADER FILES
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #include "xmc_common.h"
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if UC_FAMILY == XMC4
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup XMClib XMC Peripheral Library
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @addtogroup SCU
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @{
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * MACROS
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_8MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8MH
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_8MHZ (89U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 8M
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_8MHZ (2U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 8
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_12MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 12
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_12MHZ (79U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_12MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_PDIV_XTAL_16MHZ (1U)  /* PDIV value for main PLL settings, fPLL = 120MHz with fOSC = 16
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_NDIV_XTAL_16MHZ (59U)  /* NDIV value for main PLL settings, fPLL = 120MHz with fOSC = 1
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define PLL_K2DIV_XTAL_16MHZ (3U)  /* K2DIV value for main PLL settings, fPLL = 120MHz with fOSC = 
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_WDT_WARN           SCU_INTERRUPT_SRSTAT_PRWARN_Msk /**< Watchdog pr
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_PERIODIC       SCU_INTERRUPT_SRSTAT_PI_Msk     /**< RTC periodi
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTC_ALARM          SCU_INTERRUPT_SRSTAT_AI_Msk     /**< RTC alarm e
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_DLR_OVERRUN        SCU_INTERRUPT_SRSTAT_DLROVR_Msk /**< DLR overrun
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCR_Msk)
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCR_UPDATED     SCU_INTERRUPT_SRSTAT_LPACCR_Msk /**< LPAC Contro
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH0_Msk)
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH0_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH0_Msk /**< LPAC Thres
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACTH1_Msk)
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACTH1_UPDATED    SCU_INTERRUPT_SRSTAT_LPACTH1_Msk  /**< LPAC Thre
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACST_Msk)
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACST_UPDATED     SCU_INTERRUPT_SRSTAT_LPACST_Msk  /**< LPAC Statu
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACCLR_Msk)
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACCLR_UPDATED    SCU_INTERRUPT_SRSTAT_LPACCLR_Msk /**< LPAC event
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_LPACSET_Msk)
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_LPACSET_UPDATED    SCU_INTERRUPT_SRSTAT_LPACSET_Msk /**< LPAC event
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTST_Msk)
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTST_UPDATED     SCU_INTERRUPT_SRSTAT_HINTST_Msk /**< HIB HINTST 
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTCLR_Msk)
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTCLR_UPDATED    SCU_INTERRUPT_SRSTAT_HINTCLR_Msk /**< HIB HINTCL
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_INTERRUPT_SRSTAT_HINTSET_Msk)
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HINTSET_UPDATED    SCU_INTERRUPT_SRSTAT_HINTSET_Msk /**< HIB HINTSE
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCLR_UPDATED      SCU_INTERRUPT_SRSTAT_HDCLR_Msk /**< HIB HDCLR re
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDSET_UPDATED      SCU_INTERRUPT_SRSTAT_HDSET_Msk /**< HIB HDSET re
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_HDCR_UPDATED       SCU_INTERRUPT_SRSTAT_HDCR_Msk /**< HIB HDCR regi
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCSICTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCSICTRL_Msk /**< HIB OSCS
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_OSCULCTRL_UPDATED  SCU_INTERRUPT_SRSTAT_OSCULCTRL_Msk /**< HIB OSCU
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCCTR_UPDATED     SCU_INTERRUPT_SRSTAT_RTC_CTR_Msk /**< HIB RTCCTR
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM0_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM0_Msk /**< HIB RTCA
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCATIM1_UPDATED   SCU_INTERRUPT_SRSTAT_RTC_ATIM1_Msk /**< HIB RTCA
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM0_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM0_Msk /**< HIB TIM0 
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RTCTIM1_UPDATED    SCU_INTERRUPT_SRSTAT_RTC_TIM1_Msk /**< HIB TIM1 
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #define XMC_SCU_INTERRUPT_EVENT_RMX_UPDATED        SCU_INTERRUPT_SRSTAT_RMX_Msk /**< HIB RMX regist
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * ENUMS
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines Capture/Compare unit timer slice trigger, that enables synchronous start function avail
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  CCUCON register. Use type \a XMC_SCU_CCU_TRIGGER_t for accessing these enum parameters.
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CCU_TRIGGER
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU40)
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU40 = SCU_GENERAL_CCUCON_GSC40_Msk, /**< Trigger mask used for Global Start
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU40 peripheral. */
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU41 = SCU_GENERAL_CCUCON_GSC41_Msk, /**< Trigger mask used for Global Start
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU41 peripheral. */
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU42 = SCU_GENERAL_CCUCON_GSC42_Msk, /**< Trigger mask used for Global Start
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU42 peripheral. */
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU43 = SCU_GENERAL_CCUCON_GSC43_Msk, /**< Trigger mask used for Global Start
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU43 peripheral. */
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU80 = SCU_GENERAL_CCUCON_GSC80_Msk, /**< Trigger mask used for Global Start
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU80 peripheral. */
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CCU_TRIGGER_CCU81 = SCU_GENERAL_CCUCON_GSC81_Msk /**< Trigger mask used for Global Start 
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  CCU81 peripheral. */
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CCU_TRIGGER_t;
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations representing the status of trap cause. The cause of the trap gets automati
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a TRAPSTAT register and can be checked by user software to determine the state of the syst
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. 
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_TRAP_t for accessing these enum parameters.
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_TRAP 
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_OSC_WDG      = SCU_TRAP_TRAPSTAT_SOSCWDGT_Msk, /**< OSC_HP Oscillator Watchdog trap.
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_VCO_LOCK     = SCU_TRAP_TRAPSTAT_SVCOLCKT_Msk, /**< PLL loss of lock trap. */
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_USB_VCO_LOCK = SCU_TRAP_TRAPSTAT_UVCOLCKT_Msk, /**< USB PLL loss of lock trap. */ 
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PARITY_ERROR = SCU_TRAP_TRAPSTAT_PET_Msk,      /**< Memory Parity error trap. */  
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_BROWNOUT     = SCU_TRAP_TRAPSTAT_BRWNT_Msk,    /**< Brownout trap. */ 
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ULP_WDG      = SCU_TRAP_TRAPSTAT_ULPWDGT_Msk,  /**< Unstable 32KHz clock trap. */ 
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE0  = SCU_TRAP_TRAPSTAT_BWERR0T_Msk,  /**< Bad memory access of peripherals
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_PER_BRIDGE1  = SCU_TRAP_TRAPSTAT_BWERR1T_Msk,  /**< Bad memory access of peripherals
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPHIT_Msk)
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_HIGH = SCU_TRAP_TRAPSTAT_TEMPHIT_Msk,  /**< Die temperature higher than expe
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_TRAP_TRAPSTAT_TEMPLOT_Msk)
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_DIETEMP_LOW  = SCU_TRAP_TRAPSTAT_TEMPLOT_Msk,  /**< Die temperature lower than expec
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_TRAP_ECAT_RESET = SCU_TRAP_TRAPSTAT_ECAT0RST_Msk, /**< EtherCat Reset */ 
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_TRAP_t;
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for different parity event generating modules that in turn generate a trap
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Parity can be enabled with \a PETE register in order to get the trap flag reflected in \a TRAPR
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  configure parity error trap generation mechanism bits of \a PETE register.
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PETE register.
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PARITY_t for accessing these enum parameters.
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PARITY
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PSRAM_MEM  = SCU_PARITY_PEEN_PEENPS_Msk,   /**< Program SRAM parity error trap. */
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM1_MEM = SCU_PARITY_PEEN_PEENDS1_Msk,  /**< Data SRAM-1 parity error trap. */ 
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_DSRAM2_MEM)
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_DSRAM2_MEM = SCU_PARITY_PEEN_PEENDS2_Msk,  /**< Data SRAM-2 parity error trap. */ 
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC0_MEM  = SCU_PARITY_PEEN_PEENU0_Msk,   /**< USIC0 memory parity error trap. */
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC1_MEM)
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC1_MEM  = SCU_PARITY_PEEN_PEENU1_Msk,   /**< USIC1 memory parity error trap. */
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(XMC_SCU_PARITY_USIC2_MEM)
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USIC2_MEM  = SCU_PARITY_PEEN_PEENU2_Msk,   /**< USIC2 memory parity error trap. */
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_MCAN_MEM   = SCU_PARITY_PEEN_PEENMC_Msk,   /**< CAN memory parity error trap. */
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_PMU_MEM    = SCU_PARITY_PEEN_PEENPPRF_Msk, /**< PMU Prefetch memory parity error t
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_USB_MEM    = SCU_PARITY_PEEN_PEENUSB_Msk,  /**< USB memory parity error trap. */ 
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0TX_Msk)
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_TXMEM  = SCU_PARITY_PEEN_PEENETH0TX_Msk, /**< Ethernet transmit memory parity 
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENETH0RX_Msk)
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_ETH_RXMEM  = SCU_PARITY_PEEN_PEENETH0RX_Msk, /**< Ethernet receive memory parity e
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD0_Msk)
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM0 = SCU_PARITY_PEEN_PEENSD0_Msk, /**< SDMMC Memory-0 parity error trap. *
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SCU_PARITY_PEEN_PEENSD1_Msk)
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PARITY_SDMMC_MEM1 = SCU_PARITY_PEEN_PEENSD1_Msk, /**< SDMMC Memory-1 parity error trap. *
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PARITY_t;
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the different causes for last reset. The cause of the last reset gets automatically sto
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  the \a SCU_RSTSTAT register and can be checked by user software to determine the state of the s
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  purpose. All the enum items are tabulated as per bits present in \a SCU_RSTSTAT register.
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_RESET_REASON_t for accessing these enum parameters.
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_RESET_REASON
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PORST        = (1UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SWD          = (2UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sup
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PV           = (4UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Pow
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_SW           = (8UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Sof
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_LOCKUP       = (16UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to re
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_WATCHDOG     = (32UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to Wa
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_RESET_REASON_PARITY_ERROR = (128UL << SCU_RESET_RSTSTAT_RSTSTAT_Pos), /**< Reset due to r
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_RESET_REASON_t;
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for events which can lead to interrupt. These enumeration values represent
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * status of one of the bits in \a SRSTAT register. 
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_INTERRUPT_EVENT_t for accessing these enum parameters.
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef uint32_t XMC_SCU_INTERRUPT_EVENT_t;
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration for the events that can generate non maskable interrupt(NMI).
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The NMI generation can be enabled with \a NMIREQEN register. The event will be reflected in \a 
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  mirrored in the TRAPSTAT register. These enums can be used to configure NMI request generation 
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  NMIREQEN register.  Once configured, these events can generate non maskable interrupt.
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a NMIREQEN register.
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_NMIREQ_t for accessing these enum parameters.
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_NMIREQ
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_WDT_WARN = SCU_INTERRUPT_NMIREQEN_PRWARN_Msk, /**< Watchdog timer Pre-Warning even
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_PI   = SCU_INTERRUPT_NMIREQEN_PI_Msk,     /**< RTC Periodic event */ 
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_RTC_AI   = SCU_INTERRUPT_NMIREQEN_AI_Msk,     /**< RTC Alarm event */ 
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_0   = SCU_INTERRUPT_NMIREQEN_ERU00_Msk,  /**< Channel 0 event of ERU0 */  
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_1   = SCU_INTERRUPT_NMIREQEN_ERU01_Msk,  /**< Channel 1 event of ERU0 */ 
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_2   = SCU_INTERRUPT_NMIREQEN_ERU02_Msk,  /**< Channel 2 event of ERU0 */ 
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_NMIREQ_ERU0_3   = SCU_INTERRUPT_NMIREQEN_ERU03_Msk   /**< Channel 3 event of ERU0 */ 
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_NMIREQ_t;
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumeration representing different peripheral reset bits in the \a PRSTAT registers.
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  All the enum items are tabulated as per bits present in \a PRSTAT0,  \a PRSTAT1,  \a PRSTAT2,
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  \a PRSTAT3 registers. Use type \a XMC_SCU_PERIPHERAL_RESET_t for accessing these enum parameter
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Note: Release of reset should be prevented when the peripheral clock is gated in cases where ke
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock and bus interface clocks are shared, in order to avoid system hang-up.
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_RESET
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_VADC   = SCU_RESET_PRSTAT0_VADCRS_Msk,   /**< VADC reset. */ 
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DSD    = SCU_RESET_PRSTAT0_DSDRS_Msk,    /**< DSD reset. */
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU40  = SCU_RESET_PRSTAT0_CCU40RS_Msk,  /**< CCU40 reset. */
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU41  = SCU_RESET_PRSTAT0_CCU41RS_Msk,  /**< CCU41 reset. */
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU42  = SCU_RESET_PRSTAT0_CCU42RS_Msk,  /**< CCU42 reset. */
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU80  = SCU_RESET_PRSTAT0_CCU80RS_Msk,  /**< CCU80 reset. */
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU81  = SCU_RESET_PRSTAT0_CCU81RS_Msk,  /**< CCU81 reset. */
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF0 = SCU_RESET_PRSTAT0_POSIF0RS_Msk, /**< POSIF0 reset. */
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_POSIF1 = SCU_RESET_PRSTAT0_POSIF1RS_Msk, /**< POSIF1 reset.*/
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC0  = SCU_RESET_PRSTAT0_USIC0RS_Msk,  /**< USIC0 reset. */
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ERU1   = SCU_RESET_PRSTAT0_ERU1RS_Msk,   /**< ERU1 reset. */
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_HRPWM0 = SCU_RESET_PRSTAT0_HRPWM0RS_Msk,  /**< HRPWM0 reset. */
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_CCU43  = (SCU_RESET_PRSTAT1_CCU43RS_Msk | 0x10000000UL),   /**< CCU43 re
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_LEDTS0 = (SCU_RESET_PRSTAT1_LEDTSCU0RS_Msk | 0x10000000UL), /**< LEDTS0 
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_MCAN   = (SCU_RESET_PRSTAT1_MCAN0RS_Msk | 0x10000000UL), /**< MCAN reset
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_DAC    = (SCU_RESET_PRSTAT1_DACRS_Msk | 0x10000000UL),    /**< DAC reset
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_SDMMC  = (SCU_RESET_PRSTAT1_MMCIRS_Msk | 0x10000000UL),     /**< SDMMC r
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC1  = (SCU_RESET_PRSTAT1_USIC1RS_Msk | 0x10000000UL),    /**< USIC1 r
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USIC2  = (SCU_RESET_PRSTAT1_USIC2RS_Msk | 0x10000000UL),    /**< USIC2 r
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_PORTS  = (SCU_RESET_PRSTAT1_PPORTSRS_Msk | 0x10000000UL),   /**< PORTS r
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_WDT    = (SCU_RESET_PRSTAT2_WDTRS_Msk | 0x20000000UL),      /**< WDT res
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ETH0   = (SCU_RESET_PRSTAT2_ETH0RS_Msk | 0x20000000UL),     /**< ETH0 re
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA0 = (SCU_RESET_PRSTAT2_DMA0RS_Msk | 0x20000000UL),     /**< DMA0 re
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_GPDMA1 = (SCU_RESET_PRSTAT2_DMA1RS_Msk | 0x20000000UL),     /**< DMA1 re
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_FCE    = (SCU_RESET_PRSTAT2_FCERS_Msk | 0x20000000UL),      /**< FCE res
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)  
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_USB0   = (SCU_RESET_PRSTAT2_USBRS_Msk | 0x20000000UL),      /**< USB0 re
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)  
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_ECAT0  = (SCU_RESET_PRSTAT2_ECAT0RS_Msk | 0x20000000UL),      /**< ECAT0
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_RESET_EBU    = (SCU_RESET_PRSTAT3_EBURS_Msk | 0x30000000UL)       /**< EBU res
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_RESET_t;
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines enumerations for disabling the clocks sources of peripherals. Disabling of the peripher
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock is configured via the \a CLKCLR registers.
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USB = SCU_CLK_CLKCLR_USBCDI_Msk, /**< USB module clock. */
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_MMC = SCU_CLK_CLKCLR_MMCCDI_Msk, /**< MMC module clock. */
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ETH = SCU_CLK_CLKCLR_ETH0CDI_Msk, /**< Ethernet module clock. */
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EBU = SCU_CLK_CLKCLR_EBUCDI_Msk, /**< EBU module clock. */
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_CCU = SCU_CLK_CLKCLR_CCUCDI_Msk, /**< CCU module clock. */
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDT = SCU_CLK_CLKCLR_WDTCDI_Msk  /**< WDT module clock. */
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_t;
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if(UC_SERIES != XMC45)
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines enumeration for peripherals that support clock gating. 
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The enumerations can be used for gating or ungating the peripheral clocks.
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * All the enum items are tabulated as per bits present in \a CGATSTAT0 register.
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_PERIPHERAL_CLOCK_t for accessing these enum parameters.
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_PERIPHERAL_CLOCK
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_VADC   = SCU_CLK_CGATSTAT0_VADC_Msk,  /**< VADC peripheral gating. */
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DSD)
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DSD    = SCU_CLK_CGATSTAT0_DSD_Msk,   /**< DSD peripheral gating. */
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU40  = SCU_CLK_CGATSTAT0_CCU40_Msk,  /**< CCU40 peripheral gating. */
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU41)
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU41  = SCU_CLK_CGATSTAT0_CCU41_Msk,  /**< CCU41 peripheral gating. */
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU42)
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU42  = SCU_CLK_CGATSTAT0_CCU42_Msk,  /**< CCU42 peripheral gating. */
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU80)
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU80  = SCU_CLK_CGATSTAT0_CCU80_Msk,  /**< CCU80 peripheral gating. */
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU81)
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU81  = SCU_CLK_CGATSTAT0_CCU81_Msk,  /**< CCU81 peripheral gating. */
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF0)
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF0 = SCU_CLK_CGATSTAT0_POSIF0_Msk,  /**< POSIF0 peripheral gating. *
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(POSIF1)
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_POSIF1 = SCU_CLK_CGATSTAT0_POSIF1_Msk,   /**< POSIF1 peripheral gating. 
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC0  = SCU_CLK_CGATSTAT0_USIC0_Msk,   /**< USIC0 peripheral gating. */
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ERU1   = SCU_CLK_CGATSTAT0_ERU1_Msk,    /**< ERU1 peripheral gating. */
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(HRPWM0)
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_HRPWM0 = SCU_CLK_CGATSTAT0_HRPWM0_Msk,  /**< HRPWM0 peripheral gating. *
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CCU43)
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_CCU43  = (SCU_CLK_CGATSTAT1_CCU43_Msk | 0x10000000UL),   /**< CCU43 peri
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(LEDTS0)
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_LEDTS0 = (SCU_CLK_CGATSTAT1_LEDTSCU0_Msk | 0x10000000UL), /**< LEDTS0 pe
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(CAN)
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_MCAN   = (SCU_CLK_CGATSTAT1_MCAN0_Msk | 0x10000000UL),   /**< MCAN perip
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(DAC)  
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_DAC    = (SCU_CLK_CGATSTAT1_DAC_Msk | 0x10000000UL),     /**< DAC periph
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_SDMMC  = (SCU_CLK_CGATSTAT1_MMCI_Msk | 0x10000000UL),    /**< SDMMC peri
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC1)
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC1  = (SCU_CLK_CGATSTAT1_USIC1_Msk | 0x10000000UL),   /**< USIC1 peri
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USIC2)
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USIC2  = (SCU_CLK_CGATSTAT1_USIC2_Msk | 0x10000000UL),    /**< USIC2 per
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_PORTS  = (SCU_CLK_CGATSTAT1_PPORTS_Msk | 0x10000000UL),   /**< PORTS per
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_WDT    = (SCU_CLK_CGATSTAT2_WDT_Msk | 0x20000000UL),      /**< WDT perip
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ETH0   = (SCU_CLK_CGATSTAT2_ETH0_Msk | 0x20000000UL),     /**< ETH0 peri
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA0 = (SCU_CLK_CGATSTAT2_DMA0_Msk | 0x20000000UL),     /**< DMA0 peri
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(GPDMA1)
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_GPDMA1 = (SCU_CLK_CGATSTAT2_DMA1_Msk | 0x20000000UL),     /**< DMA1 peri
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(FCE)
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_FCE    = (SCU_CLK_CGATSTAT2_FCE_Msk | 0x20000000UL),      /**< FCE perip
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_USB0   = (SCU_CLK_CGATSTAT2_USB_Msk | 0x20000000UL),      /**< USB0 peri
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_ECAT0   = (SCU_CLK_CGATSTAT2_ECAT0_Msk | 0x20000000UL),      /**< ECAT0 
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_PERIPHERAL_CLOCK_EBU    = (SCU_CLK_CGATSTAT3_EBU_Msk | 0x30000000UL)       /**< EBU perip
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_PERIPHERAL_CLOCK_t;
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for system clock (fSYS) source. These enums are used to configure \a SYSSEL bit
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock Control Register. 
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_SYSCLKSRC_t for accessing these enum parameters.
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSCLKSRC
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_OFI = (0UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos), /**< Internal Fast Clock (fOF
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_PLL = (1UL << SCU_CLK_SYSCLKCR_SYSSEL_Pos)  /**< PLL output (fPLL) as a
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for system clock 
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSCLKSRC_t;
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the P-Divider input frequency. These enums are used to configure 
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. 
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_OSCCLKSRC_t for accessing these enum parameters.
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLLCLKSRC
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP = 0UL,  /**< External crystal oscillator
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                 (fOHP) as the source for P-Divider. */
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI = SCU_PLL_PLLCON2_PINSEL_Msk | SCU_PLL_PLLCON2_K1INSEL_Msk /**< Ba
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                              as the source for P-Di
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLLCLKSRC_t;
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the USB clock source(fUSB/fSDMMC).
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * These enums are used to configure \a USBSEL bits of \a USBCLKCR
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. User can choose either fPLL or fUSBPLL clock as a source for USB clock. 
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_USBCLKSRC
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_USBPLL = (0UL << SCU_CLK_USBCLKCR_USBSEL_Pos), /**< USB PLL(fUSB PLL) as 
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_USBCLKSRC_SYSPLL = (1UL << SCU_CLK_USBCLKCR_USBSEL_Pos)  /**< Main PLL output (fPLL
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for USB clock (fU
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_USBCLKSRC_t;
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines options for selecting the ECAT clock source.
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_ECATCLKSRC
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_USBPLL = (0UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos), /**< USB PLL (fUSBPLL) 
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL = (1UL << SCU_CLK_ECATCLKCR_ECATSEL_Pos)  /**< Main PLL output (f
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_ECATCLKSRC_t;
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of WDT clock(fWDT). These enums are used to configure 
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOFI or fPLL or fSTDBY clock as a source for WDT clock. 
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_USBCLKSRC_t for accessing these enum parameters.
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_WDTCLKSRC
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_OFI = (0UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos),  /**< Internal Fast Clock 
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fOFI) as the source for
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_STDBY = (1UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos), /**< Standby clock 
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            (fSTDBY) as the source f
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_WDTCLKSRC_PLL = (2UL << SCU_CLK_WDTCLKCR_WDTSEL_Pos)   /**< PLL output (fPLL) as th
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for WDT clock (fW
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_WDTCLKSRC_t;
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of external clock out (fEXT). These enums are used to 
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fSYS or fPLL or fUSBPLL clock as a source for external clock o
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_EXTOUTCLKSRC_t for accessing these enum parameters.
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */ 
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_EXTOUTCLKSRC
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS = (0UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos),  /**< System clock (fSYS) 
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             the source for external
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_USB = (2UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< USB PLL output(fUSB P
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL = (3UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Main PLL output(fPLL)
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY = (4UL << SCU_CLK_EXTCLKCR_ECKSEL_Pos), /**< Standby clock(fSTDB
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            source for external cloc
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_EXTOUTCLKSRC_t;
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of RTC Clock (fRTC). These enums are used to configure
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either fOSI or fULP clock as a source for RTC Clock (fRTC).
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_RTCCLKSRC_t for accessing these enum parameters.
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_RTCCLKSRC
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_RCS_Pos), /**< Internal Slow Clock
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                          (fOSI) as the source for R
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_RTCCLKSRC_ULP = (1UL << SCU_HIBERNATE_HDCR_RCS_Pos) /**< Ultra Low Power Clock (fULP)
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                         as the source for RTC Clock
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_RTCCLKSRC_t;
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting the source of Standby Clock (fSTDBY). These enums are used to con
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  register. User can choose either fOSI or fULP clock as a source for Standby Clock (fSTDBY).
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_HIB_STDBYCLKSRC_t for accessing these enum parameters.
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_STDBYCLKSRC
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSI = (0UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos), /**< Internal Slow Clock 
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fOSI) as the source for 
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_OSCULP = (1UL << SCU_HIBERNATE_HDCR_STDBYSEL_Pos) /**< Ultra Low Power Cl
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fULP) as the source for 
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                           (fSTDBY). */
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_STDBYCLKSRC_t;
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for backup clock trimming. These enums are used to configure \a AOTREN  \a FOTR
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  PLLCON0 register. Use type \a XMC_SCU_CLOCK_BACKUP_TRIM_t for accessing these enum parameters.
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_FACTORY   = 0UL,  /**< Factory Oscillator Calibration: 
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                         Force adjustment of the internal oscillator
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_AUTOMATIC = 1UL   /**<  Automatic Oscillator Calibration adju
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t;
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines options for selecting device boot mode. These enums are used to configure \a SWCON bits
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose among various boot modes by configuring SWCON bits.
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_BOOTMODE_t for accessing these enum parameters.
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_BOOTMODE 
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_NORMAL     = (0UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from start of flash
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ASC_BSL    = (1UL << SCU_GENERAL_STCON_SWCON_Pos), /**< UART bootstrap. */
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_BMI        = (2UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot Mode Index - Custom
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            sequence. */
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_CAN_BSL    = (3UL << SCU_GENERAL_STCON_SWCON_Pos), /**< CAN bootstrap. */
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_PSRAM_BOOT = (4UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from PSRAM. */
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM0       = (8UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed 
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                            address 0. */
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_ABM1       = (12UL << SCU_GENERAL_STCON_SWCON_Pos), /**< Boot from flash - fixed
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             address 1. */
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_BOOTMODE_FABM       = (14UL << SCU_GENERAL_STCON_SWCON_Pos), /**< fallback Alternate Boot
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                             Try ABM-0 then try ABM-
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_BOOTMODE_t;
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines various PLL modes of operation. These enums are used to configure \a VCOBYP bit of \a P
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  User can choose either normal or prescalar mode by configuring VCOBYP bit.
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_PLL_MODE_t for accessing these enum parameters.
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SYSPLL_MODE
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_DISABLED, /**< fPLL derived from fOSC and PLL operating in prescalar mo
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_NORMAL,  /**< fPLL derived from fVCO and PLL operating in normal mode. 
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_PRESCALAR /**< fPLL derived from fOSC and PLL operating in prescalar mo
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_MODE_t;
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in SLEEP state.
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetSleepConfig before going to SLEEP state.
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The SLEEP state of the system corresponds to the SLEEP state of the CPU. The state is
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. Peripherals are only clocked when configured to stay enabled. 
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Peripherals can continue to operate unaffected and eventually generate an event to
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  wake-up the CPU. Any interrupt to the NVIC will bring the CPU back to operation. The
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  clock tree upon exit from SLEEP state is restored to what it was before entry into SLEEP
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  state.
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_SLEEP_MODE_CONFIG
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in SLEEP 
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_SLEEPCR_SYSSEL_Msk,  /**< fPLL used as syst
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in SLEEP state */
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_SLEEPCR_USBCR_Msk,  /**< USB clock enabled i
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in SLEEP state */
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_SLEEPCR_MMCCR_Msk,/**< SDMMC clock enabled
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in SLEEP state */
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_SLEEPCR_ETH0CR_Msk,  /**< ETH clock enabled 
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in SLEEP state */
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_SLEEPCR_EBUCR_Msk,  /**< EBU clock enabled i
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_CCU = 0,  /**< CCU clock disabled in SLEEP state */
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_SLEEPCR_CCUCR_Msk,  /**< CCU clock enabled i
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_DISABLED_WDT = 0,  /**< WDT clock disabled in SLEEP state */
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_SLEEPCR_WDTCR_Msk,  /**< WDT clock enabled i
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SLEEP_MODE_CONFIG_t;
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines the source of the system clock and peripherals clock gating in DEEPSLEEP state.
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In addition the state of FLASH, PLL and PLLVCO during DEEPSLEEP state.
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use this enum as parameter of XMC_SCU_CLOCK_SetDeepSleepConfig before going to DEEPSLEEP state.
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The DEEPSLEEP state of the system corresponds to the DEEPSLEEP state of the CPU. The state is
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entered via WFI or WFE instruction of the CPU. In this state the clock to the CPU is
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  stopped. 
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  In Deep Sleep state the OSC_HP and the PLL may be switched off. The wake-up logic in the NVIC i
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  by a free-running clock. Peripherals are only clocked when configured to stay enabled. 
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Configuration of peripherals and any SRAM content is preserved.
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  The Flash module can be put into low-power mode to achieve a further power reduction.
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  On wake-up Flash module will be restarted again before instructions or data access is possible.
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Any interrupt will bring the system back to operation via the NVIC.The clock setup before
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  entering Deep Sleep state is restored upon wake-up.
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FOFI = 0,  /**< fOFI used as system clock source in DE
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_SYSCLK_FPLL = SCU_CLK_DSLEEPCR_SYSSEL_Msk,  /**< fPLL used as
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_FLASH_POWERDOWN = SCU_CLK_DSLEEPCR_FPDN_Msk,/**< Flash power 
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_PLL_POWERDOWN = SCU_CLK_DSLEEPCR_PLLPDN_Msk,  /**<  Switch of
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_VCO_POWERDOWN = SCU_CLK_DSLEEPCR_VCOPDN_Msk,  /**<  Switch of
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(USB0)
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_USB = 0,  /**< USB clock disabled in DEEPSLEEP state 
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_USB = SCU_CLK_DSLEEPCR_USBCR_Msk,  /**< USB clock enab
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(SDMMC)
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_SDMMC = 0,/**< SDMMC clock disabled in DEEPSLEEP stat
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_SDMMC = SCU_CLK_DSLEEPCR_MMCCR_Msk,/**< SDMMC clock en
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ETH0)
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_ETH = 0,  /**< ETH clock disabled in DEEPSLEEP state 
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_ETH = SCU_CLK_DSLEEPCR_ETH0CR_Msk,  /**< ETH clock ena
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_EBU = 0,  /**< EBU clock disabled in DEEPSLEEP state 
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_EBU = SCU_CLK_DSLEEPCR_EBUCR_Msk,  /**< EBU clock enab
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_CCU = 0,  /**< CCU clock disabled in DEEPSLEEP state 
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_CCU = SCU_CLK_DSLEEPCR_CCUCR_Msk,  /**< CCU clock enab
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_DISABLE_WDT = 0,  /**< WDT clock disabled in DEEPSLEEP state 
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_ENABLE_WDT = SCU_CLK_DSLEEPCR_WDTCR_Msk,  /**< WDT clock enab
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_DEEPSLEEP_MODE_CONFIG_t;
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Defines status of EVR13 regulator
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_EVR_STATUS
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_OK = 0, /**< EVR13 regulator No overvoltage condition */
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_EVR_STATUS_EVR13_OVERVOLTAGE = SCU_POWER_EVRSTAT_OV13_Msk /**< EVR13 regulator is i
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_EVR_STATUS_t;
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Define status of external hibernate control  
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_CTRL_STATUS
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_NO_ACTIVE = 0, /**< Hibernate not driven active to pads */
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_CTRL_STATUS_ACTIVE = SCU_HIBERNATE_HDSTAT_HIBNOUT_Msk, /**< Hibernate driven active t
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_CTRL_STATUS_t;
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Hibernate domain event status
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_EVENT
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_POS_EDGE = SCU_HIBERNATE_HDCR_WKPEP_Msk, /**< Wake-up on positive edg
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_NEG_EDGE = SCU_HIBERNATE_HDCR_WKPEN_Msk, /**< Wake-up on negative edg
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_WAKEUP_ON_RTC = SCU_HIBERNATE_HDCR_RTCE_Msk, /**< Wake-up on RTC event */
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_ULPWDG = SCU_HIBERNATE_HDCR_ULPWDGEN_Msk, /**< ULP watchdog alarm status */
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_POSEDGE = SCU_HIBERNATE_HDSTAT_VBATPEV_Msk, /**< Wake-up on LPAC posi
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_VBAT_NEGEDGE = SCU_HIBERNATE_HDSTAT_VBATNEV_Msk, /**< Wake-up on LPAC nega
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0PEV_Msk, /**< Wake-up on LP
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_0_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO0NEV_Msk, /**< Wake-up on LP
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_POSEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1PEV_Msk, /**< Wake-up on LP
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_EVENT_LPAC_HIB_IO_1_NEGEDGE = SCU_HIBERNATE_HDSTAT_AHIBIO1NEV_Msk, /**< Wake-up on LP
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_EVENT_t;
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /** 
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   * Hibernate domain dedicated pins
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   */
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_0 = 0, /**< HIB_IO_0 pin. 
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                              At the first power-up and with every reset of the hibernate domain thi
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_1 = 1 /**< HIB_IO_1 pin. 
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                             At the first power-up and with every reset of the hibernate domain this
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                             @note : Only available in certain packages*/
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_t;
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB_IOx pin I/O control
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_PIN_MODE
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_NONE = 0 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_DOWN = 1 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, 
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_INPUT_PULL_UP = 2 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Direct input, in
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_HIBCTRL = 8 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_WDTSRV = 9 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-p
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_PUSH_PULL_GPIO = 10 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Push-pu
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_HIBCTRL = 12 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Ope
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_WDTSRV = 13 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_PIN_MODE_OUTPUT_OPEN_DRAIN_GPIO = 14 << SCU_HIBERNATE_HDCR_HIBIO0SEL_Pos, /**< Open d
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_PIN_MODE_t;
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the output polarity of the HIB_IOx
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_IO_OUTPUT_LEVEL
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_LOW = 0 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos, /**< Direct value */
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_IO_OUTPUT_LEVEL_HIGH = 1 << SCU_HIBERNATE_HDCR_HIBIO0POL_Pos /**< Inverted value */
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_IO_OUTPUT_LEVEL_t;
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects hibernate mode
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_HIBERNATE_MODE
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_EXTERNAL = 0, /**< Request external hibernate mode */
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_HIBERNATE_MODE_INTERNAL = 1, /**< Request internal hibernate mode. @note Only availab
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_HIBERNATE_MODE_t;
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR0 of ERU0
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR0_INPUT
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI0SEL_Msk, /**< Set HIB_SR0 to HIB_IO_0 dig
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_PACKAGE == BGA196) || (UC_PACKAGE == BGA144) || (UC_PACKAGE == LQFP144
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR0 to HIB_IO_1 digital input. @note Only availa
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR0_INPUT_ACMP0 = SCU_HIBERNATE_HDCR_ADIG0SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP0. @n
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR0_INPUT_t;
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41))
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100))
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects input signal HIB_SR1 of ERU0. @note Only available in XMC44 in certain packages.
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_SR1_INPUT
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_0 = SCU_HIBERNATE_HDCR_GPI1SEL_Msk, /**< Set HIB_SR1 to HIB_IO_0 dig
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_HIB_IO_1 = 0, /**< Set HIB_SR1 to HIB_IO_1 digital input.  */
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_ACMP1 = SCU_HIBERNATE_HDCR_ADIG1SEL_Msk,  /**< Set HIB_SR0 to LPAC CMP1. */
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_SR1_INPUT_XTAL_GPI = SCU_HIBERNATE_HDCR_XTALGPI1SEL_Msk,  /**< Set HIB_SR0 to RTC_XTA
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_SR1_INPUT_t;
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC input selection
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_INPUT
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_DISABLED = 0 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator permanen
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_VBAT = 0x1 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activated 
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_0 = 0x2 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))      
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_INPUT_HIB_IO_1 = 0x4 << SCU_HIBERNATE_LPACCONF_CMPEN_Pos, /**< Comparator activa
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_INPUT_t;
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC start trigger selection for selected inputs
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_TRIGGER
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SUBSECOND_INTERVAL_COUNTER = 0 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /*
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_ALARM_EVENT = 0x1 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC al
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_RTC_PERIODIC_EVENT = 0x2 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< RTC
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_POSITIVE_EDGE_EVENT = 0x3 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_ON_WAKEUP_NEGATIVE_EDGE_EVENT = 0x5 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Po
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_CONTINOUS = 0x6 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Continuous m
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_TRIGGER_SINGLE_SHOT = 0x7 << SCU_HIBERNATE_LPACCONF_TRIGSEL_Pos, /**< Single sho
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_TRIGGER_t;
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * HIB LPAC status
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_HIB_LPAC_STATUS
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_COMPARE_DONE = SCU_HIBERNATE_LPACST_VBATSCMP_Msk, /**< VBAT compare 
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO0SCMP_Msk, /**< HBI_IO
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_COMPARE_DONE = SCU_HIBERNATE_LPACST_AHIBIO1SCMP_Msk, /**< HBI_IO
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_VBAT_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_VBATVAL_Msk, /**< VBAT compar
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_0_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO0VAL_Msk, /**< HBI_
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (defined(DOXYGEN) || ((UC_SERIES == XMC44) && (UC_PACKAGE == LQFP100)))        
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_LPAC_STATUS_HIB_IO_1_ABOVE_THRESHOLD = SCU_HIBERNATE_LPACST_AHIBIO1VAL_Msk, /**< HBI_
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif  
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_HIB_LPAC_STATUS_t;
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif /* (defined(DOXYGEN) || (UC_SERIES == XMC44) || (UC_SERIES == XMC42) || (UC_SERIES == XMC41)
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * DATA STRUCTURES
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure for initializing the PLL functional block.
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Structure holds divider values for N-DIV, P-DIV, K1-DIV, K2-DIV in order to generate desired 
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  frequency using VCO. It holds the PLL mode of operation either normal or prescaler (VCO bypasse
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_PLL_CONFIG_t for accessing these structure parameters.
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_SYSPLL_CONFIG
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t n_div;                       /**<  PLL N-Divider value. */
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t p_div;                       /**<  PLL P-Divider value. */
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t k_div;                       /**<  K1-Divider(Prescalar mode) or K2-Divider (Normal mode)
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_MODE_t mode;    /**<  PLL mode of operation. */
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLLCLKSRC_t clksrc; /**<  PLL divider input frequency. */
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_CLOCK_SYSPLL_CONFIG_t;
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Defines a data structure used for initializing the clock functional block.
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Clock functional block configures clock source needed for various peripheral and its divider va
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *  Use type \a XMC_SCU_CLOCK_CONFIG_t for accessing these structure parameters.
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef struct XMC_SCU_CLOCK_CONFIG
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSPLL_CONFIG_t         syspll_config;      /**< PLL configuration */
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_oschp;       /**< Enable external high precision osc
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fOHP has to
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   bool                                  enable_osculp;      /**< Enable external ultra low power os
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                                                                  Should be enabled when fULP has to
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_FOFI_CALIBRATION_MODE_t calibration_mode;   /**< Backup clock trimming mode. */
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_HIB_STDBYCLKSRC_t             fstdby_clksrc;      /**< Standby clock source. */
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_CLOCK_SYSCLKSRC_t             fsys_clksrc;        /**< Choice of system clock. */
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fsys_clkdiv;        /**< Ratio of fPLL to fSYS. */
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fcpu_clkdiv;        /**< Ratio of fSys to fCPU. */
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fccu_clkdiv;        /**< Ratio of fSys to fCCU. */
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   uint8_t                               fperipheral_clkdiv; /**< Ratio of fSYS to fPERI. */
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } const XMC_SCU_CLOCK_CONFIG_t;
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Low power modes
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** typedef enum XMC_SCU_POWER_MODE_t
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_SLEEP = 0, /**< sleep mode stops the processor clock */
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   XMC_SCU_POWER_MODE_DEEPSLEEP = SCB_SCR_SLEEPDEEP_Msk /**< deep sleep mode stops the system clock 
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** } XMC_SCU_POWER_MODE_t;
 947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**************************************************************************************************
 949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * API PROTOTYPES
 950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  **************************************************************************************************
 951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #ifdef __cplusplus
 953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** extern "C" {
 954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
 955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables out of range comparator for the selected ADC group and channel. \n\n
 967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The ADC channel input is compared by Out of Range Comparator (ORC) for overvoltage monitoring
 968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * or for detection of out of range analog inputs. ORC must be turned on explicitly
 969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * to leverage the auditing feature. ORC is enabled by setting the enable bit in the GORCEN registe
 970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableOutOfRangeComparator()\n\n\n
 972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * 
 977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param group   ADC Group to which the channel being monitored belongs to.\n
 978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 0 or 1.
 979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param channel  The channel whose voltage range has to be monitored.\n
 980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                 \b Range: 6 or 7. Value identifies the channel in the selected ADC group.
 981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the out of range comparator for the selected ADC group and the channel. \n\n
 986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Out of range comparator is disabled by clearing the enable bit in the GORCEN register.
 987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableOutOfRangeComparator()\n\n\n
 989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
 990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableOutOfRangeComparator(const uint32_t group, const uint32_t channel);
 991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
 992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
 993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
 994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
 995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
 996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables die temperature measurement by powering the DTS module.\n\n
 997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is enabled by setting the PWD bit of DTSCON register.
 998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
 999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_DisableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTempe
1000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_EnableTemperatureSensor(void);
1003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables die temperature measurement by powering the DTS module off.\n\n
1009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Die temperature sensor is disabled by clearing the PWD bit of DTSCON register.
1010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_IsTemperatureSensorEnabled(), XMC_SCU_CalibrateTemper
1012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_DisableTemperatureSensor(void);
1015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of die temperature sensor. \n
1018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: true - if temperature sensor is enabled.\n
1019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    false - if temperature sensor is disabled.
1020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the die temperature sensor power status.\n\n
1023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading the PWD bit of DTSCON register.
1024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorEnabled(void);
1029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param offset  Offset value for calibrating the DTS result.\n
1033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 127.
1034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param gain    Gain value for calibrating the DTS conversion result.\n
1035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 0 to 63.
1036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Calibrates the measurement of temperature by configuring the values of offset and gain of \a DTS
1041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Allows to improve the accuracy of the temperature measurement with the adjustment of \a OFFSET a
1042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a DTSCON register.
1043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset adjustment is defined as a shift of the conversion result. The range of the offset adjust
1044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * resolution that corresponds to +/- 12.5�C. The offset value gets added to the measure result. 
1045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Offset is considered as a signed value.
1046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Gain adjustment helps in minimizing gain error. When the \a gain value is 0, result is generated
1047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the \a gain value is 63, result is generated with least gain, i.e, \a RESULT - 63 at the hi
1048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CalibrateTempMonitor with desired offset and gain calibration values to the DT
1051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(),
1058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_GetTemperatureMeasurement() \n\n\n
1059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CalibrateTemperatureSensor(uint32_t offset, uint32_t gain);
1061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_STATUS_t  Result of starting the temperature measurement.\n
1064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                           \b Range: \n 
1065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_OK if the measurement is started successfully.\n
1066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_ERROR if temperature sensor is not enabled.\n
1067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                              XMC_SCU_STATUS_BUSY if temperature sensor is busy measuring the tem
1068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Starts die temperature measurement using internal temperature sensor.\n\n
1072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks if the temperature sensor is enabled and is not busy in measurement.\n
1073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Check whether Die Temperature Sensor (DTS) is busy in conversion by calling \a XMC_SCU_IsTempe
1078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * conversion complete.\n
1079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Read the die temperature value using \a XMC_SCU_GetTemperatureMeasurement API.
1080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_EnableTemperatureSensor(), XMC_SCU_CalibrateTemperatureSensor(),
1082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** XMC_SCU_STATUS_t XMC_SCU_StartTemperatureMeasurement(void);
1085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Measured temperature value.\n
1090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Valid temperature range is 0 to 1023. \n
1091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              If sensor is not enabled, 0x7FFFFFFFH is returned.
1092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads the measured value of die temperature.\n\n
1095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Temperature measurement result is read from \a RESULT bit field of \a DTSSTAT register.
1096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The temperature measured in �C is given by (RESULT - 605) / 2.05 [�C]
1097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetTemperatureMeasurement(void);
1101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the die temperature sensor is busy.\n
1104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \b Range: \a true if sensor is busy in temperature measurement.
1105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    \a false if sensor is free and can accept a new request for measurement.
1106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks whether Die Temperature Sensor (DTS) is busy in temperature measurement.\n\n
1109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from the \a BUSY bit field of the \a DTSSTAT register.
1110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetTemperatureMeasurement() \n\n\n
1112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorBusy(void);
1114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool Status of die temperature sensor whether it is ready to start measurement. \n
1117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: \n \a true if temperature sensor is ready to start measurement. \n
1118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \a false if temperature sensor is not ready to start measurement.
1119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the die temperature sensor is ready to start a measurement\n\n
1122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is obtained by reading \a RDY bit of \a DTSSTAT register. It is recommended
1123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * to check the ready status of die temperature sensor before starting it.
1124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_StartTemperatureMeasurement(), XMC_SCU_IsTemperatureSensorBusy() \n\n\n
1126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_IsTemperatureSensorReady(void);
1128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if (UC_SERIES != XMC45)
1130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has exceeded the configured upper 
1132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has exceeded the configured upper limit.
1133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is less than the configured upper limit.
1134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has exceeded the configured upper limit of temperature.\n\n
1137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a OVERFL bit (Upper Limit Overflow Status bit) of \a DTEMPALARM register.
1138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a OVERFL bit will be set if the measured temperature has exceeded the limit configured in 
1139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a UPPER in the \a DTEMPLIM register.
1140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_LowTemperature() \n\n\n
1142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_HighTemperature(void);
1144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param lower_temp  Lower threshold of die temperature. If measured temperature falls below this 
1148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a UNDERFL bit field of \a DTEMPALARM register.
1149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param upper_temp  Upper threshold of die temperature. If measured temperature exceeds this valu
1150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    alarm bit will be set in \a OVERFL bit field of \a DTEMPALARM register.
1151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the lower and upper threshold of die temperature.\n\n
1156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * API configures \a DTEMPLIM register for upper and lower die temperature threshold limits.
1157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * When the measured temperature is outside the range defined by the limits, alarm bits \a UNDERFL 
1158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * will be set in the register \a DTEMPALARM.\n
1159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps:\n
1160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StopTempMeasurement to stop temperature measurement if it was started previous
1161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetRawTempLimits with desired lower and upper temperature threshold limit valu
1162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_StartTempMeasurement to start temperature measurement.\n
1163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Use \a XMC_SCU_HighTemperature() and XMC_SCU_LowTemperature() to monitor the temperature.\n
1164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HighTemperature(), XMC_SCU_LowTemperature() \n\n\n
1166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetRawTempLimits(const uint32_t lower_temp, const uint32_t upper_temp);
1168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Indicates if the measured die temperature value has dropped below the configured l
1171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: \a true if the temperature value has dropped below the configured lower l
1172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              if the temperature value is higher than the configured lower limit.
1173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the measured temperature has dropped below the configured lower limit of temperature.\
1176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API checks \a UNDERFL bit (Lower LimitUnderflow Status bit) of \a DTEMPALARM register.
1177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The \a UNDERFL bit will be set if the measured temperature has dropped below the limit configure
1178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the bitfield \a LOWER in the \a DTEMPLIM register.
1179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetRawTempLimits(),XMC_SCU_HighTemperature() \n\n\n
1181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_LowTemperature(void);
1183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t Configured boot mode for the device.\n
1187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for enumeration of different boot modes.
1188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the boot mode configured for the device.\n\n
1191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The boot mode is read from the \a STCON register bit field \a SWCON.
1192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_SetBootMode() \n\n\n
1195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_GetBootMode(void);
1197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param mode Boot mode to be configured for the device.\n
1201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_BOOTMODE_t for selecting the boot mode.
1202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the desired boot mode for the device.\n\n
1207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The XMC4 series devices support multiple boot modes. A running application can set a desired boo
1208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * launch it by means of software reset. Switching of boot modes should be handled carefully. User 
1209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the initial boot sequence is executed. A stable execution environment should be maintained when 
1210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * eventually handed over to the application program.\n
1211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to launch requested bootmode:\n
1212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_SetBootMode() with desired boot mode value.\n
1213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Trigger a software reset using system reset request by enabling a bit \a SYSRESETREQ of AIRCR 
1214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *   (PPB->AIRCR |= PPB_AIRCR_SYSRESETREQ_Msk).\n
1215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_GetBootMode() \n\n\n
1217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_SetBootMode(const XMC_SCU_BOOTMODE_t mode);
1219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be read.\n
1223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Data read from the selected general purpose register.
1226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides stored data from general purpose SCU register.\n\n
1229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API reads from either GPR0 or GPR1 based on the \a index value.
1231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteGPR()\n\n\n
1233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadGPR(const uint32_t index);
1235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  
1236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param index  The SCU general purpose register to be written.\n
1239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 0 and 1 corresponding to GPR0 and GPR1.
1240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data  Data to be written to the selected general purpose register.
1241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Stores data in the selected general purpose SCU register.\n\n
1246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * SCU consists of 2 general purpose registers. These registers can be used for storing
1247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * data. The API writes data to either GPR0 or GPR1 based on the \a index value.
1248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadGPR()\n\n\n
1250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteGPR(const uint32_t index, const uint32_t data);
1252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be written.\n
1256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param data    32 bit data to be written into retention memory. The API writes
1260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data to the address specified.\n
1261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Writes input data to the selected address of Retention memory in hibernate domain.\n\n
1267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_ReadFromRetentionMemory() \n\n\n
1273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_WriteToRetentionMemory(uint32_t address, uint32_t data);
1275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param address  Location in the retention memory to be read.\n
1279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: 4 bit address space is provided for selecting 16 words of 32 bits.
1280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  equivalent to 64 bytes of data. \a address value should be from
1281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0 to 15.
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  32 bit data read from retention memory. The API reads
1284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                one word(4 bytes) of data from the address specified.\n
1285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                \b Range: 32 bit data.
1286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Reads data from selected address of retention memory in hibernate domain.\n\n
1289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The retention memory is located in hibernate domain. 
1290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is used for the purpose of store/restore of context information.
1291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Access to the retention memory space is served over shared serial interface. 
1292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Retention memory content is retained even in hibernate mode.
1293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_WriteToRetentionMemory() \n\n\n
1295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_ReadFromRetentionMemory(uint32_t address);
1297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be enabled.\n
1301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively enables interrupt sources to generate non maskable interrupt(NMI).\n\n
1308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually enabled by setting corresponding bit of an interrupt in the 
1309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \a NMIREQEN register.
1310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_DisableNmiRequest() \n\n\n
1312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_EnableNmiRequest(const uint32_t request);
1314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param request  Non-maskable interrupt (NMI) request source to be disabled.\n
1318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: Use type @ref XMC_SCU_NMIREQ_t for selecting the source of NMI. Multiple 
1319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              sources can be combined using \a OR operation.
1320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selectively disables interrupt sources from generating non maskable interrupt(NMI).\n\n
1325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * NMI assertion can be individually disabled by clearing corresponding bits in the \a NMIREQEN reg
1326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_INTERRUPT_DisableNmiRequest(const uint32_t request);
1330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be enabled.\n
1334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables assertion of trap for the selected trap event.\n\n
1340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually enabled by clearing respective bit of the 
1341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * event in \a TRAPDIS register in order to get an exception.
1342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Disable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Enable(const uint32_t trap);
1346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap generation has to be disabled.\n
1350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables assertion of trap for the selected trap event.\n\n
1356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be individually disabled by setting the respective event bit 
1357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a TRAPDIS register in order to suppress trap generation.
1358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_TRAP_Enable(), XMC_SCU_TRAP_ClearStatus(), XMC_SCU_TRAP_GetStatus() \n\n\n
1360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Disable(const uint32_t trap);
1362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap status bit has to be cleared.\n
1366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the trap status of input event.\n\n
1372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Once a trap event is detected, it will have to be acknowledged and later serviced. 
1373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap status bit should be cleared to detect the occurence of trap next time. 
1374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * This is useful while polling for TRAPSTAT without enabling the NMI for trap.
1375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap status can be cleared by setting the event bit in the \a TRAPCLR register.
1376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_ClearStatus(const uint32_t trap);
1380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of trap generating events.\n
1383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event. The returned
1384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * value indicates the status of multiple events at their respective bit positions.
1385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * User should mask the bits of the events of interest using the type specified.
1386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of trap generating events. \n\n
1389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status is read from \a TRAPRAW register. Status of the specific events can be checked
1390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * using their respective bits in the \a TRAPRAW register. The bit masks can be obtained from
1391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the enumeration type @ref XMC_SCU_TRAP_t. Multiple events can be combined using \a OR operation.
1392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * A trap event is considered to be asserted if the respective bit of the event is set to 1.
1393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_ClearStatus() \n\n\n
1395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_TRAP_GetStatus(void);  
1397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param trap  The event for which, trap has to be triggered.\n
1401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_TRAP_t to identify the event.
1402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Triggers trap generation for the event specified. \n\n
1407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The trap source has to be enabled before invocation of this API. 
1408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be triggered by setting its respective bit in the \a TRAPSET register.
1409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap event can be configured to generate a non maskable interrupt by using the API XMC_SCU_INTER
1410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to manually assert a trap event:\n
1411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_EnableEvent with desired trap request source ID.\n
1412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_TRAP_SetEvent with same trap request source ID to manually assert a trap event
1413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_TRAP_GetStatus() \n\n\n
1415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_TRAP_Trigger(const uint32_t trap);
1417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be reset.\n
1421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Puts the specified peripheral in to reset state. \n\n
1427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API achieves reset of peripherals by setting the respective bit in the \a PRSET0,  \a PRSET1
1428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset assertion automatically stored in the \a PRSTATn register and can be c
1429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * user software to determine the state of the system and for debug purpose.\n
1430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to assert a peripheral reset:\n
1431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_AssertPeripheralReset() with desired peripheral identifier.\n
1432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted with same peripheral identifier to verify whet
1433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * is in reset state.\n
1434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_IsPeripheralResetAsserted() \n\n\n
1436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_AssertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral to be moved out of reset state.\n
1442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals that can be
1443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the specified peripheral by moving it out of reset state.  \n\n
1448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Any peripheral should be moved out of reset state for executing its functionality.
1449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API enables the peripheral by setting its respective bit in the \a PRCLR0,  \a PRCLR1 or  \a
1450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * register. Status of reset deassertion is automatically stored in the \a PRSTATn register and can
1451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the user software to determine the state of the system and for debug purpose.\n
1452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to deassert a peripheral reset:\n
1453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_DeassertPeripheralReset() with desired peripheral identifier.\n
1454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_RESET_IsPeripheralResetAsserted() with desired peripheral identifier to verify
1455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * has been enabled.\n
1456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_RESET_DeassertPeripheralReset(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param peripheral  The peripheral, whose reset status has to be checked.\n
1464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Type @ref XMC_SCU_PERIPHERAL_RESET_t enumerates all the peripherals.
1465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral reset. \n
1467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *               \b Range: \a true if peripheral is in reset state. \a false if peripheral is enabl
1468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the reset status of the selected peripheral.\n\n
1471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API reads the reset status from \a PRSTATn register. Returns true if the peripheral is in
1472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset state. On power up of the device, all the peripherals will be in reset state. 
1473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If the peripheral is enabled, \a false will be returned as the status.
1474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_RESET_AssertPeripheralReset(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n 
1476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_RESET_IsPeripheralResetAsserted(const XMC_SCU_PERIPHERAL_RESET_t peripheral);
1478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  
1479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error status has to be cleared.\n
1482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory status bits can be cleared by using the \a OR operation.
1484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clears the parity error status bit. \n\n
1489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * When a memory parity error is detected using the status bits in \a PEFLAG register. It has to 
1490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * be cleared by software to detect the parity error from the same memory next time.
1491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API clears the parity error status bit of the selected peripheral by setting the 
1492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * respective bit in the \a PEFLAG register. Status of multiple memory parity errors 
1493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * can be cleared by combining the enum values using \a OR operation.
1494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_GetStatus(), XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_EnableTrapGeneration() \n\n\
1496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_ClearStatus(const uint32_t memory);
1498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error checking has to be enabled.\n
1502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables parity error checking for the selected on-chip RAM type.\n\n
1509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error checking can be enabled by setting respective bits in the \a PEEN register.
1510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Additionally parity error can be configured to generate trap when the error is detected,
1511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * using the API XMC_SCU_PARITY_EnableTrapGeneration(). Such a trap can be further configured
1512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * to generate non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration(), XMC_SCU_INTERRUPT_EnableNmiRequest() \n\n\n
1515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Enable(const uint32_t memory);
1517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory   The on-chip RAM type, for which the parity error checking has to be disabled.\n
1521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables parity error checking for the selected on-chip RAM type.\n\n
1528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection can be disabled by clearing the respective bit in the \a PEEN register.
1529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_Enable(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_Disable(const uint32_t memory);
1533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be enable
1537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables trap assertion for the parity error source.\n\n
1544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error detection for different types of on-chip RAM can generate trap.
1545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion for parity error can be individually enabled by setting the respective bits
1546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * in the \a PETE register. The generated trap can be additionally configured to generate
1547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * non maskable interrupt(NMI) using the API XMC_SCU_INTERRUPT_EnableNmiRequest().
1548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_INTERRUPT_EnableNmiRequest(), XMC_SCU_PARITY_DisableTrapGeneration() \n\n\n
1550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_EnableTrapGeneration(const uint32_t memory);
1552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param memory  The on-chip RAM type, for which the parity error trap generation has to be disabl
1556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to identify the on-chip RAM type. Multiple 
1557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          memory types can be combined using the \a OR operation.
1558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None  
1560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the assertion of trap for the parity error source.\n\n
1563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Trap assertion can be disabled by clearing the respective bit of the RAM type in the \a PETE reg
1564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_EnableTrapGeneration() \n\n\n
1567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_PARITY_DisableTrapGeneration(const uint32_t memory);
1569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Status of parity error detection for the on-chip RAM modules.\n
1573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_PARITY_t to get the bit mask of each RAM module type.
1574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the status of parity error detection for the on-chip RAM modules.\n\n
1577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Parity error status information is obtained from the \a PEFLAG register.
1578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If a particular RAM module has parity error, its respective bit field will be set to 1 in the 
1579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * returned value. A check for the status of a particular RAM module can be done by
1580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * masking the returned value with the RAM module identifier from the type @ref XMC_SCU_PARITY_t.
1581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_PARITY_ClearStatus() \n\n\n
1583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_PARITY_GetStatus(void);  
1585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be enabled. \n
1589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the source clock for selected peripheral.\n\n
1595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually enabled by setting the pe
1596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bit in the \a CLKSET register.\n
1597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether a source clock of peripheral is enabl
1598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_EnableClock() with desired peripheral identifier.\n
1599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled() with same peripheral identifier to verify whether the c
1600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableClock(), XMC_SCU_RESET_DeassertPeripheralReset() \n\n\n
1602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableClock(const XMC_SCU_CLOCK_t clock);
1604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Peripheral for which the clock has to be disabled. \n
1608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables source clock for the peripheral selected.\n\n
1614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The various outputs of Clock Generation Unit (CGU) can be individually disabled  by setting the 
1615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * specific bits in the \a CLKCLR register.\n
1616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is recommended to use following steps to verify whether clock source of the peripheral is ena
1617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_DisableClock with desired peripheral identifier.\n
1618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * - Call \a XMC_SCU_CLOCK_IsClockEnabled with same peripheral identifier to verify whether periphe
1619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_RESET_AssertPeripheralReset() \n\n\n
1621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableClock(const XMC_SCU_CLOCK_t clock);
1623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock   Peripheral for which the clock status has to be checked. \n
1627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_t to select the peripheral.
1628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return bool  Status of peripheral clock.\n
1630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: \a true if peripheral clock is enabled. \a false if peripheral clock is disable
1631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks the status of peripheral source clock.\n\n
1634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The status of peripheral source clock is read from the \a CLKSTATn register. 
1635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Returns \a true if clock is enabled and returns \a false otherwise.
1636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableClock(), XMC_SCU_CLOCK_DisableClock() \n\n\n
1638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsClockEnabled(const XMC_SCU_CLOCK_t clock);
1640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for fSYS.\n
1644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI for selecting internal fast clock as fSYS.\n
1646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL for selecting the output of PLL fPLL as fSYS.
1647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source for system clock (fSYS).\n\n
1652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock is selected by setting \a SYSSEL bits in the \a SYSCLKCR register.
1653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSCLKSRC_PLL is selected, then the dividers of the PLL have to be
1654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * additionally configured to achieve the required system clock frequency. 
1655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   * \par<b>Related APIs:</b><BR>
1656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_StartSystemPll(), XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
1657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockSource(const XMC_SCU_CLOCK_SYSCLKSRC_t source);
1659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_SYSCLKSRC_t   Source of clock for fSYS.\n
1662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSCLKSRC_t to select the source of clock.\n
1663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_OFI - internal fast clock selected as fSYS.\n
1664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_SYSCLKSRC_PLL - output of PLL fPLL selected as fSYS.
1665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of system clock (fSYS). \n\n
1668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selected source of fSYS is obtained by reading \a SYSSEL bits of \a SYSCLKCR register.
1669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource(), XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
1671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSCLKSRC_t XMC_SCU_CLOCK_GetSystemClockSource(void)
1673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSCLKSRC_t)(SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk);
1675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to select the source of clock.\n
1681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL as source of USB clock(fUSB/
1682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL as source of USB clock(fUSB
1683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of USB/SDMMC clock (fUSB/SDMMC).\n\n
1688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * USB and SDMMC use a common clock source. They can either use fUSB PLL or fPLL as the source of c
1689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selection is done by configuring the \a USBSEL bits of \a USBCLKCR register.
1690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockSource(const XMC_SCU_CLOCK_USBCLKSRC_t source);
1694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_USBCLKSRC_t   Source of clock for USB and SDMMC(fUSB/SDMMC).\n
1697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_USBCLKSRC_t to identify the source of clock.\n
1698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_USBPLL - output of USB PLL is selected as source of USB
1699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_USBCLKSRC_SYSPLL - output of PLL fPLL is selected as source of US
1700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the selected source of USB and SDMMC clock frequency.\n\n
1703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock source is read from from the \a USBSEL bits of \a USBCLKCR register.
1704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
1706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_USBCLKSRC_t XMC_SCU_CLOCK_GetUsbClockSource(void)
1708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_USBCLKSRC_t)(SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBSEL_Msk);
1710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Clock source for watchdog timer.\n
1715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of WDT clock (fWDT).\n\n
1724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The selected value is configured to the \a WDTSEL bits of \a WDTCLKCR register.
1725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The watchdog timer counts at the frequency selected using this API. So the time for
1726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * timeout or pre-warning of watchdog has to be calculated based on this selection.
1727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_GetWdtClockFrequency() \n\n\n
1730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockSource(const XMC_SCU_CLOCK_WDTCLKSRC_t source);
1732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_WDTCLKSRC_t   Clock source configured for watchdog timer.\n
1735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type XMC_SCU_CLOCK_WDTCLKSRC_t to identify the clock source.\n
1736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_OFI - internal fast oscillator (fOFI)\n
1737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_STDBY - backup standby clock (fSTDBY)\n
1738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  XMC_SCU_CLOCK_WDTCLKSRC_PLL - PLL output clock (fPLL)
1739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of clock used for watchdog timer.\n\n
1742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTSEL bits of \a WDTCLKCR register.
1743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The time for timeout or pre-warning of watchdog has to be calculated based on 
1744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the clock source selected.
1745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockDivider(), XMC_SCU_CLOCK_SetWdtClockSource() \n\n\n
1747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_WDTCLKSRC_t XMC_SCU_CLOCK_GetWdtClockSource(void)
1749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_WDTCLKSRC_t)(SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTSEL_Msk);
1751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source   Source for standby clock.\n
1756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of Standby clock (fSTDBY).\n\n
1764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Clock source is configured by setting the \a STDBYSEL bits of \a HDCR register.
1765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Hibernate domain should be enabled explicitly before using the API.
1766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetStdbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetStandbyClockSource(const XMC_SCU_HIB_STDBYCLKSRC_t source);
1770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source clock of standby clock(fSTDBY).\n
1773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: Use type @ref XMC_SCU_HIB_STDBYCLKSRC_t to identify the clock source.\n
1774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSI - internal slow oscillator (fOSI) \n
1775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    XMC_SCU_HIB_STDBYCLKSRC_OSCULP - ultra low power osciallator (fULP) \n
1776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of standby clock (fSTDBY).\n\n
1779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a STDBYSEL bits of \a HDCR register.\n
1780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetStandbyClockSource(), XMC_SCU_HIB_EnableHibernateDomain() \n\n\n
1782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetStdbyClockSource(void)
1784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_STDBYSEL_Msk);
1786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of RTC clock.\n
1791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of RTC clock (fRTC).\n\n
1799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a RCS bit of \a HDCR register.
1800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * fULP needs external input powered by VBAT or VDDP. fOSI is internal clock.
1801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_GetRtcClockSource() \n\n\n
1804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_HIB_SetRtcClockSource(const XMC_SCU_HIB_RTCCLKSRC_t source);
1806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_HIB_RTCCLKSRC_t   Source of RTC clock.\n
1809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_HIB_RTCCLKSRC_t to identify the clock source.\n
1810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_OSI - internal slow oscillator(fOSI). \n
1811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_HIB_RTCCLKSRC_ULP - ultra low power oscillator(fULP). \n
1812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of RTC clock (fRTC).
1815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a RCS bit of \a HDCR register.
1816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency of the clock will be 32.768 kHz.
1817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_HIB_RTCCLKSRC_t XMC_SCU_HIB_GetRtcClockSource(void)
1821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_HIB_RTCCLKSRC_t)(SCU_HIBERNATE->HDCR & SCU_HIBERNATE_HDCR_RCS_Msk);
1823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param clock  Source of external clock output(fEXT).\n
1828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of external clock out (fEXT).\n\n
1844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKSEL bits of \a EXTCLKCR register.
1845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockSource(const XMC_SCU_CLOCK_EXTOUTCLKSRC_t clock);
1849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_EXTOUTCLKSRC_t   Source of external clock output(fEXT).\n
1852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *           \b Range: Use type @ref XMC_SCU_CLOCK_EXTOUTCLKSRC_t to identify the clock.\n
1853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_SYS - system clock fSYS. \n
1854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_USB - USB clock fUSB. \n
1855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_PLL - PLL output fPLL. \n
1856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC42
1857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \if XMC41
1860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                      XMC_SCU_CLOCK_EXTOUTCLKSRC_STDBY - Standby clock fSTDBY. \n
1861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \endif
1862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of external clock output(fEXT).\n\n
1865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECKSEL bits of \a EXTCLKCR register.
1866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
1868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_EXTOUTCLKSRC_t XMC_SCU_CLOCK_GetExternalOutputClockSource(void)
1870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_EXTOUTCLKSRC_t)(SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKSEL_Msk);
1872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of clock for system PLL.\n
1877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of system PLL.\n\n
1885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a VCOBYP bit of \a PLLCON0 register.
1886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If \a XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP is selected, ensure that the high performance oscillator 
1887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * enabled by using the API XMC_SCU_CLOCK_EnableHighPerformanceOscillator().
1888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator()\n\n\n
1890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemPllClockSource(const XMC_SCU_CLOCK_SYSPLLCLKSRC_t source);
1892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_OSCCLKSRC_t   Source of clock for system PLL.\n
1895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *        \b Range: Use type @ref XMC_SCU_CLOCK_SYSPLLCLKSRC_t for identifying the clock source.\n
1896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OSCHP - External High performance oscillat
1897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                            XMC_SCU_CLOCK_SYSPLLCLKSRC_OFI - Internal fast clock (fOFI).
1898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of system PLL clock (fPLL). \n\n
1901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a VCOBYP bit of \a PLLCON0 register.
1902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator(), XMC_SCU_CLOCK_SetSystemPllClockSource()\n\n\n
1904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_SYSPLLCLKSRC_t XMC_SCU_CLOCK_GetSystemPllClockSource(void)
1906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_SYSPLLCLKSRC_t)(SCU_PLL->PLLCON0 & SCU_PLL_PLLCON0_VCOBYP_Msk);
1908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0) 
1911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param source  Source of ECAT clock.\n
1914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Selects the source of ECAT clock (fECAT).\n\n
1922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECATSEL bit of \a ECATCLKCR register.
1923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetECATClockSource() \n\n\n
1925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE void XMC_SCU_CLOCK_SetECATClockSource(const XMC_SCU_CLOCK_ECATCLKSRC_t source)
1927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   SCU_CLK->ECATCLKCR = (SCU_CLK->ECATCLKCR & ((uint32_t)~SCU_CLK_ECATCLKCR_ECATSEL_Msk)) |
1929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****                       ((uint32_t)source);
1930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return XMC_SCU_CLOCK_ECATCLKSRC_t   Source of ECAT clock.\n
1934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: Use type @ref XMC_SCU_CLOCK_ECATCLKSRC_t to identify the clock source.\n
1935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_USBPLL - USB PLL (fUSBPLL) as a source for ECAT c
1936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                       XMC_SCU_CLOCK_ECATCLKSRC_SYSPLL - Main PLL output (fPLL) as a source for E
1937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the source of ECAT clock (fECAT).
1940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECATSEL bit of \a ECATCLKCR register.
1941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_HIB_SetRtcClockSource() \n\n\n
1943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE XMC_SCU_CLOCK_ECATCLKSRC_t XMC_SCU_CLOCK_GetECATClockSource(void)
1945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (XMC_SCU_CLOCK_ECATCLKSRC_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECATSEL_Msk) >> SCU_C
1947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
1949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param divider   Ratio of fSYS clock source to the value of fSYS.
1953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 to 256.
1954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ratio of system clock source to the value of system clock frequency.\n\n
1959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured as \a SYSDIV bits of \a SYSCLKCR register. The divider value is 
1960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * decremented by 1 before configuring.
1961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetSystemClockDivider(const uint32_t divider);
1965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio of fSYS clock source to the value of fSYS.
1968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 to 255.
1969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of ratio between the source of system clock to the the value of system clock 
1972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a SYSDIV bits of \a SYSCLKCR register.
1973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockDivider(),  XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
1975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockDivider(void)
1977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
1978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) >> SCU_CLK_SYSCLKCR_SYSDIV_Po
1979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
1980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
1981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
1982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of fCCU clock source to the value of fCCU.
1984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 1 or 2.\n
1985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS \n
1986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  2-> fCCU= fSYS/2.
1987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
1989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
1991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the divider for CCU clock source. \n\n
1992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Capture compare unit(CCU) can take either fSYS or fSYS/2 as the source of clock.
1993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The configuration is set to \a CCUDIV bit of \a CCUCLKCR register. The CCUDIV bit is 1 bit wide.
1994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
1995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
1996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider() \n\n\n
1997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
1998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCcuClockDivider(const uint32_t ratio);
1999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of fCCU clock source to the value of fCCU.
2002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *              \b Range: 0 or 1.\n
2003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  0-> fCCU= fSYS \n
2004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                  1-> fCCU= fSYS/2.
2005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CCU clock(fCCU) to system clock(fSYS).\n\n
2008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CCUDIV bit of \a CCUCLKCR register.
2009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCcuClockDivider() \n\n\n
2012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCcuClockDivider(void)
2014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CCUCLKCR & SCU_CLK_CCUCLKCR_CCUDIV_Msk) >> SCU_CLK_CCUCLKCR_CCUDIV_Po
2016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between system clock(fSYS) and CPU clock(fCPU).
2021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS. \n
2023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            2-> fCPU= fSYS/2.
2024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the CPU clock by setting the divider value for the system clock. \n\n
2029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is set to the \a CPUDIV bit of \a CPUCLKCR register.
2030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCpuClockDivider() \n\n\n
2032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetCpuClockDivider(const uint32_t ratio);
2034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ratio between system clock(fSYS) and CPU clock(fCPU).
2037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            0-> fCPU= fSYS. \n
2039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            1-> fCPU= fSYS/2.
2040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between system clock(fSYS) and CPU clock(fCPU). \n\n
2043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a CPUDIV bit of \a CPUCLKCR register.
2044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetCpuClockDivider() \n\n\n
2046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetCpuClockDivider(void)
2048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_CPUDIV_Po
2050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio of peripheral clock source to the value of peripheral clock.\n
2055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 or 2.\n
2056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU.\n
2057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                2-> fPERIPH= fCPU/2.
2058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the peripheral clock by setting the divider for CPU clock(fCPU).\n\n
2063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The peripheral clock can be equal to either fCPU or fCPU/2. The value is configured to \a PBDIV 
2064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetPeripheralClockDivider() \n\n\n
2067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetPeripheralClockDivider(const uint32_t ratio);
2069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of peripheral clock source to the value of peripheral clock.\n
2072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 or 1.\n
2073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                0-> fPERIPH= fCPU.\n
2074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                1-> fPERIPH= fCPU/2.
2075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio of CPU clock(fCPU) to peripheral clock(fPERIPH).\n\n
2078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a PBDIV bit of \a PBCLKCR register.
2079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetPeripheralClockDivider() \n\n\n
2081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetPeripheralClockDivider(void)
2083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->PBCLKCR & SCU_CLK_PBCLKCR_PBDIV_Msk) >> SCU_CLK_PBCLKCR_PBDIV_Pos);
2085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 8.
2091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the USB clock(fUSB) by setting the USB clock divider. \n\n
2096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is decremented by 1 before setting it to \a USBDIV bits of \a USBCLKCR register.
2097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockDivider(), XMC_SCU_CLOCK_SetUsbClockSource() \n\n\n
2100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetUsbClockDivider(const uint32_t ratio);
2102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL output clock(fPLL) to USB clock(fUSB).
2106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 7.
2107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL output frequency(fPLL) and USB clock(fUSB).\n\n
2110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a USBDIV bit of \a USBCLKCR register.
2111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetUsbClockDivider(), XMC_SCU_CLOCK_GetUsbClockSource() \n\n\n
2113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetUsbClockDivider(void)
2115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->USBCLKCR & SCU_CLK_USBCLKCR_USBDIV_Msk) >> SCU_CLK_USBCLKCR_USBDIV_Po
2117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(EBU)
2122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 64.
2126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the EBU clock(fEBU) by setting the divider value.\n\n
2131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The clock divider is configured to the \a EBUDIV bits of \a EBUCLKCR register.
2132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetEbuClockDivider() \n\n\n
2134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetEbuClockDivider(const uint32_t ratio);
2136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio of PLL clock(fPLL) to EBU clock(fEBU).\n
2140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 63.
2141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between PLL clock(fPLL) and EBU clock(fEBU).\n\n
2144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EBUDIV bits of \a EBUCLKCR register.
2145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetEbuClockDivider() \n\n\n
2147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEbuClockDivider(void)
2149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EBUCLKCR & SCU_CLK_EBUCLKCR_EBUDIV_Msk) >> SCU_CLK_EBUCLKCR_EBUDIV_Po
2151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio  Ratio between the source of WDT clock and the WDT clock.\n
2157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 256.
2158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the WDT clock by setting the clock divider for the WDT clock source.\n\n
2163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a WDTDIV bits of \a WDTCLKCR register. The value of divider
2164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring. Check the selected clock source for the WDT clock
2165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * before configuring the divider using the API XMC_SCU_CLOCK_SetWdtClockSource().
2166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_GetWdtClockDivider() \n\n\n
2168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetWdtClockDivider(const uint32_t ratio);
2170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of WDT clock and the WDT clock.\n
2174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 255.
2175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the WDT parent clock and the WDT clock. \n\n
2178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a WDTDIV bits of \a WDTCLKCR register.
2179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the WDT parent clock is considered before using the value of
2180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the divider value.
2181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetWdtClockSource(), XMC_SCU_CLOCK_SetWdtClockDivider() \n\n\n
2183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetWdtClockDivider(void)
2185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->WDTCLKCR & SCU_CLK_WDTCLKCR_WDTDIV_Msk) >> SCU_CLK_WDTCLKCR_WDTDIV_Po
2187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the external output parent clock selected and the output clock.\n
2192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 512.
2193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the external output clock by setting the divider value for the parent clock. \n\n
2198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value will be configured to \a ECKDIV bits of \a EXTCLKCR register.
2199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The divider value is decremented by 1 before storing it to the bit fields.
2200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Ensure that the source of external output clock is configured appropriately using the API
2201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource().
2202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetExternalOutputClockSource(), XMC_SCU_CLOCK_GetExternalOutputClockDivider() \n\n
2204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetExternalOutputClockDivider(const uint32_t ratio);
2206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the external output parent clock selected and the output clock.\
2210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 511.
2211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the divider value applied on parent clock before the generation of external output cloc
2214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a EXTDIV bit of \a EXTCLKCR register.
2215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetExternalOutputClockSource(), XMC_SCU_CLOCK_SetExternalOutputClockDivider() \n\n
2217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetExternalOutputClockDivider(void)
2219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->EXTCLKCR & SCU_CLK_EXTCLKCR_ECKDIV_Msk) >> SCU_CLK_EXTCLKCR_ECKDIV_Po
2221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #if defined(ECAT0)
2224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @param ratio   Ratio between the source of ECAT clock and the ECAT clock.\n
2227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 1 to 4.
2228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Configures the ECAT clock by setting the clock divider for the ECAT clock source.\n\n
2233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is configured to \a ECADIV bits of \a ECATCLKCR register. The value of divider
2234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * is decremented by 1 before configuring.
2235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_GetECATClockDivider() \n\n\n
2237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_SetECATClockDivider(const uint32_t divider);
2239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Ratio between the source of ECAT clock and the ECAT clock.\n
2243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: 0 to 3.
2244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the ratio between the ECAT parent clock and the ECAT clock. \n\n
2247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained by reading \a ECADIV bits of \a ECATCLKCR register.
2248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetECATClockSource(), XMC_SCU_CLOCK_SetECATClockDivider() \n\n\n
2250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetECATClockDivider(void)
2252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
2253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return (uint32_t)((SCU_CLK->ECATCLKCR & SCU_CLK_ECATCLKCR_ECADIV_Msk) >> SCU_CLK_ECATCLKCR_ECADIV
2254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
2255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** #endif
2256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables the high precision oscillator by configuring external crystal mode.\n\n
2263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 0, there by configuring the 
2264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * external clock input.
2265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The System Oscillator Watchdog is enabled. The user should check the status 
2266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable()
2267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillator(void);
2271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables the high precision oscillator by disabling the external oscillator.\n\n
2277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API configures \a MODE bits of \a OSCHPCTRL register to 1, there by disabling the 
2278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * external oscillator. 
2279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillator(void);
2283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of high performance oscillator
2287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_HP oscillator is stable and usable
2290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillator() \n\n\n
2292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsHighPerformanceOscillatorStable(void);
2294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus to monitor the status of
2302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableHighPerformanceOscillator
2303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableHighPerformanceOscillator() \n\n\n
2305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput(void);
2307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableHighPerformanceOscillatorGeneralPurposeInput(void);
2318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_HP XTAL1 pin
2322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_HP XTAL1 pin.
2325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableHighPerformanceOscillatorGeneralPurposeInput() \n\n\n
2327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetHighPerformanceOscillatorGeneralPurposeInputStatus(void);
2329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables ultra low power oscillator(ULP). \n\n
2336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It enables the hibernate domain, configures the ultra low power oscillator
2337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * uisng the \a MODE bits of the \a OSCULCTRL register. The \a Mode bits will be
2338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * reset to 0 to enable the low power oscillator. Mirror register update delays 
2339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * are handled internally.
2340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The OSC_ULP Oscillator Watchdog is enabled. The user should check the status 
2341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * of the oscillator using XMC_SCU_CLOCK_IsLowPowerOscillatorStable()
2342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() 
2344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_IsLowPowerOscillatorStable() \n\n\n
2345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillator(void);
2347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables ultra low power oscillator.\n\n
2354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It is disabled by setting the \a MODE bits of \a OSCULCTRL register to value 2.
2355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * By default on power up, the ultra low power osciallator is disabled.
2356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillator(void);
2360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status of low power oscillator
2364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Checks if the OSC_ULP oscillator is stable and usable
2367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillator() \n\n\n
2369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** bool XMC_SCU_CLOCK_IsLowPowerOscillatorStable(void);
2371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Enables XTAL1 input of OSC_ULP as general purpose input.
2378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Use XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus to monitor the status of OSC_UL
2379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @Note OSC_ULP should be disabled previously using XMC_SCU_CLOCK_DisableLowPowerOscillator().
2380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_DisableLowPowerOscillator() \n\n\n
2382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput(void);
2384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return None
2388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Disables XTAL1 input of OSC_ULP as general purpose input.
2391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** void XMC_SCU_CLOCK_DisableLowPowerOscillatorGeneralPurposeInput(void);
2395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return Status OSC_ULP XTAL1 pin 
2399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Monitor the status of OSC_ULP XTAL1 pin.
2402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_EnableLowPowerOscillatorGeneralPurposeInput() \n\n\n
2404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetLowPowerOscillatorGeneralPurposeInputStatus(void);
2406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System frequency in Hertz.\n
2410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            \b Range: clock frequency in Hertz. Range of the value depends on the source clock fr
2411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *            and the configured values of dividers.
2412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of system PLL output clock frequency(fPLL).\n\n
2415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API uses \a N-DIV,  \a P-DIV,  \a K1-DIV,  \a K2-DIV bits information from \a PLLCON1 regist
2416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * VCOBYP bit information from \a PLLCON0 register. It calculates frequency of system pll clock usi
2417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If normal Mode : fPLL = (fOSC * N)/(P * K2).
2418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If prescaler mode: fPLL = fOSC/ K1.
2419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_SetSystemClockSource() \n\n\n
2421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockFrequency(void);
2423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  Source clock used for deriving system clock.\n
2427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *          \b Range: fOHP frequency if external high precision frequency is used. \n
2428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *                    fOFI fast internal clock frequency.
2429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the value of the input clock frequency for deriving the system clock.
2432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The API retrieves frequency of system PLL input clock (fPLLin).
2433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on \a PINSEL bits information from \a PLLCON2 register, the parent clock source is obtaine
2434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * This bit field specifies if fOHP or fOFI is used for deriving system clock.
2435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * System clock frequency is obtained by dividing the source clock frequency with different divider
2436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockFrequency() \n\n\n
2438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency(void);
2440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB PLL output clock frequency.
2444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB PLL output clock (fUSBPLL).\n\n
2447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * It obtains the \a VCOBYP bits information from \a USBPLLCON register and decides if USB PLL mode
2448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If USB PLL mode is used, the USB clock frequency is obtained by dividing the source clock by USB
2449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The frequency is obtained using following formula:\n
2450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Normal Mode : fUSBPLL = (fOSC * N)/(P * 2).\n
2451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * If Prescaler mode: fPLL = fOSC.
2452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemPllClockSourceFrequency() \n\n\n
2454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbPllClockFrequency(void);
2456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   System clock frequency in Hertz.
2460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of system clock (fSYS).\n\n
2463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value obtained by dividing \a CPUDIV bits information of \a CPUCLKCR register with SystemCor
2464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fSYS clock frequency is derived using the following formula:\n
2465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * fSYS = fCPU << CPUDIV.
2466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbPllClockFrequency() \n\n\n
2468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetSystemClockFrequency(void)
2470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 145              	 .loc 2 2470 0
 146              	 .cfi_startproc
 147              	 
 148              	 
 149              	 
 150 0000 80B4     	 push {r7}
 151              	.LCFI12:
 152              	 .cfi_def_cfa_offset 4
 153              	 .cfi_offset 7,-4
 154 0002 00AF     	 add r7,sp,#0
 155              	.LCFI13:
 156              	 .cfi_def_cfa_register 7
2471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return SystemCoreClock << ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) >> SCU_CLK_CPUCLKCR_
 157              	 .loc 2 2471 0
 158 0004 064B     	 ldr r3,.L6
 159 0006 1A68     	 ldr r2,[r3]
 160 0008 064B     	 ldr r3,.L6+4
 161 000a 1B69     	 ldr r3,[r3,#16]
 162 000c 03F00103 	 and r3,r3,#1
 163 0010 02FA03F3 	 lsl r3,r2,r3
2472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
 164              	 .loc 2 2472 0
 165 0014 1846     	 mov r0,r3
 166 0016 BD46     	 mov sp,r7
 167              	.LCFI14:
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 0018 5DF8047B 	 ldr r7,[sp],#4
 171              	.LCFI15:
 172              	 .cfi_restore 7
 173              	 .cfi_def_cfa_offset 0
 174 001c 7047     	 bx lr
 175              	.L7:
 176 001e 00BF     	 .align 2
 177              	.L6:
 178 0020 00000000 	 .word SystemCoreClock
 179 0024 00460050 	 .word 1342195200
 180              	 .cfi_endproc
 181              	.LFE197:
 183              	 .section .text.XMC_SCU_CLOCK_GetEthernetClockFrequency,"ax",%progbits
 184              	 .align 2
 185              	 .thumb
 186              	 .thumb_func
 188              	XMC_SCU_CLOCK_GetEthernetClockFrequency:
 189              	.LFB198:
2473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  
2474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t  CCU clock frequency in Hertz.
2478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of clock(fCPU) used for CCU4, CCU8, POSIF and HRPWM.\n\n
2481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a CCUDIV bits of \a CCUCLKCR register and system clock (fSYS) freque
2482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values, fCCU clock frequency is calculated using following formula:\n
2483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * fCCU = fSYS >> CCUDIV.\n
2484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetCcuClockDivider(), XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetCcuClockFrequency(void);
2488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   USB clock frequency in Hertz.
2491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of USB and SDMMC clock(fUSB/fSDMMC).\n\n
2494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is obtained from \a USBDIV bits of \a USBCLKCR register and USB clock source.
2495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Based on these values fUSB/fSDMMC clock frequency is calculated using following formula:\n
2496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = USBPLL: fUSB/fSDMMC = fUSBPLL/(USBDIV + 1).\n
2497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * if USB clock source = PLL:  fUSB/fSDMMC = fPLL/(USBDIV + 1).\n
2498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetUsbClockSource(), XMC_SCU_CLOCK_GetUsbClockDivider() \n\n\n
2501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** uint32_t XMC_SCU_CLOCK_GetUsbClockFrequency(void); 
2503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** 
2504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** /**
2505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * @return uint32_t   Ethernet clock frequency in Hertz.
2506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  *
2507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Description</b><br>
2508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * Provides the frequency of Ethernet clock(fETH).\n\n
2509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * The value is derived from system clock frequency(fSYS). It is calculated using
2510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * the following formula:\n
2511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * fETH = fSYS >> 1;
2512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * \par<b>Related APIs:</b><BR>
2513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  * XMC_SCU_CLOCK_GetSystemClockFrequency() \n\n\n
2514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****  */
2515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** __STATIC_INLINE uint32_t XMC_SCU_CLOCK_GetEthernetClockFrequency(void)
2516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** {
 190              	 .loc 2 2516 0
 191              	 .cfi_startproc
 192              	 
 193              	 
 194 0000 80B5     	 push {r7,lr}
 195              	.LCFI16:
 196              	 .cfi_def_cfa_offset 8
 197              	 .cfi_offset 7,-8
 198              	 .cfi_offset 14,-4
 199 0002 00AF     	 add r7,sp,#0
 200              	.LCFI17:
 201              	 .cfi_def_cfa_register 7
2517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h ****   return XMC_SCU_CLOCK_GetSystemClockFrequency() >> 1U;
 202              	 .loc 2 2517 0
 203 0004 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 204 0008 0346     	 mov r3,r0
 205 000a 5B08     	 lsrs r3,r3,#1
2518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc4_scu.h **** }
 206              	 .loc 2 2518 0
 207 000c 1846     	 mov r0,r3
 208 000e 80BD     	 pop {r7,pc}
 209              	 .cfi_endproc
 210              	.LFE198:
 212              	 .section .text.XCM_ETH_MAC_IsNormalEvent,"ax",%progbits
 213              	 .align 2
 214              	 .thumb
 215              	 .thumb_func
 217              	XCM_ETH_MAC_IsNormalEvent:
 218              	.LFB216:
 219              	 .file 3 "../Libraries/XMCLib/src/xmc_eth_mac.c"
   1:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
   2:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
   3:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @file xmc_eth_mac.c
   4:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @date 2016-08-30
   5:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
   6:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_eth_mac.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   9:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  10:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 
  19:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.
  21:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 
  22:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_eth_mac.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  37:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  40:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-06-20:
  41:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Initial
  42:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  43:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-09-01:
  44:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Add clock gating control in enable/disable APIs
  45:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Add transmit polling if run out of buffers
  46:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  47:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2015-11-30:
  48:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_GetRxFrameSize return value in case of errors
  49:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  50:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-03-16:
  51:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Fix XMC_ETH_MAC_DisableEvent
  52:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  53:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-05-19:
  54:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_ReturnTxDescriptor and XMC_ETH_MAC_ReturnRxDescriptor
  55:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  56:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * 2016-08-30:
  57:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *     - Changed XMC_ETH_MAC_Init() to disable MMC interrupt events
  58:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *
  59:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * @endcond
  60:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
  61:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  62:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
  63:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * HEADER FILES
  64:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
  65:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  66:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include <xmc_eth_mac.h>
  67:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  68:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if defined (ETH0)
  69:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  70:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include <stdlib.h>
  71:../Libraries/XMCLib/src/xmc_eth_mac.c **** #include <xmc_scu.h>
  72:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  73:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
  74:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * MACROS
  75:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
  76:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  77:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
  78:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC clock speed
  79:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
  80:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_35MHZ  (35000000U)  /**< ETH MAC clock speed 35 MHZ */
  81:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_60MHZ  (60000000U)  /**< ETH MAC clock speed 60 MHZ */
  82:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_100MHZ (100000000U) /**< ETH MAC clock speed 100 MHZ */
  83:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_150MHZ (150000000U) /**< ETH MAC clock speed 150 MHZ */
  84:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_200MHZ (200000000U) /**< ETH MAC clock speed 200 MHZ */
  85:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_CLK_SPEED_250MHZ (250000000U) /**< ETH MAC clock speed 250 MHZ */
  86:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  87:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
  88:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * ETH MAC MDC divider
  89:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
  90:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_16  (2U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/16 */
  91:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_26  (3U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/26 */
  92:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_42  (0U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/42 */
  93:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_62  (1U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/62 */
  94:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_102 (4U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/102 *
  95:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define XMC_ETH_MAC_MDC_DIVIDER_124 (5U << ETH_GMII_ADDRESS_CR_Pos) /**< MDC clock: ETH clock/124 *
  96:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  97:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
  98:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
  99:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * RDES1 Descriptor RX Packet Control
 100:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 101:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS2 (0x1FFF0000U) /**< Receive buffer 2 size */
 102:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RER  (0x00008000U) /**< Receive end of ring */
 103:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RCH  (0x00004000U) /**< Second address chained */
 104:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_DMA_RDES1_RBS1 (0x00001FFFU) /**< Receive buffer 1 size */
 105:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_MMC_INTERRUPT_MSK  (0x03ffffffU) /**< Bit mask to disable MMMC transmit and receive
 106:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 107:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 108:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Normal MAC events
 109:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 110:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_NORMAL (XMC_ETH_MAC_EVENT_TRANSMIT |\
 111:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |\
 112:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_RECEIVE |\
 113:../Libraries/XMCLib/src/xmc_eth_mac.c ****                               XMC_ETH_MAC_EVENT_EARLY_RECEIVE)
 114:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 115:../Libraries/XMCLib/src/xmc_eth_mac.c **** /**
 116:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * Abnormal MAC events
 117:../Libraries/XMCLib/src/xmc_eth_mac.c ****  */
 118:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_MAC_EVENT_ABNORMAL (XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |\
 119:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |\
 120:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |\
 121:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |\
 122:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |\
 123:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |\
 124:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |\
 125:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |\
 126:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                 XMC_ETH_MAC_EVENT_BUS_ERROR)
 127:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 128:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Definition needed in case of device header file previous to v1.5.1*/
 129:../Libraries/XMCLib/src/xmc_eth_mac.c **** #ifndef ETH_BUS_MODE_ATDS_Msk
 130:../Libraries/XMCLib/src/xmc_eth_mac.c **** #define ETH_BUS_MODE_ATDS_Msk  (0x00000080UL)
 131:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 132:../Libraries/XMCLib/src/xmc_eth_mac.c **** /*******************************************************************************
 133:../Libraries/XMCLib/src/xmc_eth_mac.c ****  * API IMPLEMENTATION
 134:../Libraries/XMCLib/src/xmc_eth_mac.c ****  *******************************************************************************/
 135:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 136:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is a normal event */
 137:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsNormalEvent(uint32_t event)
 138:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 220              	 .loc 3 138 0
 221              	 .cfi_startproc
 222              	 
 223              	 
 224              	 
 225 0000 80B4     	 push {r7}
 226              	.LCFI18:
 227              	 .cfi_def_cfa_offset 4
 228              	 .cfi_offset 7,-4
 229 0002 83B0     	 sub sp,sp,#12
 230              	.LCFI19:
 231              	 .cfi_def_cfa_offset 16
 232 0004 00AF     	 add r7,sp,#0
 233              	.LCFI20:
 234              	 .cfi_def_cfa_register 7
 235 0006 7860     	 str r0,[r7,#4]
 139:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT |
 236              	 .loc 3 139 0
 237 0008 7A68     	 ldr r2,[r7,#4]
 238 000a 44F24503 	 movw r3,#16453
 239 000e 1340     	 ands r3,r3,r2
 240 0010 002B     	 cmp r3,#0
 241 0012 14BF     	 ite ne
 242 0014 0123     	 movne r3,#1
 243 0016 0023     	 moveq r3,#0
 244 0018 DBB2     	 uxtb r3,r3
 140:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE |
 141:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE |
 142:../Libraries/XMCLib/src/xmc_eth_mac.c ****                           (uint32_t)XMC_ETH_MAC_EVENT_EARLY_RECEIVE)) != (uint32_t)0);
 143:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 245              	 .loc 3 143 0
 246 001a 1846     	 mov r0,r3
 247 001c 0C37     	 adds r7,r7,#12
 248              	.LCFI21:
 249              	 .cfi_def_cfa_offset 4
 250 001e BD46     	 mov sp,r7
 251              	.LCFI22:
 252              	 .cfi_def_cfa_register 13
 253              	 
 254 0020 5DF8047B 	 ldr r7,[sp],#4
 255              	.LCFI23:
 256              	 .cfi_restore 7
 257              	 .cfi_def_cfa_offset 0
 258 0024 7047     	 bx lr
 259              	 .cfi_endproc
 260              	.LFE216:
 262 0026 00BF     	 .section .text.XCM_ETH_MAC_IsAbnormalEvent,"ax",%progbits
 263              	 .align 2
 264              	 .thumb
 265              	 .thumb_func
 267              	XCM_ETH_MAC_IsAbnormalEvent:
 268              	.LFB217:
 144:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 145:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the event passed is an abnormal event */
 146:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XCM_ETH_MAC_IsAbnormalEvent(uint32_t event)
 147:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 269              	 .loc 3 147 0
 270              	 .cfi_startproc
 271              	 
 272              	 
 273              	 
 274 0000 80B4     	 push {r7}
 275              	.LCFI24:
 276              	 .cfi_def_cfa_offset 4
 277              	 .cfi_offset 7,-4
 278 0002 83B0     	 sub sp,sp,#12
 279              	.LCFI25:
 280              	 .cfi_def_cfa_offset 16
 281 0004 00AF     	 add r7,sp,#0
 282              	.LCFI26:
 283              	 .cfi_def_cfa_register 7
 284 0006 7860     	 str r0,[r7,#4]
 148:../Libraries/XMCLib/src/xmc_eth_mac.c ****    return (bool)((event & ((uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED |
 285              	 .loc 3 148 0
 286 0008 7A68     	 ldr r2,[r7,#4]
 287 000a 42F2BA73 	 movw r3,#10170
 288 000e 1340     	 ands r3,r3,r2
 289 0010 002B     	 cmp r3,#0
 290 0012 14BF     	 ite ne
 291 0014 0123     	 movne r3,#1
 292 0016 0023     	 moveq r3,#0
 293 0018 DBB2     	 uxtb r3,r3
 149:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT |
 150:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW |
 151:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW |
 152:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE |
 153:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED |
 154:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT |
 155:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_EARLY_TRANSMIT |
 156:../Libraries/XMCLib/src/xmc_eth_mac.c ****                            (uint32_t)XMC_ETH_MAC_EVENT_BUS_ERROR)) != (uint32_t)0);
 157:../Libraries/XMCLib/src/xmc_eth_mac.c ****  }
 294              	 .loc 3 157 0
 295 001a 1846     	 mov r0,r3
 296 001c 0C37     	 adds r7,r7,#12
 297              	.LCFI27:
 298              	 .cfi_def_cfa_offset 4
 299 001e BD46     	 mov sp,r7
 300              	.LCFI28:
 301              	 .cfi_def_cfa_register 13
 302              	 
 303 0020 5DF8047B 	 ldr r7,[sp],#4
 304              	.LCFI29:
 305              	 .cfi_restore 7
 306              	 .cfi_def_cfa_offset 0
 307 0024 7047     	 bx lr
 308              	 .cfi_endproc
 309              	.LFE217:
 311 0026 00BF     	 .section .text.XMC_ETH_MAC_Init,"ax",%progbits
 312              	 .align 2
 313              	 .global XMC_ETH_MAC_Init
 314              	 .thumb
 315              	 .thumb_func
 317              	XMC_ETH_MAC_Init:
 318              	.LFB218:
 158:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 159:../Libraries/XMCLib/src/xmc_eth_mac.c **** #ifdef XMC_ASSERT_ENABLE 
 160:../Libraries/XMCLib/src/xmc_eth_mac.c ****  
 161:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Check if the passed argument is a valid ETH module */ 
 162:../Libraries/XMCLib/src/xmc_eth_mac.c **** __STATIC_INLINE bool XMC_ETH_MAC_IsValidModule(ETH_GLOBAL_TypeDef *const eth)
 163:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 164:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (eth == ETH0);
 165:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 166:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 167:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 168:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 169:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC initialize */
 170:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac)
 171:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 319              	 .loc 3 171 0
 320              	 .cfi_startproc
 321              	 
 322              	 
 323 0000 80B5     	 push {r7,lr}
 324              	.LCFI30:
 325              	 .cfi_def_cfa_offset 8
 326              	 .cfi_offset 7,-8
 327              	 .cfi_offset 14,-4
 328 0002 84B0     	 sub sp,sp,#16
 329              	.LCFI31:
 330              	 .cfi_def_cfa_offset 24
 331 0004 00AF     	 add r7,sp,#0
 332              	.LCFI32:
 333              	 .cfi_def_cfa_register 7
 334 0006 7860     	 str r0,[r7,#4]
 172:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 173:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 174:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_Init: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 175:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 176:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Enable(eth_mac);
 335              	 .loc 3 176 0
 336 0008 7868     	 ldr r0,[r7,#4]
 337 000a FFF7FEFF 	 bl XMC_ETH_MAC_Enable
 177:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_Reset(eth_mac);
 338              	 .loc 3 177 0
 339 000e 7868     	 ldr r0,[r7,#4]
 340 0010 FFF7FEFF 	 bl XMC_ETH_MAC_Reset
 178:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 179:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_SetManagmentClockDivider(eth_mac);
 341              	 .loc 3 179 0
 342 0014 7868     	 ldr r0,[r7,#4]
 343 0016 FFF7FEFF 	 bl XMC_ETH_MAC_SetManagmentClockDivider
 344 001a 0346     	 mov r3,r0
 345 001c FB73     	 strb r3,[r7,#15]
 180:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 181:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_SetAddress(eth_mac, eth_mac->address);
 346              	 .loc 3 181 0
 347 001e 7B68     	 ldr r3,[r7,#4]
 348 0020 D3E90223 	 ldrd r2,[r3,#8]
 349 0024 7868     	 ldr r0,[r7,#4]
 350 0026 FFF7FEFF 	 bl XMC_ETH_MAC_SetAddress
 182:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 183:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize MAC configuration */
 184:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MAC_CONFIGURATION = (uint32_t)ETH_MAC_CONFIGURATION_IPC_Msk;
 351              	 .loc 3 184 0
 352 002a 7B68     	 ldr r3,[r7,#4]
 353 002c 1B68     	 ldr r3,[r3]
 354 002e 4FF48062 	 mov r2,#1024
 355 0032 1A60     	 str r2,[r3]
 185:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 186:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize Filter registers */
 187:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->FLOW_CONTROL = ETH_FLOW_CONTROL_DZPQ_Msk; /* Disable Zero Quanta Pause */
 356              	 .loc 3 187 0
 357 0034 7B68     	 ldr r3,[r7,#4]
 358 0036 1B68     	 ldr r3,[r3]
 359 0038 8022     	 movs r2,#128
 360 003a 9A61     	 str r2,[r3,#24]
 188:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 189:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE = (uint32_t)ETH_OPERATION_MODE_RSF_Msk |
 361              	 .loc 3 189 0
 362 003c 7B68     	 ldr r3,[r7,#4]
 363 003e 1B68     	 ldr r3,[r3]
 364 0040 03F58053 	 add r3,r3,#4096
 365 0044 1833     	 adds r3,r3,#24
 366 0046 4FF00872 	 mov r2,#35651584
 367 004a 1A60     	 str r2,[r3]
 190:../Libraries/XMCLib/src/xmc_eth_mac.c **** 		                          (uint32_t)ETH_OPERATION_MODE_TSF_Msk;
 191:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 192:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Increase enhanced descriptor to 8 WORDS, required when the Advanced Time-Stamp feature or Full
 193:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_ATDS_Msk;
 368              	 .loc 3 193 0
 369 004c 7B68     	 ldr r3,[r7,#4]
 370 004e 1B68     	 ldr r3,[r3]
 371 0050 7A68     	 ldr r2,[r7,#4]
 372 0052 1268     	 ldr r2,[r2]
 373 0054 02F58052 	 add r2,r2,#4096
 374 0058 1268     	 ldr r2,[r2]
 375 005a 42F08002 	 orr r2,r2,#128
 376 005e 03F58053 	 add r3,r3,#4096
 377 0062 1A60     	 str r2,[r3]
 194:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 195:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Initialize DMA Descriptors */
 196:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 378              	 .loc 3 196 0
 379 0064 7868     	 ldr r0,[r7,#4]
 380 0066 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 197:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 381              	 .loc 3 197 0
 382 006a 7868     	 ldr r0,[r7,#4]
 383 006c FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 198:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 199:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Clear interrupts */
 200:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = 0xFFFFFFFFUL;
 384              	 .loc 3 200 0
 385 0070 7B68     	 ldr r3,[r7,#4]
 386 0072 1B68     	 ldr r3,[r3]
 387 0074 03F58053 	 add r3,r3,#4096
 388 0078 1433     	 adds r3,r3,#20
 389 007a 4FF0FF32 	 mov r2,#-1
 390 007e 1A60     	 str r2,[r3]
 201:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 202:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Disable MMC interrupt events */
 203:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_TRANSMIT_INTERRUPT_MASK = ETH_MAC_MMC_INTERRUPT_MSK;
 391              	 .loc 3 203 0
 392 0080 7B68     	 ldr r3,[r7,#4]
 393 0082 1B68     	 ldr r3,[r3]
 394 0084 6FF07C42 	 mvn r2,#-67108864
 395 0088 C3F81021 	 str r2,[r3,#272]
 204:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->MMC_RECEIVE_INTERRUPT_MASK = ETH_MAC_MMC_INTERRUPT_MSK;
 396              	 .loc 3 204 0
 397 008c 7B68     	 ldr r3,[r7,#4]
 398 008e 1B68     	 ldr r3,[r3]
 399 0090 6FF07C42 	 mvn r2,#-67108864
 400 0094 C3F80C21 	 str r2,[r3,#268]
 205:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 206:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 401              	 .loc 3 206 0
 402 0098 7B68     	 ldr r3,[r7,#4]
 403 009a 0022     	 movs r2,#0
 404 009c 1A62     	 str r2,[r3,#32]
 207:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 208:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 405              	 .loc 3 208 0
 406 009e FB7B     	 ldrb r3,[r7,#15]
 209:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 407              	 .loc 3 209 0
 408 00a0 1846     	 mov r0,r3
 409 00a2 1037     	 adds r7,r7,#16
 410              	.LCFI33:
 411              	 .cfi_def_cfa_offset 8
 412 00a4 BD46     	 mov sp,r7
 413              	.LCFI34:
 414              	 .cfi_def_cfa_register 13
 415              	 
 416 00a6 80BD     	 pop {r7,pc}
 417              	 .cfi_endproc
 418              	.LFE218:
 420              	 .section .text.XMC_ETH_MAC_InitRxDescriptors,"ax",%progbits
 421              	 .align 2
 422              	 .global XMC_ETH_MAC_InitRxDescriptors
 423              	 .thumb
 424              	 .thumb_func
 426              	XMC_ETH_MAC_InitRxDescriptors:
 427              	.LFB219:
 210:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 211:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize RX descriptors */
 212:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 213:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 428              	 .loc 3 213 0
 429              	 .cfi_startproc
 430              	 
 431              	 
 432              	 
 433 0000 80B4     	 push {r7}
 434              	.LCFI35:
 435              	 .cfi_def_cfa_offset 4
 436              	 .cfi_offset 7,-4
 437 0002 85B0     	 sub sp,sp,#20
 438              	.LCFI36:
 439              	 .cfi_def_cfa_offset 24
 440 0004 00AF     	 add r7,sp,#0
 441              	.LCFI37:
 442              	 .cfi_def_cfa_register 7
 443 0006 7860     	 str r0,[r7,#4]
 214:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 215:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 216:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 217:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitRxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 218:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 219:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /*
 220:../Libraries/XMCLib/src/xmc_eth_mac.c ****    * Chained structure (ETH_MAC_DMA_RDES1_RCH), second address in the descriptor
 221:../Libraries/XMCLib/src/xmc_eth_mac.c ****    * (buffer2) is the next descriptor address
 222:../Libraries/XMCLib/src/xmc_eth_mac.c ****    */
 223:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_rx_buf; ++i)
 444              	 .loc 3 223 0
 445 0008 0023     	 movs r3,#0
 446 000a FB60     	 str r3,[r7,#12]
 447 000c 37E0     	 b .L17
 448              	.L19:
 224:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 225:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->rx_desc[i].status = (uint32_t)ETH_MAC_DMA_RDES0_OWN;
 449              	 .loc 3 225 0
 450 000e 7B68     	 ldr r3,[r7,#4]
 451 0010 1A69     	 ldr r2,[r3,#16]
 452 0012 FB68     	 ldr r3,[r7,#12]
 453 0014 5B01     	 lsls r3,r3,#5
 454 0016 1344     	 add r3,r3,r2
 455 0018 4FF00042 	 mov r2,#-2147483648
 456 001c 1A60     	 str r2,[r3]
 226:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->rx_desc[i].length = (uint32_t)ETH_MAC_DMA_RDES1_RCH | (uint32_t)XMC_ETH_MAC_BUF_SIZE;
 457              	 .loc 3 226 0
 458 001e 7B68     	 ldr r3,[r7,#4]
 459 0020 1A69     	 ldr r2,[r3,#16]
 460 0022 FB68     	 ldr r3,[r7,#12]
 461 0024 5B01     	 lsls r3,r3,#5
 462 0026 1344     	 add r3,r3,r2
 463 0028 44F2F452 	 movw r2,#17908
 464 002c 5A60     	 str r2,[r3,#4]
 227:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->rx_desc[i].buffer1 = (uint32_t)&(eth_mac->rx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 465              	 .loc 3 227 0
 466 002e 7B68     	 ldr r3,[r7,#4]
 467 0030 1A69     	 ldr r2,[r3,#16]
 468 0032 FB68     	 ldr r3,[r7,#12]
 469 0034 5B01     	 lsls r3,r3,#5
 470 0036 1344     	 add r3,r3,r2
 471 0038 7A68     	 ldr r2,[r7,#4]
 472 003a 9169     	 ldr r1,[r2,#24]
 473 003c FA68     	 ldr r2,[r7,#12]
 474 003e 40F2F450 	 movw r0,#1524
 475 0042 00FB02F2 	 mul r2,r0,r2
 476 0046 0A44     	 add r2,r2,r1
 477 0048 9A60     	 str r2,[r3,#8]
 228:../Libraries/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 478              	 .loc 3 228 0
 479 004a FB68     	 ldr r3,[r7,#12]
 480 004c 0133     	 adds r3,r3,#1
 481 004e BB60     	 str r3,[r7,#8]
 229:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_rx_buf)
 482              	 .loc 3 229 0
 483 0050 7B68     	 ldr r3,[r7,#4]
 484 0052 93F82430 	 ldrb r3,[r3,#36]
 485 0056 1A46     	 mov r2,r3
 486 0058 BB68     	 ldr r3,[r7,#8]
 487 005a 9A42     	 cmp r2,r3
 488 005c 01D1     	 bne .L18
 230:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 231:../Libraries/XMCLib/src/xmc_eth_mac.c ****       next = 0U;
 489              	 .loc 3 231 0
 490 005e 0023     	 movs r3,#0
 491 0060 BB60     	 str r3,[r7,#8]
 492              	.L18:
 232:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 233:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_desc[i].buffer2 = (uint32_t)&(eth_mac->rx_desc[next]);
 493              	 .loc 3 233 0 discriminator 2
 494 0062 7B68     	 ldr r3,[r7,#4]
 495 0064 1A69     	 ldr r2,[r3,#16]
 496 0066 FB68     	 ldr r3,[r7,#12]
 497 0068 5B01     	 lsls r3,r3,#5
 498 006a 1344     	 add r3,r3,r2
 499 006c 7A68     	 ldr r2,[r7,#4]
 500 006e 1169     	 ldr r1,[r2,#16]
 501 0070 BA68     	 ldr r2,[r7,#8]
 502 0072 5201     	 lsls r2,r2,#5
 503 0074 0A44     	 add r2,r2,r1
 504 0076 DA60     	 str r2,[r3,#12]
 223:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 505              	 .loc 3 223 0 discriminator 2
 506 0078 FB68     	 ldr r3,[r7,#12]
 507 007a 0133     	 adds r3,r3,#1
 508 007c FB60     	 str r3,[r7,#12]
 509              	.L17:
 223:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 510              	 .loc 3 223 0 is_stmt 0 discriminator 1
 511 007e 7B68     	 ldr r3,[r7,#4]
 512 0080 93F82430 	 ldrb r3,[r3,#36]
 513 0084 1A46     	 mov r2,r3
 514 0086 FB68     	 ldr r3,[r7,#12]
 515 0088 9A42     	 cmp r2,r3
 516 008a C0D8     	 bhi .L19
 234:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 235:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->RECEIVE_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->rx_desc[0]);
 517              	 .loc 3 235 0 is_stmt 1
 518 008c 7B68     	 ldr r3,[r7,#4]
 519 008e 1B68     	 ldr r3,[r3]
 520 0090 7A68     	 ldr r2,[r7,#4]
 521 0092 1269     	 ldr r2,[r2,#16]
 522 0094 03F58053 	 add r3,r3,#4096
 523 0098 0C33     	 adds r3,r3,#12
 524 009a 1A60     	 str r2,[r3]
 236:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index = 0U;
 525              	 .loc 3 236 0
 526 009c 7B68     	 ldr r3,[r7,#4]
 527 009e 0022     	 movs r2,#0
 528 00a0 83F82720 	 strb r2,[r3,#39]
 237:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 529              	 .loc 3 237 0
 530 00a4 1437     	 adds r7,r7,#20
 531              	.LCFI38:
 532              	 .cfi_def_cfa_offset 4
 533 00a6 BD46     	 mov sp,r7
 534              	.LCFI39:
 535              	 .cfi_def_cfa_register 13
 536              	 
 537 00a8 5DF8047B 	 ldr r7,[sp],#4
 538              	.LCFI40:
 539              	 .cfi_restore 7
 540              	 .cfi_def_cfa_offset 0
 541 00ac 7047     	 bx lr
 542              	 .cfi_endproc
 543              	.LFE219:
 545 00ae 00BF     	 .section .text.XMC_ETH_MAC_InitTxDescriptors,"ax",%progbits
 546              	 .align 2
 547              	 .global XMC_ETH_MAC_InitTxDescriptors
 548              	 .thumb
 549              	 .thumb_func
 551              	XMC_ETH_MAC_InitTxDescriptors:
 552              	.LFB220:
 238:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 239:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize TX descriptors */
 240:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac)
 241:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 553              	 .loc 3 241 0
 554              	 .cfi_startproc
 555              	 
 556              	 
 557              	 
 558 0000 80B4     	 push {r7}
 559              	.LCFI41:
 560              	 .cfi_def_cfa_offset 4
 561              	 .cfi_offset 7,-4
 562 0002 85B0     	 sub sp,sp,#20
 563              	.LCFI42:
 564              	 .cfi_def_cfa_offset 24
 565 0004 00AF     	 add r7,sp,#0
 566              	.LCFI43:
 567              	 .cfi_def_cfa_register 7
 568 0006 7860     	 str r0,[r7,#4]
 242:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i;
 243:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t next;
 244:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 245:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitTxDescriptors: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 246:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 247:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Chained structure (ETH_MAC_DMA_TDES0_TCH), second address in the descriptor (buffer2) is the n
 248:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < eth_mac->num_tx_buf; ++i)
 569              	 .loc 3 248 0
 570 0008 0023     	 movs r3,#0
 571 000a FB60     	 str r3,[r7,#12]
 572 000c 2EE0     	 b .L21
 573              	.L23:
 249:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 250:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->tx_desc[i].status = ETH_MAC_DMA_TDES0_TCH | ETH_MAC_DMA_TDES0_LS | ETH_MAC_DMA_TDES0_FS;
 574              	 .loc 3 250 0
 575 000e 7B68     	 ldr r3,[r7,#4]
 576 0010 5A69     	 ldr r2,[r3,#20]
 577 0012 FB68     	 ldr r3,[r7,#12]
 578 0014 5B01     	 lsls r3,r3,#5
 579 0016 1344     	 add r3,r3,r2
 580 0018 204A     	 ldr r2,.L24
 581 001a 1A60     	 str r2,[r3]
 251:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->tx_desc[i].buffer1 = (uint32_t)&(eth_mac->tx_buf[i * XMC_ETH_MAC_BUF_SIZE]);
 582              	 .loc 3 251 0
 583 001c 7B68     	 ldr r3,[r7,#4]
 584 001e 5A69     	 ldr r2,[r3,#20]
 585 0020 FB68     	 ldr r3,[r7,#12]
 586 0022 5B01     	 lsls r3,r3,#5
 587 0024 1344     	 add r3,r3,r2
 588 0026 7A68     	 ldr r2,[r7,#4]
 589 0028 D169     	 ldr r1,[r2,#28]
 590 002a FA68     	 ldr r2,[r7,#12]
 591 002c 40F2F450 	 movw r0,#1524
 592 0030 00FB02F2 	 mul r2,r0,r2
 593 0034 0A44     	 add r2,r2,r1
 594 0036 9A60     	 str r2,[r3,#8]
 252:../Libraries/XMCLib/src/xmc_eth_mac.c ****     next = i + 1U;
 595              	 .loc 3 252 0
 596 0038 FB68     	 ldr r3,[r7,#12]
 597 003a 0133     	 adds r3,r3,#1
 598 003c BB60     	 str r3,[r7,#8]
 253:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (next == eth_mac->num_tx_buf)
 599              	 .loc 3 253 0
 600 003e 7B68     	 ldr r3,[r7,#4]
 601 0040 93F82530 	 ldrb r3,[r3,#37]
 602 0044 1A46     	 mov r2,r3
 603 0046 BB68     	 ldr r3,[r7,#8]
 604 0048 9A42     	 cmp r2,r3
 605 004a 01D1     	 bne .L22
 254:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 255:../Libraries/XMCLib/src/xmc_eth_mac.c ****         next = 0U;
 606              	 .loc 3 255 0
 607 004c 0023     	 movs r3,#0
 608 004e BB60     	 str r3,[r7,#8]
 609              	.L22:
 256:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 257:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_desc[i].buffer2 = (uint32_t)&(eth_mac->tx_desc[next]);
 610              	 .loc 3 257 0 discriminator 2
 611 0050 7B68     	 ldr r3,[r7,#4]
 612 0052 5A69     	 ldr r2,[r3,#20]
 613 0054 FB68     	 ldr r3,[r7,#12]
 614 0056 5B01     	 lsls r3,r3,#5
 615 0058 1344     	 add r3,r3,r2
 616 005a 7A68     	 ldr r2,[r7,#4]
 617 005c 5169     	 ldr r1,[r2,#20]
 618 005e BA68     	 ldr r2,[r7,#8]
 619 0060 5201     	 lsls r2,r2,#5
 620 0062 0A44     	 add r2,r2,r1
 621 0064 DA60     	 str r2,[r3,#12]
 248:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 622              	 .loc 3 248 0 discriminator 2
 623 0066 FB68     	 ldr r3,[r7,#12]
 624 0068 0133     	 adds r3,r3,#1
 625 006a FB60     	 str r3,[r7,#12]
 626              	.L21:
 248:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 627              	 .loc 3 248 0 is_stmt 0 discriminator 1
 628 006c 7B68     	 ldr r3,[r7,#4]
 629 006e 93F82530 	 ldrb r3,[r3,#37]
 630 0072 1A46     	 mov r2,r3
 631 0074 FB68     	 ldr r3,[r7,#12]
 632 0076 9A42     	 cmp r2,r3
 633 0078 C9D8     	 bhi .L23
 258:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 259:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TRANSMIT_DESCRIPTOR_LIST_ADDRESS = (uint32_t)&(eth_mac->tx_desc[0]);
 634              	 .loc 3 259 0 is_stmt 1
 635 007a 7B68     	 ldr r3,[r7,#4]
 636 007c 1B68     	 ldr r3,[r3]
 637 007e 7A68     	 ldr r2,[r7,#4]
 638 0080 5269     	 ldr r2,[r2,#20]
 639 0082 03F58053 	 add r3,r3,#4096
 640 0086 1033     	 adds r3,r3,#16
 641 0088 1A60     	 str r2,[r3]
 260:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index = 0U;
 642              	 .loc 3 260 0
 643 008a 7B68     	 ldr r3,[r7,#4]
 644 008c 0022     	 movs r2,#0
 645 008e 83F82620 	 strb r2,[r3,#38]
 261:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 646              	 .loc 3 261 0
 647 0092 1437     	 adds r7,r7,#20
 648              	.LCFI44:
 649              	 .cfi_def_cfa_offset 4
 650 0094 BD46     	 mov sp,r7
 651              	.LCFI45:
 652              	 .cfi_def_cfa_register 13
 653              	 
 654 0096 5DF8047B 	 ldr r7,[sp],#4
 655              	.LCFI46:
 656              	 .cfi_restore 7
 657              	 .cfi_def_cfa_offset 0
 658 009a 7047     	 bx lr
 659              	.L25:
 660              	 .align 2
 661              	.L24:
 662 009c 00001030 	 .word 806354944
 663              	 .cfi_endproc
 664              	.LFE220:
 666              	 .section .text.XMC_ETH_MAC_SetAddressPerfectFilter,"ax",%progbits
 667              	 .align 2
 668              	 .global XMC_ETH_MAC_SetAddressPerfectFilter
 669              	 .thumb
 670              	 .thumb_func
 672              	XMC_ETH_MAC_SetAddressPerfectFilter:
 673              	.LFB221:
 262:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 263:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set address perfect filter */
 264:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressPerfectFilter(XMC_ETH_MAC_t *const eth_mac,
 265:../Libraries/XMCLib/src/xmc_eth_mac.c **** 		                                 uint8_t index,
 266:../Libraries/XMCLib/src/xmc_eth_mac.c **** 								         const uint64_t addr,
 267:../Libraries/XMCLib/src/xmc_eth_mac.c **** 								         uint32_t flags)
 268:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 674              	 .loc 3 268 0
 675              	 .cfi_startproc
 676              	 
 677              	 
 678              	 
 679 0000 B0B4     	 push {r4,r5,r7}
 680              	.LCFI47:
 681              	 .cfi_def_cfa_offset 12
 682              	 .cfi_offset 4,-12
 683              	 .cfi_offset 5,-8
 684              	 .cfi_offset 7,-4
 685 0002 87B0     	 sub sp,sp,#28
 686              	.LCFI48:
 687              	 .cfi_def_cfa_offset 40
 688 0004 00AF     	 add r7,sp,#0
 689              	.LCFI49:
 690              	 .cfi_def_cfa_register 7
 691 0006 F860     	 str r0,[r7,#12]
 692 0008 C7E90023 	 strd r2,[r7]
 693 000c 0B46     	 mov r3,r1
 694 000e FB72     	 strb r3,[r7,#11]
 269:../Libraries/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 270:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 271:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressPerfectFilter: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(e
 272:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetAddressFilter: index is out of range", ((index > 0) && (index < 4)));
 273:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 274:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->MAC_ADDRESS0_HIGH);
 695              	 .loc 3 274 0
 696 0010 FB68     	 ldr r3,[r7,#12]
 697 0012 1B68     	 ldr r3,[r3]
 698 0014 4033     	 adds r3,r3,#64
 699 0016 7B61     	 str r3,[r7,#20]
 275:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index] = (uint32_t)(addr >> 32U) | flags;
 700              	 .loc 3 275 0
 701 0018 FB7A     	 ldrb r3,[r7,#11]
 702 001a 9B00     	 lsls r3,r3,#2
 703 001c 7A69     	 ldr r2,[r7,#20]
 704 001e D118     	 adds r1,r2,r3
 705 0020 D7E90023 	 ldrd r2,[r7]
 706 0024 1C00     	 movs r4,r3
 707 0026 0025     	 movs r5,#0
 708 0028 2246     	 mov r2,r4
 709 002a BB6A     	 ldr r3,[r7,#40]
 710 002c 1343     	 orrs r3,r3,r2
 711 002e 0B60     	 str r3,[r1]
 276:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg[index + 1U] = (uint32_t)addr;
 712              	 .loc 3 276 0
 713 0030 FB7A     	 ldrb r3,[r7,#11]
 714 0032 0133     	 adds r3,r3,#1
 715 0034 9B00     	 lsls r3,r3,#2
 716 0036 7A69     	 ldr r2,[r7,#20]
 717 0038 1344     	 add r3,r3,r2
 718 003a 3A68     	 ldr r2,[r7]
 719 003c 1A60     	 str r2,[r3]
 277:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 720              	 .loc 3 277 0
 721 003e 1C37     	 adds r7,r7,#28
 722              	.LCFI50:
 723              	 .cfi_def_cfa_offset 12
 724 0040 BD46     	 mov sp,r7
 725              	.LCFI51:
 726              	 .cfi_def_cfa_register 13
 727              	 
 728 0042 B0BC     	 pop {r4,r5,r7}
 729              	.LCFI52:
 730              	 .cfi_restore 7
 731              	 .cfi_restore 5
 732              	 .cfi_restore 4
 733              	 .cfi_def_cfa_offset 0
 734 0044 7047     	 bx lr
 735              	 .cfi_endproc
 736              	.LFE221:
 738              	 .section .text.XMC_ETH_MAC_SetAddressHashFilter,"ax",%progbits
 739              	 .align 2
 740              	 .global XMC_ETH_MAC_SetAddressHashFilter
 741              	 .thumb
 742              	 .thumb_func
 744              	XMC_ETH_MAC_SetAddressHashFilter:
 745              	.LFB222:
 278:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 279:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set address hash filter */
 280:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetAddressHashFilter(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash)
 281:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 746              	 .loc 3 281 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750              	 
 751 0000 B0B4     	 push {r4,r5,r7}
 752              	.LCFI53:
 753              	 .cfi_def_cfa_offset 12
 754              	 .cfi_offset 4,-12
 755              	 .cfi_offset 5,-8
 756              	 .cfi_offset 7,-4
 757 0002 85B0     	 sub sp,sp,#20
 758              	.LCFI54:
 759              	 .cfi_def_cfa_offset 32
 760 0004 00AF     	 add r7,sp,#0
 761              	.LCFI55:
 762              	 .cfi_def_cfa_register 7
 763 0006 F860     	 str r0,[r7,#12]
 764 0008 C7E90023 	 strd r2,[r7]
 282:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_HIGH = (uint32_t)(hash >> 32);
 765              	 .loc 3 282 0
 766 000c FB68     	 ldr r3,[r7,#12]
 767 000e 1968     	 ldr r1,[r3]
 768 0010 D7E90023 	 ldrd r2,[r7]
 769 0014 1C00     	 movs r4,r3
 770 0016 0025     	 movs r5,#0
 771 0018 2346     	 mov r3,r4
 772 001a 8B60     	 str r3,[r1,#8]
 283:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->HASH_TABLE_LOW = (uint32_t)hash;
 773              	 .loc 3 283 0
 774 001c FB68     	 ldr r3,[r7,#12]
 775 001e 1B68     	 ldr r3,[r3]
 776 0020 3A68     	 ldr r2,[r7]
 777 0022 DA60     	 str r2,[r3,#12]
 284:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 778              	 .loc 3 284 0
 779 0024 1437     	 adds r7,r7,#20
 780              	.LCFI56:
 781              	 .cfi_def_cfa_offset 12
 782 0026 BD46     	 mov sp,r7
 783              	.LCFI57:
 784              	 .cfi_def_cfa_register 13
 785              	 
 786 0028 B0BC     	 pop {r4,r5,r7}
 787              	.LCFI58:
 788              	 .cfi_restore 7
 789              	 .cfi_restore 5
 790              	 .cfi_restore 4
 791              	 .cfi_def_cfa_offset 0
 792 002a 7047     	 bx lr
 793              	 .cfi_endproc
 794              	.LFE222:
 796              	 .section .text.XMC_ETH_MAC_SendFrame,"ax",%progbits
 797              	 .align 2
 798              	 .global XMC_ETH_MAC_SendFrame
 799              	 .thumb
 800              	 .thumb_func
 802              	XMC_ETH_MAC_SendFrame:
 803              	.LFB223:
 285:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 286:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Send frame */
 287:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame(XMC_ETH_MAC_t *const eth_mac, const uint8_t *frame, uint
 288:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 804              	 .loc 3 288 0
 805              	 .cfi_startproc
 806              	 
 807              	 
 808 0000 80B5     	 push {r7,lr}
 809              	.LCFI59:
 810              	 .cfi_def_cfa_offset 8
 811              	 .cfi_offset 7,-8
 812              	 .cfi_offset 14,-4
 813 0002 88B0     	 sub sp,sp,#32
 814              	.LCFI60:
 815              	 .cfi_def_cfa_offset 40
 816 0004 00AF     	 add r7,sp,#0
 817              	.LCFI61:
 818              	 .cfi_def_cfa_register 7
 819 0006 F860     	 str r0,[r7,#12]
 820 0008 B960     	 str r1,[r7,#8]
 821 000a 7A60     	 str r2,[r7,#4]
 822 000c 3B60     	 str r3,[r7]
 289:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 290:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint8_t *dst;
 291:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t ctrl;
 292:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 293:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac != NULL);
 294:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", eth_mac->regs == ETH0);
 295:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SendFrame:", (frame != NULL) && (len > 0));
 296:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 297:../Libraries/XMCLib/src/xmc_eth_mac.c ****   dst = eth_mac->frame_end;
 823              	 .loc 3 297 0
 824 000e FB68     	 ldr r3,[r7,#12]
 825 0010 1B6A     	 ldr r3,[r3,#32]
 826 0012 BB61     	 str r3,[r7,#24]
 298:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 299:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_desc[eth_mac->tx_index].status & ETH_MAC_DMA_TDES0_OWN)
 827              	 .loc 3 299 0
 828 0014 FB68     	 ldr r3,[r7,#12]
 829 0016 5A69     	 ldr r2,[r3,#20]
 830 0018 FB68     	 ldr r3,[r7,#12]
 831 001a 93F82630 	 ldrb r3,[r3,#38]
 832 001e 5B01     	 lsls r3,r3,#5
 833 0020 1344     	 add r3,r3,r2
 834 0022 1B68     	 ldr r3,[r3]
 835 0024 002B     	 cmp r3,#0
 836 0026 1BDA     	 bge .L29
 300:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 301:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Transmitter is busy, wait */
 302:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 837              	 .loc 3 302 0
 838 0028 0123     	 movs r3,#1
 839 002a FB77     	 strb r3,[r7,#31]
 303:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (eth_mac->regs->STATUS & ETH_STATUS_TU_Msk)
 840              	 .loc 3 303 0
 841 002c FB68     	 ldr r3,[r7,#12]
 842 002e 1B68     	 ldr r3,[r3]
 843 0030 03F58053 	 add r3,r3,#4096
 844 0034 1433     	 adds r3,r3,#20
 845 0036 1B68     	 ldr r3,[r3]
 846 0038 03F00403 	 and r3,r3,#4
 847 003c 002B     	 cmp r3,#0
 848 003e 00F09E80 	 beq .L31
 304:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 305:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Receive buffer unavailable, resume DMA */
 306:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TU_Msk;
 849              	 .loc 3 306 0
 850 0042 FB68     	 ldr r3,[r7,#12]
 851 0044 1B68     	 ldr r3,[r3]
 852 0046 03F58053 	 add r3,r3,#4096
 853 004a 1433     	 adds r3,r3,#20
 854 004c 0422     	 movs r2,#4
 855 004e 1A60     	 str r2,[r3]
 307:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 856              	 .loc 3 307 0
 857 0050 FB68     	 ldr r3,[r7,#12]
 858 0052 1B68     	 ldr r3,[r3]
 859 0054 03F58053 	 add r3,r3,#4096
 860 0058 0433     	 adds r3,r3,#4
 861 005a 0022     	 movs r2,#0
 862 005c 1A60     	 str r2,[r3]
 863 005e 8EE0     	 b .L31
 864              	.L29:
 308:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 309:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 310:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 311:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 312:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 313:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (dst == NULL)
 865              	 .loc 3 313 0
 866 0060 BB69     	 ldr r3,[r7,#24]
 867 0062 002B     	 cmp r3,#0
 868 0064 12D1     	 bne .L32
 314:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 315:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Start of a new transmit frame */
 316:../Libraries/XMCLib/src/xmc_eth_mac.c ****       dst = (uint8_t *)eth_mac->tx_desc[eth_mac->tx_index].buffer1;
 869              	 .loc 3 316 0
 870 0066 FB68     	 ldr r3,[r7,#12]
 871 0068 5A69     	 ldr r2,[r3,#20]
 872 006a FB68     	 ldr r3,[r7,#12]
 873 006c 93F82630 	 ldrb r3,[r3,#38]
 874 0070 5B01     	 lsls r3,r3,#5
 875 0072 1344     	 add r3,r3,r2
 876 0074 9B68     	 ldr r3,[r3,#8]
 877 0076 BB61     	 str r3,[r7,#24]
 317:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length = len;
 878              	 .loc 3 317 0
 879 0078 FB68     	 ldr r3,[r7,#12]
 880 007a 5A69     	 ldr r2,[r3,#20]
 881 007c FB68     	 ldr r3,[r7,#12]
 882 007e 93F82630 	 ldrb r3,[r3,#38]
 883 0082 5B01     	 lsls r3,r3,#5
 884 0084 1344     	 add r3,r3,r2
 885 0086 7A68     	 ldr r2,[r7,#4]
 886 0088 5A60     	 str r2,[r3,#4]
 887 008a 11E0     	 b .L33
 888              	.L32:
 318:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 319:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 320:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 321:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Sending data fragments in progress */
 322:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].length += len;
 889              	 .loc 3 322 0
 890 008c FB68     	 ldr r3,[r7,#12]
 891 008e 5A69     	 ldr r2,[r3,#20]
 892 0090 FB68     	 ldr r3,[r7,#12]
 893 0092 93F82630 	 ldrb r3,[r3,#38]
 894 0096 5B01     	 lsls r3,r3,#5
 895 0098 1344     	 add r3,r3,r2
 896 009a FA68     	 ldr r2,[r7,#12]
 897 009c 5169     	 ldr r1,[r2,#20]
 898 009e FA68     	 ldr r2,[r7,#12]
 899 00a0 92F82620 	 ldrb r2,[r2,#38]
 900 00a4 5201     	 lsls r2,r2,#5
 901 00a6 0A44     	 add r2,r2,r1
 902 00a8 5168     	 ldr r1,[r2,#4]
 903 00aa 7A68     	 ldr r2,[r7,#4]
 904 00ac 0A44     	 add r2,r2,r1
 905 00ae 5A60     	 str r2,[r3,#4]
 906              	.L33:
 323:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 324:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 325:../Libraries/XMCLib/src/xmc_eth_mac.c ****     memcpy(dst, frame, len);
 907              	 .loc 3 325 0
 908 00b0 B869     	 ldr r0,[r7,#24]
 909 00b2 B968     	 ldr r1,[r7,#8]
 910 00b4 7A68     	 ldr r2,[r7,#4]
 911 00b6 FFF7FEFF 	 bl memcpy
 326:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 327:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_FRAGMENT)
 912              	 .loc 3 327 0
 913 00ba 3B68     	 ldr r3,[r7]
 914 00bc 03F00103 	 and r3,r3,#1
 915 00c0 002B     	 cmp r3,#0
 916 00c2 03D0     	 beq .L34
 328:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 329:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* More data to come, remember current write position */
 330:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = dst;
 917              	 .loc 3 330 0
 918 00c4 FB68     	 ldr r3,[r7,#12]
 919 00c6 BA69     	 ldr r2,[r7,#24]
 920 00c8 1A62     	 str r2,[r3,#32]
 921 00ca 56E0     	 b .L35
 922              	.L34:
 331:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 332:../Libraries/XMCLib/src/xmc_eth_mac.c ****     else
 333:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 334:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Frame is now ready, send it to DMA */
 335:../Libraries/XMCLib/src/xmc_eth_mac.c ****       ctrl = eth_mac->tx_desc[eth_mac->tx_index].status | ETH_MAC_DMA_TDES0_CIC;
 923              	 .loc 3 335 0
 924 00cc FB68     	 ldr r3,[r7,#12]
 925 00ce 5A69     	 ldr r2,[r3,#20]
 926 00d0 FB68     	 ldr r3,[r7,#12]
 927 00d2 93F82630 	 ldrb r3,[r3,#38]
 928 00d6 5B01     	 lsls r3,r3,#5
 929 00d8 1344     	 add r3,r3,r2
 930 00da 1B68     	 ldr r3,[r3]
 931 00dc 43F44003 	 orr r3,r3,#12582912
 932 00e0 7B61     	 str r3,[r7,#20]
 336:../Libraries/XMCLib/src/xmc_eth_mac.c ****       ctrl &= ~(ETH_MAC_DMA_TDES0_IC | ETH_MAC_DMA_TDES0_TTSE);
 933              	 .loc 3 336 0
 934 00e2 7B69     	 ldr r3,[r7,#20]
 935 00e4 23F08443 	 bic r3,r3,#1107296256
 936 00e8 7B61     	 str r3,[r7,#20]
 337:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 338:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_EVENT)
 937              	 .loc 3 338 0
 938 00ea 3B68     	 ldr r3,[r7]
 939 00ec 03F00203 	 and r3,r3,#2
 940 00f0 002B     	 cmp r3,#0
 941 00f2 03D0     	 beq .L36
 339:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 340:../Libraries/XMCLib/src/xmc_eth_mac.c ****     	ctrl |= ETH_MAC_DMA_TDES0_IC;
 942              	 .loc 3 340 0
 943 00f4 7B69     	 ldr r3,[r7,#20]
 944 00f6 43F08043 	 orr r3,r3,#1073741824
 945 00fa 7B61     	 str r3,[r7,#20]
 946              	.L36:
 341:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 342:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 343:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (flags & (uint32_t)XMC_ETH_MAC_TX_FRAME_TIMESTAMP)
 947              	 .loc 3 343 0
 948 00fc 3B68     	 ldr r3,[r7]
 949 00fe 03F00403 	 and r3,r3,#4
 950 0102 002B     	 cmp r3,#0
 951 0104 03D0     	 beq .L37
 344:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 345:../Libraries/XMCLib/src/xmc_eth_mac.c ****     	ctrl |= ETH_MAC_DMA_TDES0_TTSE;
 952              	 .loc 3 345 0
 953 0106 7B69     	 ldr r3,[r7,#20]
 954 0108 43F00073 	 orr r3,r3,#33554432
 955 010c 7B61     	 str r3,[r7,#20]
 956              	.L37:
 346:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 347:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_ts_index = eth_mac->tx_index;
 957              	 .loc 3 347 0
 958 010e FB68     	 ldr r3,[r7,#12]
 959 0110 93F82620 	 ldrb r2,[r3,#38]
 960 0114 FB68     	 ldr r3,[r7,#12]
 961 0116 83F82820 	 strb r2,[r3,#40]
 348:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 349:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_desc[eth_mac->tx_index].status = ctrl | ETH_MAC_DMA_TDES0_OWN;
 962              	 .loc 3 349 0
 963 011a FB68     	 ldr r3,[r7,#12]
 964 011c 5A69     	 ldr r2,[r3,#20]
 965 011e FB68     	 ldr r3,[r7,#12]
 966 0120 93F82630 	 ldrb r3,[r3,#38]
 967 0124 5B01     	 lsls r3,r3,#5
 968 0126 1344     	 add r3,r3,r2
 969 0128 7A69     	 ldr r2,[r7,#20]
 970 012a 42F00042 	 orr r2,r2,#-2147483648
 971 012e 1A60     	 str r2,[r3]
 350:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 351:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->tx_index++;
 972              	 .loc 3 351 0
 973 0130 FB68     	 ldr r3,[r7,#12]
 974 0132 93F82630 	 ldrb r3,[r3,#38]
 975 0136 0133     	 adds r3,r3,#1
 976 0138 DAB2     	 uxtb r2,r3
 977 013a FB68     	 ldr r3,[r7,#12]
 978 013c 83F82620 	 strb r2,[r3,#38]
 352:../Libraries/XMCLib/src/xmc_eth_mac.c ****       if (eth_mac->tx_index == eth_mac->num_tx_buf)
 979              	 .loc 3 352 0
 980 0140 FB68     	 ldr r3,[r7,#12]
 981 0142 93F82620 	 ldrb r2,[r3,#38]
 982 0146 FB68     	 ldr r3,[r7,#12]
 983 0148 93F82530 	 ldrb r3,[r3,#37]
 984 014c 9A42     	 cmp r2,r3
 985 014e 03D1     	 bne .L38
 353:../Libraries/XMCLib/src/xmc_eth_mac.c ****       {
 354:../Libraries/XMCLib/src/xmc_eth_mac.c ****     	eth_mac->tx_index = 0U;
 986              	 .loc 3 354 0
 987 0150 FB68     	 ldr r3,[r7,#12]
 988 0152 0022     	 movs r2,#0
 989 0154 83F82620 	 strb r2,[r3,#38]
 990              	.L38:
 355:../Libraries/XMCLib/src/xmc_eth_mac.c ****       }
 356:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->frame_end = NULL;
 991              	 .loc 3 356 0
 992 0158 FB68     	 ldr r3,[r7,#12]
 993 015a 0022     	 movs r2,#0
 994 015c 1A62     	 str r2,[r3,#32]
 357:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 358:../Libraries/XMCLib/src/xmc_eth_mac.c ****       /* Start frame transmission */
 359:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TPS_Msk;
 995              	 .loc 3 359 0
 996 015e FB68     	 ldr r3,[r7,#12]
 997 0160 1B68     	 ldr r3,[r3]
 998 0162 03F58053 	 add r3,r3,#4096
 999 0166 1433     	 adds r3,r3,#20
 1000 0168 0222     	 movs r2,#2
 1001 016a 1A60     	 str r2,[r3]
 360:../Libraries/XMCLib/src/xmc_eth_mac.c ****       eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 1002              	 .loc 3 360 0
 1003 016c FB68     	 ldr r3,[r7,#12]
 1004 016e 1B68     	 ldr r3,[r3]
 1005 0170 03F58053 	 add r3,r3,#4096
 1006 0174 0433     	 adds r3,r3,#4
 1007 0176 0022     	 movs r2,#0
 1008 0178 1A60     	 str r2,[r3]
 1009              	.L35:
 361:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 362:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 1010              	 .loc 3 362 0
 1011 017a 0023     	 movs r3,#0
 1012 017c FB77     	 strb r3,[r7,#31]
 1013              	.L31:
 363:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 364:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 365:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 1014              	 .loc 3 365 0
 1015 017e FB7F     	 ldrb r3,[r7,#31]
 366:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1016              	 .loc 3 366 0
 1017 0180 1846     	 mov r0,r3
 1018 0182 2037     	 adds r7,r7,#32
 1019              	.LCFI62:
 1020              	 .cfi_def_cfa_offset 8
 1021 0184 BD46     	 mov sp,r7
 1022              	.LCFI63:
 1023              	 .cfi_def_cfa_register 13
 1024              	 
 1025 0186 80BD     	 pop {r7,pc}
 1026              	 .cfi_endproc
 1027              	.LFE223:
 1029              	 .section .text.XMC_ETH_MAC_ReadFrame,"ax",%progbits
 1030              	 .align 2
 1031              	 .global XMC_ETH_MAC_ReadFrame
 1032              	 .thumb
 1033              	 .thumb_func
 1035              	XMC_ETH_MAC_ReadFrame:
 1036              	.LFB224:
 367:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 368:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Read frame */
 369:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_ReadFrame(XMC_ETH_MAC_t *const eth_mac, uint8_t *frame, uint32_t len)
 370:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1037              	 .loc 3 370 0
 1038              	 .cfi_startproc
 1039              	 
 1040              	 
 1041 0000 80B5     	 push {r7,lr}
 1042              	.LCFI64:
 1043              	 .cfi_def_cfa_offset 8
 1044              	 .cfi_offset 7,-8
 1045              	 .cfi_offset 14,-4
 1046 0002 86B0     	 sub sp,sp,#24
 1047              	.LCFI65:
 1048              	 .cfi_def_cfa_offset 32
 1049 0004 00AF     	 add r7,sp,#0
 1050              	.LCFI66:
 1051              	 .cfi_def_cfa_register 7
 1052 0006 F860     	 str r0,[r7,#12]
 1053 0008 B960     	 str r1,[r7,#8]
 1054 000a 7A60     	 str r2,[r7,#4]
 371:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint8_t const *src;
 372:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 373:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac != NULL);
 374:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", eth_mac->regs == ETH0);
 375:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ReadFrame:", (frame != NULL) && (len > 0));
 376:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 377:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Fast-copy data to packet buffer */
 378:../Libraries/XMCLib/src/xmc_eth_mac.c ****   src = (uint8_t const *)eth_mac->rx_desc[eth_mac->rx_index].buffer1;
 1055              	 .loc 3 378 0
 1056 000c FB68     	 ldr r3,[r7,#12]
 1057 000e 1A69     	 ldr r2,[r3,#16]
 1058 0010 FB68     	 ldr r3,[r7,#12]
 1059 0012 93F82730 	 ldrb r3,[r3,#39]
 1060 0016 5B01     	 lsls r3,r3,#5
 1061 0018 1344     	 add r3,r3,r2
 1062 001a 9B68     	 ldr r3,[r3,#8]
 1063 001c 7B61     	 str r3,[r7,#20]
 379:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 380:../Libraries/XMCLib/src/xmc_eth_mac.c ****   memcpy(frame, src, len);
 1064              	 .loc 3 380 0
 1065 001e B868     	 ldr r0,[r7,#8]
 1066 0020 7969     	 ldr r1,[r7,#20]
 1067 0022 7A68     	 ldr r2,[r7,#4]
 1068 0024 FFF7FEFF 	 bl memcpy
 381:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 382:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Return this block back to DMA */
 383:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status = ETH_MAC_DMA_RDES0_OWN;
 1069              	 .loc 3 383 0
 1070 0028 FB68     	 ldr r3,[r7,#12]
 1071 002a 1A69     	 ldr r2,[r3,#16]
 1072 002c FB68     	 ldr r3,[r7,#12]
 1073 002e 93F82730 	 ldrb r3,[r3,#39]
 1074 0032 5B01     	 lsls r3,r3,#5
 1075 0034 1344     	 add r3,r3,r2
 1076 0036 4FF00042 	 mov r2,#-2147483648
 1077 003a 1A60     	 str r2,[r3]
 384:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 385:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 1078              	 .loc 3 385 0
 1079 003c FB68     	 ldr r3,[r7,#12]
 1080 003e 93F82730 	 ldrb r3,[r3,#39]
 1081 0042 0133     	 adds r3,r3,#1
 1082 0044 DAB2     	 uxtb r2,r3
 1083 0046 FB68     	 ldr r3,[r7,#12]
 1084 0048 83F82720 	 strb r2,[r3,#39]
 386:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 1085              	 .loc 3 386 0
 1086 004c FB68     	 ldr r3,[r7,#12]
 1087 004e 93F82720 	 ldrb r2,[r3,#39]
 1088 0052 FB68     	 ldr r3,[r7,#12]
 1089 0054 93F82430 	 ldrb r3,[r3,#36]
 1090 0058 9A42     	 cmp r2,r3
 1091 005a 03D1     	 bne .L41
 387:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 388:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 1092              	 .loc 3 388 0
 1093 005c FB68     	 ldr r3,[r7,#12]
 1094 005e 0022     	 movs r2,#0
 1095 0060 83F82720 	 strb r2,[r3,#39]
 1096              	.L41:
 389:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 390:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 391:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->regs->STATUS & ETH_STATUS_RU_Msk)
 1097              	 .loc 3 391 0
 1098 0064 FB68     	 ldr r3,[r7,#12]
 1099 0066 1B68     	 ldr r3,[r3]
 1100 0068 03F58053 	 add r3,r3,#4096
 1101 006c 1433     	 adds r3,r3,#20
 1102 006e 1B68     	 ldr r3,[r3]
 1103 0070 03F08003 	 and r3,r3,#128
 1104 0074 002B     	 cmp r3,#0
 1105 0076 0DD0     	 beq .L42
 392:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 393:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Receive buffer unavailable, resume DMA */
 394:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_RU_Msk;
 1106              	 .loc 3 394 0
 1107 0078 FB68     	 ldr r3,[r7,#12]
 1108 007a 1B68     	 ldr r3,[r3]
 1109 007c 03F58053 	 add r3,r3,#4096
 1110 0080 1433     	 adds r3,r3,#20
 1111 0082 8022     	 movs r2,#128
 1112 0084 1A60     	 str r2,[r3]
 395:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->RECEIVE_POLL_DEMAND = 0U;
 1113              	 .loc 3 395 0
 1114 0086 FB68     	 ldr r3,[r7,#12]
 1115 0088 1B68     	 ldr r3,[r3]
 1116 008a 03F58053 	 add r3,r3,#4096
 1117 008e 0833     	 adds r3,r3,#8
 1118 0090 0022     	 movs r2,#0
 1119 0092 1A60     	 str r2,[r3]
 1120              	.L42:
 396:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 397:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 398:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (len);
 1121              	 .loc 3 398 0
 1122 0094 7B68     	 ldr r3,[r7,#4]
 399:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1123              	 .loc 3 399 0
 1124 0096 1846     	 mov r0,r3
 1125 0098 1837     	 adds r7,r7,#24
 1126              	.LCFI67:
 1127              	 .cfi_def_cfa_offset 8
 1128 009a BD46     	 mov sp,r7
 1129              	.LCFI68:
 1130              	 .cfi_def_cfa_register 13
 1131              	 
 1132 009c 80BD     	 pop {r7,pc}
 1133              	 .cfi_endproc
 1134              	.LFE224:
 1136 009e 00BF     	 .section .text.XMC_ETH_MAC_GetRxFrameSize,"ax",%progbits
 1137              	 .align 2
 1138              	 .global XMC_ETH_MAC_GetRxFrameSize
 1139              	 .thumb
 1140              	 .thumb_func
 1142              	XMC_ETH_MAC_GetRxFrameSize:
 1143              	.LFB225:
 400:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 401:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get RX frame size */
 402:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetRxFrameSize(XMC_ETH_MAC_t *const eth_mac)
 403:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1144              	 .loc 3 403 0
 1145              	 .cfi_startproc
 1146              	 
 1147              	 
 1148              	 
 1149 0000 80B4     	 push {r7}
 1150              	.LCFI69:
 1151              	 .cfi_def_cfa_offset 4
 1152              	 .cfi_offset 7,-4
 1153 0002 85B0     	 sub sp,sp,#20
 1154              	.LCFI70:
 1155              	 .cfi_def_cfa_offset 24
 1156 0004 00AF     	 add r7,sp,#0
 1157              	.LCFI71:
 1158              	 .cfi_def_cfa_register 7
 1159 0006 7860     	 str r0,[r7,#4]
 404:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t status;
 405:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t len = 0U;
 1160              	 .loc 3 405 0
 1161 0008 0023     	 movs r3,#0
 1162 000a FB60     	 str r3,[r7,#12]
 406:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 407:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = eth_mac->rx_desc[eth_mac->rx_index].status;
 1163              	 .loc 3 407 0
 1164 000c 7B68     	 ldr r3,[r7,#4]
 1165 000e 1A69     	 ldr r2,[r3,#16]
 1166 0010 7B68     	 ldr r3,[r7,#4]
 1167 0012 93F82730 	 ldrb r3,[r3,#39]
 1168 0016 5B01     	 lsls r3,r3,#5
 1169 0018 1344     	 add r3,r3,r2
 1170 001a 1B68     	 ldr r3,[r3]
 1171 001c BB60     	 str r3,[r7,#8]
 408:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 409:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (status & ETH_MAC_DMA_RDES0_OWN)
 1172              	 .loc 3 409 0
 1173 001e BB68     	 ldr r3,[r7,#8]
 1174 0020 002B     	 cmp r3,#0
 1175 0022 02DA     	 bge .L45
 410:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 411:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Owned by DMA */
 412:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = 0U;
 1176              	 .loc 3 412 0
 1177 0024 0023     	 movs r3,#0
 1178 0026 FB60     	 str r3,[r7,#12]
 1179 0028 18E0     	 b .L46
 1180              	.L45:
 413:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 414:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (((status & ETH_MAC_DMA_RDES0_ES) != 0U) ||
 1181              	 .loc 3 414 0
 1182 002a BB68     	 ldr r3,[r7,#8]
 1183 002c 03F40043 	 and r3,r3,#32768
 1184 0030 002B     	 cmp r3,#0
 1185 0032 09D1     	 bne .L47
 415:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1186              	 .loc 3 415 0 discriminator 1
 1187 0034 BB68     	 ldr r3,[r7,#8]
 1188 0036 03F40073 	 and r3,r3,#512
 414:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1189              	 .loc 3 414 0 discriminator 1
 1190 003a 002B     	 cmp r3,#0
 1191 003c 04D0     	 beq .L47
 416:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_LS) == 0U)) 
 1192              	 .loc 3 416 0
 1193 003e BB68     	 ldr r3,[r7,#8]
 1194 0040 03F48073 	 and r3,r3,#256
 415:../Libraries/XMCLib/src/xmc_eth_mac.c ****            ((status & ETH_MAC_DMA_RDES0_FS) == 0U) ||
 1195              	 .loc 3 415 0
 1196 0044 002B     	 cmp r3,#0
 1197 0046 03D1     	 bne .L48
 1198              	.L47:
 417:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 418:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Error, this block is invalid */
 419:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = 0xFFFFFFFFU;
 1199              	 .loc 3 419 0
 1200 0048 4FF0FF33 	 mov r3,#-1
 1201 004c FB60     	 str r3,[r7,#12]
 1202 004e 05E0     	 b .L46
 1203              	.L48:
 420:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 421:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else 
 422:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 423:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Subtract CRC */
 424:../Libraries/XMCLib/src/xmc_eth_mac.c ****     len = ((status & ETH_MAC_DMA_RDES0_FL) >> 16U) - 4U;
 1204              	 .loc 3 424 0
 1205 0050 BA68     	 ldr r2,[r7,#8]
 1206 0052 064B     	 ldr r3,.L50
 1207 0054 1340     	 ands r3,r3,r2
 1208 0056 1B0C     	 lsrs r3,r3,#16
 1209 0058 043B     	 subs r3,r3,#4
 1210 005a FB60     	 str r3,[r7,#12]
 1211              	.L46:
 425:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 426:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 427:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return len;
 1212              	 .loc 3 427 0
 1213 005c FB68     	 ldr r3,[r7,#12]
 428:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1214              	 .loc 3 428 0
 1215 005e 1846     	 mov r0,r3
 1216 0060 1437     	 adds r7,r7,#20
 1217              	.LCFI72:
 1218              	 .cfi_def_cfa_offset 4
 1219 0062 BD46     	 mov sp,r7
 1220              	.LCFI73:
 1221              	 .cfi_def_cfa_register 13
 1222              	 
 1223 0064 5DF8047B 	 ldr r7,[sp],#4
 1224              	.LCFI74:
 1225              	 .cfi_restore 7
 1226              	 .cfi_def_cfa_offset 0
 1227 0068 7047     	 bx lr
 1228              	.L51:
 1229 006a 00BF     	 .align 2
 1230              	.L50:
 1231 006c 0000FF3F 	 .word 1073676288
 1232              	 .cfi_endproc
 1233              	.LFE225:
 1235              	 .section .text.XMC_ETH_MAC_SetManagmentClockDivider,"ax",%progbits
 1236              	 .align 2
 1237              	 .global XMC_ETH_MAC_SetManagmentClockDivider
 1238              	 .thumb
 1239              	 .thumb_func
 1241              	XMC_ETH_MAC_SetManagmentClockDivider:
 1242              	.LFB226:
 429:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 430:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set management clock divider */
 431:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac)
 432:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1243              	 .loc 3 432 0
 1244              	 .cfi_startproc
 1245              	 
 1246              	 
 1247 0000 80B5     	 push {r7,lr}
 1248              	.LCFI75:
 1249              	 .cfi_def_cfa_offset 8
 1250              	 .cfi_offset 7,-8
 1251              	 .cfi_offset 14,-4
 1252 0002 86B0     	 sub sp,sp,#24
 1253              	.LCFI76:
 1254              	 .cfi_def_cfa_offset 32
 1255 0004 00AF     	 add r7,sp,#0
 1256              	.LCFI77:
 1257              	 .cfi_def_cfa_register 7
 1258 0006 7860     	 str r0,[r7,#4]
 433:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t eth_mac_clk;
 434:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 435:../Libraries/XMCLib/src/xmc_eth_mac.c ****   __IO uint32_t *reg;
 436:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 437:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac_clk = XMC_SCU_CLOCK_GetEthernetClockFrequency();
 1259              	 .loc 3 437 0
 1260 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetEthernetClockFrequency
 1261 000c 3861     	 str r0,[r7,#16]
 438:../Libraries/XMCLib/src/xmc_eth_mac.c ****   status = XMC_ETH_MAC_STATUS_OK;
 1262              	 .loc 3 438 0
 1263 000e 0023     	 movs r3,#0
 1264 0010 FB75     	 strb r3,[r7,#23]
 439:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 440:../Libraries/XMCLib/src/xmc_eth_mac.c ****   reg = &(eth_mac->regs->GMII_ADDRESS);
 1265              	 .loc 3 440 0
 1266 0012 7B68     	 ldr r3,[r7,#4]
 1267 0014 1B68     	 ldr r3,[r3]
 1268 0016 1033     	 adds r3,r3,#16
 1269 0018 FB60     	 str r3,[r7,#12]
 441:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_35MHZ)
 1270              	 .loc 3 441 0
 1271 001a 3B69     	 ldr r3,[r7,#16]
 1272 001c 1A4A     	 ldr r2,.L61
 1273 001e 9342     	 cmp r3,r2
 1274 0020 03D8     	 bhi .L53
 442:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 443:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_16;
 1275              	 .loc 3 443 0
 1276 0022 FB68     	 ldr r3,[r7,#12]
 1277 0024 0822     	 movs r2,#8
 1278 0026 1A60     	 str r2,[r3]
 1279 0028 29E0     	 b .L54
 1280              	.L53:
 444:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 445:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_60MHZ)
 1281              	 .loc 3 445 0
 1282 002a 3B69     	 ldr r3,[r7,#16]
 1283 002c 174A     	 ldr r2,.L61+4
 1284 002e 9342     	 cmp r3,r2
 1285 0030 03D8     	 bhi .L55
 446:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 447:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_26;
 1286              	 .loc 3 447 0
 1287 0032 FB68     	 ldr r3,[r7,#12]
 1288 0034 0C22     	 movs r2,#12
 1289 0036 1A60     	 str r2,[r3]
 1290 0038 21E0     	 b .L54
 1291              	.L55:
 448:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 449:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_100MHZ)
 1292              	 .loc 3 449 0
 1293 003a 3B69     	 ldr r3,[r7,#16]
 1294 003c 144A     	 ldr r2,.L61+8
 1295 003e 9342     	 cmp r3,r2
 1296 0040 03D8     	 bhi .L56
 450:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 451:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_42;
 1297              	 .loc 3 451 0
 1298 0042 FB68     	 ldr r3,[r7,#12]
 1299 0044 0022     	 movs r2,#0
 1300 0046 1A60     	 str r2,[r3]
 1301 0048 19E0     	 b .L54
 1302              	.L56:
 452:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 453:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_150MHZ)
 1303              	 .loc 3 453 0
 1304 004a 3B69     	 ldr r3,[r7,#16]
 1305 004c 114A     	 ldr r2,.L61+12
 1306 004e 9342     	 cmp r3,r2
 1307 0050 03D8     	 bhi .L57
 454:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 455:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_62;
 1308              	 .loc 3 455 0
 1309 0052 FB68     	 ldr r3,[r7,#12]
 1310 0054 0422     	 movs r2,#4
 1311 0056 1A60     	 str r2,[r3]
 1312 0058 11E0     	 b .L54
 1313              	.L57:
 456:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 457:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_200MHZ)
 1314              	 .loc 3 457 0
 1315 005a 3B69     	 ldr r3,[r7,#16]
 1316 005c 0E4A     	 ldr r2,.L61+16
 1317 005e 9342     	 cmp r3,r2
 1318 0060 03D8     	 bhi .L58
 458:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 459:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_102;
 1319              	 .loc 3 459 0
 1320 0062 FB68     	 ldr r3,[r7,#12]
 1321 0064 1022     	 movs r2,#16
 1322 0066 1A60     	 str r2,[r3]
 1323 0068 09E0     	 b .L54
 1324              	.L58:
 460:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 461:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else if (eth_mac_clk <= XMC_ETH_MAC_CLK_SPEED_250MHZ)
 1325              	 .loc 3 461 0
 1326 006a 3B69     	 ldr r3,[r7,#16]
 1327 006c 0B4A     	 ldr r2,.L61+20
 1328 006e 9342     	 cmp r3,r2
 1329 0070 03D8     	 bhi .L59
 462:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 463:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	*reg = XMC_ETH_MAC_MDC_DIVIDER_124;
 1330              	 .loc 3 463 0
 1331 0072 FB68     	 ldr r3,[r7,#12]
 1332 0074 1422     	 movs r2,#20
 1333 0076 1A60     	 str r2,[r3]
 1334 0078 01E0     	 b .L54
 1335              	.L59:
 464:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 465:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 466:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 467:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_ERROR;
 1336              	 .loc 3 467 0
 1337 007a 0223     	 movs r3,#2
 1338 007c FB75     	 strb r3,[r7,#23]
 1339              	.L54:
 468:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 469:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 470:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 1340              	 .loc 3 470 0
 1341 007e FB7D     	 ldrb r3,[r7,#23]
 471:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1342              	 .loc 3 471 0
 1343 0080 1846     	 mov r0,r3
 1344 0082 1837     	 adds r7,r7,#24
 1345              	.LCFI78:
 1346              	 .cfi_def_cfa_offset 8
 1347 0084 BD46     	 mov sp,r7
 1348              	.LCFI79:
 1349              	 .cfi_def_cfa_register 13
 1350              	 
 1351 0086 80BD     	 pop {r7,pc}
 1352              	.L62:
 1353              	 .align 2
 1354              	.L61:
 1355 0088 C00E1602 	 .word 35000000
 1356 008c 00879303 	 .word 60000000
 1357 0090 00E1F505 	 .word 100000000
 1358 0094 80D1F008 	 .word 150000000
 1359 0098 00C2EB0B 	 .word 200000000
 1360 009c 80B2E60E 	 .word 250000000
 1361              	 .cfi_endproc
 1362              	.LFE226:
 1364              	 .section .text.XMC_ETH_MAC_Enable,"ax",%progbits
 1365              	 .align 2
 1366              	 .global XMC_ETH_MAC_Enable
 1367              	 .thumb
 1368              	 .thumb_func
 1370              	XMC_ETH_MAC_Enable:
 1371              	.LFB227:
 472:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 473:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC enable */
 474:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac)
 475:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1372              	 .loc 3 475 0
 1373              	 .cfi_startproc
 1374              	 
 1375              	 
 1376 0000 80B5     	 push {r7,lr}
 1377              	.LCFI80:
 1378              	 .cfi_def_cfa_offset 8
 1379              	 .cfi_offset 7,-8
 1380              	 .cfi_offset 14,-4
 1381 0002 82B0     	 sub sp,sp,#8
 1382              	.LCFI81:
 1383              	 .cfi_def_cfa_offset 16
 1384 0004 00AF     	 add r7,sp,#0
 1385              	.LCFI82:
 1386              	 .cfi_def_cfa_register 7
 1387 0006 7860     	 str r0,[r7,#4]
 476:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_ETH);
 1388              	 .loc 3 476 0
 1389 0008 0420     	 movs r0,#4
 1390 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 477:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 478:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 1391              	 .loc 3 478 0
 1392 000e 0448     	 ldr r0,.L64
 1393 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 479:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 480:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1394              	 .loc 3 480 0
 1395 0014 0248     	 ldr r0,.L64
 1396 0016 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 481:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1397              	 .loc 3 481 0
 1398 001a 0837     	 adds r7,r7,#8
 1399              	.LCFI83:
 1400              	 .cfi_def_cfa_offset 8
 1401 001c BD46     	 mov sp,r7
 1402              	.LCFI84:
 1403              	 .cfi_def_cfa_register 13
 1404              	 
 1405 001e 80BD     	 pop {r7,pc}
 1406              	.L65:
 1407              	 .align 2
 1408              	.L64:
 1409 0020 04000020 	 .word 536870916
 1410              	 .cfi_endproc
 1411              	.LFE227:
 1413              	 .section .text.XMC_ETH_MAC_Disable,"ax",%progbits
 1414              	 .align 2
 1415              	 .global XMC_ETH_MAC_Disable
 1416              	 .thumb
 1417              	 .thumb_func
 1419              	XMC_ETH_MAC_Disable:
 1420              	.LFB228:
 482:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 483:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* ETH MAC disable */
 484:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac)
 485:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1421              	 .loc 3 485 0
 1422              	 .cfi_startproc
 1423              	 
 1424              	 
 1425 0000 80B5     	 push {r7,lr}
 1426              	.LCFI85:
 1427              	 .cfi_def_cfa_offset 8
 1428              	 .cfi_offset 7,-8
 1429              	 .cfi_offset 14,-4
 1430 0002 82B0     	 sub sp,sp,#8
 1431              	.LCFI86:
 1432              	 .cfi_def_cfa_offset 16
 1433 0004 00AF     	 add r7,sp,#0
 1434              	.LCFI87:
 1435              	 .cfi_def_cfa_register 7
 1436 0006 7860     	 str r0,[r7,#4]
 486:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_ETH0);
 1437              	 .loc 3 486 0
 1438 0008 0548     	 ldr r0,.L67
 1439 000a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 487:../Libraries/XMCLib/src/xmc_eth_mac.c **** #if UC_DEVICE != XMC4500
 488:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_ETH0);
 1440              	 .loc 3 488 0
 1441 000e 0448     	 ldr r0,.L67
 1442 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 489:../Libraries/XMCLib/src/xmc_eth_mac.c **** #endif
 490:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_SCU_CLOCK_DisableClock(XMC_SCU_CLOCK_ETH);
 1443              	 .loc 3 490 0
 1444 0014 0420     	 movs r0,#4
 1445 0016 FFF7FEFF 	 bl XMC_SCU_CLOCK_DisableClock
 491:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1446              	 .loc 3 491 0
 1447 001a 0837     	 adds r7,r7,#8
 1448              	.LCFI88:
 1449              	 .cfi_def_cfa_offset 8
 1450 001c BD46     	 mov sp,r7
 1451              	.LCFI89:
 1452              	 .cfi_def_cfa_register 13
 1453              	 
 1454 001e 80BD     	 pop {r7,pc}
 1455              	.L68:
 1456              	 .align 2
 1457              	.L67:
 1458 0020 04000020 	 .word 536870916
 1459              	 .cfi_endproc
 1460              	.LFE228:
 1462              	 .section .text.XMC_ETH_MAC_ReadPhy,"ax",%progbits
 1463              	 .align 2
 1464              	 .global XMC_ETH_MAC_ReadPhy
 1465              	 .thumb
 1466              	 .thumb_func
 1468              	XMC_ETH_MAC_ReadPhy:
 1469              	.LFB229:
 492:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 493:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Read physical layer and obtain status */
 494:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_addr
 495:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1470              	 .loc 3 495 0
 1471              	 .cfi_startproc
 1472              	 
 1473              	 
 1474              	 
 1475 0000 80B4     	 push {r7}
 1476              	.LCFI90:
 1477              	 .cfi_def_cfa_offset 4
 1478              	 .cfi_offset 7,-4
 1479 0002 87B0     	 sub sp,sp,#28
 1480              	.LCFI91:
 1481              	 .cfi_def_cfa_offset 32
 1482 0004 00AF     	 add r7,sp,#0
 1483              	.LCFI92:
 1484              	 .cfi_def_cfa_register 7
 1485 0006 F860     	 str r0,[r7,#12]
 1486 0008 7B60     	 str r3,[r7,#4]
 1487 000a 0B46     	 mov r3,r1
 1488 000c FB72     	 strb r3,[r7,#11]
 1489 000e 1346     	 mov r3,r2
 1490 0010 BB72     	 strb r3,[r7,#10]
 496:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 497:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 498:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_PhyRead: Parameter error", data != NULL);
 499:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 500:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1491              	 .loc 3 500 0
 1492 0012 FB68     	 ldr r3,[r7,#12]
 1493 0014 1B68     	 ldr r3,[r3]
 1494 0016 FA68     	 ldr r2,[r7,#12]
 1495 0018 1268     	 ldr r2,[r2]
 1496 001a 1269     	 ldr r2,[r2,#16]
 1497 001c 02F03C01 	 and r1,r2,#60
 501:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 502:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 1498              	 .loc 3 502 0
 1499 0020 FA7A     	 ldrb r2,[r7,#11]
 1500 0022 D202     	 lsls r2,r2,#11
 501:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1501              	 .loc 3 501 0
 1502 0024 1143     	 orrs r1,r1,r2
 503:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 1503              	 .loc 3 503 0
 1504 0026 BA7A     	 ldrb r2,[r7,#10]
 1505 0028 9201     	 lsls r2,r2,#6
 500:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1506              	 .loc 3 500 0
 1507 002a 0A43     	 orrs r2,r2,r1
 1508 002c 42F00102 	 orr r2,r2,#1
 1509 0030 1A61     	 str r2,[r3,#16]
 504:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 505:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Poll busy bit during max PHY_TIMEOUT time */
 506:../Libraries/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 1510              	 .loc 3 506 0
 1511 0032 0023     	 movs r3,#0
 1512 0034 7B61     	 str r3,[r7,#20]
 1513              	.L72:
 507:../Libraries/XMCLib/src/xmc_eth_mac.c ****   do
 508:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 509:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1514              	 .loc 3 509 0
 1515 0036 FB68     	 ldr r3,[r7,#12]
 1516 0038 1B68     	 ldr r3,[r3]
 1517 003a 1B69     	 ldr r3,[r3,#16]
 1518 003c 03F00103 	 and r3,r3,#1
 1519 0040 002B     	 cmp r3,#0
 1520 0042 07D1     	 bne .L70
 510:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 511:../Libraries/XMCLib/src/xmc_eth_mac.c ****       *data = (uint16_t)(eth_mac->regs->GMII_DATA & ETH_GMII_DATA_MD_Msk);
 1521              	 .loc 3 511 0
 1522 0044 FB68     	 ldr r3,[r7,#12]
 1523 0046 1B68     	 ldr r3,[r3]
 1524 0048 5B69     	 ldr r3,[r3,#20]
 1525 004a 9AB2     	 uxth r2,r3
 1526 004c 7B68     	 ldr r3,[r7,#4]
 1527 004e 1A80     	 strh r2,[r3]
 512:../Libraries/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1528              	 .loc 3 512 0
 1529 0050 0023     	 movs r3,#0
 1530 0052 08E0     	 b .L71
 1531              	.L70:
 513:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 514:../Libraries/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 1532              	 .loc 3 514 0
 1533 0054 7B69     	 ldr r3,[r7,#20]
 1534 0056 0133     	 adds r3,r3,#1
 1535 0058 7B61     	 str r3,[r7,#20]
 515:../Libraries/XMCLib/src/xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1536              	 .loc 3 515 0
 1537 005a 7B69     	 ldr r3,[r7,#20]
 1538 005c 4FF6FE72 	 movw r2,#65534
 1539 0060 9342     	 cmp r3,r2
 1540 0062 E8D9     	 bls .L72
 516:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 517:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1541              	 .loc 3 517 0
 1542 0064 0223     	 movs r3,#2
 1543              	.L71:
 518:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1544              	 .loc 3 518 0
 1545 0066 1846     	 mov r0,r3
 1546 0068 1C37     	 adds r7,r7,#28
 1547              	.LCFI93:
 1548              	 .cfi_def_cfa_offset 4
 1549 006a BD46     	 mov sp,r7
 1550              	.LCFI94:
 1551              	 .cfi_def_cfa_register 13
 1552              	 
 1553 006c 5DF8047B 	 ldr r7,[sp],#4
 1554              	.LCFI95:
 1555              	 .cfi_restore 7
 1556              	 .cfi_def_cfa_offset 0
 1557 0070 7047     	 bx lr
 1558              	 .cfi_endproc
 1559              	.LFE229:
 1561 0072 00BF     	 .section .text.XMC_ETH_MAC_WritePhy,"ax",%progbits
 1562              	 .align 2
 1563              	 .global XMC_ETH_MAC_WritePhy
 1564              	 .thumb
 1565              	 .thumb_func
 1567              	XMC_ETH_MAC_WritePhy:
 1568              	.LFB230:
 519:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 520:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Write physical layer and return status */
 521:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *eth_mac, uint8_t phy_addr, uint8_t reg_add
 522:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1569              	 .loc 3 522 0
 1570              	 .cfi_startproc
 1571              	 
 1572              	 
 1573              	 
 1574 0000 80B4     	 push {r7}
 1575              	.LCFI96:
 1576              	 .cfi_def_cfa_offset 4
 1577              	 .cfi_offset 7,-4
 1578 0002 85B0     	 sub sp,sp,#20
 1579              	.LCFI97:
 1580              	 .cfi_def_cfa_offset 24
 1581 0004 00AF     	 add r7,sp,#0
 1582              	.LCFI98:
 1583              	 .cfi_def_cfa_register 7
 1584 0006 7860     	 str r0,[r7,#4]
 1585 0008 0846     	 mov r0,r1
 1586 000a 1146     	 mov r1,r2
 1587 000c 1A46     	 mov r2,r3
 1588 000e 0346     	 mov r3,r0
 1589 0010 FB70     	 strb r3,[r7,#3]
 1590 0012 0B46     	 mov r3,r1
 1591 0014 BB70     	 strb r3,[r7,#2]
 1592 0016 1346     	 mov r3,r2
 1593 0018 3B80     	 strh r3,[r7]
 523:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t retries;
 524:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 525:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_DATA  = data;
 1594              	 .loc 3 525 0
 1595 001a 7B68     	 ldr r3,[r7,#4]
 1596 001c 1B68     	 ldr r3,[r3]
 1597 001e 3A88     	 ldrh r2,[r7]
 1598 0020 5A61     	 str r2,[r3,#20]
 526:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->GMII_ADDRESS = (uint32_t)((eth_mac->regs->GMII_ADDRESS & (uint32_t)ETH_GMII_ADDRES
 1599              	 .loc 3 526 0
 1600 0022 7B68     	 ldr r3,[r7,#4]
 1601 0024 1B68     	 ldr r3,[r3]
 1602 0026 7A68     	 ldr r2,[r7,#4]
 1603 0028 1268     	 ldr r2,[r2]
 1604 002a 1269     	 ldr r2,[r2,#16]
 1605 002c 02F03C01 	 and r1,r2,#60
 527:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 528:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MW_Msk |
 529:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 1606              	 .loc 3 529 0
 1607 0030 FA78     	 ldrb r2,[r7,#3]
 1608 0032 D202     	 lsls r2,r2,#11
 528:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)phy_addr << ETH_GMII_ADDRESS_PA_Pos
 1609              	 .loc 3 528 0
 1610 0034 1143     	 orrs r1,r1,r2
 530:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)((uint32_t)reg_addr << ETH_GMII_ADDRESS_MR_Pos
 1611              	 .loc 3 530 0
 1612 0036 BA78     	 ldrb r2,[r7,#2]
 1613 0038 9201     	 lsls r2,r2,#6
 526:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                            (uint32_t)ETH_GMII_ADDRESS_MB_Msk |
 1614              	 .loc 3 526 0
 1615 003a 0A43     	 orrs r2,r2,r1
 1616 003c 42F00302 	 orr r2,r2,#3
 1617 0040 1A61     	 str r2,[r3,#16]
 531:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 532:../Libraries/XMCLib/src/xmc_eth_mac.c ****    /* Poll busy bit during max PHY_TIMEOUT time */
 533:../Libraries/XMCLib/src/xmc_eth_mac.c ****   retries = 0U;
 1618              	 .loc 3 533 0
 1619 0042 0023     	 movs r3,#0
 1620 0044 FB60     	 str r3,[r7,#12]
 1621              	.L76:
 534:../Libraries/XMCLib/src/xmc_eth_mac.c ****   do
 535:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 536:../Libraries/XMCLib/src/xmc_eth_mac.c ****     if ((eth_mac->regs->GMII_ADDRESS & ETH_GMII_ADDRESS_MB_Msk) == 0U)
 1622              	 .loc 3 536 0
 1623 0046 7B68     	 ldr r3,[r7,#4]
 1624 0048 1B68     	 ldr r3,[r3]
 1625 004a 1B69     	 ldr r3,[r3,#16]
 1626 004c 03F00103 	 and r3,r3,#1
 1627 0050 002B     	 cmp r3,#0
 1628 0052 01D1     	 bne .L74
 537:../Libraries/XMCLib/src/xmc_eth_mac.c ****     {
 538:../Libraries/XMCLib/src/xmc_eth_mac.c ****       return XMC_ETH_MAC_STATUS_OK;
 1629              	 .loc 3 538 0
 1630 0054 0023     	 movs r3,#0
 1631 0056 08E0     	 b .L75
 1632              	.L74:
 539:../Libraries/XMCLib/src/xmc_eth_mac.c ****     }
 540:../Libraries/XMCLib/src/xmc_eth_mac.c ****     ++retries;
 1633              	 .loc 3 540 0
 1634 0058 FB68     	 ldr r3,[r7,#12]
 1635 005a 0133     	 adds r3,r3,#1
 1636 005c FB60     	 str r3,[r7,#12]
 541:../Libraries/XMCLib/src/xmc_eth_mac.c ****   } while (retries < XMC_ETH_MAC_PHY_MAX_RETRIES);
 1637              	 .loc 3 541 0
 1638 005e FB68     	 ldr r3,[r7,#12]
 1639 0060 4FF6FE72 	 movw r2,#65534
 1640 0064 9342     	 cmp r3,r2
 1641 0066 EED9     	 bls .L76
 542:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 543:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return XMC_ETH_MAC_STATUS_ERROR;
 1642              	 .loc 3 543 0
 1643 0068 0223     	 movs r3,#2
 1644              	.L75:
 544:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1645              	 .loc 3 544 0
 1646 006a 1846     	 mov r0,r3
 1647 006c 1437     	 adds r7,r7,#20
 1648              	.LCFI99:
 1649              	 .cfi_def_cfa_offset 4
 1650 006e BD46     	 mov sp,r7
 1651              	.LCFI100:
 1652              	 .cfi_def_cfa_register 13
 1653              	 
 1654 0070 5DF8047B 	 ldr r7,[sp],#4
 1655              	.LCFI101:
 1656              	 .cfi_restore 7
 1657              	 .cfi_def_cfa_offset 0
 1658 0074 7047     	 bx lr
 1659              	 .cfi_endproc
 1660              	.LFE230:
 1662 0076 00BF     	 .section .text.XMC_ETH_MAC_FlushTx,"ax",%progbits
 1663              	 .align 2
 1664              	 .global XMC_ETH_MAC_FlushTx
 1665              	 .thumb
 1666              	 .thumb_func
 1668              	XMC_ETH_MAC_FlushTx:
 1669              	.LFB231:
 545:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 546:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Flush TX */
 547:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushTx(XMC_ETH_MAC_t *const eth_mac)
 548:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1670              	 .loc 3 548 0
 1671              	 .cfi_startproc
 1672              	 
 1673              	 
 1674 0000 80B5     	 push {r7,lr}
 1675              	.LCFI102:
 1676              	 .cfi_def_cfa_offset 8
 1677              	 .cfi_offset 7,-8
 1678              	 .cfi_offset 14,-4
 1679 0002 82B0     	 sub sp,sp,#8
 1680              	.LCFI103:
 1681              	 .cfi_def_cfa_offset 16
 1682 0004 00AF     	 add r7,sp,#0
 1683              	.LCFI104:
 1684              	 .cfi_def_cfa_register 7
 1685 0006 7860     	 str r0,[r7,#4]
 549:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_ST_Msk;
 1686              	 .loc 3 549 0
 1687 0008 7B68     	 ldr r3,[r7,#4]
 1688 000a 1968     	 ldr r1,[r3]
 1689 000c 7B68     	 ldr r3,[r7,#4]
 1690 000e 1B68     	 ldr r3,[r3]
 1691 0010 03F58053 	 add r3,r3,#4096
 1692 0014 1833     	 adds r3,r3,#24
 1693 0016 1B68     	 ldr r3,[r3]
 1694 0018 23F40052 	 bic r2,r3,#8192
 1695 001c 01F58053 	 add r3,r1,#4096
 1696 0020 1833     	 adds r3,r3,#24
 1697 0022 1A60     	 str r2,[r3]
 550:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitTxDescriptors(eth_mac);
 1698              	 .loc 3 550 0
 1699 0024 7868     	 ldr r0,[r7,#4]
 1700 0026 FFF7FEFF 	 bl XMC_ETH_MAC_InitTxDescriptors
 551:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_ST_Msk;
 1701              	 .loc 3 551 0
 1702 002a 7B68     	 ldr r3,[r7,#4]
 1703 002c 1968     	 ldr r1,[r3]
 1704 002e 7B68     	 ldr r3,[r7,#4]
 1705 0030 1B68     	 ldr r3,[r3]
 1706 0032 03F58053 	 add r3,r3,#4096
 1707 0036 1833     	 adds r3,r3,#24
 1708 0038 1B68     	 ldr r3,[r3]
 1709 003a 43F40052 	 orr r2,r3,#8192
 1710 003e 01F58053 	 add r3,r1,#4096
 1711 0042 1833     	 adds r3,r3,#24
 1712 0044 1A60     	 str r2,[r3]
 552:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1713              	 .loc 3 552 0
 1714 0046 0837     	 adds r7,r7,#8
 1715              	.LCFI105:
 1716              	 .cfi_def_cfa_offset 8
 1717 0048 BD46     	 mov sp,r7
 1718              	.LCFI106:
 1719              	 .cfi_def_cfa_register 13
 1720              	 
 1721 004a 80BD     	 pop {r7,pc}
 1722              	 .cfi_endproc
 1723              	.LFE231:
 1725              	 .section .text.XMC_ETH_MAC_FlushRx,"ax",%progbits
 1726              	 .align 2
 1727              	 .global XMC_ETH_MAC_FlushRx
 1728              	 .thumb
 1729              	 .thumb_func
 1731              	XMC_ETH_MAC_FlushRx:
 1732              	.LFB232:
 553:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 554:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Flush RX */
 555:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_FlushRx(XMC_ETH_MAC_t *const eth_mac)
 556:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1733              	 .loc 3 556 0
 1734              	 .cfi_startproc
 1735              	 
 1736              	 
 1737 0000 80B5     	 push {r7,lr}
 1738              	.LCFI107:
 1739              	 .cfi_def_cfa_offset 8
 1740              	 .cfi_offset 7,-8
 1741              	 .cfi_offset 14,-4
 1742 0002 82B0     	 sub sp,sp,#8
 1743              	.LCFI108:
 1744              	 .cfi_def_cfa_offset 16
 1745 0004 00AF     	 add r7,sp,#0
 1746              	.LCFI109:
 1747              	 .cfi_def_cfa_register 7
 1748 0006 7860     	 str r0,[r7,#4]
 557:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_SR_Msk;
 1749              	 .loc 3 557 0
 1750 0008 7B68     	 ldr r3,[r7,#4]
 1751 000a 1968     	 ldr r1,[r3]
 1752 000c 7B68     	 ldr r3,[r7,#4]
 1753 000e 1B68     	 ldr r3,[r3]
 1754 0010 03F58053 	 add r3,r3,#4096
 1755 0014 1833     	 adds r3,r3,#24
 1756 0016 1B68     	 ldr r3,[r3]
 1757 0018 23F00202 	 bic r2,r3,#2
 1758 001c 01F58053 	 add r3,r1,#4096
 1759 0020 1833     	 adds r3,r3,#24
 1760 0022 1A60     	 str r2,[r3]
 558:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_InitRxDescriptors(eth_mac);
 1761              	 .loc 3 558 0
 1762 0024 7868     	 ldr r0,[r7,#4]
 1763 0026 FFF7FEFF 	 bl XMC_ETH_MAC_InitRxDescriptors
 559:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_SR_Msk;
 1764              	 .loc 3 559 0
 1765 002a 7B68     	 ldr r3,[r7,#4]
 1766 002c 1968     	 ldr r1,[r3]
 1767 002e 7B68     	 ldr r3,[r7,#4]
 1768 0030 1B68     	 ldr r3,[r3]
 1769 0032 03F58053 	 add r3,r3,#4096
 1770 0036 1833     	 adds r3,r3,#24
 1771 0038 1B68     	 ldr r3,[r3]
 1772 003a 43F00202 	 orr r2,r3,#2
 1773 003e 01F58053 	 add r3,r1,#4096
 1774 0042 1833     	 adds r3,r3,#24
 1775 0044 1A60     	 str r2,[r3]
 560:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1776              	 .loc 3 560 0
 1777 0046 0837     	 adds r7,r7,#8
 1778              	.LCFI110:
 1779              	 .cfi_def_cfa_offset 8
 1780 0048 BD46     	 mov sp,r7
 1781              	.LCFI111:
 1782              	 .cfi_def_cfa_register 13
 1783              	 
 1784 004a 80BD     	 pop {r7,pc}
 1785              	 .cfi_endproc
 1786              	.LFE232:
 1788              	 .section .text.XMC_ETH_MAC_SetWakeUpFrameFilter,"ax",%progbits
 1789              	 .align 2
 1790              	 .global XMC_ETH_MAC_SetWakeUpFrameFilter
 1791              	 .thumb
 1792              	 .thumb_func
 1794              	XMC_ETH_MAC_SetWakeUpFrameFilter:
 1795              	.LFB233:
 561:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 562:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set wakeup frame filter */
 563:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetWakeUpFrameFilter(XMC_ETH_MAC_t *const eth_mac,
 564:../Libraries/XMCLib/src/xmc_eth_mac.c ****                                       const uint32_t (*const filter)[XMC_ETH_WAKEUP_REGISTER_LENGTH
 565:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1796              	 .loc 3 565 0
 1797              	 .cfi_startproc
 1798              	 
 1799              	 
 1800              	 
 1801 0000 80B4     	 push {r7}
 1802              	.LCFI112:
 1803              	 .cfi_def_cfa_offset 4
 1804              	 .cfi_offset 7,-4
 1805 0002 85B0     	 sub sp,sp,#20
 1806              	.LCFI113:
 1807              	 .cfi_def_cfa_offset 24
 1808 0004 00AF     	 add r7,sp,#0
 1809              	.LCFI114:
 1810              	 .cfi_def_cfa_register 7
 1811 0006 7860     	 str r0,[r7,#4]
 1812 0008 3960     	 str r1,[r7]
 566:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t i = 0U;
 1813              	 .loc 3 566 0
 1814 000a 0023     	 movs r3,#0
 1815 000c FB60     	 str r3,[r7,#12]
 567:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 568:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Fill Remote Wake-up frame filter register with buffer data */
 569:../Libraries/XMCLib/src/xmc_eth_mac.c ****   for (i = 0U; i < XMC_ETH_WAKEUP_REGISTER_LENGTH; i++)
 1816              	 .loc 3 569 0
 1817 000e 0023     	 movs r3,#0
 1818 0010 FB60     	 str r3,[r7,#12]
 1819 0012 09E0     	 b .L80
 1820              	.L81:
 570:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 571:../Libraries/XMCLib/src/xmc_eth_mac.c ****     /* Write each time to the same register */
 572:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->regs->REMOTE_WAKE_UP_FRAME_FILTER = (*filter)[i];
 1821              	 .loc 3 572 0 discriminator 3
 1822 0014 7B68     	 ldr r3,[r7,#4]
 1823 0016 1B68     	 ldr r3,[r3]
 1824 0018 3A68     	 ldr r2,[r7]
 1825 001a F968     	 ldr r1,[r7,#12]
 1826 001c 52F82120 	 ldr r2,[r2,r1,lsl#2]
 1827 0020 9A62     	 str r2,[r3,#40]
 569:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 1828              	 .loc 3 569 0 discriminator 3
 1829 0022 FB68     	 ldr r3,[r7,#12]
 1830 0024 0133     	 adds r3,r3,#1
 1831 0026 FB60     	 str r3,[r7,#12]
 1832              	.L80:
 569:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 1833              	 .loc 3 569 0 is_stmt 0 discriminator 1
 1834 0028 FB68     	 ldr r3,[r7,#12]
 1835 002a 072B     	 cmp r3,#7
 1836 002c F2D9     	 bls .L81
 573:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 574:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1837              	 .loc 3 574 0 is_stmt 1
 1838 002e 1437     	 adds r7,r7,#20
 1839              	.LCFI115:
 1840              	 .cfi_def_cfa_offset 4
 1841 0030 BD46     	 mov sp,r7
 1842              	.LCFI116:
 1843              	 .cfi_def_cfa_register 13
 1844              	 
 1845 0032 5DF8047B 	 ldr r7,[sp],#4
 1846              	.LCFI117:
 1847              	 .cfi_restore 7
 1848              	 .cfi_def_cfa_offset 0
 1849 0036 7047     	 bx lr
 1850              	 .cfi_endproc
 1851              	.LFE233:
 1853              	 .section .text.XMC_ETH_MAC_EnableEvent,"ax",%progbits
 1854              	 .align 2
 1855              	 .global XMC_ETH_MAC_EnableEvent
 1856              	 .thumb
 1857              	 .thumb_func
 1859              	XMC_ETH_MAC_EnableEvent:
 1860              	.LFB234:
 575:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 576:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Enable event */
 577:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_EnableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 578:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1861              	 .loc 3 578 0
 1862              	 .cfi_startproc
 1863              	 
 1864              	 
 1865 0000 80B5     	 push {r7,lr}
 1866              	.LCFI118:
 1867              	 .cfi_def_cfa_offset 8
 1868              	 .cfi_offset 7,-8
 1869              	 .cfi_offset 14,-4
 1870 0002 82B0     	 sub sp,sp,#8
 1871              	.LCFI119:
 1872              	 .cfi_def_cfa_offset 16
 1873 0004 00AF     	 add r7,sp,#0
 1874              	.LCFI120:
 1875              	 .cfi_def_cfa_register 7
 1876 0006 7860     	 str r0,[r7,#4]
 1877 0008 3960     	 str r1,[r7]
 579:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_EnableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 580:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 581:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK &= ~(event >> 16U);
 1878              	 .loc 3 581 0
 1879 000a 7B68     	 ldr r3,[r7,#4]
 1880 000c 1B68     	 ldr r3,[r3]
 1881 000e 7A68     	 ldr r2,[r7,#4]
 1882 0010 1268     	 ldr r2,[r2]
 1883 0012 D16B     	 ldr r1,[r2,#60]
 1884 0014 3A68     	 ldr r2,[r7]
 1885 0016 120C     	 lsrs r2,r2,#16
 1886 0018 D243     	 mvns r2,r2
 1887 001a 0A40     	 ands r2,r2,r1
 1888 001c DA63     	 str r2,[r3,#60]
 582:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 583:../Libraries/XMCLib/src/xmc_eth_mac.c ****   event &= (uint16_t)0x7fffU;
 1889              	 .loc 3 583 0
 1890 001e 3B68     	 ldr r3,[r7]
 1891 0020 C3F30E03 	 ubfx r3,r3,#0,#15
 1892 0024 3B60     	 str r3,[r7]
 584:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsNormalEvent(event))
 1893              	 .loc 3 584 0
 1894 0026 3868     	 ldr r0,[r7]
 1895 0028 FFF7FEFF 	 bl XCM_ETH_MAC_IsNormalEvent
 1896 002c 0346     	 mov r3,r0
 1897 002e 002B     	 cmp r3,#0
 1898 0030 03D0     	 beq .L83
 585:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 586:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	event |= (uint32_t)ETH_INTERRUPT_ENABLE_NIE_Msk;
 1899              	 .loc 3 586 0
 1900 0032 3B68     	 ldr r3,[r7]
 1901 0034 43F48033 	 orr r3,r3,#65536
 1902 0038 3B60     	 str r3,[r7]
 1903              	.L83:
 587:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 588:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 589:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (XCM_ETH_MAC_IsAbnormalEvent(event))
 1904              	 .loc 3 589 0
 1905 003a 3868     	 ldr r0,[r7]
 1906 003c FFF7FEFF 	 bl XCM_ETH_MAC_IsAbnormalEvent
 1907 0040 0346     	 mov r3,r0
 1908 0042 002B     	 cmp r3,#0
 1909 0044 03D0     	 beq .L84
 590:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 591:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	event |= (uint32_t)ETH_INTERRUPT_ENABLE_AIE_Msk;
 1910              	 .loc 3 591 0
 1911 0046 3B68     	 ldr r3,[r7]
 1912 0048 43F40043 	 orr r3,r3,#32768
 1913 004c 3B60     	 str r3,[r7]
 1914              	.L84:
 592:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 593:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 594:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE |= event;
 1915              	 .loc 3 594 0
 1916 004e 7B68     	 ldr r3,[r7,#4]
 1917 0050 1968     	 ldr r1,[r3]
 1918 0052 7B68     	 ldr r3,[r7,#4]
 1919 0054 1B68     	 ldr r3,[r3]
 1920 0056 03F58053 	 add r3,r3,#4096
 1921 005a 1C33     	 adds r3,r3,#28
 1922 005c 1A68     	 ldr r2,[r3]
 1923 005e 3B68     	 ldr r3,[r7]
 1924 0060 1A43     	 orrs r2,r2,r3
 1925 0062 01F58053 	 add r3,r1,#4096
 1926 0066 1C33     	 adds r3,r3,#28
 1927 0068 1A60     	 str r2,[r3]
 595:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1928              	 .loc 3 595 0
 1929 006a 0837     	 adds r7,r7,#8
 1930              	.LCFI121:
 1931              	 .cfi_def_cfa_offset 8
 1932 006c BD46     	 mov sp,r7
 1933              	.LCFI122:
 1934              	 .cfi_def_cfa_register 13
 1935              	 
 1936 006e 80BD     	 pop {r7,pc}
 1937              	 .cfi_endproc
 1938              	.LFE234:
 1940              	 .section .text.XMC_ETH_MAC_DisableEvent,"ax",%progbits
 1941              	 .align 2
 1942              	 .global XMC_ETH_MAC_DisableEvent
 1943              	 .thumb
 1944              	 .thumb_func
 1946              	XMC_ETH_MAC_DisableEvent:
 1947              	.LFB235:
 596:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 597:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Disable event */
 598:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_DisableEvent(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 599:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 1948              	 .loc 3 599 0
 1949              	 .cfi_startproc
 1950              	 
 1951              	 
 1952              	 
 1953 0000 80B4     	 push {r7}
 1954              	.LCFI123:
 1955              	 .cfi_def_cfa_offset 4
 1956              	 .cfi_offset 7,-4
 1957 0002 83B0     	 sub sp,sp,#12
 1958              	.LCFI124:
 1959              	 .cfi_def_cfa_offset 16
 1960 0004 00AF     	 add r7,sp,#0
 1961              	.LCFI125:
 1962              	 .cfi_def_cfa_register 7
 1963 0006 7860     	 str r0,[r7,#4]
 1964 0008 3960     	 str r1,[r7]
 600:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_DisableDMAEvent: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->
 601:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 602:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= event >> 16U;
 1965              	 .loc 3 602 0
 1966 000a 7B68     	 ldr r3,[r7,#4]
 1967 000c 1B68     	 ldr r3,[r3]
 1968 000e 7A68     	 ldr r2,[r7,#4]
 1969 0010 1268     	 ldr r2,[r2]
 1970 0012 D16B     	 ldr r1,[r2,#60]
 1971 0014 3A68     	 ldr r2,[r7]
 1972 0016 120C     	 lsrs r2,r2,#16
 1973 0018 0A43     	 orrs r2,r2,r1
 1974 001a DA63     	 str r2,[r3,#60]
 603:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 604:../Libraries/XMCLib/src/xmc_eth_mac.c ****   event &= 0x7fffU;
 1975              	 .loc 3 604 0
 1976 001c 3B68     	 ldr r3,[r7]
 1977 001e C3F30E03 	 ubfx r3,r3,#0,#15
 1978 0022 3B60     	 str r3,[r7]
 605:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_ENABLE &= ~event;
 1979              	 .loc 3 605 0
 1980 0024 7B68     	 ldr r3,[r7,#4]
 1981 0026 1968     	 ldr r1,[r3]
 1982 0028 7B68     	 ldr r3,[r7,#4]
 1983 002a 1B68     	 ldr r3,[r3]
 1984 002c 03F58053 	 add r3,r3,#4096
 1985 0030 1C33     	 adds r3,r3,#28
 1986 0032 1A68     	 ldr r2,[r3]
 1987 0034 3B68     	 ldr r3,[r7]
 1988 0036 DB43     	 mvns r3,r3
 1989 0038 1A40     	 ands r2,r2,r3
 1990 003a 01F58053 	 add r3,r1,#4096
 1991 003e 1C33     	 adds r3,r3,#28
 1992 0040 1A60     	 str r2,[r3]
 606:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 1993              	 .loc 3 606 0
 1994 0042 0C37     	 adds r7,r7,#12
 1995              	.LCFI126:
 1996              	 .cfi_def_cfa_offset 4
 1997 0044 BD46     	 mov sp,r7
 1998              	.LCFI127:
 1999              	 .cfi_def_cfa_register 13
 2000              	 
 2001 0046 5DF8047B 	 ldr r7,[sp],#4
 2002              	.LCFI128:
 2003              	 .cfi_restore 7
 2004              	 .cfi_def_cfa_offset 0
 2005 004a 7047     	 bx lr
 2006              	 .cfi_endproc
 2007              	.LFE235:
 2009              	 .section .text.XMC_ETH_MAC_ClearEventStatus,"ax",%progbits
 2010              	 .align 2
 2011              	 .global XMC_ETH_MAC_ClearEventStatus
 2012              	 .thumb
 2013              	 .thumb_func
 2015              	XMC_ETH_MAC_ClearEventStatus:
 2016              	.LFB236:
 607:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 608:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Clear event status */
 609:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ClearEventStatus(XMC_ETH_MAC_t *const eth_mac, uint32_t event)
 610:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2017              	 .loc 3 610 0
 2018              	 .cfi_startproc
 2019              	 
 2020              	 
 2021              	 
 2022 0000 80B4     	 push {r7}
 2023              	.LCFI129:
 2024              	 .cfi_def_cfa_offset 4
 2025              	 .cfi_offset 7,-4
 2026 0002 83B0     	 sub sp,sp,#12
 2027              	.LCFI130:
 2028              	 .cfi_def_cfa_offset 16
 2029 0004 00AF     	 add r7,sp,#0
 2030              	.LCFI131:
 2031              	 .cfi_def_cfa_register 7
 2032 0006 7860     	 str r0,[r7,#4]
 2033 0008 3960     	 str r1,[r7]
 611:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_ClearDMAEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_m
 612:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 613:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_NIS_Msk) != 0U)
 2034              	 .loc 3 613 0
 2035 000a 7B68     	 ldr r3,[r7,#4]
 2036 000c 1B68     	 ldr r3,[r3]
 2037 000e 03F58053 	 add r3,r3,#4096
 2038 0012 1433     	 adds r3,r3,#20
 2039 0014 1B68     	 ldr r3,[r3]
 2040 0016 03F48033 	 and r3,r3,#65536
 2041 001a 002B     	 cmp r3,#0
 2042 001c 03D0     	 beq .L87
 614:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 615:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	event |= (uint32_t)ETH_STATUS_NIS_Msk;
 2043              	 .loc 3 615 0
 2044 001e 3B68     	 ldr r3,[r7]
 2045 0020 43F48033 	 orr r3,r3,#65536
 2046 0024 3B60     	 str r3,[r7]
 2047              	.L87:
 616:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 617:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 618:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((eth_mac->regs->STATUS & ETH_STATUS_AIS_Msk) != 0U)
 2048              	 .loc 3 618 0
 2049 0026 7B68     	 ldr r3,[r7,#4]
 2050 0028 1B68     	 ldr r3,[r3]
 2051 002a 03F58053 	 add r3,r3,#4096
 2052 002e 1433     	 adds r3,r3,#20
 2053 0030 1B68     	 ldr r3,[r3]
 2054 0032 03F40043 	 and r3,r3,#32768
 2055 0036 002B     	 cmp r3,#0
 2056 0038 03D0     	 beq .L88
 619:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 620:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	event |= (uint32_t)ETH_STATUS_AIS_Msk;
 2057              	 .loc 3 620 0
 2058 003a 3B68     	 ldr r3,[r7]
 2059 003c 43F40043 	 orr r3,r3,#32768
 2060 0040 3B60     	 str r3,[r7]
 2061              	.L88:
 621:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 622:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 623:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->STATUS = event;
 2062              	 .loc 3 623 0
 2063 0042 7B68     	 ldr r3,[r7,#4]
 2064 0044 1B68     	 ldr r3,[r3]
 2065 0046 03F58053 	 add r3,r3,#4096
 2066 004a 1433     	 adds r3,r3,#20
 2067 004c 3A68     	 ldr r2,[r7]
 2068 004e 1A60     	 str r2,[r3]
 624:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2069              	 .loc 3 624 0
 2070 0050 0C37     	 adds r7,r7,#12
 2071              	.LCFI132:
 2072              	 .cfi_def_cfa_offset 4
 2073 0052 BD46     	 mov sp,r7
 2074              	.LCFI133:
 2075              	 .cfi_def_cfa_register 13
 2076              	 
 2077 0054 5DF8047B 	 ldr r7,[sp],#4
 2078              	.LCFI134:
 2079              	 .cfi_restore 7
 2080              	 .cfi_def_cfa_offset 0
 2081 0058 7047     	 bx lr
 2082              	 .cfi_endproc
 2083              	.LFE236:
 2085 005a 00BF     	 .section .text.XMC_ETH_MAC_GetEventStatus,"ax",%progbits
 2086              	 .align 2
 2087              	 .global XMC_ETH_MAC_GetEventStatus
 2088              	 .thumb
 2089              	 .thumb_func
 2091              	XMC_ETH_MAC_GetEventStatus:
 2092              	.LFB237:
 625:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 626:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Obtain event status */
 627:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetEventStatus(const XMC_ETH_MAC_t *const eth_mac)
 628:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2093              	 .loc 3 628 0
 2094              	 .cfi_startproc
 2095              	 
 2096              	 
 2097              	 
 2098 0000 80B4     	 push {r7}
 2099              	.LCFI135:
 2100              	 .cfi_def_cfa_offset 4
 2101              	 .cfi_offset 7,-4
 2102 0002 85B0     	 sub sp,sp,#20
 2103              	.LCFI136:
 2104              	 .cfi_def_cfa_offset 24
 2105 0004 00AF     	 add r7,sp,#0
 2106              	.LCFI137:
 2107              	 .cfi_def_cfa_register 7
 2108 0006 7860     	 str r0,[r7,#4]
 629:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp_status = 0;
 2109              	 .loc 3 629 0
 2110 0008 0023     	 movs r3,#0
 2111 000a FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetDMAEventStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac
 631:../Libraries/XMCLib/src/xmc_eth_mac.c ****   
 632:../Libraries/XMCLib/src/xmc_eth_mac.c ****   temp_status =  (eth_mac->regs->STATUS & (uint32_t)0x7ffUL);
 2112              	 .loc 3 632 0
 2113 000c 7B68     	 ldr r3,[r7,#4]
 2114 000e 1B68     	 ldr r3,[r3]
 2115 0010 03F58053 	 add r3,r3,#4096
 2116 0014 1433     	 adds r3,r3,#20
 2117 0016 1B68     	 ldr r3,[r3]
 2118 0018 C3F30A03 	 ubfx r3,r3,#0,#11
 2119 001c FB60     	 str r3,[r7,#12]
 633:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 634:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return ((uint32_t)((eth_mac->regs->INTERRUPT_STATUS & (ETH_INTERRUPT_MASK_PMTIM_Msk | ETH_INTERRU
 2120              	 .loc 3 634 0
 2121 001e 7B68     	 ldr r3,[r7,#4]
 2122 0020 1B68     	 ldr r3,[r3]
 2123 0022 9B6B     	 ldr r3,[r3,#56]
 2124 0024 03F40273 	 and r3,r3,#520
 2125 0028 1A04     	 lsls r2,r3,#16
 2126 002a FB68     	 ldr r3,[r7,#12]
 2127 002c 1343     	 orrs r3,r3,r2
 635:../Libraries/XMCLib/src/xmc_eth_mac.c **** 		  temp_status);
 636:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2128              	 .loc 3 636 0
 2129 002e 1846     	 mov r0,r3
 2130 0030 1437     	 adds r7,r7,#20
 2131              	.LCFI138:
 2132              	 .cfi_def_cfa_offset 4
 2133 0032 BD46     	 mov sp,r7
 2134              	.LCFI139:
 2135              	 .cfi_def_cfa_register 13
 2136              	 
 2137 0034 5DF8047B 	 ldr r7,[sp],#4
 2138              	.LCFI140:
 2139              	 .cfi_restore 7
 2140              	 .cfi_def_cfa_offset 0
 2141 0038 7047     	 bx lr
 2142              	 .cfi_endproc
 2143              	.LFE237:
 2145 003a 00BF     	 .section .text.XMC_ETH_MAC_ReturnRxDescriptor,"ax",%progbits
 2146              	 .align 2
 2147              	 .global XMC_ETH_MAC_ReturnRxDescriptor
 2148              	 .thumb
 2149              	 .thumb_func
 2151              	XMC_ETH_MAC_ReturnRxDescriptor:
 2152              	.LFB238:
 637:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 638:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Return RX descriptor */
 639:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnRxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 640:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2153              	 .loc 3 640 0
 2154              	 .cfi_startproc
 2155              	 
 2156              	 
 2157              	 
 2158 0000 80B4     	 push {r7}
 2159              	.LCFI141:
 2160              	 .cfi_def_cfa_offset 4
 2161              	 .cfi_offset 7,-4
 2162 0002 83B0     	 sub sp,sp,#12
 2163              	.LCFI142:
 2164              	 .cfi_def_cfa_offset 16
 2165 0004 00AF     	 add r7,sp,#0
 2166              	.LCFI143:
 2167              	 .cfi_def_cfa_register 7
 2168 0006 7860     	 str r0,[r7,#4]
 641:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_desc[eth_mac->rx_index].status |= ETH_MAC_DMA_RDES0_OWN;
 2169              	 .loc 3 641 0
 2170 0008 7B68     	 ldr r3,[r7,#4]
 2171 000a 1A69     	 ldr r2,[r3,#16]
 2172 000c 7B68     	 ldr r3,[r7,#4]
 2173 000e 93F82730 	 ldrb r3,[r3,#39]
 2174 0012 5B01     	 lsls r3,r3,#5
 2175 0014 1344     	 add r3,r3,r2
 2176 0016 7A68     	 ldr r2,[r7,#4]
 2177 0018 1169     	 ldr r1,[r2,#16]
 2178 001a 7A68     	 ldr r2,[r7,#4]
 2179 001c 92F82720 	 ldrb r2,[r2,#39]
 2180 0020 5201     	 lsls r2,r2,#5
 2181 0022 0A44     	 add r2,r2,r1
 2182 0024 1268     	 ldr r2,[r2]
 2183 0026 42F00042 	 orr r2,r2,#-2147483648
 2184 002a 1A60     	 str r2,[r3]
 642:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->rx_index++;
 2185              	 .loc 3 642 0
 2186 002c 7B68     	 ldr r3,[r7,#4]
 2187 002e 93F82730 	 ldrb r3,[r3,#39]
 2188 0032 0133     	 adds r3,r3,#1
 2189 0034 DAB2     	 uxtb r2,r3
 2190 0036 7B68     	 ldr r3,[r7,#4]
 2191 0038 83F82720 	 strb r2,[r3,#39]
 643:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->rx_index == eth_mac->num_rx_buf)
 2192              	 .loc 3 643 0
 2193 003c 7B68     	 ldr r3,[r7,#4]
 2194 003e 93F82720 	 ldrb r2,[r3,#39]
 2195 0042 7B68     	 ldr r3,[r7,#4]
 2196 0044 93F82430 	 ldrb r3,[r3,#36]
 2197 0048 9A42     	 cmp r2,r3
 2198 004a 03D1     	 bne .L91
 644:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 645:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->rx_index = 0U;
 2199              	 .loc 3 645 0
 2200 004c 7B68     	 ldr r3,[r7,#4]
 2201 004e 0022     	 movs r2,#0
 2202 0050 83F82720 	 strb r2,[r3,#39]
 2203              	.L91:
 646:../Libraries/XMCLib/src/xmc_eth_mac.c ****   } 
 647:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2204              	 .loc 3 647 0
 2205 0054 0C37     	 adds r7,r7,#12
 2206              	.LCFI144:
 2207              	 .cfi_def_cfa_offset 4
 2208 0056 BD46     	 mov sp,r7
 2209              	.LCFI145:
 2210              	 .cfi_def_cfa_register 13
 2211              	 
 2212 0058 5DF8047B 	 ldr r7,[sp],#4
 2213              	.LCFI146:
 2214              	 .cfi_restore 7
 2215              	 .cfi_def_cfa_offset 0
 2216 005c 7047     	 bx lr
 2217              	 .cfi_endproc
 2218              	.LFE238:
 2220 005e 00BF     	 .section .text.XMC_ETH_MAC_ReturnTxDescriptor,"ax",%progbits
 2221              	 .align 2
 2222              	 .global XMC_ETH_MAC_ReturnTxDescriptor
 2223              	 .thumb
 2224              	 .thumb_func
 2226              	XMC_ETH_MAC_ReturnTxDescriptor:
 2227              	.LFB239:
 648:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 649:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Return TX descriptor */
 650:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_ReturnTxDescriptor(XMC_ETH_MAC_t *const eth_mac)
 651:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2228              	 .loc 3 651 0
 2229              	 .cfi_startproc
 2230              	 
 2231              	 
 2232              	 
 2233 0000 80B4     	 push {r7}
 2234              	.LCFI147:
 2235              	 .cfi_def_cfa_offset 4
 2236              	 .cfi_offset 7,-4
 2237 0002 83B0     	 sub sp,sp,#12
 2238              	.LCFI148:
 2239              	 .cfi_def_cfa_offset 16
 2240 0004 00AF     	 add r7,sp,#0
 2241              	.LCFI149:
 2242              	 .cfi_def_cfa_register 7
 2243 0006 7860     	 str r0,[r7,#4]
 652:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_ts_index = eth_mac->tx_index;
 2244              	 .loc 3 652 0
 2245 0008 7B68     	 ldr r3,[r7,#4]
 2246 000a 93F82620 	 ldrb r2,[r3,#38]
 2247 000e 7B68     	 ldr r3,[r7,#4]
 2248 0010 83F82820 	 strb r2,[r3,#40]
 653:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 654:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_desc[eth_mac->tx_index].status |= ETH_MAC_DMA_TDES0_CIC |ETH_MAC_DMA_TDES0_OWN;
 2249              	 .loc 3 654 0
 2250 0014 7B68     	 ldr r3,[r7,#4]
 2251 0016 5A69     	 ldr r2,[r3,#20]
 2252 0018 7B68     	 ldr r3,[r7,#4]
 2253 001a 93F82630 	 ldrb r3,[r3,#38]
 2254 001e 5B01     	 lsls r3,r3,#5
 2255 0020 1A44     	 add r2,r2,r3
 2256 0022 7B68     	 ldr r3,[r7,#4]
 2257 0024 5969     	 ldr r1,[r3,#20]
 2258 0026 7B68     	 ldr r3,[r7,#4]
 2259 0028 93F82630 	 ldrb r3,[r3,#38]
 2260 002c 5B01     	 lsls r3,r3,#5
 2261 002e 0B44     	 add r3,r3,r1
 2262 0030 1B68     	 ldr r3,[r3]
 2263 0032 43F00043 	 orr r3,r3,#-2147483648
 2264 0036 43F44003 	 orr r3,r3,#12582912
 2265 003a 1360     	 str r3,[r2]
 655:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->tx_index++;
 2266              	 .loc 3 655 0
 2267 003c 7B68     	 ldr r3,[r7,#4]
 2268 003e 93F82630 	 ldrb r3,[r3,#38]
 2269 0042 0133     	 adds r3,r3,#1
 2270 0044 DAB2     	 uxtb r2,r3
 2271 0046 7B68     	 ldr r3,[r7,#4]
 2272 0048 83F82620 	 strb r2,[r3,#38]
 656:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (eth_mac->tx_index == eth_mac->num_tx_buf)
 2273              	 .loc 3 656 0
 2274 004c 7B68     	 ldr r3,[r7,#4]
 2275 004e 93F82620 	 ldrb r2,[r3,#38]
 2276 0052 7B68     	 ldr r3,[r7,#4]
 2277 0054 93F82530 	 ldrb r3,[r3,#37]
 2278 0058 9A42     	 cmp r2,r3
 2279 005a 03D1     	 bne .L94
 657:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 658:../Libraries/XMCLib/src/xmc_eth_mac.c ****     eth_mac->tx_index = 0U;
 2280              	 .loc 3 658 0
 2281 005c 7B68     	 ldr r3,[r7,#4]
 2282 005e 0022     	 movs r2,#0
 2283 0060 83F82620 	 strb r2,[r3,#38]
 2284              	.L94:
 659:../Libraries/XMCLib/src/xmc_eth_mac.c ****   } 
 660:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 661:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->frame_end = NULL;
 2285              	 .loc 3 661 0
 2286 0064 7B68     	 ldr r3,[r7,#4]
 2287 0066 0022     	 movs r2,#0
 2288 0068 1A62     	 str r2,[r3,#32]
 662:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2289              	 .loc 3 662 0
 2290 006a 0C37     	 adds r7,r7,#12
 2291              	.LCFI150:
 2292              	 .cfi_def_cfa_offset 4
 2293 006c BD46     	 mov sp,r7
 2294              	.LCFI151:
 2295              	 .cfi_def_cfa_register 13
 2296              	 
 2297 006e 5DF8047B 	 ldr r7,[sp],#4
 2298              	.LCFI152:
 2299              	 .cfi_restore 7
 2300              	 .cfi_def_cfa_offset 0
 2301 0072 7047     	 bx lr
 2302              	 .cfi_endproc
 2303              	.LFE239:
 2305              	 .section .text.XMC_ETH_MAC_SetVLANTag,"ax",%progbits
 2306              	 .align 2
 2307              	 .global XMC_ETH_MAC_SetVLANTag
 2308              	 .thumb
 2309              	 .thumb_func
 2311              	XMC_ETH_MAC_SetVLANTag:
 2312              	.LFB240:
 663:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 664:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set VLAN tag */
 665:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetVLANTag(XMC_ETH_MAC_t *const eth_mac, uint16_t tag)
 666:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2313              	 .loc 3 666 0
 2314              	 .cfi_startproc
 2315              	 
 2316              	 
 2317              	 
 2318 0000 80B4     	 push {r7}
 2319              	.LCFI153:
 2320              	 .cfi_def_cfa_offset 4
 2321              	 .cfi_offset 7,-4
 2322 0002 83B0     	 sub sp,sp,#12
 2323              	.LCFI154:
 2324              	 .cfi_def_cfa_offset 16
 2325 0004 00AF     	 add r7,sp,#0
 2326              	.LCFI155:
 2327              	 .cfi_def_cfa_register 7
 2328 0006 7860     	 str r0,[r7,#4]
 2329 0008 0B46     	 mov r3,r1
 2330 000a 7B80     	 strh r3,[r7,#2]
 667:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetVLANTag: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 668:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 669:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->VLAN_TAG = (uint32_t)tag;
 2331              	 .loc 3 669 0
 2332 000c 7B68     	 ldr r3,[r7,#4]
 2333 000e 1B68     	 ldr r3,[r3]
 2334 0010 7A88     	 ldrh r2,[r7,#2]
 2335 0012 DA61     	 str r2,[r3,#28]
 670:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2336              	 .loc 3 670 0
 2337 0014 0C37     	 adds r7,r7,#12
 2338              	.LCFI156:
 2339              	 .cfi_def_cfa_offset 4
 2340 0016 BD46     	 mov sp,r7
 2341              	.LCFI157:
 2342              	 .cfi_def_cfa_register 13
 2343              	 
 2344 0018 5DF8047B 	 ldr r7,[sp],#4
 2345              	.LCFI158:
 2346              	 .cfi_restore 7
 2347              	 .cfi_def_cfa_offset 0
 2348 001c 7047     	 bx lr
 2349              	 .cfi_endproc
 2350              	.LFE240:
 2352 001e 00BF     	 .section .text.XMC_ETH_MAC_InitPTP,"ax",%progbits
 2353              	 .align 2
 2354              	 .global XMC_ETH_MAC_InitPTP
 2355              	 .thumb
 2356              	 .thumb_func
 2358              	XMC_ETH_MAC_InitPTP:
 2359              	.LFB241:
 671:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 672:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Initialize PTP */
 673:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_InitPTP(XMC_ETH_MAC_t *const eth_mac, uint32_t config)
 674:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2360              	 .loc 3 674 0
 2361              	 .cfi_startproc
 2362              	 
 2363              	 
 2364 0000 90B5     	 push {r4,r7,lr}
 2365              	.LCFI159:
 2366              	 .cfi_def_cfa_offset 12
 2367              	 .cfi_offset 4,-12
 2368              	 .cfi_offset 7,-8
 2369              	 .cfi_offset 14,-4
 2370 0002 83B0     	 sub sp,sp,#12
 2371              	.LCFI160:
 2372              	 .cfi_def_cfa_offset 24
 2373 0004 00AF     	 add r7,sp,#0
 2374              	.LCFI161:
 2375              	 .cfi_def_cfa_register 7
 2376 0006 7860     	 str r0,[r7,#4]
 2377 0008 3960     	 str r1,[r7]
 675:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_InitPTP: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs));
 676:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 677:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Mask the time stamp interrupt */
 678:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->INTERRUPT_MASK |= (uint32_t)ETH_INTERRUPT_MASK_TSIM_Msk;
 2378              	 .loc 3 678 0
 2379 000a 7B68     	 ldr r3,[r7,#4]
 2380 000c 1B68     	 ldr r3,[r3]
 2381 000e 7A68     	 ldr r2,[r7,#4]
 2382 0010 1268     	 ldr r2,[r2]
 2383 0012 D26B     	 ldr r2,[r2,#60]
 2384 0014 42F40072 	 orr r2,r2,#512
 2385 0018 DA63     	 str r2,[r3,#60]
 679:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 680:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Enable time stamp */
 681:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL = config | (uint32_t)ETH_TIMESTAMP_CONTROL_TSENA_Msk;
 2386              	 .loc 3 681 0
 2387 001a 7B68     	 ldr r3,[r7,#4]
 2388 001c 1B68     	 ldr r3,[r3]
 2389 001e 3A68     	 ldr r2,[r7]
 2390 0020 42F00102 	 orr r2,r2,#1
 2391 0024 C3F80027 	 str r2,[r3,#1792]
 682:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 683:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if ((config & (uint32_t)XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE) != 0U)
 2392              	 .loc 3 683 0
 2393 0028 3B68     	 ldr r3,[r7]
 2394 002a 03F00203 	 and r3,r3,#2
 2395 002e 002B     	 cmp r3,#0
 2396 0030 26D0     	 beq .L97
 684:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 685:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	/* Program addend register to obtain fSYS/2 from reference clock (fSYS) */
 686:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)0x80000000U;
 2397              	 .loc 3 686 0
 2398 0032 7B68     	 ldr r3,[r7,#4]
 2399 0034 1B68     	 ldr r3,[r3]
 2400 0036 4FF00042 	 mov r2,#-2147483648
 2401 003a C3F81827 	 str r2,[r3,#1816]
 687:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 2402              	 .loc 3 687 0
 2403 003e 7B68     	 ldr r3,[r7,#4]
 2404 0040 1B68     	 ldr r3,[r3]
 2405 0042 7A68     	 ldr r2,[r7,#4]
 2406 0044 1268     	 ldr r2,[r2]
 2407 0046 D2F80027 	 ldr r2,[r2,#1792]
 2408 004a 42F02002 	 orr r2,r2,#32
 2409 004e C3F80027 	 str r2,[r3,#1792]
 688:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 689:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	/* Program sub-second increment register based on PTP clock frequency = fSYS/2 */
 690:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	/* the nanoseconds register has a resolution of ~0.465ns. */
 691:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->SUB_SECOND_INCREMENT = (uint32_t)((1.0F / (0x80000000U)) * (2.0F / XMC_SCU_CLOCK_Ge
 2410              	 .loc 3 691 0
 2411 0052 7B68     	 ldr r3,[r7,#4]
 2412 0054 1C68     	 ldr r4,[r3]
 2413 0056 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2414 005a 07EE900A 	 fmsr s15,r0
 2415 005e F8EE677A 	 fuitos s15,s15
 2416 0062 B0EE007A 	 fconsts s14,#0
 2417 0066 C7EE277A 	 fdivs s15,s14,s15
 2418 006a 9FED177A 	 flds s14,.L99
 2419 006e 67EE877A 	 fmuls s15,s15,s14
 2420 0072 FCEEE77A 	 ftouizs s15,s15
 2421 0076 17EE903A 	 fmrs r3,s15
 2422 007a C4F80437 	 str r3,[r4,#1796]
 2423 007e 15E0     	 b .L98
 2424              	.L97:
 692:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 693:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 694:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 695:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	/* Program sub-second increment register based on PTP clock frequency = fSYS */
 696:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	/* the nanoseconds register has a resolution of ~0.465ns. */
 697:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	eth_mac->regs->SUB_SECOND_INCREMENT = (uint32_t)((1.0F / (0x80000000U)) * (1.0F / XMC_SCU_CLOCK_Ge
 2425              	 .loc 3 697 0
 2426 0080 7B68     	 ldr r3,[r7,#4]
 2427 0082 1C68     	 ldr r4,[r3]
 2428 0084 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetSystemClockFrequency
 2429 0088 07EE900A 	 fmsr s15,r0
 2430 008c F8EE677A 	 fuitos s15,s15
 2431 0090 B7EE007A 	 fconsts s14,#112
 2432 0094 C7EE277A 	 fdivs s15,s14,s15
 2433 0098 9FED0B7A 	 flds s14,.L99
 2434 009c 67EE877A 	 fmuls s15,s15,s14
 2435 00a0 FCEEE77A 	 ftouizs s15,s15
 2436 00a4 17EE903A 	 fmrs r3,s15
 2437 00a8 C4F80437 	 str r3,[r4,#1796]
 2438              	.L98:
 698:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 699:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 700:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSINIT_Msk;
 2439              	 .loc 3 700 0
 2440 00ac 7B68     	 ldr r3,[r7,#4]
 2441 00ae 1B68     	 ldr r3,[r3]
 2442 00b0 7A68     	 ldr r2,[r7,#4]
 2443 00b2 1268     	 ldr r2,[r2]
 2444 00b4 D2F80027 	 ldr r2,[r2,#1792]
 2445 00b8 42F00402 	 orr r2,r2,#4
 2446 00bc C3F80027 	 str r2,[r3,#1792]
 701:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2447              	 .loc 3 701 0
 2448 00c0 0C37     	 adds r7,r7,#12
 2449              	.LCFI162:
 2450              	 .cfi_def_cfa_offset 12
 2451 00c2 BD46     	 mov sp,r7
 2452              	.LCFI163:
 2453              	 .cfi_def_cfa_register 13
 2454              	 
 2455 00c4 90BD     	 pop {r4,r7,pc}
 2456              	.L100:
 2457 00c6 00BF     	 .align 2
 2458              	.L99:
 2459 00c8 00000030 	 .word 805306368
 2460              	 .cfi_endproc
 2461              	.LFE241:
 2463              	 .section .text.XMC_ETH_MAC_GetPTPTime,"ax",%progbits
 2464              	 .align 2
 2465              	 .global XMC_ETH_MAC_GetPTPTime
 2466              	 .thumb
 2467              	 .thumb_func
 2469              	XMC_ETH_MAC_GetPTPTime:
 2470              	.LFB242:
 702:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 703:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get PTP time */
 704:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_GetPTPTime(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *const time)
 705:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2471              	 .loc 3 705 0
 2472              	 .cfi_startproc
 2473              	 
 2474              	 
 2475              	 
 2476 0000 80B4     	 push {r7}
 2477              	.LCFI164:
 2478              	 .cfi_def_cfa_offset 4
 2479              	 .cfi_offset 7,-4
 2480 0002 83B0     	 sub sp,sp,#12
 2481              	.LCFI165:
 2482              	 .cfi_def_cfa_offset 16
 2483 0004 00AF     	 add r7,sp,#0
 2484              	.LCFI166:
 2485              	 .cfi_def_cfa_register 7
 2486 0006 7860     	 str r0,[r7,#4]
 2487 0008 3960     	 str r1,[r7]
 706:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs)
 707:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 708:../Libraries/XMCLib/src/xmc_eth_mac.c ****   time->nanoseconds = (uint32_t)(eth_mac->regs->SYSTEM_TIME_NANOSECONDS * (0x80000000U / 1000000000
 2488              	 .loc 3 708 0
 2489 000a 7B68     	 ldr r3,[r7,#4]
 2490 000c 1B68     	 ldr r3,[r3]
 2491 000e D3F80C37 	 ldr r3,[r3,#1804]
 2492 0012 07EE903A 	 fmsr s15,r3
 2493 0016 F8EE677A 	 fuitos s15,s15
 2494 001a 9FED0A7A 	 flds s14,.L102
 2495 001e 67EE877A 	 fmuls s15,s15,s14
 2496 0022 FCEEE77A 	 ftouizs s15,s15
 2497 0026 17EE902A 	 fmrs r2,s15
 2498 002a 3B68     	 ldr r3,[r7]
 2499 002c 1A60     	 str r2,[r3]
 709:../Libraries/XMCLib/src/xmc_eth_mac.c ****   time->seconds = eth_mac->regs->SYSTEM_TIME_SECONDS;
 2500              	 .loc 3 709 0
 2501 002e 7B68     	 ldr r3,[r7,#4]
 2502 0030 1B68     	 ldr r3,[r3]
 2503 0032 D3F80827 	 ldr r2,[r3,#1800]
 2504 0036 3B68     	 ldr r3,[r7]
 2505 0038 5A60     	 str r2,[r3,#4]
 710:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2506              	 .loc 3 710 0
 2507 003a 0C37     	 adds r7,r7,#12
 2508              	.LCFI167:
 2509              	 .cfi_def_cfa_offset 4
 2510 003c BD46     	 mov sp,r7
 2511              	.LCFI168:
 2512              	 .cfi_def_cfa_register 13
 2513              	 
 2514 003e 5DF8047B 	 ldr r7,[sp],#4
 2515              	.LCFI169:
 2516              	 .cfi_restore 7
 2517              	 .cfi_def_cfa_offset 0
 2518 0042 7047     	 bx lr
 2519              	.L103:
 2520              	 .align 2
 2521              	.L102:
 2522 0044 5F700940 	 .word 1074360415
 2523              	 .cfi_endproc
 2524              	.LFE242:
 2526              	 .section .text.XMC_ETH_MAC_UpdatePTPTime,"ax",%progbits
 2527              	 .align 2
 2528              	 .global XMC_ETH_MAC_UpdatePTPTime
 2529              	 .thumb
 2530              	 .thumb_func
 2532              	XMC_ETH_MAC_UpdatePTPTime:
 2533              	.LFB243:
 711:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 712:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Update PTP time */
 713:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_UpdatePTPTime(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 714:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2534              	 .loc 3 714 0
 2535              	 .cfi_startproc
 2536              	 
 2537              	 
 2538              	 
 2539 0000 80B4     	 push {r7}
 2540              	.LCFI170:
 2541              	 .cfi_def_cfa_offset 4
 2542              	 .cfi_offset 7,-4
 2543 0002 85B0     	 sub sp,sp,#20
 2544              	.LCFI171:
 2545              	 .cfi_def_cfa_offset 24
 2546 0004 00AF     	 add r7,sp,#0
 2547              	.LCFI172:
 2548              	 .cfi_def_cfa_register 7
 2549 0006 7860     	 str r0,[r7,#4]
 2550 0008 3960     	 str r1,[r7]
 715:../Libraries/XMCLib/src/xmc_eth_mac.c ****   uint32_t temp;
 716:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 717:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_UpdatePTPTime: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->re
 718:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 719:../Libraries/XMCLib/src/xmc_eth_mac.c ****   temp = (uint32_t)(abs(time->nanoseconds) * (100000000.0F / (0x80000000U)));
 2551              	 .loc 3 719 0
 2552 000a 3B68     	 ldr r3,[r7]
 2553 000c 1B68     	 ldr r3,[r3]
 2554 000e 002B     	 cmp r3,#0
 2555 0010 B8BF     	 it lt
 2556 0012 5B42     	 rsblt r3,r3,#0
 2557 0014 07EE903A 	 fmsr s15,r3
 2558 0018 F8EEE77A 	 fsitos s15,s15
 2559 001c 9FED157A 	 flds s14,.L106
 2560 0020 67EE877A 	 fmuls s15,s15,s14
 2561 0024 FCEEE77A 	 ftouizs s15,s15
 2562 0028 17EE903A 	 fmrs r3,s15
 2563 002c FB60     	 str r3,[r7,#12]
 720:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (time->nanoseconds >= 0)
 2564              	 .loc 3 720 0
 2565 002e 3B68     	 ldr r3,[r7]
 2566 0030 1B68     	 ldr r3,[r3]
 2567 0032 002B     	 cmp r3,#0
 2568 0034 03DB     	 blt .L105
 721:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 722:../Libraries/XMCLib/src/xmc_eth_mac.c **** 	temp |= (uint32_t)ETH_SYSTEM_TIME_NANOSECONDS_UPDATE_ADDSUB_Msk;
 2569              	 .loc 3 722 0
 2570 0036 FB68     	 ldr r3,[r7,#12]
 2571 0038 43F00043 	 orr r3,r3,#-2147483648
 2572 003c FB60     	 str r3,[r7,#12]
 2573              	.L105:
 723:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 724:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 725:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_NANOSECONDS_UPDATE = temp;
 2574              	 .loc 3 725 0
 2575 003e 7B68     	 ldr r3,[r7,#4]
 2576 0040 1B68     	 ldr r3,[r3]
 2577 0042 FA68     	 ldr r2,[r7,#12]
 2578 0044 C3F81427 	 str r2,[r3,#1812]
 726:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->SYSTEM_TIME_SECONDS_UPDATE = time->seconds;
 2579              	 .loc 3 726 0
 2580 0048 7B68     	 ldr r3,[r7,#4]
 2581 004a 1B68     	 ldr r3,[r3]
 2582 004c 3A68     	 ldr r2,[r7]
 2583 004e 5268     	 ldr r2,[r2,#4]
 2584 0050 C3F81027 	 str r2,[r3,#1808]
 727:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 728:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSUPDT_Msk;
 2585              	 .loc 3 728 0
 2586 0054 7B68     	 ldr r3,[r7,#4]
 2587 0056 1B68     	 ldr r3,[r3]
 2588 0058 7A68     	 ldr r2,[r7,#4]
 2589 005a 1268     	 ldr r2,[r2]
 2590 005c D2F80027 	 ldr r2,[r2,#1792]
 2591 0060 42F00802 	 orr r2,r2,#8
 2592 0064 C3F80027 	 str r2,[r3,#1792]
 729:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2593              	 .loc 3 729 0
 2594 0068 1437     	 adds r7,r7,#20
 2595              	.LCFI173:
 2596              	 .cfi_def_cfa_offset 4
 2597 006a BD46     	 mov sp,r7
 2598              	.LCFI174:
 2599              	 .cfi_def_cfa_register 13
 2600              	 
 2601 006c 5DF8047B 	 ldr r7,[sp],#4
 2602              	.LCFI175:
 2603              	 .cfi_restore 7
 2604              	 .cfi_def_cfa_offset 0
 2605 0070 7047     	 bx lr
 2606              	.L107:
 2607 0072 00BF     	 .align 2
 2608              	.L106:
 2609 0074 20BC3E3D 	 .word 1027521568
 2610              	 .cfi_endproc
 2611              	.LFE243:
 2613              	 .section .text.XMC_ETH_MAC_SetPTPAlarm,"ax",%progbits
 2614              	 .align 2
 2615              	 .global XMC_ETH_MAC_SetPTPAlarm
 2616              	 .thumb
 2617              	 .thumb_func
 2619              	XMC_ETH_MAC_SetPTPAlarm:
 2620              	.LFB244:
 730:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 731:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set PTP alarm */
 732:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_SetPTPAlarm(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_TIME_t *const time)
 733:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2621              	 .loc 3 733 0
 2622              	 .cfi_startproc
 2623              	 
 2624              	 
 2625              	 
 2626 0000 80B4     	 push {r7}
 2627              	.LCFI176:
 2628              	 .cfi_def_cfa_offset 4
 2629              	 .cfi_offset 7,-4
 2630 0002 83B0     	 sub sp,sp,#12
 2631              	.LCFI177:
 2632              	 .cfi_def_cfa_offset 16
 2633 0004 00AF     	 add r7,sp,#0
 2634              	.LCFI178:
 2635              	 .cfi_def_cfa_register 7
 2636 0006 7860     	 str r0,[r7,#4]
 2637 0008 3960     	 str r1,[r7]
 734:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_SetPTPAlarm: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->regs
 735:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 736:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_NANOSECONDS = (uint32_t)(time->nanoseconds * (100000000.0F / (0x800000
 2638              	 .loc 3 736 0
 2639 000a 7B68     	 ldr r3,[r7,#4]
 2640 000c 1B68     	 ldr r3,[r3]
 2641 000e 3A68     	 ldr r2,[r7]
 2642 0010 1268     	 ldr r2,[r2]
 2643 0012 07EE902A 	 fmsr s15,r2
 2644 0016 F8EEE77A 	 fsitos s15,s15
 2645 001a 9FED0A7A 	 flds s14,.L109
 2646 001e 67EE877A 	 fmuls s15,s15,s14
 2647 0022 FCEEE77A 	 ftouizs s15,s15
 2648 0026 17EE902A 	 fmrs r2,s15
 2649 002a C3F82027 	 str r2,[r3,#1824]
 737:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TARGET_TIME_SECONDS = time->seconds;
 2650              	 .loc 3 737 0
 2651 002e 7B68     	 ldr r3,[r7,#4]
 2652 0030 1B68     	 ldr r3,[r3]
 2653 0032 3A68     	 ldr r2,[r7]
 2654 0034 5268     	 ldr r2,[r2,#4]
 2655 0036 C3F81C27 	 str r2,[r3,#1820]
 738:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2656              	 .loc 3 738 0
 2657 003a 0C37     	 adds r7,r7,#12
 2658              	.LCFI179:
 2659              	 .cfi_def_cfa_offset 4
 2660 003c BD46     	 mov sp,r7
 2661              	.LCFI180:
 2662              	 .cfi_def_cfa_register 13
 2663              	 
 2664 003e 5DF8047B 	 ldr r7,[sp],#4
 2665              	.LCFI181:
 2666              	 .cfi_restore 7
 2667              	 .cfi_def_cfa_offset 0
 2668 0042 7047     	 bx lr
 2669              	.L110:
 2670              	 .align 2
 2671              	.L109:
 2672 0044 20BC3E3D 	 .word 1027521568
 2673              	 .cfi_endproc
 2674              	.LFE244:
 2676              	 .section .text.XMC_ETH_MAC_AdjustPTPClock,"ax",%progbits
 2677              	 .align 2
 2678              	 .global XMC_ETH_MAC_AdjustPTPClock
 2679              	 .thumb
 2680              	 .thumb_func
 2682              	XMC_ETH_MAC_AdjustPTPClock:
 2683              	.LFB245:
 739:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 740:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Adjust PTP clock */
 741:../Libraries/XMCLib/src/xmc_eth_mac.c **** void XMC_ETH_MAC_AdjustPTPClock(XMC_ETH_MAC_t *const eth_mac, uint32_t correction)
 742:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2684              	 .loc 3 742 0
 2685              	 .cfi_startproc
 2686              	 
 2687              	 
 2688 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 2689              	.LCFI182:
 2690              	 .cfi_def_cfa_offset 20
 2691              	 .cfi_offset 4,-20
 2692              	 .cfi_offset 5,-16
 2693              	 .cfi_offset 6,-12
 2694              	 .cfi_offset 7,-8
 2695              	 .cfi_offset 14,-4
 2696 0002 83B0     	 sub sp,sp,#12
 2697              	.LCFI183:
 2698              	 .cfi_def_cfa_offset 32
 2699 0004 00AF     	 add r7,sp,#0
 2700              	.LCFI184:
 2701              	 .cfi_def_cfa_register 7
 2702 0006 7860     	 str r0,[r7,#4]
 2703 0008 3960     	 str r1,[r7]
 743:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_AdjustPTPClock: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 744:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 745:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Correction factor is Q31 (0x80000000 = 1.000000000) */
 746:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_ADDEND = (uint32_t)(((uint64_t)correction * eth_mac->regs->TIMESTAMP_ADD
 2704              	 .loc 3 746 0
 2705 000a 7B68     	 ldr r3,[r7,#4]
 2706 000c 1E68     	 ldr r6,[r3]
 2707 000e 3B68     	 ldr r3,[r7]
 2708 0010 1846     	 mov r0,r3
 2709 0012 4FF00001 	 mov r1,#0
 2710 0016 7B68     	 ldr r3,[r7,#4]
 2711 0018 1B68     	 ldr r3,[r3]
 2712 001a D3F81837 	 ldr r3,[r3,#1816]
 2713 001e 1A46     	 mov r2,r3
 2714 0020 4FF00003 	 mov r3,#0
 2715 0024 02FB01FC 	 mul ip,r2,r1
 2716 0028 00FB03FE 	 mul lr,r0,r3
 2717 002c E644     	 add lr,lr,ip
 2718 002e A0FB0223 	 umull r2,r3,r0,r2
 2719 0032 0EEB0301 	 add r1,lr,r3
 2720 0036 0B46     	 mov r3,r1
 2721 0038 D40F     	 lsrs r4,r2,#31
 2722 003a 44EA4304 	 orr r4,r4,r3,lsl#1
 2723 003e DD0F     	 lsrs r5,r3,#31
 2724 0040 2346     	 mov r3,r4
 2725 0042 C6F81837 	 str r3,[r6,#1816]
 747:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 748:../Libraries/XMCLib/src/xmc_eth_mac.c ****   /* Update addend register */
 749:../Libraries/XMCLib/src/xmc_eth_mac.c ****   eth_mac->regs->TIMESTAMP_CONTROL |= (uint32_t)ETH_TIMESTAMP_CONTROL_TSADDREG_Msk;
 2726              	 .loc 3 749 0
 2727 0046 7B68     	 ldr r3,[r7,#4]
 2728 0048 1B68     	 ldr r3,[r3]
 2729 004a 7A68     	 ldr r2,[r7,#4]
 2730 004c 1268     	 ldr r2,[r2]
 2731 004e D2F80027 	 ldr r2,[r2,#1792]
 2732 0052 42F02002 	 orr r2,r2,#32
 2733 0056 C3F80027 	 str r2,[r3,#1792]
 750:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2734              	 .loc 3 750 0
 2735 005a 0C37     	 adds r7,r7,#12
 2736              	.LCFI185:
 2737              	 .cfi_def_cfa_offset 20
 2738 005c BD46     	 mov sp,r7
 2739              	.LCFI186:
 2740              	 .cfi_def_cfa_register 13
 2741              	 
 2742 005e F0BD     	 pop {r4,r5,r6,r7,pc}
 2743              	 .cfi_endproc
 2744              	.LFE245:
 2746              	 .section .text.XMC_ETH_MAC_GetPTPStatus,"ax",%progbits
 2747              	 .align 2
 2748              	 .global XMC_ETH_MAC_GetPTPStatus
 2749              	 .thumb
 2750              	 .thumb_func
 2752              	XMC_ETH_MAC_GetPTPStatus:
 2753              	.LFB246:
 751:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 752:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Set PTP status */
 753:../Libraries/XMCLib/src/xmc_eth_mac.c **** uint32_t XMC_ETH_MAC_GetPTPStatus(const XMC_ETH_MAC_t *const eth_mac)
 754:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2754              	 .loc 3 754 0
 2755              	 .cfi_startproc
 2756              	 
 2757              	 
 2758              	 
 2759 0000 80B4     	 push {r7}
 2760              	.LCFI187:
 2761              	 .cfi_def_cfa_offset 4
 2762              	 .cfi_offset 7,-4
 2763 0002 83B0     	 sub sp,sp,#12
 2764              	.LCFI188:
 2765              	 .cfi_def_cfa_offset 16
 2766 0004 00AF     	 add r7,sp,#0
 2767              	.LCFI189:
 2768              	 .cfi_def_cfa_register 7
 2769 0006 7860     	 str r0,[r7,#4]
 755:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetPTPStatus: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->reg
 756:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 757:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return (eth_mac->regs->TIMESTAMP_STATUS);
 2770              	 .loc 3 757 0
 2771 0008 7B68     	 ldr r3,[r7,#4]
 2772 000a 1B68     	 ldr r3,[r3]
 2773 000c D3F82837 	 ldr r3,[r3,#1832]
 758:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2774              	 .loc 3 758 0
 2775 0010 1846     	 mov r0,r3
 2776 0012 0C37     	 adds r7,r7,#12
 2777              	.LCFI190:
 2778              	 .cfi_def_cfa_offset 4
 2779 0014 BD46     	 mov sp,r7
 2780              	.LCFI191:
 2781              	 .cfi_def_cfa_register 13
 2782              	 
 2783 0016 5DF8047B 	 ldr r7,[sp],#4
 2784              	.LCFI192:
 2785              	 .cfi_restore 7
 2786              	 .cfi_def_cfa_offset 0
 2787 001a 7047     	 bx lr
 2788              	 .cfi_endproc
 2789              	.LFE246:
 2791              	 .section .text.XMC_ETH_MAC_GetRxTimeStamp,"ax",%progbits
 2792              	 .align 2
 2793              	 .global XMC_ETH_MAC_GetRxTimeStamp
 2794              	 .thumb
 2795              	 .thumb_func
 2797              	XMC_ETH_MAC_GetRxTimeStamp:
 2798              	.LFB247:
 759:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 760:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 761:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetRxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 762:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2799              	 .loc 3 762 0
 2800              	 .cfi_startproc
 2801              	 
 2802              	 
 2803              	 
 2804 0000 80B4     	 push {r7}
 2805              	.LCFI193:
 2806              	 .cfi_def_cfa_offset 4
 2807              	 .cfi_offset 7,-4
 2808 0002 85B0     	 sub sp,sp,#20
 2809              	.LCFI194:
 2810              	 .cfi_def_cfa_offset 24
 2811 0004 00AF     	 add r7,sp,#0
 2812              	.LCFI195:
 2813              	 .cfi_def_cfa_register 7
 2814 0006 7860     	 str r0,[r7,#4]
 2815 0008 3960     	 str r1,[r7]
 763:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc;
 764:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 765:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 766:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 767:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetRxTimeStamp: time is invalid", time != NULL);
 768:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 769:../Libraries/XMCLib/src/xmc_eth_mac.c ****   rx_desc = &eth_mac->rx_desc[eth_mac->rx_index];
 2816              	 .loc 3 769 0
 2817 000a 7B68     	 ldr r3,[r7,#4]
 2818 000c 1A69     	 ldr r2,[r3,#16]
 2819 000e 7B68     	 ldr r3,[r7,#4]
 2820 0010 93F82730 	 ldrb r3,[r3,#39]
 2821 0014 5B01     	 lsls r3,r3,#5
 2822 0016 1344     	 add r3,r3,r2
 2823 0018 BB60     	 str r3,[r7,#8]
 770:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (rx_desc->status & ETH_MAC_DMA_RDES0_OWN)
 2824              	 .loc 3 770 0
 2825 001a BB68     	 ldr r3,[r7,#8]
 2826 001c 1B68     	 ldr r3,[r3]
 2827 001e 002B     	 cmp r3,#0
 2828 0020 02DA     	 bge .L115
 771:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 772:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 2829              	 .loc 3 772 0
 2830 0022 0123     	 movs r3,#1
 2831 0024 FB73     	 strb r3,[r7,#15]
 2832 0026 0AE0     	 b .L116
 2833              	.L115:
 773:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 774:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 775:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 776:../Libraries/XMCLib/src/xmc_eth_mac.c ****     time->nanoseconds = (int32_t)rx_desc->time_stamp_nanoseconds;
 2834              	 .loc 3 776 0
 2835 0028 BB68     	 ldr r3,[r7,#8]
 2836 002a DB69     	 ldr r3,[r3,#28]
 2837 002c 1A46     	 mov r2,r3
 2838 002e 3B68     	 ldr r3,[r7]
 2839 0030 1A60     	 str r2,[r3]
 777:../Libraries/XMCLib/src/xmc_eth_mac.c ****     time->seconds = rx_desc->time_stamp_seconds;
 2840              	 .loc 3 777 0
 2841 0032 BB68     	 ldr r3,[r7,#8]
 2842 0034 9A69     	 ldr r2,[r3,#24]
 2843 0036 3B68     	 ldr r3,[r7]
 2844 0038 5A60     	 str r2,[r3,#4]
 778:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 779:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 2845              	 .loc 3 779 0
 2846 003a 0023     	 movs r3,#0
 2847 003c FB73     	 strb r3,[r7,#15]
 2848              	.L116:
 780:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 781:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 782:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 2849              	 .loc 3 782 0
 2850 003e FB7B     	 ldrb r3,[r7,#15]
 783:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2851              	 .loc 3 783 0
 2852 0040 1846     	 mov r0,r3
 2853 0042 1437     	 adds r7,r7,#20
 2854              	.LCFI196:
 2855              	 .cfi_def_cfa_offset 4
 2856 0044 BD46     	 mov sp,r7
 2857              	.LCFI197:
 2858              	 .cfi_def_cfa_register 13
 2859              	 
 2860 0046 5DF8047B 	 ldr r7,[sp],#4
 2861              	.LCFI198:
 2862              	 .cfi_restore 7
 2863              	 .cfi_def_cfa_offset 0
 2864 004a 7047     	 bx lr
 2865              	 .cfi_endproc
 2866              	.LFE247:
 2868              	 .section .text.XMC_ETH_MAC_GetTxTimeStamp,"ax",%progbits
 2869              	 .align 2
 2870              	 .global XMC_ETH_MAC_GetTxTimeStamp
 2871              	 .thumb
 2872              	 .thumb_func
 2874              	XMC_ETH_MAC_GetTxTimeStamp:
 2875              	.LFB248:
 784:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 785:../Libraries/XMCLib/src/xmc_eth_mac.c **** /* Get TX time-stamp */
 786:../Libraries/XMCLib/src/xmc_eth_mac.c **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_GetTxTimeStamp(XMC_ETH_MAC_t *const eth_mac, XMC_ETH_MAC_TIME_t *c
 787:../Libraries/XMCLib/src/xmc_eth_mac.c **** {
 2876              	 .loc 3 787 0
 2877              	 .cfi_startproc
 2878              	 
 2879              	 
 2880              	 
 2881 0000 80B4     	 push {r7}
 2882              	.LCFI199:
 2883              	 .cfi_def_cfa_offset 4
 2884              	 .cfi_offset 7,-4
 2885 0002 85B0     	 sub sp,sp,#20
 2886              	.LCFI200:
 2887              	 .cfi_def_cfa_offset 24
 2888 0004 00AF     	 add r7,sp,#0
 2889              	.LCFI201:
 2890              	 .cfi_def_cfa_register 7
 2891 0006 7860     	 str r0,[r7,#4]
 2892 0008 3960     	 str r1,[r7]
 788:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc;
 789:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ETH_MAC_STATUS_t status;
 790:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 791:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: eth_mac is invalid", XMC_ETH_MAC_IsValidModule(eth_mac->r
 792:../Libraries/XMCLib/src/xmc_eth_mac.c ****   XMC_ASSERT("XMC_ETH_MAC_GetTxTimeStamp: time is invalid", time != NULL);
 793:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 794:../Libraries/XMCLib/src/xmc_eth_mac.c ****   tx_desc = &eth_mac->tx_desc[eth_mac->tx_ts_index];
 2893              	 .loc 3 794 0
 2894 000a 7B68     	 ldr r3,[r7,#4]
 2895 000c 5A69     	 ldr r2,[r3,#20]
 2896 000e 7B68     	 ldr r3,[r7,#4]
 2897 0010 93F82830 	 ldrb r3,[r3,#40]
 2898 0014 5B01     	 lsls r3,r3,#5
 2899 0016 1344     	 add r3,r3,r2
 2900 0018 BB60     	 str r3,[r7,#8]
 795:../Libraries/XMCLib/src/xmc_eth_mac.c ****   if (tx_desc->status & ETH_MAC_DMA_TDES0_OWN)
 2901              	 .loc 3 795 0
 2902 001a BB68     	 ldr r3,[r7,#8]
 2903 001c 1B68     	 ldr r3,[r3]
 2904 001e 002B     	 cmp r3,#0
 2905 0020 02DA     	 bge .L119
 796:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 797:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_BUSY;
 2906              	 .loc 3 797 0
 2907 0022 0123     	 movs r3,#1
 2908 0024 FB73     	 strb r3,[r7,#15]
 2909 0026 0AE0     	 b .L120
 2910              	.L119:
 798:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 799:../Libraries/XMCLib/src/xmc_eth_mac.c ****   else
 800:../Libraries/XMCLib/src/xmc_eth_mac.c ****   {
 801:../Libraries/XMCLib/src/xmc_eth_mac.c ****     time->nanoseconds = (int32_t)tx_desc->time_stamp_nanoseconds;
 2911              	 .loc 3 801 0
 2912 0028 BB68     	 ldr r3,[r7,#8]
 2913 002a DB69     	 ldr r3,[r3,#28]
 2914 002c 1A46     	 mov r2,r3
 2915 002e 3B68     	 ldr r3,[r7]
 2916 0030 1A60     	 str r2,[r3]
 802:../Libraries/XMCLib/src/xmc_eth_mac.c ****     time->seconds = tx_desc->time_stamp_seconds;
 2917              	 .loc 3 802 0
 2918 0032 BB68     	 ldr r3,[r7,#8]
 2919 0034 9A69     	 ldr r2,[r3,#24]
 2920 0036 3B68     	 ldr r3,[r7]
 2921 0038 5A60     	 str r2,[r3,#4]
 803:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 804:../Libraries/XMCLib/src/xmc_eth_mac.c ****     status = XMC_ETH_MAC_STATUS_OK;
 2922              	 .loc 3 804 0
 2923 003a 0023     	 movs r3,#0
 2924 003c FB73     	 strb r3,[r7,#15]
 2925              	.L120:
 805:../Libraries/XMCLib/src/xmc_eth_mac.c ****   }
 806:../Libraries/XMCLib/src/xmc_eth_mac.c **** 
 807:../Libraries/XMCLib/src/xmc_eth_mac.c ****   return status;
 2926              	 .loc 3 807 0
 2927 003e FB7B     	 ldrb r3,[r7,#15]
 808:../Libraries/XMCLib/src/xmc_eth_mac.c **** }
 2928              	 .loc 3 808 0
 2929 0040 1846     	 mov r0,r3
 2930 0042 1437     	 adds r7,r7,#20
 2931              	.LCFI202:
 2932              	 .cfi_def_cfa_offset 4
 2933 0044 BD46     	 mov sp,r7
 2934              	.LCFI203:
 2935              	 .cfi_def_cfa_register 13
 2936              	 
 2937 0046 5DF8047B 	 ldr r7,[sp],#4
 2938              	.LCFI204:
 2939              	 .cfi_restore 7
 2940              	 .cfi_def_cfa_offset 0
 2941 004a 7047     	 bx lr
 2942              	 .cfi_endproc
 2943              	.LFE248:
 2945              	 .text
 2946              	.Letext0:
 2947              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2948              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2949              	 .file 6 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2950              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
 2951              	 .file 8 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_eth_mac.c
    {standard input}:20     .text.XMC_ETH_MAC_Reset:00000000 $t
    {standard input}:24     .text.XMC_ETH_MAC_Reset:00000000 XMC_ETH_MAC_Reset
    {standard input}:81     .text.XMC_ETH_MAC_SetAddress:00000000 $t
    {standard input}:85     .text.XMC_ETH_MAC_SetAddress:00000000 XMC_ETH_MAC_SetAddress
    {standard input}:138    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 $t
    {standard input}:142    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000000 XMC_SCU_CLOCK_GetSystemClockFrequency
    {standard input}:178    .text.XMC_SCU_CLOCK_GetSystemClockFrequency:00000020 $d
    {standard input}:184    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 $t
    {standard input}:188    .text.XMC_SCU_CLOCK_GetEthernetClockFrequency:00000000 XMC_SCU_CLOCK_GetEthernetClockFrequency
    {standard input}:213    .text.XCM_ETH_MAC_IsNormalEvent:00000000 $t
    {standard input}:217    .text.XCM_ETH_MAC_IsNormalEvent:00000000 XCM_ETH_MAC_IsNormalEvent
    {standard input}:263    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 $t
    {standard input}:267    .text.XCM_ETH_MAC_IsAbnormalEvent:00000000 XCM_ETH_MAC_IsAbnormalEvent
    {standard input}:312    .text.XMC_ETH_MAC_Init:00000000 $t
    {standard input}:317    .text.XMC_ETH_MAC_Init:00000000 XMC_ETH_MAC_Init
    {standard input}:1370   .text.XMC_ETH_MAC_Enable:00000000 XMC_ETH_MAC_Enable
    {standard input}:1241   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 XMC_ETH_MAC_SetManagmentClockDivider
    {standard input}:426    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 XMC_ETH_MAC_InitRxDescriptors
    {standard input}:551    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 XMC_ETH_MAC_InitTxDescriptors
    {standard input}:421    .text.XMC_ETH_MAC_InitRxDescriptors:00000000 $t
    {standard input}:546    .text.XMC_ETH_MAC_InitTxDescriptors:00000000 $t
    {standard input}:662    .text.XMC_ETH_MAC_InitTxDescriptors:0000009c $d
    {standard input}:667    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 $t
    {standard input}:672    .text.XMC_ETH_MAC_SetAddressPerfectFilter:00000000 XMC_ETH_MAC_SetAddressPerfectFilter
    {standard input}:739    .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 $t
    {standard input}:744    .text.XMC_ETH_MAC_SetAddressHashFilter:00000000 XMC_ETH_MAC_SetAddressHashFilter
    {standard input}:797    .text.XMC_ETH_MAC_SendFrame:00000000 $t
    {standard input}:802    .text.XMC_ETH_MAC_SendFrame:00000000 XMC_ETH_MAC_SendFrame
    {standard input}:1030   .text.XMC_ETH_MAC_ReadFrame:00000000 $t
    {standard input}:1035   .text.XMC_ETH_MAC_ReadFrame:00000000 XMC_ETH_MAC_ReadFrame
    {standard input}:1137   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 $t
    {standard input}:1142   .text.XMC_ETH_MAC_GetRxFrameSize:00000000 XMC_ETH_MAC_GetRxFrameSize
    {standard input}:1231   .text.XMC_ETH_MAC_GetRxFrameSize:0000006c $d
    {standard input}:1236   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000000 $t
    {standard input}:1355   .text.XMC_ETH_MAC_SetManagmentClockDivider:00000088 $d
    {standard input}:1365   .text.XMC_ETH_MAC_Enable:00000000 $t
    {standard input}:1409   .text.XMC_ETH_MAC_Enable:00000020 $d
    {standard input}:1414   .text.XMC_ETH_MAC_Disable:00000000 $t
    {standard input}:1419   .text.XMC_ETH_MAC_Disable:00000000 XMC_ETH_MAC_Disable
    {standard input}:1458   .text.XMC_ETH_MAC_Disable:00000020 $d
    {standard input}:1463   .text.XMC_ETH_MAC_ReadPhy:00000000 $t
    {standard input}:1468   .text.XMC_ETH_MAC_ReadPhy:00000000 XMC_ETH_MAC_ReadPhy
    {standard input}:1562   .text.XMC_ETH_MAC_WritePhy:00000000 $t
    {standard input}:1567   .text.XMC_ETH_MAC_WritePhy:00000000 XMC_ETH_MAC_WritePhy
    {standard input}:1663   .text.XMC_ETH_MAC_FlushTx:00000000 $t
    {standard input}:1668   .text.XMC_ETH_MAC_FlushTx:00000000 XMC_ETH_MAC_FlushTx
    {standard input}:1726   .text.XMC_ETH_MAC_FlushRx:00000000 $t
    {standard input}:1731   .text.XMC_ETH_MAC_FlushRx:00000000 XMC_ETH_MAC_FlushRx
    {standard input}:1789   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 $t
    {standard input}:1794   .text.XMC_ETH_MAC_SetWakeUpFrameFilter:00000000 XMC_ETH_MAC_SetWakeUpFrameFilter
    {standard input}:1854   .text.XMC_ETH_MAC_EnableEvent:00000000 $t
    {standard input}:1859   .text.XMC_ETH_MAC_EnableEvent:00000000 XMC_ETH_MAC_EnableEvent
    {standard input}:1941   .text.XMC_ETH_MAC_DisableEvent:00000000 $t
    {standard input}:1946   .text.XMC_ETH_MAC_DisableEvent:00000000 XMC_ETH_MAC_DisableEvent
    {standard input}:2010   .text.XMC_ETH_MAC_ClearEventStatus:00000000 $t
    {standard input}:2015   .text.XMC_ETH_MAC_ClearEventStatus:00000000 XMC_ETH_MAC_ClearEventStatus
    {standard input}:2086   .text.XMC_ETH_MAC_GetEventStatus:00000000 $t
    {standard input}:2091   .text.XMC_ETH_MAC_GetEventStatus:00000000 XMC_ETH_MAC_GetEventStatus
    {standard input}:2146   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 $t
    {standard input}:2151   .text.XMC_ETH_MAC_ReturnRxDescriptor:00000000 XMC_ETH_MAC_ReturnRxDescriptor
    {standard input}:2221   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 $t
    {standard input}:2226   .text.XMC_ETH_MAC_ReturnTxDescriptor:00000000 XMC_ETH_MAC_ReturnTxDescriptor
    {standard input}:2306   .text.XMC_ETH_MAC_SetVLANTag:00000000 $t
    {standard input}:2311   .text.XMC_ETH_MAC_SetVLANTag:00000000 XMC_ETH_MAC_SetVLANTag
    {standard input}:2353   .text.XMC_ETH_MAC_InitPTP:00000000 $t
    {standard input}:2358   .text.XMC_ETH_MAC_InitPTP:00000000 XMC_ETH_MAC_InitPTP
    {standard input}:2459   .text.XMC_ETH_MAC_InitPTP:000000c8 $d
    {standard input}:2464   .text.XMC_ETH_MAC_GetPTPTime:00000000 $t
    {standard input}:2469   .text.XMC_ETH_MAC_GetPTPTime:00000000 XMC_ETH_MAC_GetPTPTime
    {standard input}:2522   .text.XMC_ETH_MAC_GetPTPTime:00000044 $d
    {standard input}:2527   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 $t
    {standard input}:2532   .text.XMC_ETH_MAC_UpdatePTPTime:00000000 XMC_ETH_MAC_UpdatePTPTime
    {standard input}:2609   .text.XMC_ETH_MAC_UpdatePTPTime:00000074 $d
    {standard input}:2614   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 $t
    {standard input}:2619   .text.XMC_ETH_MAC_SetPTPAlarm:00000000 XMC_ETH_MAC_SetPTPAlarm
    {standard input}:2672   .text.XMC_ETH_MAC_SetPTPAlarm:00000044 $d
    {standard input}:2677   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 $t
    {standard input}:2682   .text.XMC_ETH_MAC_AdjustPTPClock:00000000 XMC_ETH_MAC_AdjustPTPClock
    {standard input}:2747   .text.XMC_ETH_MAC_GetPTPStatus:00000000 $t
    {standard input}:2752   .text.XMC_ETH_MAC_GetPTPStatus:00000000 XMC_ETH_MAC_GetPTPStatus
    {standard input}:2792   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 $t
    {standard input}:2797   .text.XMC_ETH_MAC_GetRxTimeStamp:00000000 XMC_ETH_MAC_GetRxTimeStamp
    {standard input}:2869   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 $t
    {standard input}:2874   .text.XMC_ETH_MAC_GetTxTimeStamp:00000000 XMC_ETH_MAC_GetTxTimeStamp
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
memcpy
XMC_SCU_CLOCK_EnableClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_DisableClock
