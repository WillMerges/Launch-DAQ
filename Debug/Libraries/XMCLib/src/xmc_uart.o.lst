   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_uart.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_USIC_CH_GetTransmitBufferStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_USIC_CH_GetTransmitBufferStatus:
  25              	.LFB184:
  26              	 .file 1 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2016-04-10
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   *************************************************************************************************
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   };
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   };
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit buffer. \n\n
 950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in TBUF[0U].
 951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUFTCI() \n\n\n
 955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUF(XMC_USIC_CH_t *const channel, const uint16_t data)
 957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[0U] = data;
 959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
 965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param transmit_control_information transmit control information to be configured while transmit
 966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31.
 967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit buffer in a control mode. \n\n
 971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the respective control mode is enabled , this API can be used.
 972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_WriteToTBUF() \n\n\n
 976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_WriteToTBUFTCI(XMC_USIC_CH_t *const channel,
 978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint16_t data,
 979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                              const uint32_t transmit_control_information)
 980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
 981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBUF[transmit_control_information] = data;
 982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
 983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
 984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
 985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  word_length Number of bits to be configured for a data word. \n
 988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   \b Range: minimum= 1, maximum= 16. \n
 989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					   e.g: For word length of 8, \a word_length should be provided as 8.
 990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the data word length in number of bits. \n\n
 994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the number of bits to represent a data word. Frame length should be a multiple of word leng
 995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
 996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetFrameLength()\n\n\n
 998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
 999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
1000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_WLE_Msk)) |
1002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                   (uint32_t)(((uint32_t)word_length - 1UL)  << USIC_CH_SCTR_WLE_Pos);
1003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  frame_length Number of bits in a frame. \n
1009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: minimum= 1, maximum= 0x3f. The maximum value for fixed frame size is 0x3f. \n
1010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						e.g: For a frame length of 16, \a frame_length should be provided as 16.
1011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Define the data frame length.\n\n
1015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the number of bits to be serially transmitted in a frame.
1016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The frame length should be multiples of word length. If the value is set to 0x40, the frame leng
1017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * has to be controlled explicitly. 
1018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetWordLength(), XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
1023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_FLE_Msk)) |
1025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                   (((uint32_t)frame_length - 0x1U)  << USIC_CH_SCTR_FLE_Pos);
1026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be enabled. Use @ref XMC_USIC_CH_EVENT_t for the 
1032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enable the channel interrupt events.\n\n
1038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Common channel events related to serial communication can be configured using this API.
1039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR |= event;
1048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Bit mask of the channel events to be disabled. Use @ref XMC_USIC_CH_EVENT_t for the
1054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_EVENT_RECEIVE_START, @ref XMC_USIC_CH_EVENT_DATA_LOST etc. Multip
1055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				can be combined using \a OR operation.
1056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disable the channel interrupt events. \n\n
1060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
1061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EVENT_t enumerates multiple protocol event bitmasks. These enumerations can be used 
1062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent(), XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
1066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
1067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR &= (uint32_t)~event;
1069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				  \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device sup
1074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
1075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
1076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
1077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request Service request number.\n
1078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the interrupt node for USIC channel events. \n\n
1083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
1084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
1085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
1086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableEvent() \n\n\n
1089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
1092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          const uint32_t service_request);
1093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Stataus @ref XMC_USIC_CH_TBUF_STATUS_IDLE if transmit buffer is free,
1098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                 @ref XMC_USIC_CH_TBUF_STATUS_BUSY if transmit buffer is busy.
1099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets transmit buffer status. \n\n
1102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Status indicates whether the transmit buffer is free, or busy transmitting data.
1103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The status depends on the value of TDV flag in TCSR register.
1104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * This status can be used while transmitting data. Transmit data when the transmit buffer
1105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * status is @ref XMC_USIC_CH_TBUF_STATUS_IDLE.
1106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetDataOutputMode() \n\n\n
1109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE XMC_USIC_CH_TBUF_STATUS_t XMC_USIC_CH_GetTransmitBufferStatus(XMC_USIC_CH_t *const 
1111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
  27              	 .loc 1 1111 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (XMC_USIC_CH_TBUF_STATUS_t)(channel->TCSR & USIC_CH_TCSR_TDV_Msk);
  43              	 .loc 1 1112 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a 9B6B     	 ldr r3,[r3,#56]
  46 000c DBB2     	 uxtb r3,r3
  47 000e 23F07F03 	 bic r3,r3,#127
  48 0012 DBB2     	 uxtb r3,r3
1113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
  49              	 .loc 1 1113 0
  50 0014 1846     	 mov r0,r3
  51 0016 0C37     	 adds r7,r7,#12
  52              	.LCFI3:
  53              	 .cfi_def_cfa_offset 4
  54 0018 BD46     	 mov sp,r7
  55              	.LCFI4:
  56              	 .cfi_def_cfa_register 13
  57              	 
  58 001a 5DF8047B 	 ldr r7,[sp],#4
  59              	.LCFI5:
  60              	 .cfi_restore 7
  61              	 .cfi_def_cfa_offset 0
  62 001e 7047     	 bx lr
  63              	 .cfi_endproc
  64              	.LFE184:
  66              	 .section .text.XMC_USIC_CH_SetMode,"ax",%progbits
  67              	 .align 2
  68              	 .thumb
  69              	 .thumb_func
  71              	XMC_USIC_CH_SetMode:
  72              	.LFB219:
1114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief API to get receive buffer status
1117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of data validity check for RBUF0 and RBUF1. \n
1120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   Returned value should be masked with RDV0 and RDV1 bits to know the status. \n
1121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		   \b Range: @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID0, @ref XMC_USIC_CH_RBUF_STATUS_DATA_VALID
1122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if RBUF0 and RBUF1 have valid unread data. \n\n
1125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * It checks the bits RDV0 and RDV1 of the RBUFSR register.
1126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Returns the value of RBUFSR masked with bitmasks of RDV0 and RDV1.
1127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * It can be used to decide whether 2bytes has to be read from RBUF or 1 byte. 
1128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * If both bitmasks XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 and XMC_USIC_CH_RBUF_STATUS_DATA_VALID1
1129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * are set, then 2 bytes can be read from RBUF. If only either of them is set, then only one byte
1130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * can be read from RBUF.
1131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_GetReceiveBufferStatus(XMC_USIC_CH_t *const channel)
1135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t) (channel->RBUFSR & (USIC_CH_RBUFSR_RDV0_Msk | USIC_CH_RBUFSR_RDV1_Msk)));
1137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  start_transmision_mode Transmission mode to be enabled. \n
1144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 								\b Range: @ref XMC_USIC_CH_START_TRANSMISION_DISABLED,
1145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV, @ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2
1146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 								@ref XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1
1147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *                              
1148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures data transmission. \n\n
1152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The configuration affects the data shifted on the DOUT0 pin.
1153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetDataOutputMode() \n\n\n
1156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetStartTransmisionMode(XMC_USIC_CH_t *const channel,
1158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                          const XMC_USIC_CH_START_TRANSMISION_MODE_t
1159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~USIC_CH_TCSR_TDEN_Msk)) | (uint32_t)start_transmisio
1161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  data_output_mode  Data output mode. \n
1168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL, @ref XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTE
1169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the mode for data output. \n\n
1173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel can be configured to shift inverted data or direct data based on the input to the A
1174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetDataOutputMode(XMC_USIC_CH_t *const channel,
1179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const XMC_USIC_CH_DATA_OUTPUT_MODE_t data_output
1180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR = (uint32_t)(channel->SCTR & (~USIC_CH_SCTR_DOCFG_Msk)) | (uint32_t)data_output_mod
1182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables automatic update of frame length. \n\n
1191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the automatic update of frame length is enabled, frame length is configured based on the 
1192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * index of the TBUF[]/IN[] register array. When the data is written to TBUF[x], frame length is co
1193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * with the mask value of \a x at the last 5 bit positions. Same logic is applicable if data is wri
1194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * IN[x] register.
1195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_TXFIFO_PutDataFLEMode() \n\n\n
1198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableFrameLengthControl(XMC_USIC_CH_t *const channel)
1200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR = (uint32_t)(channel->TCSR & (~(USIC_CH_TCSR_WLEMD_Msk |
1202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_SELMD_Msk |
1203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_WAMD_Msk |
1204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          USIC_CH_TCSR_HPCMD_Msk))) |
1205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                          (uint32_t)USIC_CH_TCSR_FLEMD_Msk;
1206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables automatic update of frame length. \n\n
1215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When automatic update of frame length is disabled, frame length has to configured explicitly.
1216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Frame length remains fixed until it is changed again.
1217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableFrameLengthControl(), XMC_USIC_CH_SetFrameLength() \n\n\n
1220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableFrameLengthControl(XMC_USIC_CH_t *const channel)
1222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_FLEMD_Msk;
1224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is set if DX2T becomes active while TDV = 1. \n\n
1233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the transfer trigger unit to set bit TCSR.TE if the trigger signal DX2T becomes active
1234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * for event driven transfer starts.
1235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTBUFDataValidTrigger()\n\n\n
1238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR |= (uint32_t)USIC_CH_TCSR_TDVTR_Msk;
1242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the trigger of TDV depending on DX2T signal. \n\n
1251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Bit TCSR.TE is permanently set.
1252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTBUFDataValidTrigger() \n\n\n
1255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTBUFDataValidTrigger(XMC_USIC_CH_t *const channel)
1257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TCSR &= (uint32_t)~USIC_CH_TCSR_TDVTR_Msk;
1259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  service_request_line service request number of the event to be triggered. \n
1265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 0 to 5.
1266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Trigger a USIC interrupt service request.\n\n
1270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC service request is triggered, the NVIC interrupt associated with it will be 
1271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * generated if enabled. 
1272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInterruptNodePointer() \n\n\n
1275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
1277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)(USIC_CH_FMR_SIO0_Msk << service_request_line);
1279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  transmit_buffer_status clearing or setting the TDV flag. \n
1285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Modify TCSR.TDV and TCSR.TE to control the start of a data word transmission by software.
1290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus() \n\n\n
1293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetTransmitBufferStatus(XMC_USIC_CH_t *const channel,
1295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                 const XMC_USIC_CH_TBUF_STATUS_SET_t transmit_buf
1296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->FMR = (uint32_t)transmit_buffer_status;
1298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  passive_level Value of passive level for the channel. \n
1304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL0, @ref XMC_USIC_CH_PASSIVE_DATA_LEVEL1
1305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Set the passive data level of the output signal. \n\n
1309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the USIC channel transmit stage is idle, the output signal level stays at the 
1310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * configured passive level.
1311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_GetTransmitBufferStatus(), XMC_USIC_CH_SetStartTransmisionMode() \n\n\n
1314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetPassiveDataLevel(XMC_USIC_CH_t *const channel,
1316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                      const XMC_USIC_CH_PASSIVE_DATA_LEVEL_t passive
1317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR &= (~USIC_CH_SCTR_PDL_Msk);
1319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->SCTR |= (uint32_t)passive_level;
1320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /* TX FIFO APIs */
1323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of transmit FIFO filling level to be considered for generating events. \n
1331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Initializes the transmit FIFO. \n\n
1336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO is a subset of a common FIFO sized 64 words. This FIFO is shared between 2 channel
1337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * from where transmit data can be put, for the selected USIC channel. \a size represents the size 
1339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 2. Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A F
1340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * event is generated when the FIFO filling level falls below the \a limit value.
1341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent(), XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
1346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the transmit FIFO. \n
1354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for transmit FIFO filling level to be considered for generating events. \
1356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the transmit FIFO. \n\n
1361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the transmit FIFO. The API shall be used for the 
1362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of transmit FIFO trigger limit. FIFO start position will not be affected on execu
1363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit() \n\n\n
1366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t.
1381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation. Events are configured in the TBC
1383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetInterruptNodePointer() \n\n\n
1389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR |= event;
1393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t \n
1400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the interrupt events related to transmit FIFO. \n\n
1404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_TXFIFO_GetEvent(). 
1406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_TXFIFO_EVENT_CONF_t. Fo
1407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent(), XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TBCTR &= (uint32_t)~event;
1415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				      \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
1420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the transmit FIFO events. \n
1421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: @ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  			@ref XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation. \n
1424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  \b Range: 0 to 5.
1425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the transmit FIFO events.\n\n
1429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A transmit FIFO event can generate an interrupt only if the interrupt node is configured for the
1433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
1443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted. \n
1449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: 16bit unsigned data. minimum= 0, maximum= 65535
1450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data into the transmit FIFO. \n\n
1454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The data provided is placed in the transmit FIFO.
1455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The transmit FIFO should be configured before calling this API.
1456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EnableEvent() \n\n\n
1459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutData(XMC_USIC_CH_t *const channel, const uint16_t data)
1461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[0] = data;
1463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in frame length control mode. \n\n
1475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When frame length control is enabled for dynamic update of frame length, this API can be used.
1476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataFLEMode(XMC_USIC_CH_t *const channel,
1483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data Data to be transmitted.
1493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param frame_length Frame length to be configured while transmitting the data. \n
1494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: minimum= 0, maximum= 31. e.g: For a frame length of 16, set \a frame_length as 15.
1495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Writes data to the transmit FIFO in hardware port control mode. \n\n
1499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When hardware port control is enabled for dynamic update of frame length, this API can be used.
1500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length represents the frame length to be updated by the peripheral. 
1501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \a frame_length is used as index for the IN[] register array.
1502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableFrameLengthControl() \n\n\n
1505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_PutDataHPCMode(XMC_USIC_CH_t *const channel,
1507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint16_t data,
1508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                        const uint32_t frame_length)
1509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->IN[frame_length] = data;
1511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of transmit FIFO. \n\n
1520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Transmit FIFO contents will be cleared and the filling level will be reset to 0.
1521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetLevel() \n\n\n
1524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_Flush(XMC_USIC_CH_t *const channel)
1526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHTB_Msk;
1528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is full
1534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO is not full.
1535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is full. \n\n
1538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO filling level reaches the configured size, FIFO full flag is set.
1539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * User should not write to the FIFO when the transmit FIFO is full.
1540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_IsEmpty(), XMC_USIC_CH_TXFIFO_Flush() \n\n\n
1543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TFULL_Msk);
1547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if transmit FIFO is empty
1553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if transmit FIFO has some data.
1554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if transmit FIFO is empty. \n\n
1557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the transmit FIFO is empty, data can be written to FIFO.
1558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last written word to the transmit FIFO is transmitted out of the FIFO, 
1559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * FIFO empty flag is set.
1560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_TXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_TEMPTY_Msk);
1567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Transmit FIFO filling level. \n 
1573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= transmit FIFO size.
1574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO filling level. \n\n
1577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word written to the FIFO, filling level is updated. The API gives the value
1578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level.
1579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_Flush(), XMC_USIC_CH_TXFIFO_PutData() \n\n\n
1582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_TBFLVL_Msk) >> USIC_CH_TRBSR_TBFLVL_Pos);
1586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard transmit and transmit buffer error events. @ref XMC_USIC_CH_TXFIFO_EV
1592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the transmit FIFO event status. \n\n
1595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of transmit FIFO standard transmit buffer event and transmit buffer error event
1596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bit positions in the TRBSR register in the returned value.
1597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the @ref XMC_USIC_CH_TXFIFO_EVENT_t enumeration for checking the status of 
1598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_ClearEvent() \n\n\n
1604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_TXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_STBI_Msk |
1608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_TBERI_Msk));
1609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Transmit FIFO events to be cleared. \n
1615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			     \b Range: @ref XMC_USIC_CH_TXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_TXFIFO_EVENT_ERROR.
1616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the transmit FIFO event flags in the status register. \n\n
1620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_EVENT enumeration can be used as input. Multiple events
1623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_GetEvent() \n\n\n
1628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_TXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param data_pointer Start position inside the FIFO buffer. \n
1639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to 63.
1640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold of receive FIFO filling level to be considered for generating events. \n
1643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the receive FIFO. \n\n
1648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO is the subset of a common FIFO sized 64 words. This FIFO is shared between 2 channe
1649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Each channel can share the FIFO for transmission and reception. \a data_pointer represents the s
1650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * from where received data can be put. \a size represents the size of receive FIFO as a multiple o
1651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Since the FIFO is shared between 2 USIC channels, FIFO size should be carefully selected. A FIFO
1652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * event or alternative receive buffer event is generated when the FIFO filling level exceeds the \
1653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent(), XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** */
1657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
1658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t data_pointer,
1659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
1660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                   const uint32_t limit);
1661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param size Required size of the receive FIFO. \n
1666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: @ref XMC_USIC_CH_FIFO_DISABLED, @ref XMC_USIC_CH_FIFO_SIZE_2WORDS.. @ref XMC_USIC_CH
1667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param limit Threshold for receive FIFO filling level to be considered for generating events. \n
1668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 		\b Range: 0 to \a size -1.
1669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the size and trigger limit for the receive FIFO. \n\n
1673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The API is not to be called for initializing the receive FIFO. The API shall be used for the 
1674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * runtime change of receive FIFO trigger limit. FIFO start position will not be affected on execut
1675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit()\ n\n\n
1678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
1680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
1681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                             const uint32_t limit);
1682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be enabled. Multiple events can be bitwise OR combined. @ref XMC_USIC_CH_
1687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the interrupt events related to transmit FIFO. \n\n
1691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_t.
1692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Multiple events can be enabled by providing multiple events in a single call. For providing 
1693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.<br>
1694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: API only enables the events. For interrupt generation, interrupt node must be configured a
1696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * must be enabled.
1697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_SetInterruptNodePointer() \n\n\n
1700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t ev
1702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR |= event;
1704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param event Events to be disabled. \n
1711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ERR
1712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			@ref XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE.
1713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the selected interrupt events related to receive FIFO. \n\n
1717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * By disabling the interrupt events, generation of interrupt is stopped. User can poll the event 
1718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * flags from the status register using the API XMC_USIC_CH_RXFIFO_GetEvent(). 
1719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Event bitmasks can be constructed using the enumeration \a XMC_USIC_CH_RXFIFO_EVENT_CONF. For pr
1720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple events, combine the events using bitwise OR operation.
1721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent(), XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t e
1726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->RBCTR &= (uint32_t)~event;
1728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param interrupt_node Node pointer representing the receive FIFO events. \n
1734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD,
1735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					@ref XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE
1736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param service_request The service request to be used for interrupt generation.\n
1737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: 0 to 5.
1738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets an interrupt node for the receive FIFO events. \n\n
1742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A node pointer represents one or more interrupt events. Service request represents the interrupt
1743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * among the 6 interrupt nodes available for USIC module.
1744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * API configures the service request to be used for interrupt generation for the events selected.
1745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A receive FIFO event can generate an interrupt only if the interrupt node is configured for the 
1746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the interrupt generation is enabled for the event. For example, transmit FIFO standard transmit 
1747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * interrupt is generated if the interrupt node for the same is set and interrupt is enabled.<br>
1748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: NVIC node should be explicitly enabled for the interrupt generation.
1750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EnableEvent() \n\n\n
1753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
1755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
1756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                 const uint32_t service_request);
1757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Value read from the receive FIFO. \n
1762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: 16bit data. Length of data depends on the word length configuration.
1763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets data from the receive FIFO. \n\n
1766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO should be read only if data is availble in the FIFO. This can be checked using
1767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * the API XMC_USIC_CH_RXFIFO_IsEmpty(). Receive FIFO error flag will be set if an attempt is made
1768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO. To read all the received data, user should keep reading data
1769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * until receive FIFO is empty.
1770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent() \n\n\n
1773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint16_t XMC_USIC_CH_RXFIFO_GetData(XMC_USIC_CH_t *const channel)
1775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint16_t)(channel->OUTR);
1777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the contents of receive FIFO. \n\n
1786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Receive FIFO contents will be cleared and the filling level will be reset to 0.
1787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetLevel() \n\n\n
1790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_Flush(XMC_USIC_CH_t *const channel)
1792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = (uint32_t)USIC_CH_TRBSCR_FLUSHRB_Msk;
1794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is full
1800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO is not full.
1801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is full. \n\n
1804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO filling level reaches the configured size, FIFO full flag is set.
1805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Any data received when the receive FIFO is full, is lost.
1806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_IsEmpty(), XMC_USIC_CH_RXFIFO_Flush() \n\n\n
1809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsFull(XMC_USIC_CH_t *const channel)
1811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_RFULL_Msk);
1813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status \a true if receive FIFO is empty,
1819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *              \a false if receive FIFO has some data.
1820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Checks if receive FIFO is empty. \n\n
1823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the receive FIFO is empty, received data will be put in receive FIFO.
1824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * When the last received word in the FIFO is read, FIFO empty flag is set. Any attempt
1825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * to read from an empty receive FIFO will set the receive FIFO error flag.
1826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_CH_RXFIFO_IsEmpty(XMC_USIC_CH_t *const channel)
1831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (bool)(channel->TRBSR & USIC_CH_TRBSR_REMPTY_Msk);
1833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return uint32_t Receive FIFO filling level. \n
1839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: minimum= 0(FIFO empty), maximum= receive FIFO size.
1840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO filling level. \n\n
1843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * For every word received, the filling level is incremented. The API gives the value
1844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * of this filling level. The filling level is decremented when the data is read out of the 
1845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * receive FIFO.
1846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_Flush(), XMC_USIC_CH_RXFIFO_PutData() \n\n\n
1849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetLevel(XMC_USIC_CH_t *const channel)
1851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return ((uint32_t)(channel->TRBSR & USIC_CH_TRBSR_RBFLVL_Msk) >> USIC_CH_TRBSR_RBFLVL_Pos);
1853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status of standard receive buffer, alternative receive buffer and receive buffer error e
1859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gets the receive FIFO events' status. \n\n
1864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Gives the status of receive FIFO standard receive buffer event, alternative receive buffer event
1865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The status bits are located at their bitpositions in the TRBSR register in the returned value.
1866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * User can make use of the XMC_USIC_CH_RXFIFO_EVENT enumeration for checking the status of return 
1867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The status can be found by using the bitwise AND operation on the returned value with the enumer
1868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Note: Event status flags should be cleared by the user explicitly.
1870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_ClearEvent()\n\n\n
1873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE uint32_t XMC_USIC_CH_RXFIFO_GetEvent(XMC_USIC_CH_t *const channel)
1875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   return (uint32_t)((channel->TRBSR) & (USIC_CH_TRBSR_SRBI_Msk |
1877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_RBERI_Msk |
1878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                               USIC_CH_TRBSR_ARBI_Msk));
1879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  event Receive FIFO events to be cleared. \n
1885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_RXFIFO_EVENT_STANDARD, @ref XMC_USIC_CH_RXFIFO_EVENT_ERROR,
1886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE.
1887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Clears the receive FIFO event flags in the status register. \n\n
1891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel peripheral does not clear the event flags after they are read.
1892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * This API clears the events provided in the \a mask value. 
1893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_EVENT enumeration can be used as input. Multiple events
1894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * can be cleared by providing a mask value obtained by bitwise OR operation of 
1895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * multiple event enumerations.
1896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_RXFIFO_GetEvent() \n\n\n
1899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_RXFIFO_ClearEvent(XMC_USIC_CH_t *const channel,
1901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                    const uint32_t event)
1902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->TRBSCR = event;
1904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables time measurement using the capture mode timer. \n\n
1913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is enabled by setting the timer enable flag in BRG register.
1914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableTimeMeasurement() \n\n\n
1917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableTimeMeasurement(XMC_USIC_CH_t *const channel)
1919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG |= (uint32_t)USIC_CH_BRG_TMEN_Msk;
1921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables time measurement using the capture mode timer. \n\n
1930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Time measurement is disabled by clearing the timer enable flag in BRG register.
1931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableTimeMeasurement() \n\n\n
1934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableTimeMeasurement(XMC_USIC_CH_t *const channel)
1936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG &= (uint32_t)~USIC_CH_BRG_TMEN_Msk;
1938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the master clock output. \n
1944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0, @ref XMC_USIC_CH_BRG_MASTER_CL
1945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode pin level for the master clock output. \n
1949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMclkOutputPassiveLevel(XMC_USIC_CH_t *const channel,
1951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_MASTER_CLOCK_PASSI
1952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_MCLKCFG_Msk)) | (uint32_t)passive_level;
1954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param passive_level Passive level for the clock output. \n
1959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED,
1960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED,
1961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED,
1962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *							  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED,
1963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param clock_output Shift clock source selection. \n
1964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 					\b Range: Use @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK,
1965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 								  @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1
1966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the idle mode shift clock output level and selects the shift clock source. \n\n
1970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock idle mode output level can be set to logic high or low. Shift clock output can be co
1971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * delay of half shift clock period. Both the configurations are available as enumeration values de
1972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @ref XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t.
1973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * This value should be configured based on the slave device requirement.
1974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Shift clock source can be selected between internal clock(master) and external input(slave).
1975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 
1976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
1977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConfigureShiftClockOutput(XMC_USIC_CH_t *const channel,
1978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIV
1979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                                            const XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
1980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
1981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~(USIC_CH_BRG_SCLKCFG_Msk |
1982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                                              USIC_CH_BRG_SCLKOSEL_Msk))) |
1983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)passive_level |
1984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****                  (uint32_t)clock_output;
1985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
1986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** 
1987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** /**
1988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @param mode USIC channel operation mode. \n
1991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC_CH_OPERATING_MODE_IDLE, @ref XMC_USIC_CH_OPERATING_MODE_SPI,
1992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_UART, @ref XMC_USIC_CH_OPERATING_MODE_I2S,
1993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * 						  @ref XMC_USIC_CH_OPERATING_MODE_I2C.
1994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
1996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the USIC channel operation mode.\n\n
1998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * A USIC channel can support multiple serial communication protocols like UART, SPI, I2C and I2S.
1999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * The API sets the input operation mode to the USIC channel.
2000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  *
2001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
2002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_Enable(), XMC_USIC_CH_Enable() \n\n\n
2003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****  */
2004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetMode(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_OPERATING_
2005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** {
  73              	 .loc 1 2005 0
  74              	 .cfi_startproc
  75              	 
  76              	 
  77              	 
  78 0000 80B4     	 push {r7}
  79              	.LCFI6:
  80              	 .cfi_def_cfa_offset 4
  81              	 .cfi_offset 7,-4
  82 0002 83B0     	 sub sp,sp,#12
  83              	.LCFI7:
  84              	 .cfi_def_cfa_offset 16
  85 0004 00AF     	 add r7,sp,#0
  86              	.LCFI8:
  87              	 .cfi_def_cfa_register 7
  88 0006 7860     	 str r0,[r7,#4]
  89 0008 0B46     	 mov r3,r1
  90 000a FB70     	 strb r3,[r7,#3]
2006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h ****   channel->CCR = (uint32_t)(channel->CCR & (~(USIC_CH_CCR_MODE_Msk))) | (uint32_t)mode;
  91              	 .loc 1 2006 0
  92 000c 7B68     	 ldr r3,[r7,#4]
  93 000e 1B6C     	 ldr r3,[r3,#64]
  94 0010 23F00F02 	 bic r2,r3,#15
  95 0014 FB78     	 ldrb r3,[r7,#3]
  96 0016 1A43     	 orrs r2,r2,r3
  97 0018 7B68     	 ldr r3,[r7,#4]
  98 001a 1A64     	 str r2,[r3,#64]
2007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_usic.h **** }
  99              	 .loc 1 2007 0
 100 001c 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001e BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 0020 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0024 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE219:
 115 0026 00BF     	 .section .text.XMC_UART_CH_GetStatusFlag,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_UART_CH_GetStatusFlag:
 121              	.LFB226:
 122              	 .file 2 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_uart.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  /**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @file xmc_uart.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @date 2016-05-20
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @cond
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** ***************************************************************************************************
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * All rights reserved.                        
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                                             
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * following conditions are met:   
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer.                        
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                                                                              
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Change History
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * --------------
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-02-20:
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Initial
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *      
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-05-20:
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Description updated <br>
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_TriggerServiceRequest() and XMC_UART_CH_SelectInterruptNodePointer <br>
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-06-20:
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 2015-09-01:
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_SetInputSource() for avoiding complete DXCR register overwriting. <br
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Modified XMC_UART_CH_EVENT_t enum for supporting XMC_UART_CH_EnableEvent() and XMC_UART_CH
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *       for supporting multiple events configuration <br>
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 2016-05-20:
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *     - Added XMC_UART_CH_EnableDataTransmission() and XMC_UART_CH_DisableDataTransmission()
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @endcond 
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #ifndef XMC_UART_H
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART_H
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * HEADER FILES
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #include "xmc_usic.h"
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup XMClib XMC Peripheral Library
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @addtogroup UART
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @brief Universal Asynchronous Receiver/Transmitter (UART) driver for XMC microcontroller family.
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The UART driver uses Universal Serial Interface Channel(USIC) module to implement UART protocol.
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * It provides APIs to configure USIC channel for UART communication. The driver enables the user
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * in getting the status of UART protocol events, configuring interrupt service requests, protocol
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * related parameter configuration etc.
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver features:
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Configuration structure XMC_UART_CH_CONFIG_t and initialization function XMC_UART_CH_Init()
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Enumeration of events with their bit masks @ref XMC_UART_CH_EVENT_t, @ref XMC_UART_CH_STATUS_
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows the selection of input source for the DX0 input stage using the API XMC_UART_CH_SetInp
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows configuration of baudrate using XMC_UART_CH_SetBaudrate() and configuration of data le
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  XMC_UART_CH_SetWordLength() and XMC_UART_CH_SetFrameLength()
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Provides the status of UART protocol events, XMC_UART_CH_GetStatusFlag()
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * -# Allows transmission of data using XMC_UART_CH_Transmit() and gets received data using XMC_UAR
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @{
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * MACROS
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC0)
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH0 XMC_USIC0_CH0 /**< USIC0 channel 0 base address */
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART0_CH1 XMC_USIC0_CH1 /**< USIC0 channel 1 base address */
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC1)
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH0 XMC_USIC1_CH0 /**< USIC1 channel 0 base address */
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART1_CH1 XMC_USIC1_CH1 /**< USIC1 channel 1 base address */
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #if defined(USIC2)
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH0 XMC_USIC2_CH0 /**< USIC2 channel 0 base address */
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #define XMC_UART2_CH1 XMC_USIC2_CH1 /**< USIC2 channel 1 base address */
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * ENUMS
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART driver status
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_OK,     /**< UART driver status : OK*/
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_ERROR,  /**< UART driver status : ERROR */
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_BUSY    /**< UART driver status : BUSY */
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_t;
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** * UART portocol status. The enum values can be used for getting the status of UART channel.
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** *
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** */
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_STATUS_FLAG
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE = USIC_CH_PSR_ASCMode_TXIDLE_Msk,                 /**< 
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEPTION_IDLE = USIC_CH_PSR_ASCMode_RXIDLE_Msk,                    /**< 
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED = USIC_CH_PSR_ASCMode_SBD_Msk,       /**< 
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_COLLISION_DETECTED = USIC_CH_PSR_ASCMode_COL_Msk,                   /**< 
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_NOISE_DETECTED = USIC_CH_PSR_ASCMode_RNS_Msk,              /**< 
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_0 = USIC_CH_PSR_ASCMode_FER0_Msk,          /**< 
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_FORMAT_ERROR_IN_STOP_BIT_1 = USIC_CH_PSR_ASCMode_FER1_Msk,          /**< 
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_FRAME_FINISHED = USIC_CH_PSR_ASCMode_RFF_Msk,               /**< 
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMITTER_FRAME_FINISHED = USIC_CH_PSR_ASCMode_TFF_Msk,           /**< 
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY = USIC_CH_PSR_ASCMode_BUSY_Msk,                /**< 
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVER_START_INDICATION = USIC_CH_PSR_ASCMode_RSIF_Msk,           /**< 
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_DATA_LOST_INDICATION = USIC_CH_PSR_ASCMode_DLIF_Msk,                /**< 
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_SHIFT_INDICATION = USIC_CH_PSR_ASCMode_TSIF_Msk,           /**< 
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATION = USIC_CH_PSR_ASCMode_TBIF_Msk,          /**< 
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_RIF_Msk,                   /**< 
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_ALTERNATIVE_RECEIVE_INDICATION = USIC_CH_PSR_ASCMode_AIF_Msk,       /**< 
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_STATUS_FLAG_BAUD_RATE_GENERATOR_INDICATION = USIC_CH_PSR_ASCMode_BRGIF_Msk      /**< 
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_STATUS_FLAG_t;
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** * UART configuration events. The enums can be used for configuring events using the CCR register.
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** */
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_CH_UART_EVENT
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk,  /**< Receive start event */
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk,  /**< Data lost event */
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk,  /**< Transmit shift event */
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk,  /**< Transmit buffer event */
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,   /**< Receive event */
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,   /**< Alternate receive event */
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk, /**< Baudrate generator event */
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_SYNCHRONIZATION_BREAK = USIC_CH_PCR_ASCMode_SBIEN_Msk, /**< Event synchronizati
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_COLLISION = USIC_CH_PCR_ASCMode_CDEN_Msk,              /**< Event collision */
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_RECEIVER_NOISE = USIC_CH_PCR_ASCMode_RNIEN_Msk,        /**< Event receiver nois
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FORMAT_ERROR = USIC_CH_PCR_ASCMode_FEIEN_Msk,          /**< Event format error 
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_EVENT_FRAME_FINISHED = USIC_CH_PCR_ASCMode_FFIEN_Msk         /**< Event frame finishe
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_EVENT_t;
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART Input sampling frequency options
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT_SAMPLING_FREQ
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FPERIPH            = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH,    
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_D
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_SAMPLING_FREQ_t;
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART input stages
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INPUT
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD = 0UL   /**< UART input stage DX0*/
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #if UC_FAMILY == XMC1
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   ,
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD1 = 3UL, /**< UART input stage DX3*/
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INPUT_RXD2 = 5UL  /**< UART input stage DX5*/
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INPUT_t;
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART channel interrupt node pointers
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef enum XMC_UART_CH_INTERRUPT_NODE_POINTER
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANS
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_RECEIVE             = XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEI
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTER
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_UART_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTO
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_INTERRUPT_NODE_POINTER_t;
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * DATA STRUCTURES
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * UART initialization structure
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** */
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** typedef struct XMC_UART_CH_CONFIG
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   uint32_t baudrate;                         /**< Desired baudrate. \b Range: minimum= 100, maximum
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t data_bits;                         /**< Number of bits for the data field. Value configur
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 16*/
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t frame_length;                      /**< Indicates nmber of bits in a frame. Configured as
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                   \b Range: minimum= 1, maximum= 63*/
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t stop_bits;                         /**< Number of stop bits. \b Range: minimum= 1, maximu
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   uint8_t oversampling;						           /**< Number of samples for a symbol(DCTQ).\b Range: minimum
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_PARITY_MODE_t parity_mode;     /**< Parity mode. \b Range: @ref XMC_USIC_CH_PARITY_MO
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                   @ref XMC_USIC_CH_PARITY_MODE_ODD*/
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** } XMC_UART_CH_CONFIG_t;
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**************************************************************************************************
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * API PROTOTYPES
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  **************************************************************************************************
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #ifdef __cplusplus
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** extern "C" {
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** #endif
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1,XMC_UART1_CH0, XMC_UART1_CH1,XMC_UART2_CH0, XM
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param config Constant pointer to UART configuration structure of type @ref XMC_UART_CH_CONFIG_t
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status of initializing the USIC channel for UART protocol.\n
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: @ref XMC_UART_CH_STATUS_OK if initialization is successful.\n
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                    @ref XMC_UART_CH_STATUS_ERROR if configuration of baudrate failed.
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Initializes the USIC channel for UART protocol.\n\n
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * During the initialization, USIC channel is enabled, baudrate is configured with the defined over
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * in the intialization structure. If the oversampling value is set to 0 in the structure, the defa
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * is considered. Sampling point for each symbol is configured at the half of sampling period. Symb
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * majority decision among 3 samples. 
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length is configured with the number of data bits. If the value of \a frame_length is 0, th
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * is set to the same value as word length. If \a frame_length is greater than 0, it is set as the 
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Parity mode is set to the value configured for \a parity_mode.
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The USIC channel should be set to UART mode by calling the XMC_UART_CH_Start() API after the ini
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Start(), XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Init(XMC_USIC_CH_t *const channel, const XMC_UART_CH_CONFIG_t *const config);
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the USIC channel operation mode to UART mode.\n\n
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is set to 2(UART mode). This API should be called after configurin
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * the USIC channel. Transmission and reception can happen only when the UART mode is set. 
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * This is an inline function.
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Stop(), XMC_UART_CH_Transmit()\n\n\n
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_Start(XMC_USIC_CH_t *const channel)
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   channel->CCR = (uint32_t)(((channel->CCR) & (~USIC_CH_CCR_MODE_Msk)) | (uint32_t)XMC_USIC_CH_OPER
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status to indicate if the communication channel is stopped successf
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_OK if the communication channel is stopped.
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *                              @ref XMC_UART_CH_STATUS_BUSY if the communication channel is busy.
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Stops the UART communication.\n\n
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * CCR register bitfield \a Mode is reset. This disables the communication.
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Before starting the communication again, the channel has to be reconfigured.
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init() \n\n\n
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel);
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, XMC_UART0_CH1 ,XMC_UART1_CH0, XMC_UART1_CH1, XMC_UART2_CH0,
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param rate Desired baudrate. \n
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *           \b Range: minimum value = 100, maximum value depends on the peripheral clock frequency
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 This can be related to the number of samples for each logic state of the data signal.\n
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 \b Range: 4 to 32. Value should be chosen based on the protocol used.
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return XMC_UART_CH_STATUS_t Status indicating the baudrate configuration.\n
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 			     \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					 @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description:</b><br>
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the bus speed in bits per second.\n\n
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Derives the values of \a STEP and PDIV to arrive at the optimum realistic speed possible.
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \a oversampling is the number of samples to be taken for each symbol of UART protocol.
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Default \a oversampling of 16 is considered if the input \a oversampling is less than 4. It is r
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * a minimum oversampling of 4 for UART.
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_Init(), XMC_UART_CH_Stop()
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  data Data to be transmitted. \n 
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: 16 bit unsigned data within the range 0 to 65535. Actual size of
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          data transmitted depends on the configured number of bits for the UART protocol in the 
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Transmits data over serial communication channel using UART protocol.\n\n
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either put to the transmit FIFO or to TBUF register.
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Before putting data to TBUF, the API waits for TBUF to finish shifting its contents to shift reg
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * So user can continuously execute the API without checking for TBUF busy status. Based on the num
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * data bits configured, the lower significant bits will be extracted for transmission.
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: When FIFO is not configured, the API waits for the TBUF to be available. 
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * This makes the execution a blocking call.
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetReceivedData() \n\n\n
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data);
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return uint16_t Received data over UART communication channel.
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides one word of data received over UART communication channel.\n\n
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Based on the channel configuration, data is either read from the receive FIFO or RBUF register.
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Before returning the value, there is no check for data validity. User should check the appropria
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * data receive flags(standard receive/alternative receive/FIFO standard receive/FIFO alternative r
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * before executing the API. Reading from an empty receive FIFO can generate a receive error event.
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_GetStatusFlag(), XMC_UART_CH_Transmit() \n\n\n
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel);
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  word_length Data word length. \n
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 16.
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the data word length in number of bits.\n\n
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Word length can range from 1 to 16. It indicates the number of data bits in a data word.
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a word_length will be decremented by 1 before setting the value to \a SCTR registe
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * If the UART data bits is more than 16, then the frame length should be set to the actual number 
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * word length should be configured with the number of bits expected in each transaction. For examp
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * for UART communication is 20 bits, then the frame length should be set as 20. Word length can be
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * transmit and receive handling. If data is stored as 8bit array, then the word length can be set 
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * a full message of UART data should be transmitted/ received as 3 data words.
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetFrameLength() \n\n\n
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetWordLength(XMC_USIC_CH_t *const channel, const uint8_t word_len
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetWordLength(channel, word_length);
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  frame_length Number of data bits in each UART frame. \n
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: minimum= 1, maximum= 64.
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the number of data bits for UART communication.\n\n
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The frame length is configured by setting the input value to \a SCTR register.
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The value of \a frame_length will be decremented by 1, before setting it to the register.
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Frame length should not be set to 64 for UART communication.
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SetWordLength() \n\n\n
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetFrameLength(XMC_USIC_CH_t *const channel, const uint8_t frame_l
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetFrameLength(channel, frame_length);
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Event bitmasks to enable. Use the type @ref XMC_UART_CH_EVENT_t for naming events.
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Enables interrupt events for UART communication.\n\n
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @ref XMC_UART_CH_EVENT_t enumerates multiple event bitmasks. These enumerations can be used as i
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are configured by setting bits in the CCR register.
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(), XMC_UART_CH_SetInterruptNodePointer(), XMC_UART_CH_GetStatusFlag() \
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  event Bitmask of events to disable. Use the type @ref XMC_UART_CH_EVENT_t for naming eve
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART_CH_EVENT_RECEIVE_START, @ref XMC_UART_CH_EVENT_DATA_LOST,
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  @ref XMC_UART_CH_EVENT_TRANSMIT_SHIFT, @ref XMC_UART_CH_EVENT_TRANSMIT_BUFFER,
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  etc.
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Disables the interrupt events by clearing the bits in CCR register.\n\n
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EVENT_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as i
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_ClearStatusFlag(), XMC_UART_CH_EnableEvent() \n\n\n
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event);
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number for generating protocol interrupts.\n
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: 0 to 5.
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for UART channel protocol events.\n\n
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * For all the protocol events enlisted in the enumeration XMC_UART_CH_EVENT_t, one common
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * interrupt gets generated. The service request connects the interrupt node to the UART 
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * protocol events.
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                          const uint8_t service_request)
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL, 
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                               (uint32_t)service_request);
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  interrupt_node Interrupt node pointer to be configured. \n
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: @ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT,
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  			@ref XMC_UART_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER etc.
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param service_request Service request number.\n
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 						  \b Range: 0 to 5.
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Sets the interrupt node for USIC channel events. \n\n
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * For an event to generate interrupt, node pointer should be configured with service request(SR0, 
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * The NVIC node gets linked to the interrupt event by doing so.<br>
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Note: NVIC node should be separately enabled to generate the interrupt.
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent() \n\n\n
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_SelectInterruptNodePointer(XMC_USIC_CH_t *const channel,
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const XMC_UART_CH_INTERRUPT_NODE_POINTE
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****                                                             const uint32_t service_request)
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_SetInterruptNodePointer(channel, (XMC_USIC_CH_INTERRUPT_NODE_POINTER_t)interrupt_node
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 		                                       (uint32_t)service_request);
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				   \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@r
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param  service_request_line service request number of the event to be triggered. \n
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 			\b Range: 0 to 5.
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Trigger a UART interrupt service request.\n\n
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * When the UART service request is triggered, the NVIC interrupt associated with it will be
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * generated if enabled.
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_SelectInterruptNodePointer() \n\n\n
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_TriggerServiceRequest(XMC_USIC_CH_t *const channel, const uint32_t
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   XMC_USIC_CH_TriggerServiceRequest(channel, (uint32_t)service_request_line);
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return Status of UART channel events. \n 
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Provides the status of UART channel events.\n\n
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Status provided by the API represents the status of multiple events at their bit positions. The 
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * obtained using the enumeration XMC_UART_CH_STATUS_FLAG_t. Event status is obtained by reading
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * the register PSR_ASCMode.
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_EnableEvent(),  XMC_UART_CH_ClearStatusFlag()\n\n\n
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE uint32_t XMC_UART_CH_GetStatusFlag(XMC_USIC_CH_t *const channel)
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 123              	 .loc 2 534 0
 124              	 .cfi_startproc
 125              	 
 126              	 
 127              	 
 128 0000 80B4     	 push {r7}
 129              	.LCFI12:
 130              	 .cfi_def_cfa_offset 4
 131              	 .cfi_offset 7,-4
 132 0002 83B0     	 sub sp,sp,#12
 133              	.LCFI13:
 134              	 .cfi_def_cfa_offset 16
 135 0004 00AF     	 add r7,sp,#0
 136              	.LCFI14:
 137              	 .cfi_def_cfa_register 7
 138 0006 7860     	 str r0,[r7,#4]
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   return channel->PSR_ASCMode;
 139              	 .loc 2 535 0
 140 0008 7B68     	 ldr r3,[r7,#4]
 141 000a 9B6C     	 ldr r3,[r3,#72]
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 142              	 .loc 2 536 0
 143 000c 1846     	 mov r0,r3
 144 000e 0C37     	 adds r7,r7,#12
 145              	.LCFI15:
 146              	 .cfi_def_cfa_offset 4
 147 0010 BD46     	 mov sp,r7
 148              	.LCFI16:
 149              	 .cfi_def_cfa_register 13
 150              	 
 151 0012 5DF8047B 	 ldr r7,[sp],#4
 152              	.LCFI17:
 153              	 .cfi_restore 7
 154              	 .cfi_def_cfa_offset 0
 155 0016 7047     	 bx lr
 156              	 .cfi_endproc
 157              	.LFE226:
 159              	 .section .text.XMC_UART_CH_ClearStatusFlag,"ax",%progbits
 160              	 .align 2
 161              	 .thumb
 162              	 .thumb_func
 164              	XMC_UART_CH_ClearStatusFlag:
 165              	.LFB227:
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** 
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** /**
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param channel Constant pointer to USIC channel handle of type @ref XMC_USIC_CH_t \n
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 				  \b Range: @ref XMC_UART0_CH0, @ref XMC_UART0_CH1,@ref XMC_UART1_CH0,@ref XMC_UART1_CH1,@re
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @param flag UART events to be cleared. \n
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *          \b Range: Use @ref XMC_UART_CH_STATUS_FLAG_t enumerations for
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					event bitmasks. @ref XMC_UART_CH_STATUS_FLAG_TRANSMISSION_IDLE, @ref XMC_UART_CH_STATUS_FLA
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * 					@ref XMC_UART_CH_STATUS_FLAG_SYNCHRONIZATION_BREAK_DETECTED etc.
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * @return None
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Description</b><br>
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Clears the status of UART channel events.\n\n
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Multiple events can be combined using the bitwise OR operation and configured in one function ca
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_STATUS_FLAG_t enumerates multiple event bitmasks. These enumerations can be used as 
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * Events are cleared by setting the bitmask to the PSCR register.
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  *
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * \par<b>Related APIs:</b><BR>
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  * XMC_UART_CH_DisableEvent(),  XMC_UART_CH_GetStatusFlag()\n\n\n
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****  */
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** __STATIC_INLINE void XMC_UART_CH_ClearStatusFlag(XMC_USIC_CH_t *const channel, const uint32_t flag)
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** {
 166              	 .loc 2 557 0
 167              	 .cfi_startproc
 168              	 
 169              	 
 170              	 
 171 0000 80B4     	 push {r7}
 172              	.LCFI18:
 173              	 .cfi_def_cfa_offset 4
 174              	 .cfi_offset 7,-4
 175 0002 83B0     	 sub sp,sp,#12
 176              	.LCFI19:
 177              	 .cfi_def_cfa_offset 16
 178 0004 00AF     	 add r7,sp,#0
 179              	.LCFI20:
 180              	 .cfi_def_cfa_register 7
 181 0006 7860     	 str r0,[r7,#4]
 182 0008 3960     	 str r1,[r7]
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h ****   channel->PSCR = flag;
 183              	 .loc 2 558 0
 184 000a 7B68     	 ldr r3,[r7,#4]
 185 000c 3A68     	 ldr r2,[r7]
 186 000e DA64     	 str r2,[r3,#76]
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_uart.h **** }
 187              	 .loc 2 559 0
 188 0010 0C37     	 adds r7,r7,#12
 189              	.LCFI21:
 190              	 .cfi_def_cfa_offset 4
 191 0012 BD46     	 mov sp,r7
 192              	.LCFI22:
 193              	 .cfi_def_cfa_register 13
 194              	 
 195 0014 5DF8047B 	 ldr r7,[sp],#4
 196              	.LCFI23:
 197              	 .cfi_restore 7
 198              	 .cfi_def_cfa_offset 0
 199 0018 7047     	 bx lr
 200              	 .cfi_endproc
 201              	.LFE227:
 203 001a 00BF     	 .section .text.XMC_UART_CH_Init,"ax",%progbits
 204              	 .align 2
 205              	 .global XMC_UART_CH_Init
 206              	 .thumb
 207              	 .thumb_func
 209              	XMC_UART_CH_Init:
 210              	.LFB240:
 211              	 .file 3 "../Libraries/XMCLib/src/xmc_uart.c"
   1:../Libraries/XMCLib/src/xmc_uart.c **** /**
   2:../Libraries/XMCLib/src/xmc_uart.c ****  * @file xmc_uart.c
   3:../Libraries/XMCLib/src/xmc_uart.c ****  * @date 2016-07-22
   4:../Libraries/XMCLib/src/xmc_uart.c ****  *
   5:../Libraries/XMCLib/src/xmc_uart.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_uart.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_uart.c ****  *
   9:../Libraries/XMCLib/src/xmc_uart.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_uart.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_uart.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_uart.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_uart.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  18:../Libraries/XMCLib/src/xmc_uart.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_uart.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  21:../Libraries/XMCLib/src/xmc_uart.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_uart.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_uart.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_uart.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_uart.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_uart.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_uart.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_uart.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_uart.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_uart.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_uart.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_uart.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_uart.c ****  *
  36:../Libraries/XMCLib/src/xmc_uart.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_uart.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_uart.c ****  *
  39:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_uart.c ****  *      
  42:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_uart.c ****  *     - xmc_uart_ch_stop API implementation corrected.
  44:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Stop() API for not setting to IDLE the channel if it is busy <br>
  45:../Libraries/XMCLib/src/xmc_uart.c ****  *
  46:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Removed GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_uart.c ****  *
  49:../Libraries/XMCLib/src/xmc_uart.c ****  * 2015-09-01:
  50:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_EnableEvent() and XMC_UART_CH_DisableEvent() for supporting multiple 
  51:../Libraries/XMCLib/src/xmc_uart.c ****  * 
  52:../Libraries/XMCLib/src/xmc_uart.c ****  * 2016-07-22:
  53:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Init() to enable transfer status BUSY
  54:../Libraries/XMCLib/src/xmc_uart.c ****  *     - Modified XMC_UART_CH_Stop() to check for transfer status
  55:../Libraries/XMCLib/src/xmc_uart.c ****  *
  56:../Libraries/XMCLib/src/xmc_uart.c ****  * @endcond 
  57:../Libraries/XMCLib/src/xmc_uart.c ****  *
  58:../Libraries/XMCLib/src/xmc_uart.c ****  */
  59:../Libraries/XMCLib/src/xmc_uart.c **** 
  60:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  61:../Libraries/XMCLib/src/xmc_uart.c ****  * HEADER FILES
  62:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  63:../Libraries/XMCLib/src/xmc_uart.c **** 
  64:../Libraries/XMCLib/src/xmc_uart.c **** #include <xmc_scu.h>
  65:../Libraries/XMCLib/src/xmc_uart.c **** #include <xmc_uart.h>
  66:../Libraries/XMCLib/src/xmc_uart.c **** 
  67:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  68:../Libraries/XMCLib/src/xmc_uart.c ****  * MACROS
  69:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  70:../Libraries/XMCLib/src/xmc_uart.c ****  
  71:../Libraries/XMCLib/src/xmc_uart.c **** #define XMC_UART_CH_OVERSAMPLING (16UL)
  72:../Libraries/XMCLib/src/xmc_uart.c **** #define XMC_UART_CH_OVERSAMPLING_MIN_VAL (4UL)
  73:../Libraries/XMCLib/src/xmc_uart.c **** 
  74:../Libraries/XMCLib/src/xmc_uart.c **** /**************************************************************************************************
  75:../Libraries/XMCLib/src/xmc_uart.c ****  * API IMPLEMENTATION
  76:../Libraries/XMCLib/src/xmc_uart.c ****  **************************************************************************************************
  77:../Libraries/XMCLib/src/xmc_uart.c **** 
  78:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_Init(XMC_USIC_CH_t *channel, const XMC_UART_CH_CONFIG_t *const config)
  79:../Libraries/XMCLib/src/xmc_uart.c **** {
 212              	 .loc 3 79 0
 213              	 .cfi_startproc
 214              	 
 215              	 
 216 0000 80B5     	 push {r7,lr}
 217              	.LCFI24:
 218              	 .cfi_def_cfa_offset 8
 219              	 .cfi_offset 7,-8
 220              	 .cfi_offset 14,-4
 221 0002 84B0     	 sub sp,sp,#16
 222              	.LCFI25:
 223              	 .cfi_def_cfa_offset 24
 224 0004 00AF     	 add r7,sp,#0
 225              	.LCFI26:
 226              	 .cfi_def_cfa_register 7
 227 0006 7860     	 str r0,[r7,#4]
 228 0008 3960     	 str r1,[r7]
  80:../Libraries/XMCLib/src/xmc_uart.c ****   uint32_t oversampling = XMC_UART_CH_OVERSAMPLING;
 229              	 .loc 3 80 0
 230 000a 1023     	 movs r3,#16
 231 000c FB60     	 str r3,[r7,#12]
  81:../Libraries/XMCLib/src/xmc_uart.c **** 
  82:../Libraries/XMCLib/src/xmc_uart.c ****   /* USIC channel switched on*/
  83:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_USIC_CH_Enable(channel);
 232              	 .loc 3 83 0
 233 000e 7868     	 ldr r0,[r7,#4]
 234 0010 FFF7FEFF 	 bl XMC_USIC_CH_Enable
  84:../Libraries/XMCLib/src/xmc_uart.c ****   
  85:../Libraries/XMCLib/src/xmc_uart.c ****   if(config->oversampling != 0U)
 235              	 .loc 3 85 0
 236 0014 3B68     	 ldr r3,[r7]
 237 0016 DB79     	 ldrb r3,[r3,#7]
 238 0018 002B     	 cmp r3,#0
 239 001a 02D0     	 beq .L8
  86:../Libraries/XMCLib/src/xmc_uart.c ****   {
  87:../Libraries/XMCLib/src/xmc_uart.c ****     oversampling = (uint32_t)config->oversampling;
 240              	 .loc 3 87 0
 241 001c 3B68     	 ldr r3,[r7]
 242 001e DB79     	 ldrb r3,[r3,#7]
 243 0020 FB60     	 str r3,[r7,#12]
 244              	.L8:
  88:../Libraries/XMCLib/src/xmc_uart.c ****   }
  89:../Libraries/XMCLib/src/xmc_uart.c ****   
  90:../Libraries/XMCLib/src/xmc_uart.c ****   /* Configure baud rate */
  91:../Libraries/XMCLib/src/xmc_uart.c ****   (void)XMC_USIC_CH_SetBaudrate(channel, config->baudrate, oversampling);
 245              	 .loc 3 91 0
 246 0022 3B68     	 ldr r3,[r7]
 247 0024 1B68     	 ldr r3,[r3]
 248 0026 7868     	 ldr r0,[r7,#4]
 249 0028 1946     	 mov r1,r3
 250 002a FA68     	 ldr r2,[r7,#12]
 251 002c FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
  92:../Libraries/XMCLib/src/xmc_uart.c ****   
  93:../Libraries/XMCLib/src/xmc_uart.c ****   /* Configure frame format
  94:../Libraries/XMCLib/src/xmc_uart.c ****    * Configure the number of stop bits
  95:../Libraries/XMCLib/src/xmc_uart.c ****    * Pulse length is set to 0 to have standard UART signaling, 
  96:../Libraries/XMCLib/src/xmc_uart.c ****    * i.e. the 0 level is signaled during the complete bit time
  97:../Libraries/XMCLib/src/xmc_uart.c ****    * Sampling point set equal to the half of the oversampling period
  98:../Libraries/XMCLib/src/xmc_uart.c ****    * Enable Sample Majority Decision 
  99:../Libraries/XMCLib/src/xmc_uart.c ****    * Enable Transfer Status BUSY
 100:../Libraries/XMCLib/src/xmc_uart.c ****    */
 101:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode = (uint32_t)(((config->stop_bits - 1UL) << USIC_CH_PCR_ASCMode_STPB_Pos) |
 252              	 .loc 3 101 0
 253 0030 3B68     	 ldr r3,[r7]
 254 0032 9B79     	 ldrb r3,[r3,#6]
 255 0034 013B     	 subs r3,r3,#1
 256 0036 5A00     	 lsls r2,r3,#1
 102:../Libraries/XMCLib/src/xmc_uart.c ****                                     (((oversampling >> 1UL) + 1UL) << USIC_CH_PCR_ASCMode_SP_Pos) |
 257              	 .loc 3 102 0
 258 0038 FB68     	 ldr r3,[r7,#12]
 259 003a 5B08     	 lsrs r3,r3,#1
 260 003c 0133     	 adds r3,r3,#1
 261 003e 1B02     	 lsls r3,r3,#8
 101:../Libraries/XMCLib/src/xmc_uart.c ****                                     (((oversampling >> 1UL) + 1UL) << USIC_CH_PCR_ASCMode_SP_Pos) |
 262              	 .loc 3 101 0
 263 0040 1343     	 orrs r3,r3,r2
 264 0042 43F44033 	 orr r3,r3,#196608
 265 0046 43F00103 	 orr r3,r3,#1
 266 004a 7A68     	 ldr r2,[r7,#4]
 267 004c D363     	 str r3,[r2,#60]
 103:../Libraries/XMCLib/src/xmc_uart.c ****                                     USIC_CH_PCR_ASCMode_SMD_Msk |
 104:../Libraries/XMCLib/src/xmc_uart.c ****                                     USIC_CH_PCR_ASCMode_RSTEN_Msk | USIC_CH_PCR_ASCMode_TSTEN_Msk);
 105:../Libraries/XMCLib/src/xmc_uart.c **** 
 106:../Libraries/XMCLib/src/xmc_uart.c ****   /* Set passive data level, high
 107:../Libraries/XMCLib/src/xmc_uart.c ****      Set word length. Data bits - 1
 108:../Libraries/XMCLib/src/xmc_uart.c ****      If frame length is > 0, frame_lemgth-1; else, FLE = WLE (Data bits - 1)
 109:../Libraries/XMCLib/src/xmc_uart.c ****      Transmission Mode: The shift control signal is considered active if it
 110:../Libraries/XMCLib/src/xmc_uart.c ****      is at 1-level. This is the setting to be programmed to allow data transfers */
 111:../Libraries/XMCLib/src/xmc_uart.c ****   channel->SCTR = (uint32_t)((((uint32_t)config->data_bits - 1UL) << USIC_CH_SCTR_WLE_Pos) |
 268              	 .loc 3 111 0
 269 004e 3B68     	 ldr r3,[r7]
 270 0050 1B79     	 ldrb r3,[r3,#4]
 271 0052 013B     	 subs r3,r3,#1
 272 0054 1B06     	 lsls r3,r3,#24
 273 0056 43F48172 	 orr r2,r3,#258
 274 005a 7B68     	 ldr r3,[r7,#4]
 275 005c 5A63     	 str r2,[r3,#52]
 112:../Libraries/XMCLib/src/xmc_uart.c ****                              ((0x1UL << USIC_CH_SCTR_TRM_Pos) | USIC_CH_SCTR_PDL_Msk));
 113:../Libraries/XMCLib/src/xmc_uart.c **** 
 114:../Libraries/XMCLib/src/xmc_uart.c ****   if (config->frame_length != 0U)
 276              	 .loc 3 114 0
 277 005e 3B68     	 ldr r3,[r7]
 278 0060 5B79     	 ldrb r3,[r3,#5]
 279 0062 002B     	 cmp r3,#0
 280 0064 09D0     	 beq .L9
 115:../Libraries/XMCLib/src/xmc_uart.c ****   {
 116:../Libraries/XMCLib/src/xmc_uart.c ****     channel->SCTR |= (uint32_t)(((uint32_t)config->frame_length - 1UL) << USIC_CH_SCTR_FLE_Pos);
 281              	 .loc 3 116 0
 282 0066 7B68     	 ldr r3,[r7,#4]
 283 0068 5A6B     	 ldr r2,[r3,#52]
 284 006a 3B68     	 ldr r3,[r7]
 285 006c 5B79     	 ldrb r3,[r3,#5]
 286 006e 013B     	 subs r3,r3,#1
 287 0070 1B04     	 lsls r3,r3,#16
 288 0072 1A43     	 orrs r2,r2,r3
 289 0074 7B68     	 ldr r3,[r7,#4]
 290 0076 5A63     	 str r2,[r3,#52]
 291 0078 08E0     	 b .L10
 292              	.L9:
 117:../Libraries/XMCLib/src/xmc_uart.c ****   }
 118:../Libraries/XMCLib/src/xmc_uart.c ****   else
 119:../Libraries/XMCLib/src/xmc_uart.c ****   {
 120:../Libraries/XMCLib/src/xmc_uart.c ****     channel->SCTR |= (uint32_t)(((uint32_t)config->data_bits - 1UL) << USIC_CH_SCTR_FLE_Pos);
 293              	 .loc 3 120 0
 294 007a 7B68     	 ldr r3,[r7,#4]
 295 007c 5A6B     	 ldr r2,[r3,#52]
 296 007e 3B68     	 ldr r3,[r7]
 297 0080 1B79     	 ldrb r3,[r3,#4]
 298 0082 013B     	 subs r3,r3,#1
 299 0084 1B04     	 lsls r3,r3,#16
 300 0086 1A43     	 orrs r2,r2,r3
 301 0088 7B68     	 ldr r3,[r7,#4]
 302 008a 5A63     	 str r2,[r3,#52]
 303              	.L10:
 121:../Libraries/XMCLib/src/xmc_uart.c ****   }
 122:../Libraries/XMCLib/src/xmc_uart.c **** 
 123:../Libraries/XMCLib/src/xmc_uart.c ****   /* Enable transfer buffer */
 124:../Libraries/XMCLib/src/xmc_uart.c ****   channel->TCSR = (0x1UL << USIC_CH_TCSR_TDEN_Pos) |
 304              	 .loc 3 124 0
 305 008c 7B68     	 ldr r3,[r7,#4]
 306 008e 4FF4A062 	 mov r2,#1280
 307 0092 9A63     	 str r2,[r3,#56]
 125:../Libraries/XMCLib/src/xmc_uart.c ****                   USIC_CH_TCSR_TDSSM_Msk;
 126:../Libraries/XMCLib/src/xmc_uart.c **** 
 127:../Libraries/XMCLib/src/xmc_uart.c ****   /* Clear protocol status */
 128:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PSCR = 0xFFFFFFFFUL;
 308              	 .loc 3 128 0
 309 0094 7B68     	 ldr r3,[r7,#4]
 310 0096 4FF0FF32 	 mov r2,#-1
 311 009a DA64     	 str r2,[r3,#76]
 129:../Libraries/XMCLib/src/xmc_uart.c **** 
 130:../Libraries/XMCLib/src/xmc_uart.c ****   /* Set parity settings */
 131:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR = (uint32_t)config->parity_mode;
 312              	 .loc 3 131 0
 313 009c 3B68     	 ldr r3,[r7]
 314 009e 1B89     	 ldrh r3,[r3,#8]
 315 00a0 1A46     	 mov r2,r3
 316 00a2 7B68     	 ldr r3,[r7,#4]
 317 00a4 1A64     	 str r2,[r3,#64]
 132:../Libraries/XMCLib/src/xmc_uart.c **** }
 318              	 .loc 3 132 0
 319 00a6 1037     	 adds r7,r7,#16
 320              	.LCFI27:
 321              	 .cfi_def_cfa_offset 8
 322 00a8 BD46     	 mov sp,r7
 323              	.LCFI28:
 324              	 .cfi_def_cfa_register 13
 325              	 
 326 00aa 80BD     	 pop {r7,pc}
 327              	 .cfi_endproc
 328              	.LFE240:
 330              	 .section .text.XMC_UART_CH_SetBaudrate,"ax",%progbits
 331              	 .align 2
 332              	 .global XMC_UART_CH_SetBaudrate
 333              	 .thumb
 334              	 .thumb_func
 336              	XMC_UART_CH_SetBaudrate:
 337              	.LFB241:
 133:../Libraries/XMCLib/src/xmc_uart.c **** 
 134:../Libraries/XMCLib/src/xmc_uart.c **** XMC_UART_CH_STATUS_t XMC_UART_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_uart.c **** {
 338              	 .loc 3 135 0
 339              	 .cfi_startproc
 340              	 
 341              	 
 342 0000 80B5     	 push {r7,lr}
 343              	.LCFI29:
 344              	 .cfi_def_cfa_offset 8
 345              	 .cfi_offset 7,-8
 346              	 .cfi_offset 14,-4
 347 0002 86B0     	 sub sp,sp,#24
 348              	.LCFI30:
 349              	 .cfi_def_cfa_offset 32
 350 0004 00AF     	 add r7,sp,#0
 351              	.LCFI31:
 352              	 .cfi_def_cfa_register 7
 353 0006 F860     	 str r0,[r7,#12]
 354 0008 B960     	 str r1,[r7,#8]
 355 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_UART_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_uart.c ****   
 138:../Libraries/XMCLib/src/xmc_uart.c ****   status = XMC_UART_CH_STATUS_ERROR;
 356              	 .loc 3 138 0
 357 000c 0123     	 movs r3,#1
 358 000e FB75     	 strb r3,[r7,#23]
 139:../Libraries/XMCLib/src/xmc_uart.c ****   
 140:../Libraries/XMCLib/src/xmc_uart.c ****   if ((rate <= (XMC_SCU_CLOCK_GetPeripheralClockFrequency() >> 2U)) && (oversampling >= XMC_UART_CH
 359              	 .loc 3 140 0
 360 0010 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 361 0014 0346     	 mov r3,r0
 362 0016 9A08     	 lsrs r2,r3,#2
 363 0018 BB68     	 ldr r3,[r7,#8]
 364 001a 9A42     	 cmp r2,r3
 365 001c 0CD3     	 bcc .L12
 366              	 .loc 3 140 0 is_stmt 0 discriminator 1
 367 001e 7B68     	 ldr r3,[r7,#4]
 368 0020 032B     	 cmp r3,#3
 369 0022 09D9     	 bls .L12
 141:../Libraries/XMCLib/src/xmc_uart.c ****   {
 142:../Libraries/XMCLib/src/xmc_uart.c ****     if (XMC_USIC_CH_SetBaudrate(channel, rate, oversampling) == XMC_USIC_CH_STATUS_OK)
 370              	 .loc 3 142 0 is_stmt 1
 371 0024 F868     	 ldr r0,[r7,#12]
 372 0026 B968     	 ldr r1,[r7,#8]
 373 0028 7A68     	 ldr r2,[r7,#4]
 374 002a FFF7FEFF 	 bl XMC_USIC_CH_SetBaudrate
 375 002e 0346     	 mov r3,r0
 376 0030 002B     	 cmp r3,#0
 377 0032 01D1     	 bne .L12
 143:../Libraries/XMCLib/src/xmc_uart.c ****     {
 144:../Libraries/XMCLib/src/xmc_uart.c ****       status = XMC_UART_CH_STATUS_OK;
 378              	 .loc 3 144 0
 379 0034 0023     	 movs r3,#0
 380 0036 FB75     	 strb r3,[r7,#23]
 381              	.L12:
 145:../Libraries/XMCLib/src/xmc_uart.c ****     }
 146:../Libraries/XMCLib/src/xmc_uart.c ****   } 
 147:../Libraries/XMCLib/src/xmc_uart.c ****   return status;
 382              	 .loc 3 147 0
 383 0038 FB7D     	 ldrb r3,[r7,#23]
 148:../Libraries/XMCLib/src/xmc_uart.c **** }
 384              	 .loc 3 148 0
 385 003a 1846     	 mov r0,r3
 386 003c 1837     	 adds r7,r7,#24
 387              	.LCFI32:
 388              	 .cfi_def_cfa_offset 8
 389 003e BD46     	 mov sp,r7
 390              	.LCFI33:
 391              	 .cfi_def_cfa_register 13
 392              	 
 393 0040 80BD     	 pop {r7,pc}
 394              	 .cfi_endproc
 395              	.LFE241:
 397 0042 00BF     	 .section .text.XMC_UART_CH_Transmit,"ax",%progbits
 398              	 .align 2
 399              	 .global XMC_UART_CH_Transmit
 400              	 .thumb
 401              	 .thumb_func
 403              	XMC_UART_CH_Transmit:
 404              	.LFB242:
 149:../Libraries/XMCLib/src/xmc_uart.c **** 
 150:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_Transmit(XMC_USIC_CH_t *const channel, const uint16_t data)
 151:../Libraries/XMCLib/src/xmc_uart.c **** {
 405              	 .loc 3 151 0
 406              	 .cfi_startproc
 407              	 
 408              	 
 409 0000 80B5     	 push {r7,lr}
 410              	.LCFI34:
 411              	 .cfi_def_cfa_offset 8
 412              	 .cfi_offset 7,-8
 413              	 .cfi_offset 14,-4
 414 0002 82B0     	 sub sp,sp,#8
 415              	.LCFI35:
 416              	 .cfi_def_cfa_offset 16
 417 0004 00AF     	 add r7,sp,#0
 418              	.LCFI36:
 419              	 .cfi_def_cfa_register 7
 420 0006 7860     	 str r0,[r7,#4]
 421 0008 0B46     	 mov r3,r1
 422 000a 7B80     	 strh r3,[r7,#2]
 152:../Libraries/XMCLib/src/xmc_uart.c ****   /* Check FIFO size */
 153:../Libraries/XMCLib/src/xmc_uart.c ****   if ((channel->TBCTR & USIC_CH_TBCTR_SIZE_Msk) == 0UL)
 423              	 .loc 3 153 0
 424 000c 7B68     	 ldr r3,[r7,#4]
 425 000e D3F80831 	 ldr r3,[r3,#264]
 426 0012 03F0E063 	 and r3,r3,#117440512
 427 0016 002B     	 cmp r3,#0
 428 0018 10D1     	 bne .L15
 154:../Libraries/XMCLib/src/xmc_uart.c ****   {
 155:../Libraries/XMCLib/src/xmc_uart.c ****     /* Wait till the Transmit Buffer is free for transmission */
 156:../Libraries/XMCLib/src/xmc_uart.c ****     while(XMC_USIC_CH_GetTransmitBufferStatus(channel) == XMC_USIC_CH_TBUF_STATUS_BUSY)
 429              	 .loc 3 156 0
 430 001a 00BF     	 nop
 431              	.L16:
 432              	 .loc 3 156 0 is_stmt 0 discriminator 1
 433 001c 7868     	 ldr r0,[r7,#4]
 434 001e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 435 0022 0346     	 mov r3,r0
 436 0024 802B     	 cmp r3,#128
 437 0026 F9D0     	 beq .L16
 157:../Libraries/XMCLib/src/xmc_uart.c ****     {
 158:../Libraries/XMCLib/src/xmc_uart.c ****     }
 159:../Libraries/XMCLib/src/xmc_uart.c ****   
 160:../Libraries/XMCLib/src/xmc_uart.c ****     /* Clear the Transmit Buffer indication flag */
 161:../Libraries/XMCLib/src/xmc_uart.c ****     XMC_UART_CH_ClearStatusFlag(channel, (uint32_t)XMC_UART_CH_STATUS_FLAG_TRANSMIT_BUFFER_INDICATI
 438              	 .loc 3 161 0 is_stmt 1
 439 0028 7868     	 ldr r0,[r7,#4]
 440 002a 4FF40051 	 mov r1,#8192
 441 002e FFF7FEFF 	 bl XMC_UART_CH_ClearStatusFlag
 162:../Libraries/XMCLib/src/xmc_uart.c ****   
 163:../Libraries/XMCLib/src/xmc_uart.c ****     /*Transmit data */
 164:../Libraries/XMCLib/src/xmc_uart.c ****     channel->TBUF[0U] = data;
 442              	 .loc 3 164 0
 443 0032 7A88     	 ldrh r2,[r7,#2]
 444 0034 7B68     	 ldr r3,[r7,#4]
 445 0036 C3F88020 	 str r2,[r3,#128]
 446 003a 03E0     	 b .L14
 447              	.L15:
 165:../Libraries/XMCLib/src/xmc_uart.c ****   }
 166:../Libraries/XMCLib/src/xmc_uart.c ****   else
 167:../Libraries/XMCLib/src/xmc_uart.c ****   {
 168:../Libraries/XMCLib/src/xmc_uart.c ****     channel->IN[0U] = data;
 448              	 .loc 3 168 0
 449 003c 7A88     	 ldrh r2,[r7,#2]
 450 003e 7B68     	 ldr r3,[r7,#4]
 451 0040 C3F88021 	 str r2,[r3,#384]
 452              	.L14:
 169:../Libraries/XMCLib/src/xmc_uart.c ****   }
 170:../Libraries/XMCLib/src/xmc_uart.c **** }
 453              	 .loc 3 170 0
 454 0044 0837     	 adds r7,r7,#8
 455              	.LCFI37:
 456              	 .cfi_def_cfa_offset 8
 457 0046 BD46     	 mov sp,r7
 458              	.LCFI38:
 459              	 .cfi_def_cfa_register 13
 460              	 
 461 0048 80BD     	 pop {r7,pc}
 462              	 .cfi_endproc
 463              	.LFE242:
 465 004a 00BF     	 .section .text.XMC_UART_CH_GetReceivedData,"ax",%progbits
 466              	 .align 2
 467              	 .global XMC_UART_CH_GetReceivedData
 468              	 .thumb
 469              	 .thumb_func
 471              	XMC_UART_CH_GetReceivedData:
 472              	.LFB243:
 171:../Libraries/XMCLib/src/xmc_uart.c **** 
 172:../Libraries/XMCLib/src/xmc_uart.c **** uint16_t XMC_UART_CH_GetReceivedData(XMC_USIC_CH_t *const channel)
 173:../Libraries/XMCLib/src/xmc_uart.c **** {
 473              	 .loc 3 173 0
 474              	 .cfi_startproc
 475              	 
 476              	 
 477              	 
 478 0000 80B4     	 push {r7}
 479              	.LCFI39:
 480              	 .cfi_def_cfa_offset 4
 481              	 .cfi_offset 7,-4
 482 0002 85B0     	 sub sp,sp,#20
 483              	.LCFI40:
 484              	 .cfi_def_cfa_offset 24
 485 0004 00AF     	 add r7,sp,#0
 486              	.LCFI41:
 487              	 .cfi_def_cfa_register 7
 488 0006 7860     	 str r0,[r7,#4]
 174:../Libraries/XMCLib/src/xmc_uart.c ****   uint16_t retval;
 175:../Libraries/XMCLib/src/xmc_uart.c **** 
 176:../Libraries/XMCLib/src/xmc_uart.c ****   /* Check FIFO size */
 177:../Libraries/XMCLib/src/xmc_uart.c ****   if ((channel->RBCTR & USIC_CH_RBCTR_SIZE_Msk) == 0U)
 489              	 .loc 3 177 0
 490 0008 7B68     	 ldr r3,[r7,#4]
 491 000a D3F80C31 	 ldr r3,[r3,#268]
 492 000e 03F0E063 	 and r3,r3,#117440512
 493 0012 002B     	 cmp r3,#0
 494 0014 03D1     	 bne .L19
 178:../Libraries/XMCLib/src/xmc_uart.c ****   {
 179:../Libraries/XMCLib/src/xmc_uart.c ****     retval = (uint16_t)channel->RBUF;
 495              	 .loc 3 179 0
 496 0016 7B68     	 ldr r3,[r7,#4]
 497 0018 5B6D     	 ldr r3,[r3,#84]
 498 001a FB81     	 strh r3,[r7,#14]
 499 001c 03E0     	 b .L20
 500              	.L19:
 180:../Libraries/XMCLib/src/xmc_uart.c ****   }
 181:../Libraries/XMCLib/src/xmc_uart.c ****   else
 182:../Libraries/XMCLib/src/xmc_uart.c ****   {
 183:../Libraries/XMCLib/src/xmc_uart.c ****     retval = (uint16_t)channel->OUTR;
 501              	 .loc 3 183 0
 502 001e 7B68     	 ldr r3,[r7,#4]
 503 0020 D3F81C31 	 ldr r3,[r3,#284]
 504 0024 FB81     	 strh r3,[r7,#14]
 505              	.L20:
 184:../Libraries/XMCLib/src/xmc_uart.c ****   }
 185:../Libraries/XMCLib/src/xmc_uart.c **** 
 186:../Libraries/XMCLib/src/xmc_uart.c ****   return retval;
 506              	 .loc 3 186 0
 507 0026 FB89     	 ldrh r3,[r7,#14]
 187:../Libraries/XMCLib/src/xmc_uart.c **** }
 508              	 .loc 3 187 0
 509 0028 1846     	 mov r0,r3
 510 002a 1437     	 adds r7,r7,#20
 511              	.LCFI42:
 512              	 .cfi_def_cfa_offset 4
 513 002c BD46     	 mov sp,r7
 514              	.LCFI43:
 515              	 .cfi_def_cfa_register 13
 516              	 
 517 002e 5DF8047B 	 ldr r7,[sp],#4
 518              	.LCFI44:
 519              	 .cfi_restore 7
 520              	 .cfi_def_cfa_offset 0
 521 0032 7047     	 bx lr
 522              	 .cfi_endproc
 523              	.LFE243:
 525              	 .section .text.XMC_UART_CH_Stop,"ax",%progbits
 526              	 .align 2
 527              	 .global XMC_UART_CH_Stop
 528              	 .thumb
 529              	 .thumb_func
 531              	XMC_UART_CH_Stop:
 532              	.LFB244:
 188:../Libraries/XMCLib/src/xmc_uart.c **** 
 189:../Libraries/XMCLib/src/xmc_uart.c **** XMC_UART_CH_STATUS_t XMC_UART_CH_Stop(XMC_USIC_CH_t *const channel)
 190:../Libraries/XMCLib/src/xmc_uart.c **** {
 533              	 .loc 3 190 0
 534              	 .cfi_startproc
 535              	 
 536              	 
 537 0000 80B5     	 push {r7,lr}
 538              	.LCFI45:
 539              	 .cfi_def_cfa_offset 8
 540              	 .cfi_offset 7,-8
 541              	 .cfi_offset 14,-4
 542 0002 84B0     	 sub sp,sp,#16
 543              	.LCFI46:
 544              	 .cfi_def_cfa_offset 24
 545 0004 00AF     	 add r7,sp,#0
 546              	.LCFI47:
 547              	 .cfi_def_cfa_register 7
 548 0006 7860     	 str r0,[r7,#4]
 191:../Libraries/XMCLib/src/xmc_uart.c ****   XMC_UART_CH_STATUS_t status = XMC_UART_CH_STATUS_OK;
 549              	 .loc 3 191 0
 550 0008 0023     	 movs r3,#0
 551 000a FB73     	 strb r3,[r7,#15]
 192:../Libraries/XMCLib/src/xmc_uart.c **** 
 193:../Libraries/XMCLib/src/xmc_uart.c ****   if (((XMC_USIC_CH_GetTransmitBufferStatus(channel) & (uint32_t) XMC_USIC_CH_TBUF_STATUS_BUSY) != 
 552              	 .loc 3 193 0
 553 000c 7868     	 ldr r0,[r7,#4]
 554 000e FFF7FEFF 	 bl XMC_USIC_CH_GetTransmitBufferStatus
 555 0012 0346     	 mov r3,r0
 556 0014 DBB2     	 uxtb r3,r3
 557 0016 5BB2     	 sxtb r3,r3
 558 0018 002B     	 cmp r3,#0
 559 001a 07DB     	 blt .L23
 194:../Libraries/XMCLib/src/xmc_uart.c ****       ((XMC_UART_CH_GetStatusFlag(channel) & XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY) != 0))
 560              	 .loc 3 194 0 discriminator 1
 561 001c 7868     	 ldr r0,[r7,#4]
 562 001e FFF7FEFF 	 bl XMC_UART_CH_GetStatusFlag
 563 0022 0346     	 mov r3,r0
 564 0024 03F40073 	 and r3,r3,#512
 193:../Libraries/XMCLib/src/xmc_uart.c ****       ((XMC_UART_CH_GetStatusFlag(channel) & XMC_UART_CH_STATUS_FLAG_TRANSFER_STATUS_BUSY) != 0))
 565              	 .loc 3 193 0 discriminator 1
 566 0028 002B     	 cmp r3,#0
 567 002a 02D0     	 beq .L24
 568              	.L23:
 195:../Libraries/XMCLib/src/xmc_uart.c ****   {
 196:../Libraries/XMCLib/src/xmc_uart.c ****     status = XMC_UART_CH_STATUS_BUSY;
 569              	 .loc 3 196 0
 570 002c 0223     	 movs r3,#2
 571 002e FB73     	 strb r3,[r7,#15]
 572 0030 03E0     	 b .L25
 573              	.L24:
 197:../Libraries/XMCLib/src/xmc_uart.c ****   }
 198:../Libraries/XMCLib/src/xmc_uart.c ****   else
 199:../Libraries/XMCLib/src/xmc_uart.c ****   {
 200:../Libraries/XMCLib/src/xmc_uart.c ****     /* USIC channel in IDLE mode */
 201:../Libraries/XMCLib/src/xmc_uart.c ****     XMC_USIC_CH_SetMode(channel, XMC_USIC_CH_OPERATING_MODE_IDLE);
 574              	 .loc 3 201 0
 575 0032 7868     	 ldr r0,[r7,#4]
 576 0034 0021     	 movs r1,#0
 577 0036 FFF7FEFF 	 bl XMC_USIC_CH_SetMode
 578              	.L25:
 202:../Libraries/XMCLib/src/xmc_uart.c ****   }
 203:../Libraries/XMCLib/src/xmc_uart.c ****   return status;
 579              	 .loc 3 203 0
 580 003a FB7B     	 ldrb r3,[r7,#15]
 204:../Libraries/XMCLib/src/xmc_uart.c **** }
 581              	 .loc 3 204 0
 582 003c 1846     	 mov r0,r3
 583 003e 1037     	 adds r7,r7,#16
 584              	.LCFI48:
 585              	 .cfi_def_cfa_offset 8
 586 0040 BD46     	 mov sp,r7
 587              	.LCFI49:
 588              	 .cfi_def_cfa_register 13
 589              	 
 590 0042 80BD     	 pop {r7,pc}
 591              	 .cfi_endproc
 592              	.LFE244:
 594              	 .section .text.XMC_UART_CH_EnableEvent,"ax",%progbits
 595              	 .align 2
 596              	 .global XMC_UART_CH_EnableEvent
 597              	 .thumb
 598              	 .thumb_func
 600              	XMC_UART_CH_EnableEvent:
 601              	.LFB245:
 205:../Libraries/XMCLib/src/xmc_uart.c **** 
 206:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_EnableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 207:../Libraries/XMCLib/src/xmc_uart.c **** {
 602              	 .loc 3 207 0
 603              	 .cfi_startproc
 604              	 
 605              	 
 606              	 
 607 0000 80B4     	 push {r7}
 608              	.LCFI50:
 609              	 .cfi_def_cfa_offset 4
 610              	 .cfi_offset 7,-4
 611 0002 83B0     	 sub sp,sp,#12
 612              	.LCFI51:
 613              	 .cfi_def_cfa_offset 16
 614 0004 00AF     	 add r7,sp,#0
 615              	.LCFI52:
 616              	 .cfi_def_cfa_register 7
 617 0006 7860     	 str r0,[r7,#4]
 618 0008 3960     	 str r1,[r7]
 208:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR |= (event&0x1fc00U);
 619              	 .loc 3 208 0
 620 000a 7B68     	 ldr r3,[r7,#4]
 621 000c 1A6C     	 ldr r2,[r3,#64]
 622 000e 3B68     	 ldr r3,[r7]
 623 0010 03F4FE33 	 and r3,r3,#130048
 624 0014 1A43     	 orrs r2,r2,r3
 625 0016 7B68     	 ldr r3,[r7,#4]
 626 0018 1A64     	 str r2,[r3,#64]
 209:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode |= (event&0xf8U);
 627              	 .loc 3 209 0
 628 001a 7B68     	 ldr r3,[r7,#4]
 629 001c DA6B     	 ldr r2,[r3,#60]
 630 001e 3B68     	 ldr r3,[r7]
 631 0020 03F0F803 	 and r3,r3,#248
 632 0024 1A43     	 orrs r2,r2,r3
 633 0026 7B68     	 ldr r3,[r7,#4]
 634 0028 DA63     	 str r2,[r3,#60]
 210:../Libraries/XMCLib/src/xmc_uart.c **** }
 635              	 .loc 3 210 0
 636 002a 0C37     	 adds r7,r7,#12
 637              	.LCFI53:
 638              	 .cfi_def_cfa_offset 4
 639 002c BD46     	 mov sp,r7
 640              	.LCFI54:
 641              	 .cfi_def_cfa_register 13
 642              	 
 643 002e 5DF8047B 	 ldr r7,[sp],#4
 644              	.LCFI55:
 645              	 .cfi_restore 7
 646              	 .cfi_def_cfa_offset 0
 647 0032 7047     	 bx lr
 648              	 .cfi_endproc
 649              	.LFE245:
 651              	 .section .text.XMC_UART_CH_DisableEvent,"ax",%progbits
 652              	 .align 2
 653              	 .global XMC_UART_CH_DisableEvent
 654              	 .thumb
 655              	 .thumb_func
 657              	XMC_UART_CH_DisableEvent:
 658              	.LFB246:
 211:../Libraries/XMCLib/src/xmc_uart.c **** 
 212:../Libraries/XMCLib/src/xmc_uart.c **** void XMC_UART_CH_DisableEvent(XMC_USIC_CH_t *const channel, const uint32_t event)
 213:../Libraries/XMCLib/src/xmc_uart.c **** {
 659              	 .loc 3 213 0
 660              	 .cfi_startproc
 661              	 
 662              	 
 663              	 
 664 0000 80B4     	 push {r7}
 665              	.LCFI56:
 666              	 .cfi_def_cfa_offset 4
 667              	 .cfi_offset 7,-4
 668 0002 83B0     	 sub sp,sp,#12
 669              	.LCFI57:
 670              	 .cfi_def_cfa_offset 16
 671 0004 00AF     	 add r7,sp,#0
 672              	.LCFI58:
 673              	 .cfi_def_cfa_register 7
 674 0006 7860     	 str r0,[r7,#4]
 675 0008 3960     	 str r1,[r7]
 214:../Libraries/XMCLib/src/xmc_uart.c ****   channel->CCR &= (uint32_t)~(event&0x1fc00U);
 676              	 .loc 3 214 0
 677 000a 7B68     	 ldr r3,[r7,#4]
 678 000c 1A6C     	 ldr r2,[r3,#64]
 679 000e 3B68     	 ldr r3,[r7]
 680 0010 03F4FE33 	 and r3,r3,#130048
 681 0014 DB43     	 mvns r3,r3
 682 0016 1A40     	 ands r2,r2,r3
 683 0018 7B68     	 ldr r3,[r7,#4]
 684 001a 1A64     	 str r2,[r3,#64]
 215:../Libraries/XMCLib/src/xmc_uart.c ****   channel->PCR_ASCMode &= (uint32_t)~(event&0xf8U);
 685              	 .loc 3 215 0
 686 001c 7B68     	 ldr r3,[r7,#4]
 687 001e DA6B     	 ldr r2,[r3,#60]
 688 0020 3B68     	 ldr r3,[r7]
 689 0022 03F0F803 	 and r3,r3,#248
 690 0026 DB43     	 mvns r3,r3
 691 0028 1A40     	 ands r2,r2,r3
 692 002a 7B68     	 ldr r3,[r7,#4]
 693 002c DA63     	 str r2,[r3,#60]
 216:../Libraries/XMCLib/src/xmc_uart.c **** }
 694              	 .loc 3 216 0
 695 002e 0C37     	 adds r7,r7,#12
 696              	.LCFI59:
 697              	 .cfi_def_cfa_offset 4
 698 0030 BD46     	 mov sp,r7
 699              	.LCFI60:
 700              	 .cfi_def_cfa_register 13
 701              	 
 702 0032 5DF8047B 	 ldr r7,[sp],#4
 703              	.LCFI61:
 704              	 .cfi_restore 7
 705              	 .cfi_def_cfa_offset 0
 706 0036 7047     	 bx lr
 707              	 .cfi_endproc
 708              	.LFE246:
 710              	 .text
 711              	.Letext0:
 712              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 713              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 714              	 .file 6 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
 715              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_uart.c
    {standard input}:20     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 $t
    {standard input}:24     .text.XMC_USIC_CH_GetTransmitBufferStatus:00000000 XMC_USIC_CH_GetTransmitBufferStatus
    {standard input}:67     .text.XMC_USIC_CH_SetMode:00000000 $t
    {standard input}:71     .text.XMC_USIC_CH_SetMode:00000000 XMC_USIC_CH_SetMode
    {standard input}:116    .text.XMC_UART_CH_GetStatusFlag:00000000 $t
    {standard input}:120    .text.XMC_UART_CH_GetStatusFlag:00000000 XMC_UART_CH_GetStatusFlag
    {standard input}:160    .text.XMC_UART_CH_ClearStatusFlag:00000000 $t
    {standard input}:164    .text.XMC_UART_CH_ClearStatusFlag:00000000 XMC_UART_CH_ClearStatusFlag
    {standard input}:204    .text.XMC_UART_CH_Init:00000000 $t
    {standard input}:209    .text.XMC_UART_CH_Init:00000000 XMC_UART_CH_Init
    {standard input}:331    .text.XMC_UART_CH_SetBaudrate:00000000 $t
    {standard input}:336    .text.XMC_UART_CH_SetBaudrate:00000000 XMC_UART_CH_SetBaudrate
    {standard input}:398    .text.XMC_UART_CH_Transmit:00000000 $t
    {standard input}:403    .text.XMC_UART_CH_Transmit:00000000 XMC_UART_CH_Transmit
    {standard input}:466    .text.XMC_UART_CH_GetReceivedData:00000000 $t
    {standard input}:471    .text.XMC_UART_CH_GetReceivedData:00000000 XMC_UART_CH_GetReceivedData
    {standard input}:526    .text.XMC_UART_CH_Stop:00000000 $t
    {standard input}:531    .text.XMC_UART_CH_Stop:00000000 XMC_UART_CH_Stop
    {standard input}:595    .text.XMC_UART_CH_EnableEvent:00000000 $t
    {standard input}:600    .text.XMC_UART_CH_EnableEvent:00000000 XMC_UART_CH_EnableEvent
    {standard input}:652    .text.XMC_UART_CH_DisableEvent:00000000 $t
    {standard input}:657    .text.XMC_UART_CH_DisableEvent:00000000 XMC_UART_CH_DisableEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_USIC_CH_Enable
XMC_USIC_CH_SetBaudrate
XMC_SCU_CLOCK_GetPeripheralClockFrequency
