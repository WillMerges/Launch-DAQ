   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_StartPrescaler,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_StartPrescaler:
  25              	.LFB130:
  26              	 .file 1 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2016-05-20
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.                        
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                             
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * following conditions are met:   
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer.                        
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                                                              
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer() 
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc1_ccu8_map.h"
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  #include "xmc4_ccu8_map.h"
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t, 
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(), 
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR       , /**< API cannot fulfil request */
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING     , /**< The timer slice is currently running */
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A     , /**< External clock-A */
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B     , /**< External clock-B */
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2      , /**< Slice Clock = fccu8/2 */
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4      , /**< Slice Clock = fccu8/4 */
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8      , /**< Slice Clock = fccu8/8 */
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16     , /**< Slice Clock = fccu8/16 */
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32     , /**< Slice Clock = fccu8/32 */
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64     , /**< Slice Clock = fccu8/64 */
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128    , /**< Slice Clock = fccu8/128 */
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256    , /**< Slice Clock = fccu8/256 */
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512    , /**< Slice Clock = fccu8/512 */
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024   , /**< Slice Clock = fccu8/1024 */
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048   , /**< Slice Clock = fccu8/2048 */
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096   , /**< Slice Clock = fccu8/4096 */
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192   , /**< Slice Clock = fccu8/8192 */
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384  , /**< Slice Clock = fccu8/16384 */
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2      , /**< DTC clock = Slice Clock/2 */
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4      , /**< DTC clock = Slice Clock/4 */
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2            , /**< Channel-2 status connected to Slice Status */
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2      , /**< \b Wired \b AND of Channel-1 and Channel-2 stat
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1         , /**< Modulation for Compare Channel-1 */
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2         , /**< Modulation for Compare Channel-2 */
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP                , /**< Stop function */
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0      , /**< Capture Event-0 function, CCycapt0 signal is u
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1      , /**< Capture Event-1 function, CCycapt1 signal is u
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING              , /**< Gating function */
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION           , /**< Direction function */
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD                , /**< Load function */
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT               , /**< Counting function */
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE            , /**< Override function */
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION          , /**< Modulation function */
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0         , /**< Event-0 */
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1         , /**< Event-1 */
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE       , /**< Rising Edge of the input signal ge
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE      , /**< Falling Edge of the input signal g
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     /* Below enum items can be utilised specific to the functionality */
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES      , /**< Input should be stable for 3 clock cycles */
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES      , /**< Input should be stable for 5 clock cycles */
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR          , /**< Without stopping timer, clears the TIMER regi
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH     , /**< Clear only when timer value has been captured
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW      , /**< Clear only when timer value has been captured
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U , /**< Period match counting up */
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U , /**< One match counting down */
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U , /**< Compare match counting up for channel 1
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U , /**< Compare match counting down for channel
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U , /**< Compare match counting up for channel 2
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U , /**< Compare match counting down for channel
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U , /**< Event-0 occurrence */
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U , /**< Event-1 occurrence */
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1        , /**< Service Request Line-1 selected  */
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2        , /**< Service Request Line-2 selected  */
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT0
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT1
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT2
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  typedef enum XMC_CCU8_SOURCE_OUT3
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U , /**< SLICE-0 */
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U , /**< SLICE-1 */
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U , /**< SLICE-2 */
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma push
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma anon_unions
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning 586
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0. 
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1. 
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2. 
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3. 
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */                             
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #else
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t 
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register. 
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t 
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register. 
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t 
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t 
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #endif
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value 
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering 
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
 947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
 948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
 949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
 952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
 955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
 962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
 963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
 964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
 965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
 966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
 967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
 969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
 970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
 974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
 975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
 976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
 977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
 978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma pop
 980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   #pragma warning restore
 982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
 985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
 987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
 988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
 991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
 993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
 995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   
 996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
 997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
 998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)  
1009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)  
1012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)  
1015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)  
1018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)  
1020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)  
1023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)  
1026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif 
1029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  
1030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;  
1031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** } 
1032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1115 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
1116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) CCU8_GIDLC_SPRB_Msk;
  43              	 .loc 1 1117 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a DB68     	 ldr r3,[r3,#12]
  46 000c 43F48072 	 orr r2,r3,#256
  47 0010 7B68     	 ldr r3,[r7,#4]
  48 0012 DA60     	 str r2,[r3,#12]
1118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  49              	 .loc 1 1118 0
  50 0014 0C37     	 adds r7,r7,#12
  51              	.LCFI3:
  52              	 .cfi_def_cfa_offset 4
  53 0016 BD46     	 mov sp,r7
  54              	.LCFI4:
  55              	 .cfi_def_cfa_register 13
  56              	 
  57 0018 5DF8047B 	 ldr r7,[sp],#4
  58              	.LCFI5:
  59              	 .cfi_restore 7
  60              	 .cfi_def_cfa_offset 0
  61 001c 7047     	 bx lr
  62              	 .cfi_endproc
  63              	.LFE130:
  65 001e 00BF     	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
  66              	 .align 2
  67              	 .thumb
  68              	 .thumb_func
  70              	XMC_CCU8_SLICE_StopTimer:
  71              	.LFB144:
1119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= (uint32_t) CCU8_GIDLS_CPRB_Msk;
1137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true. 
1147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively. 
1161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= (uint32_t) clock_mask;
1180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask. 
1212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I, 
1228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC |= ((uint32_t) 1 << slice_number);
1241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I, 
1252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS |= ((uint32_t) 1 << slice_number);
1265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
1279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  
1338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel, 
1385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      );
1387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected. 
1399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                             const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
1587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
1588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
1658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   
1682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
1700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
1733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return(bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
1736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
1742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
1745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
1746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
1747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
1752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_TC
1755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
1763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
1764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
1765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
1768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
1770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
1773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
1782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
1783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
1788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  72              	 .loc 1 1788 0
  73              	 .cfi_startproc
  74              	 
  75              	 
  76              	 
  77 0000 80B4     	 push {r7}
  78              	.LCFI6:
  79              	 .cfi_def_cfa_offset 4
  80              	 .cfi_offset 7,-4
  81 0002 83B0     	 sub sp,sp,#12
  82              	.LCFI7:
  83              	 .cfi_def_cfa_offset 16
  84 0004 00AF     	 add r7,sp,#0
  85              	.LCFI8:
  86              	 .cfi_def_cfa_register 7
  87 0006 7860     	 str r0,[r7,#4]
1789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
  88              	 .loc 1 1790 0
  89 0008 7B68     	 ldr r3,[r7,#4]
  90 000a 0122     	 movs r2,#1
  91 000c 1A61     	 str r2,[r3,#16]
1791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  92              	 .loc 1 1791 0
  93 000e 0C37     	 adds r7,r7,#12
  94              	.LCFI9:
  95              	 .cfi_def_cfa_offset 4
  96 0010 BD46     	 mov sp,r7
  97              	.LCFI10:
  98              	 .cfi_def_cfa_register 13
  99              	 
 100 0012 5DF8047B 	 ldr r7,[sp],#4
 101              	.LCFI11:
 102              	 .cfi_restore 7
 103              	 .cfi_def_cfa_offset 0
 104 0016 7047     	 bx lr
 105              	 .cfi_endproc
 106              	.LFE144:
 108              	 .section .text.XMC_CCU8_SLICE_SetDitherCompareValue,"ax",%progbits
 109              	 .align 2
 110              	 .thumb
 111              	 .thumb_func
 113              	XMC_CCU8_SLICE_SetDitherCompareValue:
 114              	.LFB159:
1792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
1800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
1801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
1802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
1807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
1810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
1819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
1822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
1824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
1827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
1833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
1834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
1837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
1838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
1839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
1840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
1843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
1845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
1848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
1853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
1858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
1859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
1860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
1861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
1864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
1866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
1871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
1872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
1875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
1876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
1877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
1878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
1881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
1883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                     const XMC_CCU8_
1884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
1886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_T
1887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
1891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
1896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
1897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
1898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
1899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
1900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
1901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
1904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
1906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
1910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
1911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
1912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
1915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
1918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
1920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 		                                                                            const XMC_CCU8_SLICE_
1921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TCM
1924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
1928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
1929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
1934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
1935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
1936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
1937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
1938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
1941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
1943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
1948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
1949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
1952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
1953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
1955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
1956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
1957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
1958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
1959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
1962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
1964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
1966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->PR);
1967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
1971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
1977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
1978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
1979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
1980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
1981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
1982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
1985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                          const uint16_t compare_val);
1989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
1993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
1998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
1999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR> 
2074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;  
2084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   return((uint16_t) slice->TIMER);
2102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 
2113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 115              	 .loc 1 2230 0
 116              	 .cfi_startproc
 117              	 
 118              	 
 119              	 
 120 0000 80B4     	 push {r7}
 121              	.LCFI12:
 122              	 .cfi_def_cfa_offset 4
 123              	 .cfi_offset 7,-4
 124 0002 83B0     	 sub sp,sp,#12
 125              	.LCFI13:
 126              	 .cfi_def_cfa_offset 16
 127 0004 00AF     	 add r7,sp,#0
 128              	.LCFI14:
 129              	 .cfi_def_cfa_register 7
 130 0006 7860     	 str r0,[r7,#4]
 131 0008 0B46     	 mov r3,r1
 132 000a FB70     	 strb r3,[r7,#3]
2231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
 133              	 .loc 1 2234 0
 134 000c FA78     	 ldrb r2,[r7,#3]
 135 000e 7B68     	 ldr r3,[r7,#4]
 136 0010 1A62     	 str r2,[r3,#32]
2235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 137              	 .loc 1 2235 0
 138 0012 0C37     	 adds r7,r7,#12
 139              	.LCFI15:
 140              	 .cfi_def_cfa_offset 4
 141 0014 BD46     	 mov sp,r7
 142              	.LCFI16:
 143              	 .cfi_def_cfa_register 13
 144              	 
 145 0016 5DF8047B 	 ldr r7,[sp],#4
 146              	.LCFI17:
 147              	 .cfi_restore 7
 148              	 .cfi_def_cfa_offset 0
 149 001a 7047     	 bx lr
 150              	 .cfi_endproc
 151              	.LFE159:
 153              	 .section .text.XMC_CCU8_lAssertReset,"ax",%progbits
 154              	 .align 2
 155              	 .thumb
 156              	 .thumb_func
 158              	XMC_CCU8_lAssertReset:
 159              	.LFB209:
 160              	 .file 2 "../Libraries/XMCLib/src/xmc_ccu8.c"
   1:../Libraries/XMCLib/src/xmc_ccu8.c **** /**
   2:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @file xmc_ccu8.c
   3:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @date 2015-10-07
   4:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   5:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_ccu8.c ****  * XMClib v2.1.8 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
   9:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_ccu8.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_ccu8.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  18:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_ccu8.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  21:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_ccu8.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_ccu8.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_ccu8.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  36:../Libraries/XMCLib/src/xmc_ccu8.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_ccu8.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  39:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Initial <br>
  41:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  42:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-06-20:
  43:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Removed definition of GetDriverVersion API <br>
  44:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  45:../Libraries/XMCLib/src/xmc_ccu8.c ****  *       during external load event. 
  46:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  47:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-07-24:
  48:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  49:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  50:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-08-17:
  51:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_CHC_CONFIG_MASK is not applicable to XMC14 devices. <br>
  52:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Start of prescaler XMC_CCU8_StartPrescaler() is invoked in XMC_CCU8_Init() API. <br>
  53:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - In XMC_CCU8_SLICE_CompareInit(), CHC register is updated according to the device. <br>
  54:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - Bug fix XMC_CCU8_SLICE_ConfigureEvent() during the level setting for XMC14 devices. <br>
  55:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_EnableShadowTransfer() definition is removed, since the API is made as inline. <b
  56:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 
  57:../Libraries/XMCLib/src/xmc_ccu8.c ****  * 2015-10-07:
  58:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  59:../Libraries/XMCLib/src/xmc_ccu8.c ****  *     - DOC updates for the newly added APIs.
  60:../Libraries/XMCLib/src/xmc_ccu8.c ****  *
  61:../Libraries/XMCLib/src/xmc_ccu8.c ****  * @endcond
  62:../Libraries/XMCLib/src/xmc_ccu8.c ****  */
  63:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  64:../Libraries/XMCLib/src/xmc_ccu8.c ****  * HEADER FILES
  65:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  66:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_ccu8.h"
  67:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  68:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU80)
  69:../Libraries/XMCLib/src/xmc_ccu8.c **** #include "xmc_scu.h"
  70:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  71:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
  72:../Libraries/XMCLib/src/xmc_ccu8.c ****  * MACROS
  73:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
  74:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_NUM_SLICES_PER_MODULE          (4U)
  75:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_PERIOD_MASK       (1U)
  76:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK    (2U)
  77:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK   (3U)
  78:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK  (1U)
  79:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK (3U)
  80:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices */
  81:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS1_EV0IS_Msk
  82:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
  83:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK  CCU8_CC8_INS_EV0IS_Msk
  84:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  85:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GIDLC_CLOCK_MASK               (15U)
  86:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE0_MASK               (1U)
  87:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE1_MASK               (16U)
  88:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE2_MASK               (256U)
  89:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_GCSS_SLICE3_MASK               (4096U)
  90:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK    (63U)
  91:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
  92:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHC_CONFIG_MASK          (20U)
  93:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
  94:../Libraries/XMCLib/src/xmc_ccu8.c **** 
  95:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_DTC_DIV(div) \
  96:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((div == XMC_CCU8_SLICE_DTC_DIV_1) || \
  97:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_2) || \
  98:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_4) || \
  99:../Libraries/XMCLib/src/xmc_ccu8.c ****      (div == XMC_CCU8_SLICE_DTC_DIV_8))
 100:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 101:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CLOCK(clock) \
 102:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((clock == XMC_CCU8_CLOCK_SCU)        || \
 103:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_A) || \
 104:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_B) || \
 105:../Libraries/XMCLib/src/xmc_ccu8.c ****      (clock == XMC_CCU8_CLOCK_EXTERNAL_C))
 106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 107:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_OUTPUT(out) \
 108:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((out == XMC_CCU8_SLICE_OUTPUT_0) || \
 109:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_1) || \
 110:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_2) || \
 111:../Libraries/XMCLib/src/xmc_ccu8.c ****      (out == XMC_CCU8_SLICE_OUTPUT_3))
 112:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 113:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_END_MODE(end_mode) \
 114:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP) || \
 115:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR) || \
 116:../Libraries/XMCLib/src/xmc_ccu8.c ****      (end_mode == XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR))
 117:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 118:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_ID(event_id) \
 119:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((event_id == XMC_CCU8_SLICE_EVENT_NONE)|| \
 120:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_0)   || \
 121:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_1)   || \
 122:../Libraries/XMCLib/src/xmc_ccu8.c ****      (event_id == XMC_CCU8_SLICE_EVENT_2))
 123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 124:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(edge) \
 125:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE)        || \
 126:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE) || \
 127:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE)|| \
 128:../Libraries/XMCLib/src/xmc_ccu8.c ****      (edge == XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE))
 129:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 130:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_EVENT_FILTER(cycles) \
 131:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((cycles == XMC_CCU8_SLICE_EVENT_FILTER_DISABLED) || \
 132:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES) || \
 133:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES) || \
 134:../Libraries/XMCLib/src/xmc_ccu8.c ****      (cycles == XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES))
 135:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 136:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_CAP_TIMER_CLEAR_MODE(mode) \
 137:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER)   || \
 138:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH)|| \
 139:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW) || \
 140:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mode == XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS))
 141:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 142:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action) \
 143:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR)      || \
 144:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP) || \
 145:../Libraries/XMCLib/src/xmc_ccu8.c ****      (mcs_action == XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT))
 146:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 147:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SR_ID(id) \
 148:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((id == XMC_CCU8_SLICE_SR_ID_0) || \
 149:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_1) || \
 150:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_2) || \
 151:../Libraries/XMCLib/src/xmc_ccu8.c ****      (id == XMC_CCU8_SLICE_SR_ID_3))
 152:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 153:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel) \
 154:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE) || \
 155:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1)    || \
 156:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_2)    || \
 157:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2))
 158:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 159:../Libraries/XMCLib/src/xmc_ccu8.c **** #if((UC_SERIES == XMC13) || (UC_SERIES == XMC14))
 160:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 161:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 162:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 163:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2) || \
 164:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2))
 165:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 166:../Libraries/XMCLib/src/xmc_ccu8.c **** #define XMC_CCU8_SLICE_CHECK_SLICE_STATUS(channel) \
 167:../Libraries/XMCLib/src/xmc_ccu8.c ****     ((channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1)       || \
 168:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_2)       || \
 169:../Libraries/XMCLib/src/xmc_ccu8.c ****      (channel == XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2))
 170:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 171:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 172:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 173:../Libraries/XMCLib/src/xmc_ccu8.c ****  * LOCAL ROUTINES
 174:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 175:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 176:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lAssertReset(const XMC_CCU8_MODULE_t *const module)
 177:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 161              	 .loc 2 177 0
 162              	 .cfi_startproc
 163              	 
 164              	 
 165 0000 80B5     	 push {r7,lr}
 166              	.LCFI18:
 167              	 .cfi_def_cfa_offset 8
 168              	 .cfi_offset 7,-8
 169              	 .cfi_offset 14,-4
 170 0002 82B0     	 sub sp,sp,#8
 171              	.LCFI19:
 172              	 .cfi_def_cfa_offset 16
 173 0004 00AF     	 add r7,sp,#0
 174              	.LCFI20:
 175              	 .cfi_def_cfa_register 7
 176 0006 7860     	 str r0,[r7,#4]
 178:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 177              	 .loc 2 178 0
 178 0008 7B68     	 ldr r3,[r7,#4]
 179 000a 094A     	 ldr r2,.L9
 180 000c 9342     	 cmp r3,r2
 181 000e 03D0     	 beq .L6
 182 0010 084A     	 ldr r2,.L9+4
 183 0012 9342     	 cmp r3,r2
 184 0014 04D0     	 beq .L7
 179:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 180:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 183:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 184:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 185:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 187:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 188:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 189:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 190:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 191:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lAssertReset:Invalid Module Pointer", 0);
 192:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 185              	 .loc 2 192 0
 186 0016 08E0     	 b .L4
 187              	.L6:
 181:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 188              	 .loc 2 181 0
 189 0018 8020     	 movs r0,#128
 190 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 182:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 191              	 .loc 2 182 0
 192 001e 04E0     	 b .L4
 193              	.L7:
 186:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 194              	 .loc 2 186 0
 195 0020 4FF48070 	 mov r0,#256
 196 0024 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 187:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 197              	 .loc 2 187 0
 198 0028 00BF     	 nop
 199              	.L4:
 193:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 194:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 200              	 .loc 2 194 0
 201 002a 0837     	 adds r7,r7,#8
 202              	.LCFI21:
 203              	 .cfi_def_cfa_offset 8
 204 002c BD46     	 mov sp,r7
 205              	.LCFI22:
 206              	 .cfi_def_cfa_register 13
 207              	 
 208 002e 80BD     	 pop {r7,pc}
 209              	.L10:
 210              	 .align 2
 211              	.L9:
 212 0030 00000240 	 .word 1073872896
 213 0034 00400240 	 .word 1073889280
 214              	 .cfi_endproc
 215              	.LFE209:
 217              	 .section .text.XMC_CCU8_lDeassertReset,"ax",%progbits
 218              	 .align 2
 219              	 .thumb
 220              	 .thumb_func
 222              	XMC_CCU8_lDeassertReset:
 223              	.LFB210:
 195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 196:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lDeassertReset(const XMC_CCU8_MODULE_t *const module)
 197:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 224              	 .loc 2 197 0
 225              	 .cfi_startproc
 226              	 
 227              	 
 228 0000 80B5     	 push {r7,lr}
 229              	.LCFI23:
 230              	 .cfi_def_cfa_offset 8
 231              	 .cfi_offset 7,-8
 232              	 .cfi_offset 14,-4
 233 0002 82B0     	 sub sp,sp,#8
 234              	.LCFI24:
 235              	 .cfi_def_cfa_offset 16
 236 0004 00AF     	 add r7,sp,#0
 237              	.LCFI25:
 238              	 .cfi_def_cfa_register 7
 239 0006 7860     	 str r0,[r7,#4]
 198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 240              	 .loc 2 198 0
 241 0008 7B68     	 ldr r3,[r7,#4]
 242 000a 094A     	 ldr r2,.L16
 243 000c 9342     	 cmp r3,r2
 244 000e 03D0     	 beq .L13
 245 0010 084A     	 ldr r2,.L16+4
 246 0012 9342     	 cmp r3,r2
 247 0014 04D0     	 beq .L14
 199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 201:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU80);
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 203:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 204:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)
 205:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 206:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_CCU81);
 207:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 208:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 209:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 210:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 211:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lDeassertReset:Invalid Module Pointer", 0);
 212:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 248              	 .loc 2 212 0
 249 0016 08E0     	 b .L11
 250              	.L13:
 201:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 251              	 .loc 2 201 0
 252 0018 8020     	 movs r0,#128
 253 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 202:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 254              	 .loc 2 202 0
 255 001e 04E0     	 b .L11
 256              	.L14:
 206:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 257              	 .loc 2 206 0
 258 0020 4FF48070 	 mov r0,#256
 259 0024 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 207:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 260              	 .loc 2 207 0
 261 0028 00BF     	 nop
 262              	.L11:
 213:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 214:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 263              	 .loc 2 214 0
 264 002a 0837     	 adds r7,r7,#8
 265              	.LCFI26:
 266              	 .cfi_def_cfa_offset 8
 267 002c BD46     	 mov sp,r7
 268              	.LCFI27:
 269              	 .cfi_def_cfa_register 13
 270              	 
 271 002e 80BD     	 pop {r7,pc}
 272              	.L17:
 273              	 .align 2
 274              	.L16:
 275 0030 00000240 	 .word 1073872896
 276 0034 00400240 	 .word 1073889280
 277              	 .cfi_endproc
 278              	.LFE210:
 280              	 .section .text.XMC_CCU8_lGateClock,"ax",%progbits
 281              	 .align 2
 282              	 .thumb
 283              	 .thumb_func
 285              	XMC_CCU8_lGateClock:
 286              	.LFB211:
 215:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 216:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 217:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 218:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lGateClock(XMC_CCU8_MODULE_t *const module)
 219:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 287              	 .loc 2 219 0
 288              	 .cfi_startproc
 289              	 
 290              	 
 291 0000 80B5     	 push {r7,lr}
 292              	.LCFI28:
 293              	 .cfi_def_cfa_offset 8
 294              	 .cfi_offset 7,-8
 295              	 .cfi_offset 14,-4
 296 0002 82B0     	 sub sp,sp,#8
 297              	.LCFI29:
 298              	 .cfi_def_cfa_offset 16
 299 0004 00AF     	 add r7,sp,#0
 300              	.LCFI30:
 301              	 .cfi_def_cfa_register 7
 302 0006 7860     	 str r0,[r7,#4]
 220:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 303              	 .loc 2 220 0
 304 0008 7B68     	 ldr r3,[r7,#4]
 305 000a 094A     	 ldr r2,.L23
 306 000c 9342     	 cmp r3,r2
 307 000e 03D0     	 beq .L20
 308 0010 084A     	 ldr r2,.L23+4
 309 0012 9342     	 cmp r3,r2
 310 0014 04D0     	 beq .L21
 221:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 222:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 225:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 226:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 227:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 228:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 229:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 230:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 231:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 232:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 233:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lGateClock:Invalid Module Pointer", 0);
 234:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 311              	 .loc 2 234 0
 312 0016 08E0     	 b .L18
 313              	.L20:
 223:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 314              	 .loc 2 223 0
 315 0018 8020     	 movs r0,#128
 316 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 224:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 317              	 .loc 2 224 0
 318 001e 04E0     	 b .L18
 319              	.L21:
 228:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 320              	 .loc 2 228 0
 321 0020 4FF48070 	 mov r0,#256
 322 0024 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 229:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 323              	 .loc 2 229 0
 324 0028 00BF     	 nop
 325              	.L18:
 235:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 236:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 326              	 .loc 2 236 0
 327 002a 0837     	 adds r7,r7,#8
 328              	.LCFI31:
 329              	 .cfi_def_cfa_offset 8
 330 002c BD46     	 mov sp,r7
 331              	.LCFI32:
 332              	 .cfi_def_cfa_register 13
 333              	 
 334 002e 80BD     	 pop {r7,pc}
 335              	.L24:
 336              	 .align 2
 337              	.L23:
 338 0030 00000240 	 .word 1073872896
 339 0034 00400240 	 .word 1073889280
 340              	 .cfi_endproc
 341              	.LFE211:
 343              	 .section .text.XMC_CCU8_lUngateClock,"ax",%progbits
 344              	 .align 2
 345              	 .thumb
 346              	 .thumb_func
 348              	XMC_CCU8_lUngateClock:
 349              	.LFB212:
 237:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 238:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE void XMC_CCU8_lUngateClock(XMC_CCU8_MODULE_t *const module)
 239:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 350              	 .loc 2 239 0
 351              	 .cfi_startproc
 352              	 
 353              	 
 354 0000 80B5     	 push {r7,lr}
 355              	.LCFI33:
 356              	 .cfi_def_cfa_offset 8
 357              	 .cfi_offset 7,-8
 358              	 .cfi_offset 14,-4
 359 0002 82B0     	 sub sp,sp,#8
 360              	.LCFI34:
 361              	 .cfi_def_cfa_offset 16
 362 0004 00AF     	 add r7,sp,#0
 363              	.LCFI35:
 364              	 .cfi_def_cfa_register 7
 365 0006 7860     	 str r0,[r7,#4]
 240:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch ((uint32_t)module)
 366              	 .loc 2 240 0
 367 0008 7B68     	 ldr r3,[r7,#4]
 368 000a 094A     	 ldr r2,.L30
 369 000c 9342     	 cmp r3,r2
 370 000e 03D0     	 beq .L27
 371 0010 084A     	 ldr r2,.L30+4
 372 0012 9342     	 cmp r3,r2
 373 0014 04D0     	 beq .L28
 241:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 242:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU80:
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU80);
 244:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 245:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 246:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU81)      
 247:../Libraries/XMCLib/src/xmc_ccu8.c ****     case (uint32_t)CCU81:
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_CCU81);
 249:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 250:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 251:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 252:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
 253:../Libraries/XMCLib/src/xmc_ccu8.c ****       XMC_ASSERT("XMC_CCU8_lUngateClock:Invalid Module Pointer", 0);
 254:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;   
 374              	 .loc 2 254 0
 375 0016 08E0     	 b .L25
 376              	.L27:
 243:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 377              	 .loc 2 243 0
 378 0018 8020     	 movs r0,#128
 379 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 244:../Libraries/XMCLib/src/xmc_ccu8.c ****       
 380              	 .loc 2 244 0
 381 001e 04E0     	 b .L25
 382              	.L28:
 248:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 383              	 .loc 2 248 0
 384 0020 4FF48070 	 mov r0,#256
 385 0024 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 249:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 386              	 .loc 2 249 0
 387 0028 00BF     	 nop
 388              	.L25:
 255:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 256:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 389              	 .loc 2 256 0
 390 002a 0837     	 adds r7,r7,#8
 391              	.LCFI36:
 392              	 .cfi_def_cfa_offset 8
 393 002c BD46     	 mov sp,r7
 394              	.LCFI37:
 395              	 .cfi_def_cfa_register 13
 396              	 
 397 002e 80BD     	 pop {r7,pc}
 398              	.L31:
 399              	 .align 2
 400              	.L30:
 401 0030 00000240 	 .word 1073872896
 402 0034 00400240 	 .word 1073889280
 403              	 .cfi_endproc
 404              	.LFE212:
 406              	 .section .text.XMC_CCU8_EnableModule,"ax",%progbits
 407              	 .align 2
 408              	 .global XMC_CCU8_EnableModule
 409              	 .thumb
 410              	 .thumb_func
 412              	XMC_CCU8_EnableModule:
 413              	.LFB213:
 257:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 258:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 259:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined (XMC_ASSERT_ENABLE)
 260:../Libraries/XMCLib/src/xmc_ccu8.c **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsInputvalid(XMC_CCU8_SLICE_INPUT_t input)
 261:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 262:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_SERIES == XMC14)
 263:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 48U);
 264:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 265:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (input < 16U);
 266:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 267:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 268:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 269:../Libraries/XMCLib/src/xmc_ccu8.c **** /**************************************************************************************************
 270:../Libraries/XMCLib/src/xmc_ccu8.c ****  * API IMPLEMENTATION
 271:../Libraries/XMCLib/src/xmc_ccu8.c ****  **************************************************************************************************
 272:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 273:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as active and enable the clock  */
 274:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module)
 275:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 414              	 .loc 2 275 0
 415              	 .cfi_startproc
 416              	 
 417              	 
 418 0000 80B5     	 push {r7,lr}
 419              	.LCFI38:
 420              	 .cfi_def_cfa_offset 8
 421              	 .cfi_offset 7,-8
 422              	 .cfi_offset 14,-4
 423 0002 82B0     	 sub sp,sp,#8
 424              	.LCFI39:
 425              	 .cfi_def_cfa_offset 16
 426 0004 00AF     	 add r7,sp,#0
 427              	.LCFI40:
 428              	 .cfi_def_cfa_register 7
 429 0006 7860     	 str r0,[r7,#4]
 276:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_EnableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 277:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 278:../Libraries/XMCLib/src/xmc_ccu8.c **** #if (UC_FAMILY == XMC4)
 279:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module clock */
 280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_CCU);
 430              	 .loc 2 280 0
 431 0008 1020     	 movs r0,#16
 432 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
 281:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 282:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 283:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 284:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lUngateClock(module);
 433              	 .loc 2 284 0
 434 000e 7868     	 ldr r0,[r7,#4]
 435 0010 FFF7FEFF 	 bl XMC_CCU8_lUngateClock
 285:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 286:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 287:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 288:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lDeassertReset(module);
 436              	 .loc 2 288 0
 437 0014 7868     	 ldr r0,[r7,#4]
 438 0016 FFF7FEFF 	 bl XMC_CCU8_lDeassertReset
 289:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 290:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 439              	 .loc 2 290 0
 440 001a 0837     	 adds r7,r7,#8
 441              	.LCFI41:
 442              	 .cfi_def_cfa_offset 8
 443 001c BD46     	 mov sp,r7
 444              	.LCFI42:
 445              	 .cfi_def_cfa_register 13
 446              	 
 447 001e 80BD     	 pop {r7,pc}
 448              	 .cfi_endproc
 449              	.LFE213:
 451              	 .section .text.XMC_CCU8_DisableModule,"ax",%progbits
 452              	 .align 2
 453              	 .global XMC_CCU8_DisableModule
 454              	 .thumb
 455              	 .thumb_func
 457              	XMC_CCU8_DisableModule:
 458              	.LFB214:
 291:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 292:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to set the CCU8 module as idle and disable the clock  */
 293:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module)
 294:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 459              	 .loc 2 294 0
 460              	 .cfi_startproc
 461              	 
 462              	 
 463 0000 80B5     	 push {r7,lr}
 464              	.LCFI43:
 465              	 .cfi_def_cfa_offset 8
 466              	 .cfi_offset 7,-8
 467              	 .cfi_offset 14,-4
 468 0002 82B0     	 sub sp,sp,#8
 469              	.LCFI44:
 470              	 .cfi_def_cfa_offset 16
 471 0004 00AF     	 add r7,sp,#0
 472              	.LCFI45:
 473              	 .cfi_def_cfa_register 7
 474 0006 7860     	 str r0,[r7,#4]
 295:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_DisableModule:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 296:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 297:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 298:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lAssertReset(module);
 475              	 .loc 2 298 0
 476 0008 7868     	 ldr r0,[r7,#4]
 477 000a FFF7FEFF 	 bl XMC_CCU8_lAssertReset
 299:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 300:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 301:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CLOCK_GATING_SUPPORTED)
 302:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_lGateClock(module);
 478              	 .loc 2 302 0
 479 000e 7868     	 ldr r0,[r7,#4]
 480 0010 FFF7FEFF 	 bl XMC_CCU8_lGateClock
 303:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 304:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 481              	 .loc 2 304 0
 482 0014 0837     	 adds r7,r7,#8
 483              	.LCFI46:
 484              	 .cfi_def_cfa_offset 8
 485 0016 BD46     	 mov sp,r7
 486              	.LCFI47:
 487              	 .cfi_def_cfa_register 13
 488              	 
 489 0018 80BD     	 pop {r7,pc}
 490              	 .cfi_endproc
 491              	.LFE214:
 493 001a 00BF     	 .section .text.XMC_CCU8_Init,"ax",%progbits
 494              	 .align 2
 495              	 .global XMC_CCU8_Init
 496              	 .thumb
 497              	 .thumb_func
 499              	XMC_CCU8_Init:
 500              	.LFB215:
 305:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 306:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to initialize CCU8 global resources  */
 307:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action)
 308:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 501              	 .loc 2 308 0
 502              	 .cfi_startproc
 503              	 
 504              	 
 505 0000 80B5     	 push {r7,lr}
 506              	.LCFI48:
 507              	 .cfi_def_cfa_offset 8
 508              	 .cfi_offset 7,-8
 509              	 .cfi_offset 14,-4
 510 0002 84B0     	 sub sp,sp,#16
 511              	.LCFI49:
 512              	 .cfi_def_cfa_offset 24
 513 0004 00AF     	 add r7,sp,#0
 514              	.LCFI50:
 515              	 .cfi_def_cfa_register 7
 516 0006 7860     	 str r0,[r7,#4]
 517 0008 0B46     	 mov r3,r1
 518 000a FB70     	 strb r3,[r7,#3]
 309:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 311:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 312:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_Init:Invalid mcs action", XMC_CCU8_SLICE_CHECK_MCS_ACTION(mcs_action));
 313:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 314:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable CCU8 module */
 315:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_EnableModule(module);
 519              	 .loc 2 315 0
 520 000c 7868     	 ldr r0,[r7,#4]
 521 000e FFF7FEFF 	 bl XMC_CCU8_EnableModule
 316:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Start the prescaler */
 317:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_StartPrescaler(module);
 522              	 .loc 2 317 0
 523 0012 7868     	 ldr r0,[r7,#4]
 524 0014 FFF7FEFF 	 bl XMC_CCU8_StartPrescaler
 318:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 319:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 525              	 .loc 2 319 0
 526 0018 7B68     	 ldr r3,[r7,#4]
 527 001a 1B68     	 ldr r3,[r3]
 528 001c FB60     	 str r3,[r7,#12]
 320:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_MSDE_Msk);
 529              	 .loc 2 320 0
 530 001e FB68     	 ldr r3,[r7,#12]
 531 0020 23F44043 	 bic r3,r3,#49152
 532 0024 FB60     	 str r3,[r7,#12]
 321:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= (uint32_t)mcs_action << CCU8_GCTRL_MSDE_Pos;
 533              	 .loc 2 321 0
 534 0026 FB78     	 ldrb r3,[r7,#3]
 535 0028 9B03     	 lsls r3,r3,#14
 536 002a FA68     	 ldr r2,[r7,#12]
 537 002c 1343     	 orrs r3,r3,r2
 538 002e FB60     	 str r3,[r7,#12]
 322:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 323:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 539              	 .loc 2 323 0
 540 0030 7B68     	 ldr r3,[r7,#4]
 541 0032 FA68     	 ldr r2,[r7,#12]
 542 0034 1A60     	 str r2,[r3]
 324:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 543              	 .loc 2 324 0
 544 0036 1037     	 adds r7,r7,#16
 545              	.LCFI51:
 546              	 .cfi_def_cfa_offset 8
 547 0038 BD46     	 mov sp,r7
 548              	.LCFI52:
 549              	 .cfi_def_cfa_register 13
 550              	 
 551 003a 80BD     	 pop {r7,pc}
 552              	 .cfi_endproc
 553              	.LFE215:
 555              	 .section .text.XMC_CCU8_SetModuleClock,"ax",%progbits
 556              	 .align 2
 557              	 .global XMC_CCU8_SetModuleClock
 558              	 .thumb
 559              	 .thumb_func
 561              	XMC_CCU8_SetModuleClock:
 562              	.LFB216:
 325:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 326:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to select CCU8 module clock */
 327:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock)
 328:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 563              	 .loc 2 328 0
 564              	 .cfi_startproc
 565              	 
 566              	 
 567              	 
 568 0000 80B4     	 push {r7}
 569              	.LCFI53:
 570              	 .cfi_def_cfa_offset 4
 571              	 .cfi_offset 7,-4
 572 0002 85B0     	 sub sp,sp,#20
 573              	.LCFI54:
 574              	 .cfi_def_cfa_offset 24
 575 0004 00AF     	 add r7,sp,#0
 576              	.LCFI55:
 577              	 .cfi_def_cfa_register 7
 578 0006 7860     	 str r0,[r7,#4]
 579 0008 0B46     	 mov r3,r1
 580 000a FB70     	 strb r3,[r7,#3]
 329:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 330:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 331:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
 332:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetModuleClock:Invalid Module Clock", XMC_CCU8_SLICE_CHECK_CLOCK(clock));
 333:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 334:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 581              	 .loc 2 334 0
 582 000c 7B68     	 ldr r3,[r7,#4]
 583 000e 1B68     	 ldr r3,[r3]
 584 0010 FB60     	 str r3,[r7,#12]
 335:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t) CCU8_GCTRL_PCIS_Msk);
 585              	 .loc 2 335 0
 586 0012 FB68     	 ldr r3,[r7,#12]
 587 0014 23F03003 	 bic r3,r3,#48
 588 0018 FB60     	 str r3,[r7,#12]
 336:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t) clock) << CCU8_GCTRL_PCIS_Pos;
 589              	 .loc 2 336 0
 590 001a FB78     	 ldrb r3,[r7,#3]
 591 001c 1B01     	 lsls r3,r3,#4
 592 001e FA68     	 ldr r2,[r7,#12]
 593 0020 1343     	 orrs r3,r3,r2
 594 0022 FB60     	 str r3,[r7,#12]
 337:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 338:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 595              	 .loc 2 338 0
 596 0024 7B68     	 ldr r3,[r7,#4]
 597 0026 FA68     	 ldr r2,[r7,#12]
 598 0028 1A60     	 str r2,[r3]
 339:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 599              	 .loc 2 339 0
 600 002a 1437     	 adds r7,r7,#20
 601              	.LCFI56:
 602              	 .cfi_def_cfa_offset 4
 603 002c BD46     	 mov sp,r7
 604              	.LCFI57:
 605              	 .cfi_def_cfa_register 13
 606              	 
 607 002e 5DF8047B 	 ldr r7,[sp],#4
 608              	.LCFI58:
 609              	 .cfi_restore 7
 610              	 .cfi_def_cfa_offset 0
 611 0032 7047     	 bx lr
 612              	 .cfi_endproc
 613              	.LFE216:
 615              	 .section .text.XMC_CCU8_SLICE_CompareInit,"ax",%progbits
 616              	 .align 2
 617              	 .global XMC_CCU8_SLICE_CompareInit
 618              	 .thumb
 619              	 .thumb_func
 621              	XMC_CCU8_SLICE_CompareInit:
 622              	.LFB217:
 340:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 341:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Compare mode */
 342:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
 343:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init)
 344:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 623              	 .loc 2 344 0
 624              	 .cfi_startproc
 625              	 
 626              	 
 627 0000 80B5     	 push {r7,lr}
 628              	.LCFI59:
 629              	 .cfi_def_cfa_offset 8
 630              	 .cfi_offset 7,-8
 631              	 .cfi_offset 14,-4
 632 0002 82B0     	 sub sp,sp,#8
 633              	.LCFI60:
 634              	 .cfi_def_cfa_offset 16
 635 0004 00AF     	 add r7,sp,#0
 636              	.LCFI61:
 637              	 .cfi_def_cfa_register 7
 638 0006 7860     	 str r0,[r7,#4]
 639 0008 3960     	 str r1,[r7]
 345:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 346:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CompareInit:Timer Init Pointer is NULL",
 347:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_COMPARE_CONFIG_t *) NULL != compare_init);
 348:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 349:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 640              	 .loc 2 349 0
 641 000a 7868     	 ldr r0,[r7,#4]
 642 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 350:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the timer mode */
 351:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = compare_init->tc;
 643              	 .loc 2 351 0
 644 0010 3B68     	 ldr r3,[r7]
 645 0012 1A68     	 ldr r2,[r3]
 646 0014 7B68     	 ldr r3,[r7,#4]
 647 0016 5A61     	 str r2,[r3,#20]
 352:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 353:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC =  (uint32_t)compare_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 648              	 .loc 2 353 0
 649 0018 3B68     	 ldr r3,[r7]
 650 001a 5B7B     	 ldrb r3,[r3,#13]
 651 001c C3F30013 	 ubfx r3,r3,#4,#1
 652 0020 DBB2     	 uxtb r3,r3
 653 0022 1A05     	 lsls r2,r3,#20
 654 0024 7B68     	 ldr r3,[r7,#4]
 655 0026 5A60     	 str r2,[r3,#4]
 354:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 355:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) compare_init->prescaler_initval;
 656              	 .loc 2 355 0
 657 0028 3B68     	 ldr r3,[r7]
 658 002a 1B7B     	 ldrb r3,[r3,#12]
 659 002c C3F30303 	 ubfx r3,r3,#0,#4
 660 0030 DBB2     	 uxtb r3,r3
 661 0032 1A46     	 mov r2,r3
 662 0034 7B68     	 ldr r3,[r7,#4]
 663 0036 5A62     	 str r2,[r3,#36]
 356:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 357:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) compare_init->float_limit;
 664              	 .loc 2 357 0
 665 0038 3B68     	 ldr r3,[r7]
 666 003a 1B7B     	 ldrb r3,[r3,#12]
 667 003c C3F30313 	 ubfx r3,r3,#4,#4
 668 0040 DBB2     	 uxtb r3,r3
 669 0042 1A46     	 mov r2,r3
 670 0044 7B68     	 ldr r3,[r7,#4]
 671 0046 DA62     	 str r2,[r3,#44]
 358:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program the dither compare value */
 359:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DITS = (uint32_t) compare_init->dither_limit;
 672              	 .loc 2 359 0
 673 0048 3B68     	 ldr r3,[r7]
 674 004a 5B7B     	 ldrb r3,[r3,#13]
 675 004c C3F30303 	 ubfx r3,r3,#0,#4
 676 0050 DBB2     	 uxtb r3,r3
 677 0052 1A46     	 mov r2,r3
 678 0054 7B68     	 ldr r3,[r7,#4]
 679 0056 1A62     	 str r2,[r3,#32]
 360:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program timer output passive level */
 361:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = (uint32_t) compare_init->psl;
 680              	 .loc 2 361 0
 681 0058 3B68     	 ldr r3,[r7]
 682 005a 5A68     	 ldr r2,[r3,#4]
 683 005c 7B68     	 ldr r3,[r7,#4]
 684 005e 9A61     	 str r2,[r3,#24]
 362:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Asymmetric PWM and Slice output routing configuration */
 363:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 364:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t) compare_init->chc;
 365:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 366:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = (uint32_t)((uint32_t)compare_init->chc ^ XMC_CCU8_SLICE_CHC_CONFIG_MASK);
 685              	 .loc 2 366 0
 686 0060 3B68     	 ldr r3,[r7]
 687 0062 9B68     	 ldr r3,[r3,#8]
 688 0064 83F01402 	 eor r2,r3,#20
 689 0068 7B68     	 ldr r3,[r7,#4]
 690 006a 9A64     	 str r2,[r3,#72]
 367:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 368:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 691              	 .loc 2 368 0
 692 006c 0837     	 adds r7,r7,#8
 693              	.LCFI62:
 694              	 .cfi_def_cfa_offset 8
 695 006e BD46     	 mov sp,r7
 696              	.LCFI63:
 697              	 .cfi_def_cfa_register 13
 698              	 
 699 0070 80BD     	 pop {r7,pc}
 700              	 .cfi_endproc
 701              	.LFE217:
 703 0072 00BF     	 .section .text.XMC_CCU8_SLICE_CaptureInit,"ax",%progbits
 704              	 .align 2
 705              	 .global XMC_CCU8_SLICE_CaptureInit
 706              	 .thumb
 707              	 .thumb_func
 709              	XMC_CCU8_SLICE_CaptureInit:
 710              	.LFB218:
 369:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 370:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure CC8 Slice in Capture mode */
 371:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice, 
 372:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init)
 373:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 711              	 .loc 2 373 0
 712              	 .cfi_startproc
 713              	 
 714              	 
 715 0000 80B5     	 push {r7,lr}
 716              	.LCFI64:
 717              	 .cfi_def_cfa_offset 8
 718              	 .cfi_offset 7,-8
 719              	 .cfi_offset 14,-4
 720 0002 82B0     	 sub sp,sp,#8
 721              	.LCFI65:
 722              	 .cfi_def_cfa_offset 16
 723 0004 00AF     	 add r7,sp,#0
 724              	.LCFI66:
 725              	 .cfi_def_cfa_register 7
 726 0006 7860     	 str r0,[r7,#4]
 727 0008 3960     	 str r1,[r7]
 374:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 375:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CaptureInit:Capture Init Pointer is NULL", 
 376:../Libraries/XMCLib/src/xmc_ccu8.c ****              (XMC_CCU8_SLICE_CAPTURE_CONFIG_t *) NULL != capture_init);
 377:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Stops the timer */
 378:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_StopTimer(slice);
 728              	 .loc 2 378 0
 729 000a 7868     	 ldr r0,[r7,#4]
 730 000c FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 379:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Capture mode configuration */
 380:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = capture_init->tc;
 731              	 .loc 2 380 0
 732 0010 3B68     	 ldr r3,[r7]
 733 0012 1A68     	 ldr r2,[r3]
 734 0014 7B68     	 ldr r3,[r7,#4]
 735 0016 5A61     	 str r2,[r3,#20]
 381:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Enable the timer concatenation */
 382:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = (uint32_t)capture_init->timer_concatenation << CCU8_CC8_CMC_TCE_Pos;
 736              	 .loc 2 382 0
 737 0018 3B68     	 ldr r3,[r7]
 738 001a 5B79     	 ldrb r3,[r3,#5]
 739 001c C3F30003 	 ubfx r3,r3,#0,#1
 740 0020 DBB2     	 uxtb r3,r3
 741 0022 1A05     	 lsls r2,r3,#20
 742 0024 7B68     	 ldr r3,[r7,#4]
 743 0026 5A60     	 str r2,[r3,#4]
 383:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program floating prescaler compare value */
 384:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPCS = (uint32_t) capture_init->float_limit;
 744              	 .loc 2 384 0
 745 0028 3B68     	 ldr r3,[r7]
 746 002a 1B79     	 ldrb r3,[r3,#4]
 747 002c C3F30313 	 ubfx r3,r3,#4,#4
 748 0030 DBB2     	 uxtb r3,r3
 749 0032 1A46     	 mov r2,r3
 750 0034 7B68     	 ldr r3,[r7,#4]
 751 0036 DA62     	 str r2,[r3,#44]
 385:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program initial prescaler divider value */
 386:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) capture_init->prescaler_initval;
 752              	 .loc 2 386 0
 753 0038 3B68     	 ldr r3,[r7]
 754 003a 1B79     	 ldrb r3,[r3,#4]
 755 003c C3F30303 	 ubfx r3,r3,#0,#4
 756 0040 DBB2     	 uxtb r3,r3
 757 0042 1A46     	 mov r2,r3
 758 0044 7B68     	 ldr r3,[r7,#4]
 759 0046 5A62     	 str r2,[r3,#36]
 387:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 760              	 .loc 2 387 0
 761 0048 0837     	 adds r7,r7,#8
 762              	.LCFI67:
 763              	 .cfi_def_cfa_offset 8
 764 004a BD46     	 mov sp,r7
 765              	.LCFI68:
 766              	 .cfi_def_cfa_register 13
 767              	 
 768 004c 80BD     	 pop {r7,pc}
 769              	 .cfi_endproc
 770              	.LFE218:
 772 004e 00BF     	 .section .text.XMC_CCU8_SLICE_SetOutPath,"ax",%progbits
 773              	 .align 2
 774              	 .global XMC_CCU8_SLICE_SetOutPath
 775              	 .thumb
 776              	 .thumb_func
 778              	XMC_CCU8_SLICE_SetOutPath:
 779              	.LFB219:
 388:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 389:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the each output of the slice with either STx or inverted STx. */
 390:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk)
 391:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 780              	 .loc 2 391 0
 781              	 .cfi_startproc
 782              	 
 783              	 
 784              	 
 785 0000 80B4     	 push {r7}
 786              	.LCFI69:
 787              	 .cfi_def_cfa_offset 4
 788              	 .cfi_offset 7,-4
 789 0002 85B0     	 sub sp,sp,#20
 790              	.LCFI70:
 791              	 .cfi_def_cfa_offset 24
 792 0004 00AF     	 add r7,sp,#0
 793              	.LCFI71:
 794              	 .cfi_def_cfa_register 7
 795 0006 7860     	 str r0,[r7,#4]
 796 0008 3960     	 str r1,[r7]
 392:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t chc;
 393:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetOutPath:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 394:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc = slice->CHC;
 797              	 .loc 2 394 0
 798 000a 7B68     	 ldr r3,[r7,#4]
 799 000c 9B6C     	 ldr r3,[r3,#72]
 800 000e FB60     	 str r3,[r7,#12]
 395:../Libraries/XMCLib/src/xmc_ccu8.c **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 396:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)out_path_msk >> 16U);
 801              	 .loc 2 396 0
 802 0010 3B68     	 ldr r3,[r7]
 803 0012 1B0C     	 lsrs r3,r3,#16
 804 0014 DB43     	 mvns r3,r3
 805 0016 FA68     	 ldr r2,[r7,#12]
 806 0018 1340     	 ands r3,r3,r2
 807 001a FB60     	 str r3,[r7,#12]
 397:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0xFFFFU);
 808              	 .loc 2 397 0
 809 001c 3B68     	 ldr r3,[r7]
 810 001e 9BB2     	 uxth r3,r3
 811 0020 FA68     	 ldr r2,[r7,#12]
 812 0022 1343     	 orrs r3,r3,r2
 813 0024 FB60     	 str r3,[r7,#12]
 398:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 399:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc &= ~((uint32_t)((uint32_t)(out_path_msk & 0xCCCC0U) >> 2U));
 400:../Libraries/XMCLib/src/xmc_ccu8.c ****   chc |= ((uint32_t)out_path_msk & 0x33330U);
 401:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 402:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CHC = chc;
 814              	 .loc 2 402 0
 815 0026 7B68     	 ldr r3,[r7,#4]
 816 0028 FA68     	 ldr r2,[r7,#12]
 817 002a 9A64     	 str r2,[r3,#72]
 403:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 818              	 .loc 2 403 0
 819 002c 1437     	 adds r7,r7,#20
 820              	.LCFI72:
 821              	 .cfi_def_cfa_offset 4
 822 002e BD46     	 mov sp,r7
 823              	.LCFI73:
 824              	 .cfi_def_cfa_register 13
 825              	 
 826 0030 5DF8047B 	 ldr r7,[sp],#4
 827              	.LCFI74:
 828              	 .cfi_restore 7
 829              	 .cfi_def_cfa_offset 0
 830 0034 7047     	 bx lr
 831              	 .cfi_endproc
 832              	.LFE219:
 834 0036 00BF     	 .section .text.XMC_CCU8_SetMultiChannelShadowTransferMode,"ax",%progbits
 835              	 .align 2
 836              	 .global XMC_CCU8_SetMultiChannelShadowTransferMode
 837              	 .thumb
 838              	 .thumb_func
 840              	XMC_CCU8_SetMultiChannelShadowTransferMode:
 841              	.LFB220:
 404:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 405:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the multichannel shadow transfer request via SW and via the CCU8x.MCSS input. *
 406:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
 407:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 842              	 .loc 2 407 0
 843              	 .cfi_startproc
 844              	 
 845              	 
 846              	 
 847 0000 80B4     	 push {r7}
 848              	.LCFI75:
 849              	 .cfi_def_cfa_offset 4
 850              	 .cfi_offset 7,-4
 851 0002 85B0     	 sub sp,sp,#20
 852              	.LCFI76:
 853              	 .cfi_def_cfa_offset 24
 854 0004 00AF     	 add r7,sp,#0
 855              	.LCFI77:
 856              	 .cfi_def_cfa_register 7
 857 0006 7860     	 str r0,[r7,#4]
 858 0008 3960     	 str r1,[r7]
 408:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t gctrl;
 409:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 410:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SetMultiChannelShadowTransferMode:Invalid module Pointer", XMC_CCU8_IsValidM
 411:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 412:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl = module->GCTRL;
 859              	 .loc 2 412 0
 860 000a 7B68     	 ldr r3,[r7,#4]
 861 000c 1B68     	 ldr r3,[r3]
 862 000e FB60     	 str r3,[r7,#12]
 413:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl &= ~((uint32_t)slice_mode_msk >> 16U);
 863              	 .loc 2 413 0
 864 0010 3B68     	 ldr r3,[r7]
 865 0012 1B0C     	 lsrs r3,r3,#16
 866 0014 DB43     	 mvns r3,r3
 867 0016 FA68     	 ldr r2,[r7,#12]
 868 0018 1340     	 ands r3,r3,r2
 869 001a FB60     	 str r3,[r7,#12]
 414:../Libraries/XMCLib/src/xmc_ccu8.c ****   gctrl |= ((uint32_t)slice_mode_msk & 0xFFFFU);
 870              	 .loc 2 414 0
 871 001c 3B68     	 ldr r3,[r7]
 872 001e 9BB2     	 uxth r3,r3
 873 0020 FA68     	 ldr r2,[r7,#12]
 874 0022 1343     	 orrs r3,r3,r2
 875 0024 FB60     	 str r3,[r7,#12]
 415:../Libraries/XMCLib/src/xmc_ccu8.c ****   module->GCTRL = gctrl;
 876              	 .loc 2 415 0
 877 0026 7B68     	 ldr r3,[r7,#4]
 878 0028 FA68     	 ldr r2,[r7,#12]
 879 002a 1A60     	 str r2,[r3]
 416:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 880              	 .loc 2 416 0
 881 002c 1437     	 adds r7,r7,#20
 882              	.LCFI78:
 883              	 .cfi_def_cfa_offset 4
 884 002e BD46     	 mov sp,r7
 885              	.LCFI79:
 886              	 .cfi_def_cfa_register 13
 887              	 
 888 0030 5DF8047B 	 ldr r7,[sp],#4
 889              	.LCFI80:
 890              	 .cfi_restore 7
 891              	 .cfi_def_cfa_offset 0
 892 0034 7047     	 bx lr
 893              	 .cfi_endproc
 894              	.LFE220:
 896 0036 00BF     	 .section .text.XMC_CCU8_SLICE_StartConfig,"ax",%progbits
 897              	 .align 2
 898              	 .global XMC_CCU8_SLICE_StartConfig
 899              	 .thumb
 900              	 .thumb_func
 902              	XMC_CCU8_SLICE_StartConfig:
 903              	.LFB221:
 417:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 418:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 419:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Start trigger function of a slice*/
 420:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
 421:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_EVENT_t event,
 422:../Libraries/XMCLib/src/xmc_ccu8.c ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode)
 423:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 904              	 .loc 2 423 0
 905              	 .cfi_startproc
 906              	 
 907              	 
 908              	 
 909 0000 80B4     	 push {r7}
 910              	.LCFI81:
 911              	 .cfi_def_cfa_offset 4
 912              	 .cfi_offset 7,-4
 913 0002 85B0     	 sub sp,sp,#20
 914              	.LCFI82:
 915              	 .cfi_def_cfa_offset 24
 916 0004 00AF     	 add r7,sp,#0
 917              	.LCFI83:
 918              	 .cfi_def_cfa_register 7
 919 0006 7860     	 str r0,[r7,#4]
 920 0008 0B46     	 mov r3,r1
 921 000a FB70     	 strb r3,[r7,#3]
 922 000c 1346     	 mov r3,r2
 923 000e BB70     	 strb r3,[r7,#2]
 424:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 425:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 426:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 427:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 428:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 429:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StartConfig:Invalid Start Mode", 
 430:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START) ||\
 431:../Libraries/XMCLib/src/xmc_ccu8.c ****               (start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)));
 432:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 924              	 .loc 2 432 0
 925 0010 7B68     	 ldr r3,[r7,#4]
 926 0012 5B68     	 ldr r3,[r3,#4]
 927 0014 BB60     	 str r3,[r7,#8]
 433:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 434:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_STRTS_Msk);
 928              	 .loc 2 434 0
 929 0016 BB68     	 ldr r3,[r7,#8]
 930 0018 23F00303 	 bic r3,r3,#3
 931 001c BB60     	 str r3,[r7,#8]
 435:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_STRTS_Pos;
 932              	 .loc 2 435 0
 933 001e FB78     	 ldrb r3,[r7,#3]
 934 0020 BA68     	 ldr r2,[r7,#8]
 935 0022 1343     	 orrs r3,r3,r2
 936 0024 BB60     	 str r3,[r7,#8]
 436:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 437:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 937              	 .loc 2 437 0
 938 0026 7B68     	 ldr r3,[r7,#4]
 939 0028 BA68     	 ldr r2,[r7,#8]
 940 002a 5A60     	 str r2,[r3,#4]
 438:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 439:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 941              	 .loc 2 439 0
 942 002c 7B68     	 ldr r3,[r7,#4]
 943 002e 5B69     	 ldr r3,[r3,#20]
 944 0030 FB60     	 str r3,[r7,#12]
 440:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 441:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(start_mode == XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR)
 945              	 .loc 2 441 0
 946 0032 BB78     	 ldrb r3,[r7,#2]
 947 0034 012B     	 cmp r3,#1
 948 0036 04D1     	 bne .L41
 442:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 443:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_STRM_Msk;
 949              	 .loc 2 443 0
 950 0038 FB68     	 ldr r3,[r7,#12]
 951 003a 43F48063 	 orr r3,r3,#1024
 952 003e FB60     	 str r3,[r7,#12]
 953 0040 03E0     	 b .L42
 954              	.L41:
 444:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 445:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 446:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 447:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_STRM_Msk);
 955              	 .loc 2 447 0
 956 0042 FB68     	 ldr r3,[r7,#12]
 957 0044 23F48063 	 bic r3,r3,#1024
 958 0048 FB60     	 str r3,[r7,#12]
 959              	.L42:
 448:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 449:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 450:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 960              	 .loc 2 450 0
 961 004a 7B68     	 ldr r3,[r7,#4]
 962 004c FA68     	 ldr r2,[r7,#12]
 963 004e 5A61     	 str r2,[r3,#20]
 451:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 964              	 .loc 2 451 0
 965 0050 1437     	 adds r7,r7,#20
 966              	.LCFI84:
 967              	 .cfi_def_cfa_offset 4
 968 0052 BD46     	 mov sp,r7
 969              	.LCFI85:
 970              	 .cfi_def_cfa_register 13
 971              	 
 972 0054 5DF8047B 	 ldr r7,[sp],#4
 973              	.LCFI86:
 974              	 .cfi_restore 7
 975              	 .cfi_def_cfa_offset 0
 976 0058 7047     	 bx lr
 977              	 .cfi_endproc
 978              	.LFE221:
 980 005a 00BF     	 .section .text.XMC_CCU8_SLICE_StopConfig,"ax",%progbits
 981              	 .align 2
 982              	 .global XMC_CCU8_SLICE_StopConfig
 983              	 .thumb
 984              	 .thumb_func
 986              	XMC_CCU8_SLICE_StopConfig:
 987              	.LFB222:
 452:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 453:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Stop trigger function of a slice */
 454:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
 455:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_EVENT_t event,
 456:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode)
 457:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 988              	 .loc 2 457 0
 989              	 .cfi_startproc
 990              	 
 991              	 
 992              	 
 993 0000 80B4     	 push {r7}
 994              	.LCFI87:
 995              	 .cfi_def_cfa_offset 4
 996              	 .cfi_offset 7,-4
 997 0002 85B0     	 sub sp,sp,#20
 998              	.LCFI88:
 999              	 .cfi_def_cfa_offset 24
 1000 0004 00AF     	 add r7,sp,#0
 1001              	.LCFI89:
 1002              	 .cfi_def_cfa_register 7
 1003 0006 7860     	 str r0,[r7,#4]
 1004 0008 0B46     	 mov r3,r1
 1005 000a FB70     	 strb r3,[r7,#3]
 1006 000c 1346     	 mov r3,r2
 1007 000e BB70     	 strb r3,[r7,#2]
 458:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 459:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 460:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 461:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 462:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 463:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StopConfig:Invalid End Mode", XMC_CCU8_SLICE_CHECK_END_MODE(end_mode))
 464:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 465:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1008              	 .loc 2 465 0
 1009 0010 7B68     	 ldr r3,[r7,#4]
 1010 0012 5B68     	 ldr r3,[r3,#4]
 1011 0014 FB60     	 str r3,[r7,#12]
 466:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the stop function */
 467:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_ENDS_Msk);
 1012              	 .loc 2 467 0
 1013 0016 FB68     	 ldr r3,[r7,#12]
 1014 0018 23F00C03 	 bic r3,r3,#12
 1015 001c FB60     	 str r3,[r7,#12]
 468:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_ENDS_Pos;
 1016              	 .loc 2 468 0
 1017 001e FB78     	 ldrb r3,[r7,#3]
 1018 0020 9B00     	 lsls r3,r3,#2
 1019 0022 FA68     	 ldr r2,[r7,#12]
 1020 0024 1343     	 orrs r3,r3,r2
 1021 0026 FB60     	 str r3,[r7,#12]
 469:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 470:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1022              	 .loc 2 470 0
 1023 0028 7B68     	 ldr r3,[r7,#4]
 1024 002a FA68     	 ldr r2,[r7,#12]
 1025 002c 5A60     	 str r2,[r3,#4]
 471:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 472:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the stop mode */
 473:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1026              	 .loc 2 473 0
 1027 002e 7B68     	 ldr r3,[r7,#4]
 1028 0030 5B69     	 ldr r3,[r3,#20]
 1029 0032 BB60     	 str r3,[r7,#8]
 474:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_ENDM_Msk);
 1030              	 .loc 2 474 0
 1031 0034 BB68     	 ldr r3,[r7,#8]
 1032 0036 23F44073 	 bic r3,r3,#768
 1033 003a BB60     	 str r3,[r7,#8]
 475:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= ((uint32_t) end_mode) << CCU8_CC8_TC_ENDM_Pos;
 1034              	 .loc 2 475 0
 1035 003c BB78     	 ldrb r3,[r7,#2]
 1036 003e 1B02     	 lsls r3,r3,#8
 1037 0040 BA68     	 ldr r2,[r7,#8]
 1038 0042 1343     	 orrs r3,r3,r2
 1039 0044 BB60     	 str r3,[r7,#8]
 476:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 477:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1040              	 .loc 2 477 0
 1041 0046 7B68     	 ldr r3,[r7,#4]
 1042 0048 BA68     	 ldr r2,[r7,#8]
 1043 004a 5A61     	 str r2,[r3,#20]
 478:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1044              	 .loc 2 478 0
 1045 004c 1437     	 adds r7,r7,#20
 1046              	.LCFI90:
 1047              	 .cfi_def_cfa_offset 4
 1048 004e BD46     	 mov sp,r7
 1049              	.LCFI91:
 1050              	 .cfi_def_cfa_register 13
 1051              	 
 1052 0050 5DF8047B 	 ldr r7,[sp],#4
 1053              	.LCFI92:
 1054              	 .cfi_restore 7
 1055              	 .cfi_def_cfa_offset 0
 1056 0054 7047     	 bx lr
 1057              	 .cfi_endproc
 1058              	.LFE222:
 1060 0056 00BF     	 .section .text.XMC_CCU8_SLICE_LoadConfig,"ax",%progbits
 1061              	 .align 2
 1062              	 .global XMC_CCU8_SLICE_LoadConfig
 1063              	 .thumb
 1064              	 .thumb_func
 1066              	XMC_CCU8_SLICE_LoadConfig:
 1067              	.LFB223:
 479:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 480:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the Load trigger function of a slice*/
 481:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 482:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1068              	 .loc 2 482 0
 1069              	 .cfi_startproc
 1070              	 
 1071              	 
 1072              	 
 1073 0000 80B4     	 push {r7}
 1074              	.LCFI93:
 1075              	 .cfi_def_cfa_offset 4
 1076              	 .cfi_offset 7,-4
 1077 0002 85B0     	 sub sp,sp,#20
 1078              	.LCFI94:
 1079              	 .cfi_def_cfa_offset 24
 1080 0004 00AF     	 add r7,sp,#0
 1081              	.LCFI95:
 1082              	 .cfi_def_cfa_register 7
 1083 0006 7860     	 str r0,[r7,#4]
 1084 0008 0B46     	 mov r3,r1
 1085 000a FB70     	 strb r3,[r7,#3]
 483:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 484:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 485:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 486:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 487:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 488:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1086              	 .loc 2 488 0
 1087 000c 7B68     	 ldr r3,[r7,#4]
 1088 000e 5B68     	 ldr r3,[r3,#4]
 1089 0010 FB60     	 str r3,[r7,#12]
 489:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 490:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 491:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_LDS_Msk);
 1090              	 .loc 2 491 0
 1091 0012 FB68     	 ldr r3,[r7,#12]
 1092 0014 23F44053 	 bic r3,r3,#12288
 1093 0018 FB60     	 str r3,[r7,#12]
 492:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_LDS_Pos;
 1094              	 .loc 2 492 0
 1095 001a FB78     	 ldrb r3,[r7,#3]
 1096 001c 1B03     	 lsls r3,r3,#12
 1097 001e FA68     	 ldr r2,[r7,#12]
 1098 0020 1343     	 orrs r3,r3,r2
 1099 0022 FB60     	 str r3,[r7,#12]
 493:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 494:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1100              	 .loc 2 494 0
 1101 0024 7B68     	 ldr r3,[r7,#4]
 1102 0026 FA68     	 ldr r2,[r7,#12]
 1103 0028 5A60     	 str r2,[r3,#4]
 495:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1104              	 .loc 2 495 0
 1105 002a 1437     	 adds r7,r7,#20
 1106              	.LCFI96:
 1107              	 .cfi_def_cfa_offset 4
 1108 002c BD46     	 mov sp,r7
 1109              	.LCFI97:
 1110              	 .cfi_def_cfa_register 13
 1111              	 
 1112 002e 5DF8047B 	 ldr r7,[sp],#4
 1113              	.LCFI98:
 1114              	 .cfi_restore 7
 1115              	 .cfi_def_cfa_offset 0
 1116 0032 7047     	 bx lr
 1117              	 .cfi_endproc
 1118              	.LFE223:
 1120              	 .section .text.XMC_CCU8_SLICE_LoadSelector,"ax",%progbits
 1121              	 .align 2
 1122              	 .global XMC_CCU8_SLICE_LoadSelector
 1123              	 .thumb
 1124              	 .thumb_func
 1126              	XMC_CCU8_SLICE_LoadSelector:
 1127              	.LFB224:
 496:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 497:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure, which compare register value has to be loaded during external load event */
 498:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
 499:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1128              	 .loc 2 499 0
 1129              	 .cfi_startproc
 1130              	 
 1131              	 
 1132              	 
 1133 0000 80B4     	 push {r7}
 1134              	.LCFI99:
 1135              	 .cfi_def_cfa_offset 4
 1136              	 .cfi_offset 7,-4
 1137 0002 85B0     	 sub sp,sp,#20
 1138              	.LCFI100:
 1139              	 .cfi_def_cfa_offset 24
 1140 0004 00AF     	 add r7,sp,#0
 1141              	.LCFI101:
 1142              	 .cfi_def_cfa_register 7
 1143 0006 7860     	 str r0,[r7,#4]
 1144 0008 0B46     	 mov r3,r1
 1145 000a FB70     	 strb r3,[r7,#3]
 500:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 501:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 502:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 503:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_LoadSelector:Invalid Channel number", XMC_CCU8_SLICE_CHECK_COMP_CHANNE
 504:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 505:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1146              	 .loc 2 505 0
 1147 000c 7B68     	 ldr r3,[r7,#4]
 1148 000e 5B69     	 ldr r3,[r3,#20]
 1149 0010 FB60     	 str r3,[r7,#12]
 506:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 507:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the load function */
 508:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_TLS_Msk);
 1150              	 .loc 2 508 0
 1151 0012 FB68     	 ldr r3,[r7,#12]
 1152 0014 23F08003 	 bic r3,r3,#128
 1153 0018 FB60     	 str r3,[r7,#12]
 509:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)ch_num << CCU8_CC8_TC_TLS_Pos;
 1154              	 .loc 2 509 0
 1155 001a FB78     	 ldrb r3,[r7,#3]
 1156 001c DB01     	 lsls r3,r3,#7
 1157 001e FA68     	 ldr r2,[r7,#12]
 1158 0020 1343     	 orrs r3,r3,r2
 1159 0022 FB60     	 str r3,[r7,#12]
 510:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 511:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1160              	 .loc 2 511 0
 1161 0024 7B68     	 ldr r3,[r7,#4]
 1162 0026 FA68     	 ldr r2,[r7,#12]
 1163 0028 5A61     	 str r2,[r3,#20]
 512:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1164              	 .loc 2 512 0
 1165 002a 1437     	 adds r7,r7,#20
 1166              	.LCFI102:
 1167              	 .cfi_def_cfa_offset 4
 1168 002c BD46     	 mov sp,r7
 1169              	.LCFI103:
 1170              	 .cfi_def_cfa_register 13
 1171              	 
 1172 002e 5DF8047B 	 ldr r7,[sp],#4
 1173              	.LCFI104:
 1174              	 .cfi_restore 7
 1175              	 .cfi_def_cfa_offset 0
 1176 0032 7047     	 bx lr
 1177              	 .cfi_endproc
 1178              	.LFE224:
 1180              	 .section .text.XMC_CCU8_SLICE_ModulationConfig,"ax",%progbits
 1181              	 .align 2
 1182              	 .global XMC_CCU8_SLICE_ModulationConfig
 1183              	 .thumb
 1184              	 .thumb_func
 1186              	XMC_CCU8_SLICE_ModulationConfig:
 1187              	.LFB225:
 513:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 514:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice modulation function */
 515:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
 516:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_EVENT_t event,
 517:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
 518:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
 519:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const bool synch_with_pwm)
 520:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1188              	 .loc 2 520 0
 1189              	 .cfi_startproc
 1190              	 
 1191              	 
 1192              	 
 1193 0000 80B4     	 push {r7}
 1194              	.LCFI105:
 1195              	 .cfi_def_cfa_offset 4
 1196              	 .cfi_offset 7,-4
 1197 0002 85B0     	 sub sp,sp,#20
 1198              	.LCFI106:
 1199              	 .cfi_def_cfa_offset 24
 1200 0004 00AF     	 add r7,sp,#0
 1201              	.LCFI107:
 1202              	 .cfi_def_cfa_register 7
 1203 0006 7860     	 str r0,[r7,#4]
 1204 0008 0846     	 mov r0,r1
 1205 000a 1146     	 mov r1,r2
 1206 000c 1A46     	 mov r2,r3
 1207 000e 0346     	 mov r3,r0
 1208 0010 FB70     	 strb r3,[r7,#3]
 1209 0012 0B46     	 mov r3,r1
 1210 0014 BB70     	 strb r3,[r7,#2]
 1211 0016 1346     	 mov r3,r2
 1212 0018 7B70     	 strb r3,[r7,#1]
 521:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 522:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 523:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 524:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
 525:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(even
 526:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid channel for modulation", 
 527:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_MODULATION_CHANNEL(channel));
 528:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ModulationConfig:Invalid Modulation Mode", 
 529:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT) ||\
 530:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)));
 531:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 532:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1213              	 .loc 2 532 0
 1214 001a 7B68     	 ldr r3,[r7,#4]
 1215 001c 5B68     	 ldr r3,[r3,#4]
 1216 001e BB60     	 str r3,[r7,#8]
 533:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 534:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the modulation function */
 535:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_MOS_Msk);
 1217              	 .loc 2 535 0
 1218 0020 BB68     	 ldr r3,[r7,#8]
 1219 0022 23F44023 	 bic r3,r3,#786432
 1220 0026 BB60     	 str r3,[r7,#8]
 536:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_MOS_Pos;
 1221              	 .loc 2 536 0
 1222 0028 FB78     	 ldrb r3,[r7,#3]
 1223 002a 9B04     	 lsls r3,r3,#18
 1224 002c BA68     	 ldr r2,[r7,#8]
 1225 002e 1343     	 orrs r3,r3,r2
 1226 0030 BB60     	 str r3,[r7,#8]
 537:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 538:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1227              	 .loc 2 538 0
 1228 0032 7B68     	 ldr r3,[r7,#4]
 1229 0034 BA68     	 ldr r2,[r7,#8]
 1230 0036 5A60     	 str r2,[r3,#4]
 539:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 540:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc  = slice->TC;
 1231              	 .loc 2 540 0
 1232 0038 7B68     	 ldr r3,[r7,#4]
 1233 003a 5B69     	 ldr r3,[r3,#20]
 1234 003c FB60     	 str r3,[r7,#12]
 541:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 542:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, Modulation mode */
 543:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(mod_mode == XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT)
 1235              	 .loc 2 543 0
 1236 003e BB78     	 ldrb r3,[r7,#2]
 1237 0040 012B     	 cmp r3,#1
 1238 0042 04D1     	 bne .L47
 544:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 545:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMT_Msk;
 1239              	 .loc 2 545 0
 1240 0044 FB68     	 ldr r3,[r7,#12]
 1241 0046 43F08073 	 orr r3,r3,#16777216
 1242 004a FB60     	 str r3,[r7,#12]
 1243 004c 03E0     	 b .L48
 1244              	.L47:
 546:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 547:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 548:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 549:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMT_Msk);
 1245              	 .loc 2 549 0
 1246 004e FB68     	 ldr r3,[r7,#12]
 1247 0050 23F08073 	 bic r3,r3,#16777216
 1248 0054 FB60     	 str r3,[r7,#12]
 1249              	.L48:
 550:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 551:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 552:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Synchronization of modulation effect with PWM cycle */
 553:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1250              	 .loc 2 553 0
 1251 0056 3B7E     	 ldrb r3,[r7,#24]
 1252 0058 002B     	 cmp r3,#0
 1253 005a 04D0     	 beq .L49
 554:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 555:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_EMS_Msk;
 1254              	 .loc 2 555 0
 1255 005c FB68     	 ldr r3,[r7,#12]
 1256 005e 43F40003 	 orr r3,r3,#8388608
 1257 0062 FB60     	 str r3,[r7,#12]
 1258 0064 03E0     	 b .L50
 1259              	.L49:
 556:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 557:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 558:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 559:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_EMS_Msk);
 1260              	 .loc 2 559 0
 1261 0066 FB68     	 ldr r3,[r7,#12]
 1262 0068 23F40003 	 bic r3,r3,#8388608
 1263 006c FB60     	 str r3,[r7,#12]
 1264              	.L50:
 560:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 561:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 562:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure on which channel external modulation to be applied */
 563:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_EME_Msk);
 1265              	 .loc 2 563 0
 1266 006e FB68     	 ldr r3,[r7,#12]
 1267 0070 23F0C053 	 bic r3,r3,#402653184
 1268 0074 FB60     	 str r3,[r7,#12]
 564:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc |= (uint32_t)channel << CCU8_CC8_TC_EME_Pos;
 1269              	 .loc 2 564 0
 1270 0076 7B78     	 ldrb r3,[r7,#1]
 1271 0078 DB06     	 lsls r3,r3,#27
 1272 007a FA68     	 ldr r2,[r7,#12]
 1273 007c 1343     	 orrs r3,r3,r2
 1274 007e FB60     	 str r3,[r7,#12]
 565:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 566:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1275              	 .loc 2 566 0
 1276 0080 7B68     	 ldr r3,[r7,#4]
 1277 0082 FA68     	 ldr r2,[r7,#12]
 1278 0084 5A61     	 str r2,[r3,#20]
 567:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1279              	 .loc 2 567 0
 1280 0086 1437     	 adds r7,r7,#20
 1281              	.LCFI108:
 1282              	 .cfi_def_cfa_offset 4
 1283 0088 BD46     	 mov sp,r7
 1284              	.LCFI109:
 1285              	 .cfi_def_cfa_register 13
 1286              	 
 1287 008a 5DF8047B 	 ldr r7,[sp],#4
 1288              	.LCFI110:
 1289              	 .cfi_restore 7
 1290              	 .cfi_def_cfa_offset 0
 1291 008e 7047     	 bx lr
 1292              	 .cfi_endproc
 1293              	.LFE225:
 1295              	 .section .text.XMC_CCU8_SLICE_CountConfig,"ax",%progbits
 1296              	 .align 2
 1297              	 .global XMC_CCU8_SLICE_CountConfig
 1298              	 .thumb
 1299              	 .thumb_func
 1301              	XMC_CCU8_SLICE_CountConfig:
 1302              	.LFB226:
 568:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 569:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure the slice count function */
 570:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 571:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1303              	 .loc 2 571 0
 1304              	 .cfi_startproc
 1305              	 
 1306              	 
 1307              	 
 1308 0000 80B4     	 push {r7}
 1309              	.LCFI111:
 1310              	 .cfi_def_cfa_offset 4
 1311              	 .cfi_offset 7,-4
 1312 0002 85B0     	 sub sp,sp,#20
 1313              	.LCFI112:
 1314              	 .cfi_def_cfa_offset 24
 1315 0004 00AF     	 add r7,sp,#0
 1316              	.LCFI113:
 1317              	 .cfi_def_cfa_register 7
 1318 0006 7860     	 str r0,[r7,#4]
 1319 0008 0B46     	 mov r3,r1
 1320 000a FB70     	 strb r3,[r7,#3]
 572:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 573:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 574:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 575:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_CountConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 576:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 577:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1321              	 .loc 2 577 0
 1322 000c 7B68     	 ldr r3,[r7,#4]
 1323 000e 5B68     	 ldr r3,[r3,#4]
 1324 0010 FB60     	 str r3,[r7,#12]
 578:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 579:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the count function */
 580:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CNTS_Msk);
 1325              	 .loc 2 580 0
 1326 0012 FB68     	 ldr r3,[r7,#12]
 1327 0014 23F44043 	 bic r3,r3,#49152
 1328 0018 FB60     	 str r3,[r7,#12]
 581:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CNTS_Pos;
 1329              	 .loc 2 581 0
 1330 001a FB78     	 ldrb r3,[r7,#3]
 1331 001c 9B03     	 lsls r3,r3,#14
 1332 001e FA68     	 ldr r2,[r7,#12]
 1333 0020 1343     	 orrs r3,r3,r2
 1334 0022 FB60     	 str r3,[r7,#12]
 582:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 583:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1335              	 .loc 2 583 0
 1336 0024 7B68     	 ldr r3,[r7,#4]
 1337 0026 FA68     	 ldr r2,[r7,#12]
 1338 0028 5A60     	 str r2,[r3,#4]
 584:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1339              	 .loc 2 584 0
 1340 002a 1437     	 adds r7,r7,#20
 1341              	.LCFI114:
 1342              	 .cfi_def_cfa_offset 4
 1343 002c BD46     	 mov sp,r7
 1344              	.LCFI115:
 1345              	 .cfi_def_cfa_register 13
 1346              	 
 1347 002e 5DF8047B 	 ldr r7,[sp],#4
 1348              	.LCFI116:
 1349              	 .cfi_restore 7
 1350              	 .cfi_def_cfa_offset 0
 1351 0032 7047     	 bx lr
 1352              	 .cfi_endproc
 1353              	.LFE226:
 1355              	 .section .text.XMC_CCU8_SLICE_GateConfig,"ax",%progbits
 1356              	 .align 2
 1357              	 .global XMC_CCU8_SLICE_GateConfig
 1358              	 .thumb
 1359              	 .thumb_func
 1361              	XMC_CCU8_SLICE_GateConfig:
 1362              	.LFB227:
 585:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 586:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice gate function */
 587:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event)
 588:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1363              	 .loc 2 588 0
 1364              	 .cfi_startproc
 1365              	 
 1366              	 
 1367              	 
 1368 0000 80B4     	 push {r7}
 1369              	.LCFI117:
 1370              	 .cfi_def_cfa_offset 4
 1371              	 .cfi_offset 7,-4
 1372 0002 85B0     	 sub sp,sp,#20
 1373              	.LCFI118:
 1374              	 .cfi_def_cfa_offset 24
 1375 0004 00AF     	 add r7,sp,#0
 1376              	.LCFI119:
 1377              	 .cfi_def_cfa_register 7
 1378 0006 7860     	 str r0,[r7,#4]
 1379 0008 0B46     	 mov r3,r1
 1380 000a FB70     	 strb r3,[r7,#3]
 589:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 590:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 591:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 592:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GateConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 593:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 594:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1381              	 .loc 2 594 0
 1382 000c 7B68     	 ldr r3,[r7,#4]
 1383 000e 5B68     	 ldr r3,[r3,#4]
 1384 0010 FB60     	 str r3,[r7,#12]
 595:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 596:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 597:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_GATES_Msk);
 1385              	 .loc 2 597 0
 1386 0012 FB68     	 ldr r3,[r7,#12]
 1387 0014 23F44073 	 bic r3,r3,#768
 1388 0018 FB60     	 str r3,[r7,#12]
 598:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_GATES_Pos;
 1389              	 .loc 2 598 0
 1390 001a FB78     	 ldrb r3,[r7,#3]
 1391 001c 1B02     	 lsls r3,r3,#8
 1392 001e FA68     	 ldr r2,[r7,#12]
 1393 0020 1343     	 orrs r3,r3,r2
 1394 0022 FB60     	 str r3,[r7,#12]
 599:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 600:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1395              	 .loc 2 600 0
 1396 0024 7B68     	 ldr r3,[r7,#4]
 1397 0026 FA68     	 ldr r2,[r7,#12]
 1398 0028 5A60     	 str r2,[r3,#4]
 601:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1399              	 .loc 2 601 0
 1400 002a 1437     	 adds r7,r7,#20
 1401              	.LCFI120:
 1402              	 .cfi_def_cfa_offset 4
 1403 002c BD46     	 mov sp,r7
 1404              	.LCFI121:
 1405              	 .cfi_def_cfa_register 13
 1406              	 
 1407 002e 5DF8047B 	 ldr r7,[sp],#4
 1408              	.LCFI122:
 1409              	 .cfi_restore 7
 1410              	 .cfi_def_cfa_offset 0
 1411 0032 7047     	 bx lr
 1412              	 .cfi_endproc
 1413              	.LFE227:
 1415              	 .section .text.XMC_CCU8_SLICE_Capture0Config,"ax",%progbits
 1416              	 .align 2
 1417              	 .global XMC_CCU8_SLICE_Capture0Config
 1418              	 .thumb
 1419              	 .thumb_func
 1421              	XMC_CCU8_SLICE_Capture0Config:
 1422              	.LFB228:
 602:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 603:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-0 function */
 604:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 605:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1423              	 .loc 2 605 0
 1424              	 .cfi_startproc
 1425              	 
 1426              	 
 1427              	 
 1428 0000 80B4     	 push {r7}
 1429              	.LCFI123:
 1430              	 .cfi_def_cfa_offset 4
 1431              	 .cfi_offset 7,-4
 1432 0002 85B0     	 sub sp,sp,#20
 1433              	.LCFI124:
 1434              	 .cfi_def_cfa_offset 24
 1435 0004 00AF     	 add r7,sp,#0
 1436              	.LCFI125:
 1437              	 .cfi_def_cfa_register 7
 1438 0006 7860     	 str r0,[r7,#4]
 1439 0008 0B46     	 mov r3,r1
 1440 000a FB70     	 strb r3,[r7,#3]
 606:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 607:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 608:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 609:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture0Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 610:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 611:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1441              	 .loc 2 611 0
 1442 000c 7B68     	 ldr r3,[r7,#4]
 1443 000e 5B68     	 ldr r3,[r3,#4]
 1444 0010 FB60     	 str r3,[r7,#12]
 612:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 613:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 614:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP0S_Msk);
 1445              	 .loc 2 614 0
 1446 0012 FB68     	 ldr r3,[r7,#12]
 1447 0014 23F03003 	 bic r3,r3,#48
 1448 0018 FB60     	 str r3,[r7,#12]
 615:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP0S_Pos;
 1449              	 .loc 2 615 0
 1450 001a FB78     	 ldrb r3,[r7,#3]
 1451 001c 1B01     	 lsls r3,r3,#4
 1452 001e FA68     	 ldr r2,[r7,#12]
 1453 0020 1343     	 orrs r3,r3,r2
 1454 0022 FB60     	 str r3,[r7,#12]
 616:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 617:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1455              	 .loc 2 617 0
 1456 0024 7B68     	 ldr r3,[r7,#4]
 1457 0026 FA68     	 ldr r2,[r7,#12]
 1458 0028 5A60     	 str r2,[r3,#4]
 618:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1459              	 .loc 2 618 0
 1460 002a 1437     	 adds r7,r7,#20
 1461              	.LCFI126:
 1462              	 .cfi_def_cfa_offset 4
 1463 002c BD46     	 mov sp,r7
 1464              	.LCFI127:
 1465              	 .cfi_def_cfa_register 13
 1466              	 
 1467 002e 5DF8047B 	 ldr r7,[sp],#4
 1468              	.LCFI128:
 1469              	 .cfi_restore 7
 1470              	 .cfi_def_cfa_offset 0
 1471 0032 7047     	 bx lr
 1472              	 .cfi_endproc
 1473              	.LFE228:
 1475              	 .section .text.XMC_CCU8_SLICE_Capture1Config,"ax",%progbits
 1476              	 .align 2
 1477              	 .global XMC_CCU8_SLICE_Capture1Config
 1478              	 .thumb
 1479              	 .thumb_func
 1481              	XMC_CCU8_SLICE_Capture1Config:
 1482              	.LFB229:
 619:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 620:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure Capture-1 function */
 621:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
 622:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1483              	 .loc 2 622 0
 1484              	 .cfi_startproc
 1485              	 
 1486              	 
 1487              	 
 1488 0000 80B4     	 push {r7}
 1489              	.LCFI129:
 1490              	 .cfi_def_cfa_offset 4
 1491              	 .cfi_offset 7,-4
 1492 0002 85B0     	 sub sp,sp,#20
 1493              	.LCFI130:
 1494              	 .cfi_def_cfa_offset 24
 1495 0004 00AF     	 add r7,sp,#0
 1496              	.LCFI131:
 1497              	 .cfi_def_cfa_register 7
 1498 0006 7860     	 str r0,[r7,#4]
 1499 0008 0B46     	 mov r3,r1
 1500 000a FB70     	 strb r3,[r7,#3]
 623:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 624:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 625:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 626:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_Capture1Config:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 627:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 628:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 629:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1501              	 .loc 2 629 0
 1502 000c 7B68     	 ldr r3,[r7,#4]
 1503 000e 5B68     	 ldr r3,[r3,#4]
 1504 0010 FB60     	 str r3,[r7,#12]
 630:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 631:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the gate function */
 632:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_CAP1S_Msk);
 1505              	 .loc 2 632 0
 1506 0012 FB68     	 ldr r3,[r7,#12]
 1507 0014 23F0C003 	 bic r3,r3,#192
 1508 0018 FB60     	 str r3,[r7,#12]
 633:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_CAP1S_Pos;
 1509              	 .loc 2 633 0
 1510 001a FB78     	 ldrb r3,[r7,#3]
 1511 001c 9B01     	 lsls r3,r3,#6
 1512 001e FA68     	 ldr r2,[r7,#12]
 1513 0020 1343     	 orrs r3,r3,r2
 1514 0022 FB60     	 str r3,[r7,#12]
 634:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 635:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1515              	 .loc 2 635 0
 1516 0024 7B68     	 ldr r3,[r7,#4]
 1517 0026 FA68     	 ldr r2,[r7,#12]
 1518 0028 5A60     	 str r2,[r3,#4]
 636:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1519              	 .loc 2 636 0
 1520 002a 1437     	 adds r7,r7,#20
 1521              	.LCFI132:
 1522              	 .cfi_def_cfa_offset 4
 1523 002c BD46     	 mov sp,r7
 1524              	.LCFI133:
 1525              	 .cfi_def_cfa_register 13
 1526              	 
 1527 002e 5DF8047B 	 ldr r7,[sp],#4
 1528              	.LCFI134:
 1529              	 .cfi_restore 7
 1530              	 .cfi_def_cfa_offset 0
 1531 0032 7047     	 bx lr
 1532              	 .cfi_endproc
 1533              	.LFE229:
 1535              	 .section .text.XMC_CCU8_SLICE_DirectionConfig,"ax",%progbits
 1536              	 .align 2
 1537              	 .global XMC_CCU8_SLICE_DirectionConfig
 1538              	 .thumb
 1539              	 .thumb_func
 1541              	XMC_CCU8_SLICE_DirectionConfig:
 1542              	.LFB230:
 637:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 638:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure direction function */
 639:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
 640:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1543              	 .loc 2 640 0
 1544              	 .cfi_startproc
 1545              	 
 1546              	 
 1547              	 
 1548 0000 80B4     	 push {r7}
 1549              	.LCFI135:
 1550              	 .cfi_def_cfa_offset 4
 1551              	 .cfi_offset 7,-4
 1552 0002 85B0     	 sub sp,sp,#20
 1553              	.LCFI136:
 1554              	 .cfi_def_cfa_offset 24
 1555 0004 00AF     	 add r7,sp,#0
 1556              	.LCFI137:
 1557              	 .cfi_def_cfa_register 7
 1558 0006 7860     	 str r0,[r7,#4]
 1559 0008 0B46     	 mov r3,r1
 1560 000a FB70     	 strb r3,[r7,#3]
 641:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 642:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 643:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 644:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_DirectionConfig:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event
 645:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 646:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1561              	 .loc 2 646 0
 1562 000c 7B68     	 ldr r3,[r7,#4]
 1563 000e 5B68     	 ldr r3,[r3,#4]
 1564 0010 FB60     	 str r3,[r7,#12]
 647:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 648:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, Bind the event with the direction function */
 649:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_UDS_Msk);
 1565              	 .loc 2 649 0
 1566 0012 FB68     	 ldr r3,[r7,#12]
 1567 0014 23F44063 	 bic r3,r3,#3072
 1568 0018 FB60     	 str r3,[r7,#12]
 650:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) event) << CCU8_CC8_CMC_UDS_Pos;
 1569              	 .loc 2 650 0
 1570 001a FB78     	 ldrb r3,[r7,#3]
 1571 001c 9B02     	 lsls r3,r3,#10
 1572 001e FA68     	 ldr r2,[r7,#12]
 1573 0020 1343     	 orrs r3,r3,r2
 1574 0022 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 652:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1575              	 .loc 2 652 0
 1576 0024 7B68     	 ldr r3,[r7,#4]
 1577 0026 FA68     	 ldr r2,[r7,#12]
 1578 0028 5A60     	 str r2,[r3,#4]
 653:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1579              	 .loc 2 653 0
 1580 002a 1437     	 adds r7,r7,#20
 1581              	.LCFI138:
 1582              	 .cfi_def_cfa_offset 4
 1583 002c BD46     	 mov sp,r7
 1584              	.LCFI139:
 1585              	 .cfi_def_cfa_register 13
 1586              	 
 1587 002e 5DF8047B 	 ldr r7,[sp],#4
 1588              	.LCFI140:
 1589              	 .cfi_restore 7
 1590              	 .cfi_def_cfa_offset 0
 1591 0032 7047     	 bx lr
 1592              	 .cfi_endproc
 1593              	.LFE230:
 1595              	 .section .text.XMC_CCU8_SLICE_StatusBitOverrideConfig,"ax",%progbits
 1596              	 .align 2
 1597              	 .global XMC_CCU8_SLICE_StatusBitOverrideConfig
 1598              	 .thumb
 1599              	 .thumb_func
 1601              	XMC_CCU8_SLICE_StatusBitOverrideConfig:
 1602              	.LFB231:
 654:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 655:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure slice status bit override function */
 656:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice)
 657:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1603              	 .loc 2 657 0
 1604              	 .cfi_startproc
 1605              	 
 1606              	 
 1607              	 
 1608 0000 80B4     	 push {r7}
 1609              	.LCFI141:
 1610              	 .cfi_def_cfa_offset 4
 1611              	 .cfi_offset 7,-4
 1612 0002 85B0     	 sub sp,sp,#20
 1613              	.LCFI142:
 1614              	 .cfi_def_cfa_offset 24
 1615 0004 00AF     	 add r7,sp,#0
 1616              	.LCFI143:
 1617              	 .cfi_def_cfa_register 7
 1618 0006 7860     	 str r0,[r7,#4]
 658:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 659:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 660:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_StatusBitOverrideConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 661:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 662:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1619              	 .loc 2 662 0
 1620 0008 7B68     	 ldr r3,[r7,#4]
 1621 000a 5B68     	 ldr r3,[r3,#4]
 1622 000c FB60     	 str r3,[r7,#12]
 663:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 664:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map status bit trigger override to Event 1 &
 665:../Libraries/XMCLib/src/xmc_ccu8.c ****          status bit value override to Event 2 */
 666:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_OFS_Msk);
 1623              	 .loc 2 666 0
 1624 000e FB68     	 ldr r3,[r7,#12]
 1625 0010 23F48033 	 bic r3,r3,#65536
 1626 0014 FB60     	 str r3,[r7,#12]
 667:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_OFS_Pos;
 1627              	 .loc 2 667 0
 1628 0016 FB68     	 ldr r3,[r7,#12]
 1629 0018 43F48033 	 orr r3,r3,#65536
 1630 001c FB60     	 str r3,[r7,#12]
 668:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 669:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1631              	 .loc 2 669 0
 1632 001e 7B68     	 ldr r3,[r7,#4]
 1633 0020 FA68     	 ldr r2,[r7,#12]
 1634 0022 5A60     	 str r2,[r3,#4]
 670:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1635              	 .loc 2 670 0
 1636 0024 1437     	 adds r7,r7,#20
 1637              	.LCFI144:
 1638              	 .cfi_def_cfa_offset 4
 1639 0026 BD46     	 mov sp,r7
 1640              	.LCFI145:
 1641              	 .cfi_def_cfa_register 13
 1642              	 
 1643 0028 5DF8047B 	 ldr r7,[sp],#4
 1644              	.LCFI146:
 1645              	 .cfi_restore 7
 1646              	 .cfi_def_cfa_offset 0
 1647 002c 7047     	 bx lr
 1648              	 .cfi_endproc
 1649              	.LFE231:
 1651 002e 00BF     	 .section .text.XMC_CCU8_SLICE_TrapConfig,"ax",%progbits
 1652              	 .align 2
 1653              	 .global XMC_CCU8_SLICE_TrapConfig
 1654              	 .thumb
 1655              	 .thumb_func
 1657              	XMC_CCU8_SLICE_TrapConfig:
 1658              	.LFB232:
 671:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 672:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure trap function*/
 673:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
 674:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
 675:../Libraries/XMCLib/src/xmc_ccu8.c ****                                const bool synch_with_pwm)
 676:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1659              	 .loc 2 676 0
 1660              	 .cfi_startproc
 1661              	 
 1662              	 
 1663              	 
 1664 0000 80B4     	 push {r7}
 1665              	.LCFI147:
 1666              	 .cfi_def_cfa_offset 4
 1667              	 .cfi_offset 7,-4
 1668 0002 85B0     	 sub sp,sp,#20
 1669              	.LCFI148:
 1670              	 .cfi_def_cfa_offset 24
 1671 0004 00AF     	 add r7,sp,#0
 1672              	.LCFI149:
 1673              	 .cfi_def_cfa_register 7
 1674 0006 7860     	 str r0,[r7,#4]
 1675 0008 0B46     	 mov r3,r1
 1676 000a FB70     	 strb r3,[r7,#3]
 1677 000c 1346     	 mov r3,r2
 1678 000e BB70     	 strb r3,[r7,#2]
 677:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cmc;
 678:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 679:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 680:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 681:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_TrapConfig:Invalid Exit Mode", ((exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 682:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                              (exit_mode == XMC_CCU8_SLICE_TRAP_EXIT
 683:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 684:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc = slice->CMC;
 1679              	 .loc 2 684 0
 1680 0010 7B68     	 ldr r3,[r7,#4]
 1681 0012 5B68     	 ldr r3,[r3,#4]
 1682 0014 BB60     	 str r3,[r7,#8]
 685:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 686:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Map trap function to Event 2 */
 687:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc &= ~((uint32_t) CCU8_CC8_CMC_TS_Msk);
 1683              	 .loc 2 687 0
 1684 0016 BB68     	 ldr r3,[r7,#8]
 1685 0018 23F40033 	 bic r3,r3,#131072
 1686 001c BB60     	 str r3,[r7,#8]
 688:../Libraries/XMCLib/src/xmc_ccu8.c ****   cmc |= ((uint32_t) 1) << CCU8_CC8_CMC_TS_Pos;
 1687              	 .loc 2 688 0
 1688 001e BB68     	 ldr r3,[r7,#8]
 1689 0020 43F40033 	 orr r3,r3,#131072
 1690 0024 BB60     	 str r3,[r7,#8]
 689:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 690:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->CMC = cmc;
 1691              	 .loc 2 690 0
 1692 0026 7B68     	 ldr r3,[r7,#4]
 1693 0028 BA68     	 ldr r2,[r7,#8]
 1694 002a 5A60     	 str r2,[r3,#4]
 691:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 692:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 1695              	 .loc 2 692 0
 1696 002c 7B68     	 ldr r3,[r7,#4]
 1697 002e 5B69     	 ldr r3,[r3,#20]
 1698 0030 FB60     	 str r3,[r7,#12]
 693:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 694:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure synchronization option */
 695:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(synch_with_pwm == true)
 1699              	 .loc 2 695 0
 1700 0032 BB78     	 ldrb r3,[r7,#2]
 1701 0034 002B     	 cmp r3,#0
 1702 0036 04D0     	 beq .L58
 696:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 697:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSE_Msk;
 1703              	 .loc 2 697 0
 1704 0038 FB68     	 ldr r3,[r7,#12]
 1705 003a 43F40013 	 orr r3,r3,#2097152
 1706 003e FB60     	 str r3,[r7,#12]
 1707 0040 03E0     	 b .L59
 1708              	.L58:
 698:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 699:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 700:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 701:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSE_Msk);
 1709              	 .loc 2 701 0
 1710 0042 FB68     	 ldr r3,[r7,#12]
 1711 0044 23F40013 	 bic r3,r3,#2097152
 1712 0048 FB60     	 str r3,[r7,#12]
 1713              	.L59:
 702:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 703:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 704:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure exit mode */
 705:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(exit_mode == XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW)
 1714              	 .loc 2 705 0
 1715 004a FB78     	 ldrb r3,[r7,#3]
 1716 004c 012B     	 cmp r3,#1
 1717 004e 04D1     	 bne .L60
 706:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 707:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TRPSW_Msk;
 1718              	 .loc 2 707 0
 1719 0050 FB68     	 ldr r3,[r7,#12]
 1720 0052 43F48003 	 orr r3,r3,#4194304
 1721 0056 FB60     	 str r3,[r7,#12]
 1722 0058 03E0     	 b .L61
 1723              	.L60:
 708:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 709:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 710:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 711:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TRPSW_Msk);
 1724              	 .loc 2 711 0
 1725 005a FB68     	 ldr r3,[r7,#12]
 1726 005c 23F48003 	 bic r3,r3,#4194304
 1727 0060 FB60     	 str r3,[r7,#12]
 1728              	.L61:
 712:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 713:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 714:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 1729              	 .loc 2 714 0
 1730 0062 7B68     	 ldr r3,[r7,#4]
 1731 0064 FA68     	 ldr r2,[r7,#12]
 1732 0066 5A61     	 str r2,[r3,#20]
 715:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1733              	 .loc 2 715 0
 1734 0068 1437     	 adds r7,r7,#20
 1735              	.LCFI150:
 1736              	 .cfi_def_cfa_offset 4
 1737 006a BD46     	 mov sp,r7
 1738              	.LCFI151:
 1739              	 .cfi_def_cfa_register 13
 1740              	 
 1741 006c 5DF8047B 	 ldr r7,[sp],#4
 1742              	.LCFI152:
 1743              	 .cfi_restore 7
 1744              	 .cfi_def_cfa_offset 0
 1745 0070 7047     	 bx lr
 1746              	 .cfi_endproc
 1747              	.LFE232:
 1749 0072 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent,"ax",%progbits
 1750              	 .align 2
 1751              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 1752              	 .thumb
 1753              	 .thumb_func
 1755              	XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:
 1756              	.LFB233:
 716:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 717:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice Status Bit Override event */
 718:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
 719:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_
 720:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_
 721:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1757              	 .loc 2 721 0
 1758              	 .cfi_startproc
 1759              	 
 1760              	 
 1761              	 
 1762 0000 80B4     	 push {r7}
 1763              	.LCFI153:
 1764              	 .cfi_def_cfa_offset 4
 1765              	 .cfi_offset 7,-4
 1766 0002 87B0     	 sub sp,sp,#28
 1767              	.LCFI154:
 1768              	 .cfi_def_cfa_offset 32
 1769 0004 00AF     	 add r7,sp,#0
 1770              	.LCFI155:
 1771              	 .cfi_def_cfa_register 7
 1772 0006 F860     	 str r0,[r7,#12]
 1773 0008 B960     	 str r1,[r7,#8]
 1774 000a 7A60     	 str r2,[r7,#4]
 722:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 723:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 724:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Slice Pointer", XMC_CCU8_IsVal
 725:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 726:../Libraries/XMCLib/src/xmc_ccu8.c **** 		     XMC_CCU8_SLICE_IsInputvalid(ev1_config->mapped_input));
 727:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity", 
 728:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev1_config->edge));
 729:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity", 
 730:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 731:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev1_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 732:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 733:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev1_config->duration));
 734:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Input",
 735:../Libraries/XMCLib/src/xmc_ccu8.c **** 		      XMC_CCU8_SLICE_IsInputvalid(ev2_config->mapped_input));
 736:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Edge Sensitivity",
 737:../Libraries/XMCLib/src/xmc_ccu8.c ****               XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(ev2_config->edge));
 738:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Level Sensitivity",
 739:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 740:../Libraries/XMCLib/src/xmc_ccu8.c ****               (ev2_config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 741:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:Invalid Debounce Period",
 742:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(ev2_config->duration));
 743:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 744:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 745:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 746:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 747:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 748:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV1EM_Pos);
 749:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS2_EV1EM_Pos;
 750:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 751:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 752:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS2_EV2EM_Pos);
 753:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS2_EV2EM_Pos;
 754:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 755:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 756:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV1LM_Pos);
 757:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS2_EV1LM_Pos;
 758:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 759:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 760:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS2_EV2LM_Pos);
 761:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS2_EV2LM_Pos;
 762:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 763:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 764:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF1M_Pos);
 765:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS2_LPF1M_Pos;
 766:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 767:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 768:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS2_LPF2M_Pos);
 769:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS2_LPF2M_Pos;
 770:../Libraries/XMCLib/src/xmc_ccu8.c ****   
 771:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins; 
 772:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 773:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 774:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 775:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV1IS_Pos);
 776:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS1_EV1IS_Pos;
 777:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 778:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 779:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS1_EV2IS_Pos);
 780:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS1_EV2IS_Pos;
 781:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 782:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;  
 783:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 784:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1775              	 .loc 2 784 0
 1776 000c FB68     	 ldr r3,[r7,#12]
 1777 000e 1B68     	 ldr r3,[r3]
 1778 0010 7B61     	 str r3,[r7,#20]
 785:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 786:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 1 */
 787:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV1EM_Pos);
 1779              	 .loc 2 787 0
 1780 0012 7B69     	 ldr r3,[r7,#20]
 1781 0014 23F44023 	 bic r3,r3,#786432
 1782 0018 7B61     	 str r3,[r7,#20]
 788:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->edge) << CCU8_CC8_INS_EV1EM_Pos;
 1783              	 .loc 2 788 0
 1784 001a BB68     	 ldr r3,[r7,#8]
 1785 001c 5B78     	 ldrb r3,[r3,#1]
 1786 001e 9B04     	 lsls r3,r3,#18
 1787 0020 7A69     	 ldr r2,[r7,#20]
 1788 0022 1343     	 orrs r3,r3,r2
 1789 0024 7B61     	 str r3,[r7,#20]
 789:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 790:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the edge sensitivity for event 2 */
 791:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << CCU8_CC8_INS_EV2EM_Pos);
 1790              	 .loc 2 791 0
 1791 0026 7B69     	 ldr r3,[r7,#20]
 1792 0028 23F44013 	 bic r3,r3,#3145728
 1793 002c 7B61     	 str r3,[r7,#20]
 792:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->edge) << CCU8_CC8_INS_EV2EM_Pos;
 1794              	 .loc 2 792 0
 1795 002e 7B68     	 ldr r3,[r7,#4]
 1796 0030 5B78     	 ldrb r3,[r3,#1]
 1797 0032 1B05     	 lsls r3,r3,#20
 1798 0034 7A69     	 ldr r2,[r7,#20]
 1799 0036 1343     	 orrs r3,r3,r2
 1800 0038 7B61     	 str r3,[r7,#20]
 793:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 794:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 1 */
 795:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV1LM_Pos);
 1801              	 .loc 2 795 0
 1802 003a 7B69     	 ldr r3,[r7,#20]
 1803 003c 23F40003 	 bic r3,r3,#8388608
 1804 0040 7B61     	 str r3,[r7,#20]
 796:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->level) << CCU8_CC8_INS_EV1LM_Pos;
 1805              	 .loc 2 796 0
 1806 0042 BB68     	 ldr r3,[r7,#8]
 1807 0044 9B78     	 ldrb r3,[r3,#2]
 1808 0046 DB05     	 lsls r3,r3,#23
 1809 0048 7A69     	 ldr r2,[r7,#20]
 1810 004a 1343     	 orrs r3,r3,r2
 1811 004c 7B61     	 str r3,[r7,#20]
 797:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 798:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the level sensitivity for event 2 */
 799:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << CCU8_CC8_INS_EV2LM_Pos);
 1812              	 .loc 2 799 0
 1813 004e 7B69     	 ldr r3,[r7,#20]
 1814 0050 23F08073 	 bic r3,r3,#16777216
 1815 0054 7B61     	 str r3,[r7,#20]
 800:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->level) << CCU8_CC8_INS_EV2LM_Pos;
 1816              	 .loc 2 800 0
 1817 0056 7B68     	 ldr r3,[r7,#4]
 1818 0058 9B78     	 ldrb r3,[r3,#2]
 1819 005a 1B06     	 lsls r3,r3,#24
 1820 005c 7A69     	 ldr r2,[r7,#20]
 1821 005e 1343     	 orrs r3,r3,r2
 1822 0060 7B61     	 str r3,[r7,#20]
 801:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 802:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 1 */
 803:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF1M_Pos);
 1823              	 .loc 2 803 0
 1824 0062 7B69     	 ldr r3,[r7,#20]
 1825 0064 23F0C053 	 bic r3,r3,#402653184
 1826 0068 7B61     	 str r3,[r7,#20]
 804:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->duration) << CCU8_CC8_INS_LPF1M_Pos;
 1827              	 .loc 2 804 0
 1828 006a BB68     	 ldr r3,[r7,#8]
 1829 006c DB78     	 ldrb r3,[r3,#3]
 1830 006e DB06     	 lsls r3,r3,#27
 1831 0070 7A69     	 ldr r2,[r7,#20]
 1832 0072 1343     	 orrs r3,r3,r2
 1833 0074 7B61     	 str r3,[r7,#20]
 805:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 806:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Configure the debounce filter for event 2 */
 807:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << CCU8_CC8_INS_LPF2M_Pos);
 1834              	 .loc 2 807 0
 1835 0076 7B69     	 ldr r3,[r7,#20]
 1836 0078 23F0C043 	 bic r3,r3,#1610612736
 1837 007c 7B61     	 str r3,[r7,#20]
 808:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->duration) << CCU8_CC8_INS_LPF2M_Pos;
 1838              	 .loc 2 808 0
 1839 007e 7B68     	 ldr r3,[r7,#4]
 1840 0080 DB78     	 ldrb r3,[r3,#3]
 1841 0082 5B07     	 lsls r3,r3,#29
 1842 0084 7A69     	 ldr r2,[r7,#20]
 1843 0086 1343     	 orrs r3,r3,r2
 1844 0088 7B61     	 str r3,[r7,#20]
 809:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 810:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the input for Event1 */
 811:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV1IS_Pos);
 1845              	 .loc 2 811 0
 1846 008a 7B69     	 ldr r3,[r7,#20]
 1847 008c 23F0F003 	 bic r3,r3,#240
 1848 0090 7B61     	 str r3,[r7,#20]
 812:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev1_config->mapped_input) << CCU8_CC8_INS_EV1IS_Pos;
 1849              	 .loc 2 812 0
 1850 0092 BB68     	 ldr r3,[r7,#8]
 1851 0094 1B78     	 ldrb r3,[r3]
 1852 0096 1B01     	 lsls r3,r3,#4
 1853 0098 7A69     	 ldr r2,[r7,#20]
 1854 009a 1343     	 orrs r3,r3,r2
 1855 009c 7B61     	 str r3,[r7,#20]
 813:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 814:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally, the input for Event2 */
 815:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << CCU8_CC8_INS_EV2IS_Pos);
 1856              	 .loc 2 815 0
 1857 009e 7B69     	 ldr r3,[r7,#20]
 1858 00a0 23F47063 	 bic r3,r3,#3840
 1859 00a4 7B61     	 str r3,[r7,#20]
 816:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) ev2_config->mapped_input) << CCU8_CC8_INS_EV2IS_Pos;
 1860              	 .loc 2 816 0
 1861 00a6 7B68     	 ldr r3,[r7,#4]
 1862 00a8 1B78     	 ldrb r3,[r3]
 1863 00aa 1B02     	 lsls r3,r3,#8
 1864 00ac 7A69     	 ldr r2,[r7,#20]
 1865 00ae 1343     	 orrs r3,r3,r2
 1866 00b0 7B61     	 str r3,[r7,#20]
 817:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 818:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 1867              	 .loc 2 818 0
 1868 00b2 FB68     	 ldr r3,[r7,#12]
 1869 00b4 7A69     	 ldr r2,[r7,#20]
 1870 00b6 1A60     	 str r2,[r3]
 819:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 820:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 1871              	 .loc 2 820 0
 1872 00b8 1C37     	 adds r7,r7,#28
 1873              	.LCFI156:
 1874              	 .cfi_def_cfa_offset 4
 1875 00ba BD46     	 mov sp,r7
 1876              	.LCFI157:
 1877              	 .cfi_def_cfa_register 13
 1878              	 
 1879 00bc 5DF8047B 	 ldr r7,[sp],#4
 1880              	.LCFI158:
 1881              	 .cfi_restore 7
 1882              	 .cfi_def_cfa_offset 0
 1883 00c0 7047     	 bx lr
 1884              	 .cfi_endproc
 1885              	.LFE233:
 1887 00c2 00BF     	 .section .text.XMC_CCU8_SLICE_ConfigureEvent,"ax",%progbits
 1888              	 .align 2
 1889              	 .global XMC_CCU8_SLICE_ConfigureEvent
 1890              	 .thumb
 1891              	 .thumb_func
 1893              	XMC_CCU8_SLICE_ConfigureEvent:
 1894              	.LFB234:
 821:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 822:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to configure a slice trigger event */
 823:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
 824:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_t event,
 825:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *const config)
 826:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 1895              	 .loc 2 826 0
 1896              	 .cfi_startproc
 1897              	 
 1898              	 
 1899              	 
 1900 0000 80B4     	 push {r7}
 1901              	.LCFI159:
 1902              	 .cfi_def_cfa_offset 4
 1903              	 .cfi_offset 7,-4
 1904 0002 89B0     	 sub sp,sp,#36
 1905              	.LCFI160:
 1906              	 .cfi_def_cfa_offset 40
 1907 0004 00AF     	 add r7,sp,#0
 1908              	.LCFI161:
 1909              	 .cfi_def_cfa_register 7
 1910 0006 F860     	 str r0,[r7,#12]
 1911 0008 0B46     	 mov r3,r1
 1912 000a 7A60     	 str r2,[r7,#4]
 1913 000c FB72     	 strb r3,[r7,#11]
 827:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 828:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 829:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 830:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 831:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 832:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event)
 833:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Input",  XMC_CCU8_SLICE_IsInputvalid(config->ma
 834:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Edge Sensitivity",
 835:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EDGE_SENSITIVITY(config->edge));
 836:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Level Sensitivity", 
 837:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH) ||\
 838:../Libraries/XMCLib/src/xmc_ccu8.c ****               (config->level == XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW)));
 839:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureEvent:Invalid Debounce Period",
 840:../Libraries/XMCLib/src/xmc_ccu8.c ****              XMC_CCU8_SLICE_CHECK_EVENT_FILTER(config->duration));
 841:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 842:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 843:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 1914              	 .loc 2 843 0
 1915 000e FB7A     	 ldrb r3,[r7,#11]
 1916 0010 013B     	 subs r3,r3,#1
 1917 0012 FB77     	 strb r3,[r7,#31]
 844:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 845:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 846:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS2;
 847:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 848:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 849:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0EM_Pos) + (uint8_t)(offset << 2U);
 850:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 851:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 852:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 853:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 854:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_EV0LM_Pos) + (uint8_t)(offset << 2U);
 855:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 856:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 857:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 858:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 859:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS2_LPF0M_Pos) + (uint8_t)(offset << 2U);
 860:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 861:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 862:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 863:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS2 = ins;
 864:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 865:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 866:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 867:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 868:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t)(offset << 3U);
 869:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 870:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 871:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 872:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 873:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 874:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 875:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 1918              	 .loc 2 875 0
 1919 0014 FB68     	 ldr r3,[r7,#12]
 1920 0016 1B68     	 ldr r3,[r3]
 1921 0018 BB61     	 str r3,[r7,#24]
 876:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 877:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First, configure the edge sensitivity */
 878:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0EM_Pos) + (uint8_t)(offset << 1U);
 1922              	 .loc 2 878 0
 1923 001a FB7F     	 ldrb r3,[r7,#31]
 1924 001c 5B00     	 lsls r3,r3,#1
 1925 001e DBB2     	 uxtb r3,r3
 1926 0020 1033     	 adds r3,r3,#16
 1927 0022 FB75     	 strb r3,[r7,#23]
 879:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_EDGE_CONFIG_MASK) << pos);
 1928              	 .loc 2 879 0
 1929 0024 FB7D     	 ldrb r3,[r7,#23]
 1930 0026 0322     	 movs r2,#3
 1931 0028 02FA03F3 	 lsl r3,r2,r3
 1932 002c DB43     	 mvns r3,r3
 1933 002e BA69     	 ldr r2,[r7,#24]
 1934 0030 1340     	 ands r3,r3,r2
 1935 0032 BB61     	 str r3,[r7,#24]
 880:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->edge) << pos;
 1936              	 .loc 2 880 0
 1937 0034 7B68     	 ldr r3,[r7,#4]
 1938 0036 5B78     	 ldrb r3,[r3,#1]
 1939 0038 1A46     	 mov r2,r3
 1940 003a FB7D     	 ldrb r3,[r7,#23]
 1941 003c 02FA03F3 	 lsl r3,r2,r3
 1942 0040 BA69     	 ldr r2,[r7,#24]
 1943 0042 1343     	 orrs r3,r3,r2
 1944 0044 BB61     	 str r3,[r7,#24]
 881:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 882:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the level */
 883:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0LM_Pos) + offset;
 1945              	 .loc 2 883 0
 1946 0046 FB7F     	 ldrb r3,[r7,#31]
 1947 0048 1633     	 adds r3,r3,#22
 1948 004a FB75     	 strb r3,[r7,#23]
 884:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_LEVEL_CONFIG_MASK) << pos);
 1949              	 .loc 2 884 0
 1950 004c FB7D     	 ldrb r3,[r7,#23]
 1951 004e 0122     	 movs r2,#1
 1952 0050 02FA03F3 	 lsl r3,r2,r3
 1953 0054 DB43     	 mvns r3,r3
 1954 0056 BA69     	 ldr r2,[r7,#24]
 1955 0058 1340     	 ands r3,r3,r2
 1956 005a BB61     	 str r3,[r7,#24]
 885:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) (config->level)) << pos;
 1957              	 .loc 2 885 0
 1958 005c 7B68     	 ldr r3,[r7,#4]
 1959 005e 9B78     	 ldrb r3,[r3,#2]
 1960 0060 1A46     	 mov r2,r3
 1961 0062 FB7D     	 ldrb r3,[r7,#23]
 1962 0064 02FA03F3 	 lsl r3,r2,r3
 1963 0068 BA69     	 ldr r2,[r7,#24]
 1964 006a 1343     	 orrs r3,r3,r2
 1965 006c BB61     	 str r3,[r7,#24]
 886:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 887:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Next, the debounce filter */
 888:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_LPF0M_Pos) + (uint8_t)(offset << 1U);
 1966              	 .loc 2 888 0
 1967 006e FB7F     	 ldrb r3,[r7,#31]
 1968 0070 5B00     	 lsls r3,r3,#1
 1969 0072 DBB2     	 uxtb r3,r3
 1970 0074 1933     	 adds r3,r3,#25
 1971 0076 FB75     	 strb r3,[r7,#23]
 889:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_FILTER_CONFIG_MASK) << pos);
 1972              	 .loc 2 889 0
 1973 0078 FB7D     	 ldrb r3,[r7,#23]
 1974 007a 0322     	 movs r2,#3
 1975 007c 02FA03F3 	 lsl r3,r2,r3
 1976 0080 DB43     	 mvns r3,r3
 1977 0082 BA69     	 ldr r2,[r7,#24]
 1978 0084 1340     	 ands r3,r3,r2
 1979 0086 BB61     	 str r3,[r7,#24]
 890:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->duration) << pos;
 1980              	 .loc 2 890 0
 1981 0088 7B68     	 ldr r3,[r7,#4]
 1982 008a DB78     	 ldrb r3,[r3,#3]
 1983 008c 1A46     	 mov r2,r3
 1984 008e FB7D     	 ldrb r3,[r7,#23]
 1985 0090 02FA03F3 	 lsl r3,r2,r3
 1986 0094 BA69     	 ldr r2,[r7,#24]
 1987 0096 1343     	 orrs r3,r3,r2
 1988 0098 BB61     	 str r3,[r7,#24]
 891:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 892:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Finally the input */
 893:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t)(offset << 2U);
 1989              	 .loc 2 893 0
 1990 009a FB7F     	 ldrb r3,[r7,#31]
 1991 009c 9B00     	 lsls r3,r3,#2
 1992 009e FB75     	 strb r3,[r7,#23]
 894:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 1993              	 .loc 2 894 0
 1994 00a0 FB7D     	 ldrb r3,[r7,#23]
 1995 00a2 0F22     	 movs r2,#15
 1996 00a4 02FA03F3 	 lsl r3,r2,r3
 1997 00a8 DB43     	 mvns r3,r3
 1998 00aa BA69     	 ldr r2,[r7,#24]
 1999 00ac 1340     	 ands r3,r3,r2
 2000 00ae BB61     	 str r3,[r7,#24]
 895:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) config->mapped_input) << pos;
 2001              	 .loc 2 895 0
 2002 00b0 7B68     	 ldr r3,[r7,#4]
 2003 00b2 1B78     	 ldrb r3,[r3]
 2004 00b4 1A46     	 mov r2,r3
 2005 00b6 FB7D     	 ldrb r3,[r7,#23]
 2006 00b8 02FA03F3 	 lsl r3,r2,r3
 2007 00bc BA69     	 ldr r2,[r7,#24]
 2008 00be 1343     	 orrs r3,r3,r2
 2009 00c0 BB61     	 str r3,[r7,#24]
 896:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 897:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 2010              	 .loc 2 897 0
 2011 00c2 FB68     	 ldr r3,[r7,#12]
 2012 00c4 BA69     	 ldr r2,[r7,#24]
 2013 00c6 1A60     	 str r2,[r3]
 898:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 899:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2014              	 .loc 2 899 0
 2015 00c8 2437     	 adds r7,r7,#36
 2016              	.LCFI162:
 2017              	 .cfi_def_cfa_offset 4
 2018 00ca BD46     	 mov sp,r7
 2019              	.LCFI163:
 2020              	 .cfi_def_cfa_register 13
 2021              	 
 2022 00cc 5DF8047B 	 ldr r7,[sp],#4
 2023              	.LCFI164:
 2024              	 .cfi_restore 7
 2025              	 .cfi_def_cfa_offset 0
 2026 00d0 7047     	 bx lr
 2027              	 .cfi_endproc
 2028              	.LFE234:
 2030 00d2 00BF     	 .section .text.XMC_CCU8_SLICE_SetInput,"ax",%progbits
 2031              	 .align 2
 2032              	 .global XMC_CCU8_SLICE_SetInput
 2033              	 .thumb
 2034              	 .thumb_func
 2036              	XMC_CCU8_SLICE_SetInput:
 2037              	.LFB235:
 900:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 901:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to bind an input to a slice trigger event */
 902:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
 903:../Libraries/XMCLib/src/xmc_ccu8.c ****                          const XMC_CCU8_SLICE_EVENT_t event,
 904:../Libraries/XMCLib/src/xmc_ccu8.c ****                              const XMC_CCU8_SLICE_INPUT_t input)
 905:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2038              	 .loc 2 905 0
 2039              	 .cfi_startproc
 2040              	 
 2041              	 
 2042              	 
 2043 0000 80B4     	 push {r7}
 2044              	.LCFI165:
 2045              	 .cfi_def_cfa_offset 4
 2046              	 .cfi_offset 7,-4
 2047 0002 85B0     	 sub sp,sp,#20
 2048              	.LCFI166:
 2049              	 .cfi_def_cfa_offset 24
 2050 0004 00AF     	 add r7,sp,#0
 2051              	.LCFI167:
 2052              	 .cfi_def_cfa_register 7
 2053 0006 7860     	 str r0,[r7,#4]
 2054 0008 0B46     	 mov r3,r1
 2055 000a FB70     	 strb r3,[r7,#3]
 2056 000c 1346     	 mov r3,r2
 2057 000e BB70     	 strb r3,[r7,#2]
 906:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t ins;
 907:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  pos;
 908:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t  offset;
 909:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 910:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
 911:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Event ID", XMC_CCU8_SLICE_CHECK_EVENT_ID(event));
 912:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInput:Invalid Input", XMC_CCU8_SLICE_IsInputvalid(input));
 913:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 914:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Calculate offset with reference to event */
 915:../Libraries/XMCLib/src/xmc_ccu8.c ****   offset = ((uint8_t) event) - 1U;
 2058              	 .loc 2 915 0
 2059 0010 FB78     	 ldrb r3,[r7,#3]
 2060 0012 013B     	 subs r3,r3,#1
 2061 0014 FB73     	 strb r3,[r7,#15]
 916:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 917:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V3) /* Defined for XMC1400 devices only */
 918:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS1_EV0IS_Pos) + (uint8_t) (offset << 3U);
 919:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS1;
 920:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 921:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 922:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 923:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS1 = ins;
 924:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
 925:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 926:../Libraries/XMCLib/src/xmc_ccu8.c ****   pos = ((uint8_t) CCU8_CC8_INS_EV0IS_Pos) + (uint8_t) (offset << 2U);
 2062              	 .loc 2 926 0
 2063 0016 FB7B     	 ldrb r3,[r7,#15]
 2064 0018 9B00     	 lsls r3,r3,#2
 2065 001a BB73     	 strb r3,[r7,#14]
 927:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins = slice->INS;
 2066              	 .loc 2 927 0
 2067 001c 7B68     	 ldr r3,[r7,#4]
 2068 001e 1B68     	 ldr r3,[r3]
 2069 0020 BB60     	 str r3,[r7,#8]
 928:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins &= ~(((uint32_t) XMC_CCU8_SLICE_EVENT_INPUT_CONFIG_MASK) << pos);
 2070              	 .loc 2 928 0
 2071 0022 BB7B     	 ldrb r3,[r7,#14]
 2072 0024 0F22     	 movs r2,#15
 2073 0026 02FA03F3 	 lsl r3,r2,r3
 2074 002a DB43     	 mvns r3,r3
 2075 002c BA68     	 ldr r2,[r7,#8]
 2076 002e 1340     	 ands r3,r3,r2
 2077 0030 BB60     	 str r3,[r7,#8]
 929:../Libraries/XMCLib/src/xmc_ccu8.c ****   ins |= ((uint32_t) input) << pos;
 2078              	 .loc 2 929 0
 2079 0032 BA78     	 ldrb r2,[r7,#2]
 2080 0034 BB7B     	 ldrb r3,[r7,#14]
 2081 0036 02FA03F3 	 lsl r3,r2,r3
 2082 003a BA68     	 ldr r2,[r7,#8]
 2083 003c 1343     	 orrs r3,r3,r2
 2084 003e BB60     	 str r3,[r7,#8]
 930:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 931:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->INS = ins;
 2085              	 .loc 2 931 0
 2086 0040 7B68     	 ldr r3,[r7,#4]
 2087 0042 BA68     	 ldr r2,[r7,#8]
 2088 0044 1A60     	 str r2,[r3]
 932:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
 933:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2089              	 .loc 2 933 0
 2090 0046 1437     	 adds r7,r7,#20
 2091              	.LCFI168:
 2092              	 .cfi_def_cfa_offset 4
 2093 0048 BD46     	 mov sp,r7
 2094              	.LCFI169:
 2095              	 .cfi_def_cfa_register 13
 2096              	 
 2097 004a 5DF8047B 	 ldr r7,[sp],#4
 2098              	.LCFI170:
 2099              	 .cfi_restore 7
 2100              	 .cfi_def_cfa_offset 0
 2101 004e 7047     	 bx lr
 2102              	 .cfi_endproc
 2103              	.LFE235:
 2105              	 .section .text.XMC_CCU8_SLICE_SetTimerRepeatMode,"ax",%progbits
 2106              	 .align 2
 2107              	 .global XMC_CCU8_SLICE_SetTimerRepeatMode
 2108              	 .thumb
 2109              	 .thumb_func
 2111              	XMC_CCU8_SLICE_SetTimerRepeatMode:
 2112              	.LFB236:
 934:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 935:../Libraries/XMCLib/src/xmc_ccu8.c **** /* API to program timer repeat mode - Single shot vs repeat  */
 936:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice,
 937:../Libraries/XMCLib/src/xmc_ccu8.c ****                                    const XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t mode)
 938:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2113              	 .loc 2 938 0
 2114              	 .cfi_startproc
 2115              	 
 2116              	 
 2117              	 
 2118 0000 80B4     	 push {r7}
 2119              	.LCFI171:
 2120              	 .cfi_def_cfa_offset 4
 2121              	 .cfi_offset 7,-4
 2122 0002 85B0     	 sub sp,sp,#20
 2123              	.LCFI172:
 2124              	 .cfi_def_cfa_offset 24
 2125 0004 00AF     	 add r7,sp,#0
 2126              	.LCFI173:
 2127              	 .cfi_def_cfa_register 7
 2128 0006 7860     	 str r0,[r7,#4]
 2129 0008 0B46     	 mov r3,r1
 2130 000a FB70     	 strb r3,[r7,#3]
 939:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 940:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 941:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
 942:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerRepeatMode:Invalid Timer Repeat Mode", 
 943:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT) ||\
 944:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == (mode == XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT))));
 945:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 946:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2131              	 .loc 2 946 0
 2132 000c 7B68     	 ldr r3,[r7,#4]
 2133 000e 5B69     	 ldr r3,[r3,#20]
 2134 0010 FB60     	 str r3,[r7,#12]
 947:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 948:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT == mode)
 2135              	 .loc 2 948 0
 2136 0012 FB78     	 ldrb r3,[r7,#3]
 2137 0014 002B     	 cmp r3,#0
 2138 0016 04D1     	 bne .L66
 949:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 950:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TSSM_Msk);
 2139              	 .loc 2 950 0
 2140 0018 FB68     	 ldr r3,[r7,#12]
 2141 001a 23F00203 	 bic r3,r3,#2
 2142 001e FB60     	 str r3,[r7,#12]
 2143 0020 03E0     	 b .L67
 2144              	.L66:
 951:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 952:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 953:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 954:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TSSM_Msk;
 2145              	 .loc 2 954 0
 2146 0022 FB68     	 ldr r3,[r7,#12]
 2147 0024 43F00203 	 orr r3,r3,#2
 2148 0028 FB60     	 str r3,[r7,#12]
 2149              	.L67:
 955:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 956:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 957:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2150              	 .loc 2 957 0
 2151 002a 7B68     	 ldr r3,[r7,#4]
 2152 002c FA68     	 ldr r2,[r7,#12]
 2153 002e 5A61     	 str r2,[r3,#20]
 958:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2154              	 .loc 2 958 0
 2155 0030 1437     	 adds r7,r7,#20
 2156              	.LCFI174:
 2157              	 .cfi_def_cfa_offset 4
 2158 0032 BD46     	 mov sp,r7
 2159              	.LCFI175:
 2160              	 .cfi_def_cfa_register 13
 2161              	 
 2162 0034 5DF8047B 	 ldr r7,[sp],#4
 2163              	.LCFI176:
 2164              	 .cfi_restore 7
 2165              	 .cfi_def_cfa_offset 0
 2166 0038 7047     	 bx lr
 2167              	 .cfi_endproc
 2168              	.LFE236:
 2170 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCountingMode,"ax",%progbits
 2171              	 .align 2
 2172              	 .global XMC_CCU8_SLICE_SetTimerCountingMode
 2173              	 .thumb
 2174              	 .thumb_func
 2176              	XMC_CCU8_SLICE_SetTimerCountingMode:
 2177              	.LFB237:
 959:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 960:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer counting mode  */
 961:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
 962:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2178              	 .loc 2 962 0
 2179              	 .cfi_startproc
 2180              	 
 2181              	 
 2182              	 
 2183 0000 80B4     	 push {r7}
 2184              	.LCFI177:
 2185              	 .cfi_def_cfa_offset 4
 2186              	 .cfi_offset 7,-4
 2187 0002 85B0     	 sub sp,sp,#20
 2188              	.LCFI178:
 2189              	 .cfi_def_cfa_offset 24
 2190 0004 00AF     	 add r7,sp,#0
 2191              	.LCFI179:
 2192              	 .cfi_def_cfa_register 7
 2193 0006 7860     	 str r0,[r7,#4]
 2194 0008 0B46     	 mov r3,r1
 2195 000a FB70     	 strb r3,[r7,#3]
 963:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
 964:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 965:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
 966:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCountingMode:Invalid Timer Count Mode",
 967:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA) ||\
 968:../Libraries/XMCLib/src/xmc_ccu8.c ****               (mode == XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA)));
 969:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 970:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2196              	 .loc 2 970 0
 2197 000c 7B68     	 ldr r3,[r7,#4]
 2198 000e 5B69     	 ldr r3,[r3,#20]
 2199 0010 FB60     	 str r3,[r7,#12]
 971:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 972:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA == mode)
 2200              	 .loc 2 972 0
 2201 0012 FB78     	 ldrb r3,[r7,#3]
 2202 0014 002B     	 cmp r3,#0
 2203 0016 04D1     	 bne .L69
 973:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 974:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc &= ~((uint32_t) CCU8_CC8_TC_TCM_Msk);
 2204              	 .loc 2 974 0
 2205 0018 FB68     	 ldr r3,[r7,#12]
 2206 001a 23F00103 	 bic r3,r3,#1
 2207 001e FB60     	 str r3,[r7,#12]
 2208 0020 03E0     	 b .L70
 2209              	.L69:
 975:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 976:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
 977:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 978:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (uint32_t) CCU8_CC8_TC_TCM_Msk;
 2210              	 .loc 2 978 0
 2211 0022 FB68     	 ldr r3,[r7,#12]
 2212 0024 43F00103 	 orr r3,r3,#1
 2213 0028 FB60     	 str r3,[r7,#12]
 2214              	.L70:
 979:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
 980:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 981:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2215              	 .loc 2 981 0
 2216 002a 7B68     	 ldr r3,[r7,#4]
 2217 002c FA68     	 ldr r2,[r7,#12]
 2218 002e 5A61     	 str r2,[r3,#20]
 982:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2219              	 .loc 2 982 0
 2220 0030 1437     	 adds r7,r7,#20
 2221              	.LCFI180:
 2222              	 .cfi_def_cfa_offset 4
 2223 0032 BD46     	 mov sp,r7
 2224              	.LCFI181:
 2225              	 .cfi_def_cfa_register 13
 2226              	 
 2227 0034 5DF8047B 	 ldr r7,[sp],#4
 2228              	.LCFI182:
 2229              	 .cfi_restore 7
 2230              	 .cfi_def_cfa_offset 0
 2231 0038 7047     	 bx lr
 2232              	 .cfi_endproc
 2233              	.LFE237:
 2235 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerPeriodMatch,"ax",%progbits
 2236              	 .align 2
 2237              	 .global XMC_CCU8_SLICE_SetTimerPeriodMatch
 2238              	 .thumb
 2239              	 .thumb_func
 2241              	XMC_CCU8_SLICE_SetTimerPeriodMatch:
 2242              	.LFB238:
 983:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 984:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs period match value of the timer  */
 985:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val)
 986:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2243              	 .loc 2 986 0
 2244              	 .cfi_startproc
 2245              	 
 2246              	 
 2247              	 
 2248 0000 80B4     	 push {r7}
 2249              	.LCFI183:
 2250              	 .cfi_def_cfa_offset 4
 2251              	 .cfi_offset 7,-4
 2252 0002 83B0     	 sub sp,sp,#12
 2253              	.LCFI184:
 2254              	 .cfi_def_cfa_offset 16
 2255 0004 00AF     	 add r7,sp,#0
 2256              	.LCFI185:
 2257              	 .cfi_def_cfa_register 7
 2258 0006 7860     	 str r0,[r7,#4]
 2259 0008 0B46     	 mov r3,r1
 2260 000a 7B80     	 strh r3,[r7,#2]
 987:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
 988:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PRS = (uint32_t) period_val;
 2261              	 .loc 2 988 0
 2262 000c 7A88     	 ldrh r2,[r7,#2]
 2263 000e 7B68     	 ldr r3,[r7,#4]
 2264 0010 5A63     	 str r2,[r3,#52]
 989:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2265              	 .loc 2 989 0
 2266 0012 0C37     	 adds r7,r7,#12
 2267              	.LCFI186:
 2268              	 .cfi_def_cfa_offset 4
 2269 0014 BD46     	 mov sp,r7
 2270              	.LCFI187:
 2271              	 .cfi_def_cfa_register 13
 2272              	 
 2273 0016 5DF8047B 	 ldr r7,[sp],#4
 2274              	.LCFI188:
 2275              	 .cfi_restore 7
 2276              	 .cfi_def_cfa_offset 0
 2277 001a 7047     	 bx lr
 2278              	 .cfi_endproc
 2279              	.LFE238:
 2281              	 .section .text.XMC_CCU8_SLICE_GetCaptureRegisterValue,"ax",%progbits
 2282              	 .align 2
 2283              	 .global XMC_CCU8_SLICE_GetCaptureRegisterValue
 2284              	 .thumb
 2285              	 .thumb_func
 2287              	XMC_CCU8_SLICE_GetCaptureRegisterValue:
 2288              	.LFB239:
 990:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 991:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves desired capture register value */
 992:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
 993:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2289              	 .loc 2 993 0
 2290              	 .cfi_startproc
 2291              	 
 2292              	 
 2293              	 
 2294 0000 80B4     	 push {r7}
 2295              	.LCFI189:
 2296              	 .cfi_def_cfa_offset 4
 2297              	 .cfi_offset 7,-4
 2298 0002 83B0     	 sub sp,sp,#12
 2299              	.LCFI190:
 2300              	 .cfi_def_cfa_offset 16
 2301 0004 00AF     	 add r7,sp,#0
 2302              	.LCFI191:
 2303              	 .cfi_def_cfa_register 7
 2304 0006 7860     	 str r0,[r7,#4]
 2305 0008 0B46     	 mov r3,r1
 2306 000a FB70     	 strb r3,[r7,#3]
 994:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
 995:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCaptureRegisterValue:Invalid register number", (reg_num < 4U));
 996:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(slice->CV[reg_num]);
 2307              	 .loc 2 996 0
 2308 000c FB78     	 ldrb r3,[r7,#3]
 2309 000e 7A68     	 ldr r2,[r7,#4]
 2310 0010 1C33     	 adds r3,r3,#28
 2311 0012 9B00     	 lsls r3,r3,#2
 2312 0014 1344     	 add r3,r3,r2
 2313 0016 5B68     	 ldr r3,[r3,#4]
 997:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2314              	 .loc 2 997 0
 2315 0018 1846     	 mov r0,r3
 2316 001a 0C37     	 adds r7,r7,#12
 2317              	.LCFI192:
 2318              	 .cfi_def_cfa_offset 4
 2319 001c BD46     	 mov sp,r7
 2320              	.LCFI193:
 2321              	 .cfi_def_cfa_register 13
 2322              	 
 2323 001e 5DF8047B 	 ldr r7,[sp],#4
 2324              	.LCFI194:
 2325              	 .cfi_restore 7
 2326              	 .cfi_def_cfa_offset 0
 2327 0022 7047     	 bx lr
 2328              	 .cfi_endproc
 2329              	.LFE239:
 2331              	 .section .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue,"ax",%progbits
 2332              	 .align 2
 2333              	 .global XMC_CCU8_SLICE_GetLastCapturedTimerValue
 2334              	 .thumb
 2335              	 .thumb_func
 2337              	XMC_CCU8_SLICE_GetLastCapturedTimerValue:
 2338              	.LFB240:
 998:../Libraries/XMCLib/src/xmc_ccu8.c **** 
 999:../Libraries/XMCLib/src/xmc_ccu8.c **** /* @brief Retrieves the latest captured timer value */
1000:../Libraries/XMCLib/src/xmc_ccu8.c **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
1001:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            const XMC_CCU8_SLICE_CAP_REG_SET_t set,
1002:../Libraries/XMCLib/src/xmc_ccu8.c ****                                                            uint32_t *val_ptr)
1003:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2339              	 .loc 2 1003 0
 2340              	 .cfi_startproc
 2341              	 
 2342              	 
 2343              	 
 2344 0000 80B4     	 push {r7}
 2345              	.LCFI195:
 2346              	 .cfi_def_cfa_offset 4
 2347              	 .cfi_offset 7,-4
 2348 0002 87B0     	 sub sp,sp,#28
 2349              	.LCFI196:
 2350              	 .cfi_def_cfa_offset 32
 2351 0004 00AF     	 add r7,sp,#0
 2352              	.LCFI197:
 2353              	 .cfi_def_cfa_register 7
 2354 0006 F860     	 str r0,[r7,#12]
 2355 0008 0B46     	 mov r3,r1
 2356 000a 7A60     	 str r2,[r7,#4]
 2357 000c FB72     	 strb r3,[r7,#11]
1004:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1005:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_STATUS_t retval;
1006:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t i;
1007:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t start;
1008:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint8_t end;
1009:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1010:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlic
1011:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetLastCapturedTimerValue:Invalid Register Set",
1012:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1013:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1014:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1015:../Libraries/XMCLib/src/xmc_ccu8.c ****   retval = XMC_CCU8_STATUS_ERROR;
 2358              	 .loc 2 1015 0
 2359 000e 0123     	 movs r3,#1
 2360 0010 FB75     	 strb r3,[r7,#23]
1016:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1017:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First check if extended capture mode is enabled */
1018:../Libraries/XMCLib/src/xmc_ccu8.c ****   if((slice->TC) & CCU8_CC8_TC_ECM_Msk)
 2361              	 .loc 2 1018 0
 2362 0012 FB68     	 ldr r3,[r7,#12]
 2363 0014 5B69     	 ldr r3,[r3,#20]
 2364 0016 03F01003 	 and r3,r3,#16
 2365 001a 002B     	 cmp r3,#0
 2366 001c 04D0     	 beq .L75
1019:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1020:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode has been enabled. So start with the lowest capture register and work y
1021:../Libraries/XMCLib/src/xmc_ccu8.c ****     start = 0U;
 2367              	 .loc 2 1021 0
 2368 001e 0023     	 movs r3,#0
 2369 0020 7B75     	 strb r3,[r7,#21]
1022:../Libraries/XMCLib/src/xmc_ccu8.c ****     end = XMC_CCU8_NUM_SLICES_PER_MODULE;
 2370              	 .loc 2 1022 0
 2371 0022 0423     	 movs r3,#4
 2372 0024 3B75     	 strb r3,[r7,#20]
 2373 0026 0BE0     	 b .L76
 2374              	.L75:
1023:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1024:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1025:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1026:../Libraries/XMCLib/src/xmc_ccu8.c ****     /* Extended capture mode is not enabled */
1027:../Libraries/XMCLib/src/xmc_ccu8.c ****     if(set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)
 2375              	 .loc 2 1027 0
 2376 0028 FB7A     	 ldrb r3,[r7,#11]
 2377 002a 012B     	 cmp r3,#1
 2378 002c 04D1     	 bne .L77
1028:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1029:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2379              	 .loc 2 1029 0
 2380 002e 0223     	 movs r3,#2
 2381 0030 7B75     	 strb r3,[r7,#21]
1030:../Libraries/XMCLib/src/xmc_ccu8.c ****       end   = (uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE;
 2382              	 .loc 2 1030 0
 2383 0032 0423     	 movs r3,#4
 2384 0034 3B75     	 strb r3,[r7,#20]
 2385 0036 03E0     	 b .L76
 2386              	.L77:
1031:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1032:../Libraries/XMCLib/src/xmc_ccu8.c ****     else
1033:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1034:../Libraries/XMCLib/src/xmc_ccu8.c ****       start = 0U;
 2387              	 .loc 2 1034 0
 2388 0038 0023     	 movs r3,#0
 2389 003a 7B75     	 strb r3,[r7,#21]
1035:../Libraries/XMCLib/src/xmc_ccu8.c ****       end = ((uint8_t) XMC_CCU8_NUM_SLICES_PER_MODULE) >> 1U;
 2390              	 .loc 2 1035 0
 2391 003c 0223     	 movs r3,#2
 2392 003e 3B75     	 strb r3,[r7,#20]
 2393              	.L76:
1036:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1037:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1038:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   for(i=start; i<end; i++)
 2394              	 .loc 2 1039 0
 2395 0040 7B7D     	 ldrb r3,[r7,#21]
 2396 0042 BB75     	 strb r3,[r7,#22]
 2397 0044 17E0     	 b .L78
 2398              	.L81:
1040:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1041:../Libraries/XMCLib/src/xmc_ccu8.c ****     if( (slice->CV[i]) & CCU8_CC8_CV_FFL_Msk )
 2399              	 .loc 2 1041 0
 2400 0046 BB7D     	 ldrb r3,[r7,#22]
 2401 0048 FA68     	 ldr r2,[r7,#12]
 2402 004a 1C33     	 adds r3,r3,#28
 2403 004c 9B00     	 lsls r3,r3,#2
 2404 004e 1344     	 add r3,r3,r2
 2405 0050 5B68     	 ldr r3,[r3,#4]
 2406 0052 03F48013 	 and r3,r3,#1048576
 2407 0056 002B     	 cmp r3,#0
 2408 0058 0AD0     	 beq .L79
1042:../Libraries/XMCLib/src/xmc_ccu8.c ****     {
1043:../Libraries/XMCLib/src/xmc_ccu8.c ****       *val_ptr = slice->CV[i];
 2409              	 .loc 2 1043 0
 2410 005a BB7D     	 ldrb r3,[r7,#22]
 2411 005c FA68     	 ldr r2,[r7,#12]
 2412 005e 1C33     	 adds r3,r3,#28
 2413 0060 9B00     	 lsls r3,r3,#2
 2414 0062 1344     	 add r3,r3,r2
 2415 0064 5A68     	 ldr r2,[r3,#4]
 2416 0066 7B68     	 ldr r3,[r7,#4]
 2417 0068 1A60     	 str r2,[r3]
1044:../Libraries/XMCLib/src/xmc_ccu8.c ****       retval = XMC_CCU8_STATUS_OK;
 2418              	 .loc 2 1044 0
 2419 006a 0023     	 movs r3,#0
 2420 006c FB75     	 strb r3,[r7,#23]
1045:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2421              	 .loc 2 1045 0
 2422 006e 06E0     	 b .L80
 2423              	.L79:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2424              	 .loc 2 1039 0 discriminator 2
 2425 0070 BB7D     	 ldrb r3,[r7,#22]
 2426 0072 0133     	 adds r3,r3,#1
 2427 0074 BB75     	 strb r3,[r7,#22]
 2428              	.L78:
1039:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
 2429              	 .loc 2 1039 0 is_stmt 0 discriminator 1
 2430 0076 BA7D     	 ldrb r2,[r7,#22]
 2431 0078 3B7D     	 ldrb r3,[r7,#20]
 2432 007a 9A42     	 cmp r2,r3
 2433 007c E3D3     	 bcc .L81
 2434              	.L80:
1046:../Libraries/XMCLib/src/xmc_ccu8.c ****     }
1047:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1048:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1049:../Libraries/XMCLib/src/xmc_ccu8.c ****   return retval;
 2435              	 .loc 2 1049 0 is_stmt 1
 2436 007e FB7D     	 ldrb r3,[r7,#23]
1050:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2437              	 .loc 2 1050 0
 2438 0080 1846     	 mov r0,r3
 2439 0082 1C37     	 adds r7,r7,#28
 2440              	.LCFI198:
 2441              	 .cfi_def_cfa_offset 4
 2442 0084 BD46     	 mov sp,r7
 2443              	.LCFI199:
 2444              	 .cfi_def_cfa_register 13
 2445              	 
 2446 0086 5DF8047B 	 ldr r7,[sp],#4
 2447              	.LCFI200:
 2448              	 .cfi_restore 7
 2449              	 .cfi_def_cfa_offset 0
 2450 008a 7047     	 bx lr
 2451              	 .cfi_endproc
 2452              	.LFE240:
 2454              	 .section .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo,"ax",%progbits
 2455              	 .align 2
 2456              	 .global XMC_CCU8_SLICE_GetCapturedValueFromFifo
 2457              	 .thumb
 2458              	 .thumb_func
 2460              	XMC_CCU8_SLICE_GetCapturedValueFromFifo:
 2461              	.LFB241:
1051:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1052:../Libraries/XMCLib/src/xmc_ccu8.c **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1053:../Libraries/XMCLib/src/xmc_ccu8.c **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1054:../Libraries/XMCLib/src/xmc_ccu8.c **** {
1055:../Libraries/XMCLib/src/xmc_ccu8.c ****   int32_t  cap;
1056:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t extracted_slice;
1057:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1058:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidModule(modu
1059:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1060:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* First read the global fifo register */
1061:../Libraries/XMCLib/src/xmc_ccu8.c ****   cap = (int32_t) module->ECRD;
1062:../Libraries/XMCLib/src/xmc_ccu8.c ****     
1063:../Libraries/XMCLib/src/xmc_ccu8.c ****   extracted_slice = (((uint32_t) cap) & ((uint32_t) CCU8_ECRD_SPTR_Msk)) >> CCU8_ECRD_SPTR_Pos;
1064:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1065:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Return captured result only if it were applicable to this slice */
1066:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(extracted_slice != ((uint32_t)slice_number))
1067:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1068:../Libraries/XMCLib/src/xmc_ccu8.c ****     cap = -1;
1069:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1070:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1071:../Libraries/XMCLib/src/xmc_ccu8.c ****   return (cap);
1072:../Libraries/XMCLib/src/xmc_ccu8.c **** }
1073:../Libraries/XMCLib/src/xmc_ccu8.c **** #else
1074:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Retrieves timer capture value from a FIFO made of capture registers */
1075:../Libraries/XMCLib/src/xmc_ccu8.c **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU
1076:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2462              	 .loc 2 1076 0
 2463              	 .cfi_startproc
 2464              	 
 2465              	 
 2466              	 
 2467 0000 80B4     	 push {r7}
 2468              	.LCFI201:
 2469              	 .cfi_def_cfa_offset 4
 2470              	 .cfi_offset 7,-4
 2471 0002 85B0     	 sub sp,sp,#20
 2472              	.LCFI202:
 2473              	 .cfi_def_cfa_offset 24
 2474 0004 00AF     	 add r7,sp,#0
 2475              	.LCFI203:
 2476              	 .cfi_def_cfa_register 7
 2477 0006 7860     	 str r0,[r7,#4]
 2478 0008 0B46     	 mov r3,r1
 2479 000a FB70     	 strb r3,[r7,#3]
1077:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t cap;
1078:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1079:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1080:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCapturedValueFromFifo:Invalid Register Set", 
1081:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((set == XMC_CCU8_SLICE_CAP_REG_SET_LOW) ||\
1082:../Libraries/XMCLib/src/xmc_ccu8.c ****               (set == XMC_CCU8_SLICE_CAP_REG_SET_HIGH)));
1083:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1084:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(XMC_CCU8_SLICE_CAP_REG_SET_LOW == set)
 2480              	 .loc 2 1084 0
 2481 000c FB78     	 ldrb r3,[r7,#3]
 2482 000e 002B     	 cmp r3,#0
 2483 0010 04D1     	 bne .L84
1085:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1086:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD0;
 2484              	 .loc 2 1086 0
 2485 0012 7B68     	 ldr r3,[r7,#4]
 2486 0014 D3F8B830 	 ldr r3,[r3,#184]
 2487 0018 FB60     	 str r3,[r7,#12]
 2488 001a 03E0     	 b .L85
 2489              	.L84:
1087:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1088:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1089:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1090:../Libraries/XMCLib/src/xmc_ccu8.c **** 	  cap = slice->ECRD1;
 2490              	 .loc 2 1090 0
 2491 001c 7B68     	 ldr r3,[r7,#4]
 2492 001e D3F8BC30 	 ldr r3,[r3,#188]
 2493 0022 FB60     	 str r3,[r7,#12]
 2494              	.L85:
1091:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1092:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1093:../Libraries/XMCLib/src/xmc_ccu8.c ****   return cap;
 2495              	 .loc 2 1093 0
 2496 0024 FB68     	 ldr r3,[r7,#12]
1094:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2497              	 .loc 2 1094 0
 2498 0026 1846     	 mov r0,r3
 2499 0028 1437     	 adds r7,r7,#20
 2500              	.LCFI204:
 2501              	 .cfi_def_cfa_offset 4
 2502 002a BD46     	 mov sp,r7
 2503              	.LCFI205:
 2504              	 .cfi_def_cfa_register 13
 2505              	 
 2506 002c 5DF8047B 	 ldr r7,[sp],#4
 2507              	.LCFI206:
 2508              	 .cfi_restore 7
 2509              	 .cfi_def_cfa_offset 0
 2510 0030 7047     	 bx lr
 2511              	 .cfi_endproc
 2512              	.LFE241:
 2514 0032 00BF     	 .section .text.XMC_CCU8_SLICE_EnableDithering,"ax",%progbits
 2515              	 .align 2
 2516              	 .global XMC_CCU8_SLICE_EnableDithering
 2517              	 .thumb
 2518              	 .thumb_func
 2520              	XMC_CCU8_SLICE_EnableDithering:
 2521              	.LFB242:
1095:../Libraries/XMCLib/src/xmc_ccu8.c **** #endif
1096:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1097:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Enables PWM dithering feature */
1098:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
1099:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool period_dither,
1100:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const bool duty_dither,
1101:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const uint8_t spread)
1102:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2522              	 .loc 2 1102 0
 2523              	 .cfi_startproc
 2524              	 
 2525              	 
 2526 0000 80B5     	 push {r7,lr}
 2527              	.LCFI207:
 2528              	 .cfi_def_cfa_offset 8
 2529              	 .cfi_offset 7,-8
 2530              	 .cfi_offset 14,-4
 2531 0002 84B0     	 sub sp,sp,#16
 2532              	.LCFI208:
 2533              	 .cfi_def_cfa_offset 24
 2534 0004 00AF     	 add r7,sp,#0
 2535              	.LCFI209:
 2536              	 .cfi_def_cfa_register 7
 2537 0006 7860     	 str r0,[r7,#4]
 2538 0008 0846     	 mov r0,r1
 2539 000a 1146     	 mov r1,r2
 2540 000c 1A46     	 mov r2,r3
 2541 000e 0346     	 mov r3,r0
 2542 0010 FB70     	 strb r3,[r7,#3]
 2543 0012 0B46     	 mov r3,r1
 2544 0014 BB70     	 strb r3,[r7,#2]
 2545 0016 1346     	 mov r3,r2
 2546 0018 7B70     	 strb r3,[r7,#1]
1103:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t tc;
1104:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1105:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1106:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1107:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc = slice->TC;
 2547              	 .loc 2 1107 0
 2548 001a 7B68     	 ldr r3,[r7,#4]
 2549 001c 5B69     	 ldr r3,[r3,#20]
 2550 001e FB60     	 str r3,[r7,#12]
1108:../Libraries/XMCLib/src/xmc_ccu8.c ****   tc &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
 2551              	 .loc 2 1108 0
 2552 0020 FB68     	 ldr r3,[r7,#12]
 2553 0022 23F4C043 	 bic r3,r3,#24576
 2554 0026 FB60     	 str r3,[r7,#12]
1109:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1110:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == period_dither)
 2555              	 .loc 2 1110 0
 2556 0028 FB78     	 ldrb r3,[r7,#3]
 2557 002a 002B     	 cmp r3,#0
 2558 002c 03D0     	 beq .L88
1111:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1112:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_PERIOD_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2559              	 .loc 2 1112 0
 2560 002e FB68     	 ldr r3,[r7,#12]
 2561 0030 43F40053 	 orr r3,r3,#8192
 2562 0034 FB60     	 str r3,[r7,#12]
 2563              	.L88:
1113:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1114:../Libraries/XMCLib/src/xmc_ccu8.c ****   if(true == duty_dither)
 2564              	 .loc 2 1114 0
 2565 0036 BB78     	 ldrb r3,[r7,#2]
 2566 0038 002B     	 cmp r3,#0
 2567 003a 03D0     	 beq .L89
1115:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1116:../Libraries/XMCLib/src/xmc_ccu8.c ****     tc |= (((uint32_t) XMC_CCU8_SLICE_DITHER_DUTYCYCLE_MASK) << CCU8_CC8_TC_DITHE_Pos);
 2568              	 .loc 2 1116 0
 2569 003c FB68     	 ldr r3,[r7,#12]
 2570 003e 43F48043 	 orr r3,r3,#16384
 2571 0042 FB60     	 str r3,[r7,#12]
 2572              	.L89:
1117:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1118:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1119:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC = tc;
 2573              	 .loc 2 1119 0
 2574 0044 7B68     	 ldr r3,[r7,#4]
 2575 0046 FA68     	 ldr r2,[r7,#12]
 2576 0048 5A61     	 str r2,[r3,#20]
1120:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1121:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_CCU8_SLICE_SetDitherCompareValue((XMC_CCU8_SLICE_t *)slice, (uint8_t)spread);
 2577              	 .loc 2 1121 0
 2578 004a 7B78     	 ldrb r3,[r7,#1]
 2579 004c 7868     	 ldr r0,[r7,#4]
 2580 004e 1946     	 mov r1,r3
 2581 0050 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDitherCompareValue
1122:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2582              	 .loc 2 1122 0
 2583 0054 1037     	 adds r7,r7,#16
 2584              	.LCFI210:
 2585              	 .cfi_def_cfa_offset 8
 2586 0056 BD46     	 mov sp,r7
 2587              	.LCFI211:
 2588              	 .cfi_def_cfa_register 13
 2589              	 
 2590 0058 80BD     	 pop {r7,pc}
 2591              	 .cfi_endproc
 2592              	.LFE242:
 2594 005a 00BF     	 .section .text.XMC_CCU8_SLICE_SetPrescaler,"ax",%progbits
 2595              	 .align 2
 2596              	 .global XMC_CCU8_SLICE_SetPrescaler
 2597              	 .thumb
 2598              	 .thumb_func
 2600              	XMC_CCU8_SLICE_SetPrescaler:
 2601              	.LFB243:
1123:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1124:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs Pre-scaler divider  */
1125:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const uint8_t div_val)
1126:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2602              	 .loc 2 1126 0
 2603              	 .cfi_startproc
 2604              	 
 2605              	 
 2606              	 
 2607 0000 80B4     	 push {r7}
 2608              	.LCFI212:
 2609              	 .cfi_def_cfa_offset 4
 2610              	 .cfi_offset 7,-4
 2611 0002 85B0     	 sub sp,sp,#20
 2612              	.LCFI213:
 2613              	 .cfi_def_cfa_offset 24
 2614 0004 00AF     	 add r7,sp,#0
 2615              	.LCFI214:
 2616              	 .cfi_def_cfa_register 7
 2617 0006 7860     	 str r0,[r7,#4]
 2618 0008 0B46     	 mov r3,r1
 2619 000a FB70     	 strb r3,[r7,#3]
1127:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t fpc;
1128:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1129:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1130:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1131:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* If the prescaler is not running, update directly the divider*/
1132:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc = slice->FPC;
 2620              	 .loc 2 1132 0
 2621 000c 7B68     	 ldr r3,[r7,#4]
 2622 000e 9B6A     	 ldr r3,[r3,#40]
 2623 0010 FB60     	 str r3,[r7,#12]
1133:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc &= ~((uint32_t) CCU8_CC8_FPC_PVAL_Msk);
 2624              	 .loc 2 1133 0
 2625 0012 FB68     	 ldr r3,[r7,#12]
 2626 0014 23F47063 	 bic r3,r3,#3840
 2627 0018 FB60     	 str r3,[r7,#12]
1134:../Libraries/XMCLib/src/xmc_ccu8.c ****   fpc |= ((uint32_t) div_val) << CCU8_CC8_FPC_PVAL_Pos;
 2628              	 .loc 2 1134 0
 2629 001a FB78     	 ldrb r3,[r7,#3]
 2630 001c 1B02     	 lsls r3,r3,#8
 2631 001e FA68     	 ldr r2,[r7,#12]
 2632 0020 1343     	 orrs r3,r3,r2
 2633 0022 FB60     	 str r3,[r7,#12]
1135:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->FPC = fpc;
 2634              	 .loc 2 1135 0
 2635 0024 7B68     	 ldr r3,[r7,#4]
 2636 0026 FA68     	 ldr r2,[r7,#12]
 2637 0028 9A62     	 str r2,[r3,#40]
1136:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1137:../Libraries/XMCLib/src/xmc_ccu8.c ****   /*
1138:../Libraries/XMCLib/src/xmc_ccu8.c ****    * In any case, update the initial value of the divider which is to be loaded once the prescaler 
1139:../Libraries/XMCLib/src/xmc_ccu8.c ****    * compare value.
1140:../Libraries/XMCLib/src/xmc_ccu8.c ****    */
1141:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSC = (uint32_t) div_val;
 2638              	 .loc 2 1141 0
 2639 002a FA78     	 ldrb r2,[r7,#3]
 2640 002c 7B68     	 ldr r3,[r7,#4]
 2641 002e 5A62     	 str r2,[r3,#36]
1142:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2642              	 .loc 2 1142 0
 2643 0030 1437     	 adds r7,r7,#20
 2644              	.LCFI215:
 2645              	 .cfi_def_cfa_offset 4
 2646 0032 BD46     	 mov sp,r7
 2647              	.LCFI216:
 2648              	 .cfi_def_cfa_register 13
 2649              	 
 2650 0034 5DF8047B 	 ldr r7,[sp],#4
 2651              	.LCFI217:
 2652              	 .cfi_restore 7
 2653              	 .cfi_def_cfa_offset 0
 2654 0038 7047     	 bx lr
 2655              	 .cfi_endproc
 2656              	.LFE243:
 2658 003a 00BF     	 .section .text.XMC_CCU8_SLICE_SetTimerCompareMatch,"ax",%progbits
 2659              	 .align 2
 2660              	 .global XMC_CCU8_SLICE_SetTimerCompareMatch
 2661              	 .thumb
 2662              	 .thumb_func
 2664              	XMC_CCU8_SLICE_SetTimerCompareMatch:
 2665              	.LFB244:
1143:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1144:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Programs timer compare match value for channel 1 or 2 */
1145:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
1146:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1147:../Libraries/XMCLib/src/xmc_ccu8.c ****                                          const uint16_t compare_val)
1148:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2666              	 .loc 2 1148 0
 2667              	 .cfi_startproc
 2668              	 
 2669              	 
 2670              	 
 2671 0000 80B4     	 push {r7}
 2672              	.LCFI218:
 2673              	 .cfi_def_cfa_offset 4
 2674              	 .cfi_offset 7,-4
 2675 0002 83B0     	 sub sp,sp,#12
 2676              	.LCFI219:
 2677              	 .cfi_def_cfa_offset 16
 2678 0004 00AF     	 add r7,sp,#0
 2679              	.LCFI220:
 2680              	 .cfi_def_cfa_register 7
 2681 0006 7860     	 str r0,[r7,#4]
 2682 0008 0B46     	 mov r3,r1
 2683 000a FB70     	 strb r3,[r7,#3]
 2684 000c 1346     	 mov r3,r2
 2685 000e 3B80     	 strh r3,[r7]
1149:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1150:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANN
1151:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1152:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2686              	 .loc 2 1152 0
 2687 0010 FB78     	 ldrb r3,[r7,#3]
 2688 0012 002B     	 cmp r3,#0
 2689 0014 03D1     	 bne .L92
1153:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1154:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR1S = (uint32_t) compare_val;
 2690              	 .loc 2 1154 0
 2691 0016 3A88     	 ldrh r2,[r7]
 2692 0018 7B68     	 ldr r3,[r7,#4]
 2693 001a DA63     	 str r2,[r3,#60]
 2694 001c 02E0     	 b .L91
 2695              	.L92:
1155:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1156:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1157:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1158:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->CR2S = (uint32_t) compare_val;
 2696              	 .loc 2 1158 0
 2697 001e 3A88     	 ldrh r2,[r7]
 2698 0020 7B68     	 ldr r3,[r7,#4]
 2699 0022 5A64     	 str r2,[r3,#68]
 2700              	.L91:
1159:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1160:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2701              	 .loc 2 1160 0
 2702 0024 0C37     	 adds r7,r7,#12
 2703              	.LCFI221:
 2704              	 .cfi_def_cfa_offset 4
 2705 0026 BD46     	 mov sp,r7
 2706              	.LCFI222:
 2707              	 .cfi_def_cfa_register 13
 2708              	 
 2709 0028 5DF8047B 	 ldr r7,[sp],#4
 2710              	.LCFI223:
 2711              	 .cfi_restore 7
 2712              	 .cfi_def_cfa_offset 0
 2713 002c 7047     	 bx lr
 2714              	 .cfi_endproc
 2715              	.LFE244:
 2717 002e 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerCompareMatch,"ax",%progbits
 2718              	 .align 2
 2719              	 .global XMC_CCU8_SLICE_GetTimerCompareMatch
 2720              	 .thumb
 2721              	 .thumb_func
 2723              	XMC_CCU8_SLICE_GetTimerCompareMatch:
 2724              	.LFB245:
1161:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1162:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Returns the timer compare match value for channel 1 or 2 */
1163:../Libraries/XMCLib/src/xmc_ccu8.c **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
1164:../Libraries/XMCLib/src/xmc_ccu8.c ****                                              const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel)
1165:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2725              	 .loc 2 1165 0
 2726              	 .cfi_startproc
 2727              	 
 2728              	 
 2729              	 
 2730 0000 80B4     	 push {r7}
 2731              	.LCFI224:
 2732              	 .cfi_def_cfa_offset 4
 2733              	 .cfi_offset 7,-4
 2734 0002 85B0     	 sub sp,sp,#20
 2735              	.LCFI225:
 2736              	 .cfi_def_cfa_offset 24
 2737 0004 00AF     	 add r7,sp,#0
 2738              	.LCFI226:
 2739              	 .cfi_def_cfa_register 7
 2740 0006 7860     	 str r0,[r7,#4]
 2741 0008 0B46     	 mov r3,r1
 2742 000a FB70     	 strb r3,[r7,#3]
1166:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint16_t compare_value;
1167:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1168:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1169:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCompareMatch:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(ch
1170:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1171:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2743              	 .loc 2 1171 0
 2744 000c FB78     	 ldrb r3,[r7,#3]
 2745 000e 002B     	 cmp r3,#0
 2746 0010 03D1     	 bne .L95
1172:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1173:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR1;
 2747              	 .loc 2 1173 0
 2748 0012 7B68     	 ldr r3,[r7,#4]
 2749 0014 9B6B     	 ldr r3,[r3,#56]
 2750 0016 FB81     	 strh r3,[r7,#14]
 2751 0018 02E0     	 b .L96
 2752              	.L95:
1174:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1175:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1176:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1177:../Libraries/XMCLib/src/xmc_ccu8.c ****     compare_value = (uint16_t) slice->CR2;
 2753              	 .loc 2 1177 0
 2754 001a 7B68     	 ldr r3,[r7,#4]
 2755 001c 1B6C     	 ldr r3,[r3,#64]
 2756 001e FB81     	 strh r3,[r7,#14]
 2757              	.L96:
1178:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1179:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1180:../Libraries/XMCLib/src/xmc_ccu8.c ****   return(compare_value);
 2758              	 .loc 2 1180 0
 2759 0020 FB89     	 ldrh r3,[r7,#14]
1181:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2760              	 .loc 2 1181 0
 2761 0022 1846     	 mov r0,r3
 2762 0024 1437     	 adds r7,r7,#20
 2763              	.LCFI227:
 2764              	 .cfi_def_cfa_offset 4
 2765 0026 BD46     	 mov sp,r7
 2766              	.LCFI228:
 2767              	 .cfi_def_cfa_register 13
 2768              	 
 2769 0028 5DF8047B 	 ldr r7,[sp],#4
 2770              	.LCFI229:
 2771              	 .cfi_restore 7
 2772              	 .cfi_def_cfa_offset 0
 2773 002c 7047     	 bx lr
 2774              	 .cfi_endproc
 2775              	.LFE245:
 2777 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetInterruptNode,"ax",%progbits
 2778              	 .align 2
 2779              	 .global XMC_CCU8_SLICE_SetInterruptNode
 2780              	 .thumb
 2781              	 .thumb_func
 2783              	XMC_CCU8_SLICE_SetInterruptNode:
 2784              	.LFB246:
1182:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1183:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Binds a capcom event to an NVIC node  */
1184:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetInterruptNode(XMC_CCU8_SLICE_t *const slice,
1185:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_IRQ_ID_t event,
1186:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_SR_ID_t sr)
1187:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2785              	 .loc 2 1187 0
 2786              	 .cfi_startproc
 2787              	 
 2788              	 
 2789              	 
 2790 0000 80B4     	 push {r7}
 2791              	.LCFI230:
 2792              	 .cfi_def_cfa_offset 4
 2793              	 .cfi_offset 7,-4
 2794 0002 87B0     	 sub sp,sp,#28
 2795              	.LCFI231:
 2796              	 .cfi_def_cfa_offset 32
 2797 0004 00AF     	 add r7,sp,#0
 2798              	.LCFI232:
 2799              	 .cfi_def_cfa_register 7
 2800 0006 7860     	 str r0,[r7,#4]
 2801 0008 0B46     	 mov r3,r1
 2802 000a FB70     	 strb r3,[r7,#3]
 2803 000c 1346     	 mov r3,r2
 2804 000e BB70     	 strb r3,[r7,#2]
1188:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t srs;
1189:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t mask;
1190:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t pos;
1191:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1192:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1193:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid SR ID ", XMC_CCU8_SLICE_CHECK_SR_ID(sr));
1194:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetInterruptNode:Invalid event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event)
1195:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1196:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs = slice->SRS;
 2805              	 .loc 2 1196 0
 2806 0010 7B68     	 ldr r3,[r7,#4]
 2807 0012 D3F8A830 	 ldr r3,[r3,#168]
 2808 0016 FB60     	 str r3,[r7,#12]
1197:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1198:../Libraries/XMCLib/src/xmc_ccu8.c ****   switch(event)
 2809              	 .loc 2 1198 0
 2810 0018 FB78     	 ldrb r3,[r7,#3]
 2811 001a 092B     	 cmp r3,#9
 2812 001c 31D8     	 bhi .L99
 2813 001e 01A2     	 adr r2,.L101
 2814 0020 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2815              	 .p2align 2
 2816              	.L101:
 2817 0024 4D000000 	 .word .L100+1
 2818 0028 4D000000 	 .word .L100+1
 2819 002c 57000000 	 .word .L102+1
 2820 0030 57000000 	 .word .L102+1
 2821 0034 61000000 	 .word .L103+1
 2822 0038 61000000 	 .word .L103+1
 2823 003c 83000000 	 .word .L99+1
 2824 0040 83000000 	 .word .L99+1
 2825 0044 6B000000 	 .word .L104+1
 2826 0048 77000000 	 .word .L105+1
 2827              	 .p2align 1
 2828              	.L100:
1199:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1200:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH:
1201:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH:
1202:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_POSR_Msk);
 2829              	 .loc 2 1202 0
 2830 004c 0323     	 movs r3,#3
 2831 004e 7B61     	 str r3,[r7,#20]
1203:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_POSR_Pos;
 2832              	 .loc 2 1203 0
 2833 0050 0023     	 movs r3,#0
 2834 0052 3B61     	 str r3,[r7,#16]
1204:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2835              	 .loc 2 1204 0
 2836 0054 1BE0     	 b .L106
 2837              	.L102:
1205:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1206:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1:
1207:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1:
1208:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM1SR_Msk);
 2838              	 .loc 2 1208 0
 2839 0056 0C23     	 movs r3,#12
 2840 0058 7B61     	 str r3,[r7,#20]
1209:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM1SR_Pos;
 2841              	 .loc 2 1209 0
 2842 005a 0223     	 movs r3,#2
 2843 005c 3B61     	 str r3,[r7,#16]
1210:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2844              	 .loc 2 1210 0
 2845 005e 16E0     	 b .L106
 2846              	.L103:
1211:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1212:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2:
1213:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2:
1214:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_CM2SR_Msk);
 2847              	 .loc 2 1214 0
 2848 0060 3023     	 movs r3,#48
 2849 0062 7B61     	 str r3,[r7,#20]
1215:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_CM2SR_Pos;
 2850              	 .loc 2 1215 0
 2851 0064 0423     	 movs r3,#4
 2852 0066 3B61     	 str r3,[r7,#16]
1216:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2853              	 .loc 2 1216 0
 2854 0068 11E0     	 b .L106
 2855              	.L104:
1217:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1218:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT0:
1219:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E0SR_Msk);
 2856              	 .loc 2 1219 0
 2857 006a 4FF44073 	 mov r3,#768
 2858 006e 7B61     	 str r3,[r7,#20]
1220:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E0SR_Pos;
 2859              	 .loc 2 1220 0
 2860 0070 0823     	 movs r3,#8
 2861 0072 3B61     	 str r3,[r7,#16]
1221:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2862              	 .loc 2 1221 0
 2863 0074 0BE0     	 b .L106
 2864              	.L105:
1222:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1223:../Libraries/XMCLib/src/xmc_ccu8.c ****     case XMC_CCU8_SLICE_IRQ_ID_EVENT1:
1224:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E1SR_Msk);
 2865              	 .loc 2 1224 0
 2866 0076 4FF44063 	 mov r3,#3072
 2867 007a 7B61     	 str r3,[r7,#20]
1225:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E1SR_Pos;
 2868              	 .loc 2 1225 0
 2869 007c 0A23     	 movs r3,#10
 2870 007e 3B61     	 str r3,[r7,#16]
1226:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2871              	 .loc 2 1226 0
 2872 0080 05E0     	 b .L106
 2873              	.L99:
1227:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1228:../Libraries/XMCLib/src/xmc_ccu8.c ****     default:
1229:../Libraries/XMCLib/src/xmc_ccu8.c ****       mask = ((uint32_t) CCU8_CC8_SRS_E2SR_Msk);
 2874              	 .loc 2 1229 0
 2875 0082 4FF44053 	 mov r3,#12288
 2876 0086 7B61     	 str r3,[r7,#20]
1230:../Libraries/XMCLib/src/xmc_ccu8.c ****       pos  = CCU8_CC8_SRS_E2SR_Pos;
 2877              	 .loc 2 1230 0
 2878 0088 0C23     	 movs r3,#12
 2879 008a 3B61     	 str r3,[r7,#16]
1231:../Libraries/XMCLib/src/xmc_ccu8.c ****       break;
 2880              	 .loc 2 1231 0
 2881 008c 00BF     	 nop
 2882              	.L106:
1232:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1233:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1234:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs &= ~mask;
 2883              	 .loc 2 1234 0
 2884 008e 7B69     	 ldr r3,[r7,#20]
 2885 0090 DB43     	 mvns r3,r3
 2886 0092 FA68     	 ldr r2,[r7,#12]
 2887 0094 1340     	 ands r3,r3,r2
 2888 0096 FB60     	 str r3,[r7,#12]
1235:../Libraries/XMCLib/src/xmc_ccu8.c ****   srs |= (uint32_t)sr << pos;
 2889              	 .loc 2 1235 0
 2890 0098 BA78     	 ldrb r2,[r7,#2]
 2891 009a 3B69     	 ldr r3,[r7,#16]
 2892 009c 02FA03F3 	 lsl r3,r2,r3
 2893 00a0 FA68     	 ldr r2,[r7,#12]
 2894 00a2 1343     	 orrs r3,r3,r2
 2895 00a4 FB60     	 str r3,[r7,#12]
1236:../Libraries/XMCLib/src/xmc_ccu8.c ****   
1237:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->SRS = srs;
 2896              	 .loc 2 1237 0
 2897 00a6 7B68     	 ldr r3,[r7,#4]
 2898 00a8 FA68     	 ldr r2,[r7,#12]
 2899 00aa C3F8A820 	 str r2,[r3,#168]
1238:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2900              	 .loc 2 1238 0
 2901 00ae 1C37     	 adds r7,r7,#28
 2902              	.LCFI233:
 2903              	 .cfi_def_cfa_offset 4
 2904 00b0 BD46     	 mov sp,r7
 2905              	.LCFI234:
 2906              	 .cfi_def_cfa_register 13
 2907              	 
 2908 00b2 5DF8047B 	 ldr r7,[sp],#4
 2909              	.LCFI235:
 2910              	 .cfi_restore 7
 2911              	 .cfi_def_cfa_offset 0
 2912 00b6 7047     	 bx lr
 2913              	 .cfi_endproc
 2914              	.LFE246:
 2916              	 .section .text.XMC_CCU8_SLICE_SetPassiveLevel,"ax",%progbits
 2917              	 .align 2
 2918              	 .global XMC_CCU8_SLICE_SetPassiveLevel
 2919              	 .thumb
 2920              	 .thumb_func
 2922              	XMC_CCU8_SLICE_SetPassiveLevel:
 2923              	.LFB247:
1239:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1240:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Asserts passive level for the slice output */
1241:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetPassiveLevel(XMC_CCU8_SLICE_t *const slice,
1242:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_t out,
1243:../Libraries/XMCLib/src/xmc_ccu8.c ****                                     const XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t level)
1244:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2924              	 .loc 2 1244 0
 2925              	 .cfi_startproc
 2926              	 
 2927              	 
 2928              	 
 2929 0000 80B4     	 push {r7}
 2930              	.LCFI236:
 2931              	 .cfi_def_cfa_offset 4
 2932              	 .cfi_offset 7,-4
 2933 0002 85B0     	 sub sp,sp,#20
 2934              	.LCFI237:
 2935              	 .cfi_def_cfa_offset 24
 2936 0004 00AF     	 add r7,sp,#0
 2937              	.LCFI238:
 2938              	 .cfi_def_cfa_register 7
 2939 0006 7860     	 str r0,[r7,#4]
 2940 0008 0B46     	 mov r3,r1
 2941 000a FB70     	 strb r3,[r7,#3]
 2942 000c 1346     	 mov r3,r2
 2943 000e BB70     	 strb r3,[r7,#2]
1245:../Libraries/XMCLib/src/xmc_ccu8.c ****   uint32_t psl;
1246:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1247:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1248:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Slice Output", XMC_CCU8_SLICE_CHECK_OUTPUT(out
1249:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPassiveLevel:Invalid Passive Level",
1250:../Libraries/XMCLib/src/xmc_ccu8.c ****              ((level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW) ||\
1251:../Libraries/XMCLib/src/xmc_ccu8.c ****               (level == XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH)));
1252:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1253:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl = slice->PSL;
 2944              	 .loc 2 1253 0
 2945 0010 7B68     	 ldr r3,[r7,#4]
 2946 0012 9B69     	 ldr r3,[r3,#24]
 2947 0014 FB60     	 str r3,[r7,#12]
1254:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1255:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl &= ~((uint32_t) out);
 2948              	 .loc 2 1255 0
 2949 0016 FB78     	 ldrb r3,[r7,#3]
 2950 0018 DB43     	 mvns r3,r3
 2951 001a FA68     	 ldr r2,[r7,#12]
 2952 001c 1340     	 ands r3,r3,r2
 2953 001e FB60     	 str r3,[r7,#12]
1256:../Libraries/XMCLib/src/xmc_ccu8.c ****   psl |= (uint32_t) level << ((uint32_t)out >> 1U);
 2954              	 .loc 2 1256 0
 2955 0020 BB78     	 ldrb r3,[r7,#2]
 2956 0022 FA78     	 ldrb r2,[r7,#3]
 2957 0024 5208     	 lsrs r2,r2,#1
 2958 0026 D2B2     	 uxtb r2,r2
 2959 0028 9340     	 lsls r3,r3,r2
 2960 002a FA68     	 ldr r2,[r7,#12]
 2961 002c 1343     	 orrs r3,r3,r2
 2962 002e FB60     	 str r3,[r7,#12]
1257:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1258:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program CC8 slice output passive level */
1259:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->PSL = psl;
 2963              	 .loc 2 1259 0
 2964 0030 7B68     	 ldr r3,[r7,#4]
 2965 0032 FA68     	 ldr r2,[r7,#12]
 2966 0034 9A61     	 str r2,[r3,#24]
1260:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 2967              	 .loc 2 1260 0
 2968 0036 1437     	 adds r7,r7,#20
 2969              	.LCFI239:
 2970              	 .cfi_def_cfa_offset 4
 2971 0038 BD46     	 mov sp,r7
 2972              	.LCFI240:
 2973              	 .cfi_def_cfa_register 13
 2974              	 
 2975 003a 5DF8047B 	 ldr r7,[sp],#4
 2976              	.LCFI241:
 2977              	 .cfi_restore 7
 2978              	 .cfi_def_cfa_offset 0
 2979 003e 7047     	 bx lr
 2980              	 .cfi_endproc
 2981              	.LFE247:
 2983              	 .section .text.XMC_CCU8_SLICE_DeadTimeInit,"ax",%progbits
 2984              	 .align 2
 2985              	 .global XMC_CCU8_SLICE_DeadTimeInit
 2986              	 .thumb
 2987              	 .thumb_func
 2989              	XMC_CCU8_SLICE_DeadTimeInit:
 2990              	.LFB248:
1261:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1262:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Initializes Dead time configuration for the slice outputs */
1263:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_DeadTimeInit(XMC_CCU8_SLICE_t *const slice,
1264:../Libraries/XMCLib/src/xmc_ccu8.c ****                                  const XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t *const config)
1265:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 2991              	 .loc 2 1265 0
 2992              	 .cfi_startproc
 2993              	 
 2994              	 
 2995              	 
 2996 0000 80B4     	 push {r7}
 2997              	.LCFI242:
 2998              	 .cfi_def_cfa_offset 4
 2999              	 .cfi_offset 7,-4
 3000 0002 83B0     	 sub sp,sp,#12
 3001              	.LCFI243:
 3002              	 .cfi_def_cfa_offset 16
 3003 0004 00AF     	 add r7,sp,#0
 3004              	.LCFI244:
 3005              	 .cfi_def_cfa_register 7
 3006 0006 7860     	 str r0,[r7,#4]
 3007 0008 3960     	 str r1,[r7]
1266:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1267:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1268:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 1 */
1269:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC1R = config->dc1r;
 3008              	 .loc 2 1269 0
 3009 000a 3B68     	 ldr r3,[r7]
 3010 000c 5A68     	 ldr r2,[r3,#4]
 3011 000e 7B68     	 ldr r3,[r7,#4]
 3012 0010 1A65     	 str r2,[r3,#80]
1270:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time value for channel 2 */
1271:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = config->dc2r;
 3013              	 .loc 2 1271 0
 3014 0012 3B68     	 ldr r3,[r7]
 3015 0014 9A68     	 ldr r2,[r3,#8]
 3016 0016 7B68     	 ldr r3,[r7,#4]
 3017 0018 5A65     	 str r2,[r3,#84]
1272:../Libraries/XMCLib/src/xmc_ccu8.c ****   /* Program dead time control configuration */
1273:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC = config->dtc;
 3018              	 .loc 2 1273 0
 3019 001a 3B68     	 ldr r3,[r7]
 3020 001c 1A68     	 ldr r2,[r3]
 3021 001e 7B68     	 ldr r3,[r7,#4]
 3022 0020 DA64     	 str r2,[r3,#76]
1274:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3023              	 .loc 2 1274 0
 3024 0022 0C37     	 adds r7,r7,#12
 3025              	.LCFI245:
 3026              	 .cfi_def_cfa_offset 4
 3027 0024 BD46     	 mov sp,r7
 3028              	.LCFI246:
 3029              	 .cfi_def_cfa_register 13
 3030              	 
 3031 0026 5DF8047B 	 ldr r7,[sp],#4
 3032              	.LCFI247:
 3033              	 .cfi_restore 7
 3034              	 .cfi_def_cfa_offset 0
 3035 002a 7047     	 bx lr
 3036              	 .cfi_endproc
 3037              	.LFE248:
 3039              	 .section .text.XMC_CCU8_SLICE_ConfigureDeadTime,"ax",%progbits
 3040              	 .align 2
 3041              	 .global XMC_CCU8_SLICE_ConfigureDeadTime
 3042              	 .thumb
 3043              	 .thumb_func
 3045              	XMC_CCU8_SLICE_ConfigureDeadTime:
 3046              	.LFB249:
1275:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1276:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Activates or deactivates dead time for compare channel and ST path */
1277:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureDeadTime(XMC_CCU8_SLICE_t *const slice, const uint8_t mask)
1278:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3047              	 .loc 2 1278 0
 3048              	 .cfi_startproc
 3049              	 
 3050              	 
 3051              	 
 3052 0000 80B4     	 push {r7}
 3053              	.LCFI248:
 3054              	 .cfi_def_cfa_offset 4
 3055              	 .cfi_offset 7,-4
 3056 0002 83B0     	 sub sp,sp,#12
 3057              	.LCFI249:
 3058              	 .cfi_def_cfa_offset 16
 3059 0004 00AF     	 add r7,sp,#0
 3060              	.LCFI250:
 3061              	 .cfi_def_cfa_register 7
 3062 0006 7860     	 str r0,[r7,#4]
 3063 0008 0B46     	 mov r3,r1
 3064 000a FB70     	 strb r3,[r7,#3]
1279:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice)
1280:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureDeadTime:Invalid Channel", (mask <= XMC_CCU8_SLICE_DEAD_TIME_
1281:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1282:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) XMC_CCU8_SLICE_DEAD_TIME_CONFIG_MASK);
 3065              	 .loc 2 1282 0
 3066 000c 7B68     	 ldr r3,[r7,#4]
 3067 000e DB6C     	 ldr r3,[r3,#76]
 3068 0010 23F03F02 	 bic r2,r3,#63
 3069 0014 7B68     	 ldr r3,[r7,#4]
 3070 0016 DA64     	 str r2,[r3,#76]
1283:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= (uint32_t) mask;
 3071              	 .loc 2 1283 0
 3072 0018 7B68     	 ldr r3,[r7,#4]
 3073 001a DA6C     	 ldr r2,[r3,#76]
 3074 001c FB78     	 ldrb r3,[r7,#3]
 3075 001e 1A43     	 orrs r2,r2,r3
 3076 0020 7B68     	 ldr r3,[r7,#4]
 3077 0022 DA64     	 str r2,[r3,#76]
1284:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3078              	 .loc 2 1284 0
 3079 0024 0C37     	 adds r7,r7,#12
 3080              	.LCFI251:
 3081              	 .cfi_def_cfa_offset 4
 3082 0026 BD46     	 mov sp,r7
 3083              	.LCFI252:
 3084              	 .cfi_def_cfa_register 13
 3085              	 
 3086 0028 5DF8047B 	 ldr r7,[sp],#4
 3087              	.LCFI253:
 3088              	 .cfi_restore 7
 3089              	 .cfi_def_cfa_offset 0
 3090 002c 7047     	 bx lr
 3091              	 .cfi_endproc
 3092              	.LFE249:
 3094 002e 00BF     	 .section .text.XMC_CCU8_SLICE_SetDeadTimeValue,"ax",%progbits
 3095              	 .align 2
 3096              	 .global XMC_CCU8_SLICE_SetDeadTimeValue
 3097              	 .thumb
 3098              	 .thumb_func
 3100              	XMC_CCU8_SLICE_SetDeadTimeValue:
 3101              	.LFB250:
1285:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1286:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures rising edge delay and falling edge delay for dead time */
1287:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimeValue(XMC_CCU8_SLICE_t *const slice,
1288:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
1289:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t rise_value,
1290:../Libraries/XMCLib/src/xmc_ccu8.c ****                                      const uint8_t fall_value)
1291:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3102              	 .loc 2 1291 0
 3103              	 .cfi_startproc
 3104              	 
 3105              	 
 3106              	 
 3107 0000 80B4     	 push {r7}
 3108              	.LCFI254:
 3109              	 .cfi_def_cfa_offset 4
 3110              	 .cfi_offset 7,-4
 3111 0002 83B0     	 sub sp,sp,#12
 3112              	.LCFI255:
 3113              	 .cfi_def_cfa_offset 16
 3114 0004 00AF     	 add r7,sp,#0
 3115              	.LCFI256:
 3116              	 .cfi_def_cfa_register 7
 3117 0006 7860     	 str r0,[r7,#4]
 3118 0008 0846     	 mov r0,r1
 3119 000a 1146     	 mov r1,r2
 3120 000c 1A46     	 mov r2,r3
 3121 000e 0346     	 mov r3,r0
 3122 0010 FB70     	 strb r3,[r7,#3]
 3123 0012 0B46     	 mov r3,r1
 3124 0014 BB70     	 strb r3,[r7,#2]
 3125 0016 1346     	 mov r3,r2
 3126 0018 7B70     	 strb r3,[r7,#1]
1292:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
1293:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimeValue:Invalid channel", XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(c
1294:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1295:../Libraries/XMCLib/src/xmc_ccu8.c ****   if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 3127              	 .loc 2 1295 0
 3128 001a FB78     	 ldrb r3,[r7,#3]
 3129 001c 002B     	 cmp r3,#0
 3130 001e 06D1     	 bne .L111
1296:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1297:../Libraries/XMCLib/src/xmc_ccu8.c ****     slice->DC1R = (((uint32_t) fall_value) << CCU8_CC8_DC1R_DT1F_Pos) | ((uint32_t) rise_value);
 3131              	 .loc 2 1297 0
 3132 0020 7B78     	 ldrb r3,[r7,#1]
 3133 0022 1A02     	 lsls r2,r3,#8
 3134 0024 BB78     	 ldrb r3,[r7,#2]
 3135 0026 1A43     	 orrs r2,r2,r3
 3136 0028 7B68     	 ldr r3,[r7,#4]
 3137 002a 1A65     	 str r2,[r3,#80]
 3138 002c 05E0     	 b .L110
 3139              	.L111:
1298:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1299:../Libraries/XMCLib/src/xmc_ccu8.c ****   else
1300:../Libraries/XMCLib/src/xmc_ccu8.c ****   {
1301:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DC2R = (((uint32_t) fall_value) << CCU8_CC8_DC2R_DT2F_Pos) | ((uint32_t) rise_value);
 3140              	 .loc 2 1301 0
 3141 002e 7B78     	 ldrb r3,[r7,#1]
 3142 0030 1A02     	 lsls r2,r3,#8
 3143 0032 BB78     	 ldrb r3,[r7,#2]
 3144 0034 1A43     	 orrs r2,r2,r3
 3145 0036 7B68     	 ldr r3,[r7,#4]
 3146 0038 5A65     	 str r2,[r3,#84]
 3147              	.L110:
1302:../Libraries/XMCLib/src/xmc_ccu8.c ****   }
1303:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3148              	 .loc 2 1303 0
 3149 003a 0C37     	 adds r7,r7,#12
 3150              	.LCFI257:
 3151              	 .cfi_def_cfa_offset 4
 3152 003c BD46     	 mov sp,r7
 3153              	.LCFI258:
 3154              	 .cfi_def_cfa_register 13
 3155              	 
 3156 003e 5DF8047B 	 ldr r7,[sp],#4
 3157              	.LCFI259:
 3158              	 .cfi_restore 7
 3159              	 .cfi_def_cfa_offset 0
 3160 0042 7047     	 bx lr
 3161              	 .cfi_endproc
 3162              	.LFE250:
 3164              	 .section .text.XMC_CCU8_SLICE_SetDeadTimePrescaler,"ax",%progbits
 3165              	 .align 2
 3166              	 .global XMC_CCU8_SLICE_SetDeadTimePrescaler
 3167              	 .thumb
 3168              	 .thumb_func
 3170              	XMC_CCU8_SLICE_SetDeadTimePrescaler:
 3171              	.LFB251:
1304:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1305:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures clock division factor for dead time */
1306:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_SetDeadTimePrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_DTC_DI
1307:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3172              	 .loc 2 1307 0
 3173              	 .cfi_startproc
 3174              	 
 3175              	 
 3176              	 
 3177 0000 80B4     	 push {r7}
 3178              	.LCFI260:
 3179              	 .cfi_def_cfa_offset 4
 3180              	 .cfi_offset 7,-4
 3181 0002 83B0     	 sub sp,sp,#12
 3182              	.LCFI261:
 3183              	 .cfi_def_cfa_offset 16
 3184 0004 00AF     	 add r7,sp,#0
 3185              	.LCFI262:
 3186              	 .cfi_def_cfa_register 7
 3187 0006 7860     	 str r0,[r7,#4]
 3188 0008 0B46     	 mov r3,r1
 3189 000a FB70     	 strb r3,[r7,#3]
1308:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
1309:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDeadTimePrescaler:Invalid divider value", XMC_CCU8_SLICE_CHECK_DTC_
1310:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1311:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC &= ~((uint32_t) CCU8_CC8_DTC_DTCC_Msk);
 3190              	 .loc 2 1311 0
 3191 000c 7B68     	 ldr r3,[r7,#4]
 3192 000e DB6C     	 ldr r3,[r3,#76]
 3193 0010 23F0C002 	 bic r2,r3,#192
 3194 0014 7B68     	 ldr r3,[r7,#4]
 3195 0016 DA64     	 str r2,[r3,#76]
1312:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->DTC |= ((uint32_t) div_val) << CCU8_CC8_DTC_DTCC_Pos;
 3196              	 .loc 2 1312 0
 3197 0018 7B68     	 ldr r3,[r7,#4]
 3198 001a DA6C     	 ldr r2,[r3,#76]
 3199 001c FB78     	 ldrb r3,[r7,#3]
 3200 001e 9B01     	 lsls r3,r3,#6
 3201 0020 1A43     	 orrs r2,r2,r3
 3202 0022 7B68     	 ldr r3,[r7,#4]
 3203 0024 DA64     	 str r2,[r3,#76]
1313:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3204              	 .loc 2 1313 0
 3205 0026 0C37     	 adds r7,r7,#12
 3206              	.LCFI263:
 3207              	 .cfi_def_cfa_offset 4
 3208 0028 BD46     	 mov sp,r7
 3209              	.LCFI264:
 3210              	 .cfi_def_cfa_register 13
 3211              	 
 3212 002a 5DF8047B 	 ldr r7,[sp],#4
 3213              	.LCFI265:
 3214              	 .cfi_restore 7
 3215              	 .cfi_def_cfa_offset 0
 3216 002e 7047     	 bx lr
 3217              	 .cfi_endproc
 3218              	.LFE251:
 3220              	 .section .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput,"ax",%progbits
 3221              	 .align 2
 3222              	 .global XMC_CCU8_SLICE_ConfigureStatusBitOutput
 3223              	 .thumb
 3224              	 .thumb_func
 3226              	XMC_CCU8_SLICE_ConfigureStatusBitOutput:
 3227              	.LFB252:
1314:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1315:../Libraries/XMCLib/src/xmc_ccu8.c **** /* Configures status ST1, ST2 mapping to STy */
1316:../Libraries/XMCLib/src/xmc_ccu8.c **** void XMC_CCU8_SLICE_ConfigureStatusBitOutput(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_ST
1317:../Libraries/XMCLib/src/xmc_ccu8.c **** {
 3228              	 .loc 2 1317 0
 3229              	 .cfi_startproc
 3230              	 
 3231              	 
 3232              	 
 3233 0000 80B4     	 push {r7}
 3234              	.LCFI266:
 3235              	 .cfi_def_cfa_offset 4
 3236              	 .cfi_offset 7,-4
 3237 0002 83B0     	 sub sp,sp,#12
 3238              	.LCFI267:
 3239              	 .cfi_def_cfa_offset 16
 3240 0004 00AF     	 add r7,sp,#0
 3241              	.LCFI268:
 3242              	 .cfi_def_cfa_register 7
 3243 0006 7860     	 str r0,[r7,#4]
 3244 0008 0B46     	 mov r3,r1
 3245 000a FB70     	 strb r3,[r7,#3]
1318:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
1319:../Libraries/XMCLib/src/xmc_ccu8.c ****   XMC_ASSERT("XMC_CCU8_SLICE_ConfigureStatusBitOutput:Invalid Channel", XMC_CCU8_SLICE_CHECK_SLICE_
1320:../Libraries/XMCLib/src/xmc_ccu8.c **** 
1321:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_STOS_Msk);
 3246              	 .loc 2 1321 0
 3247 000c 7B68     	 ldr r3,[r7,#4]
 3248 000e 5B69     	 ldr r3,[r3,#20]
 3249 0010 23F0C042 	 bic r2,r3,#1610612736
 3250 0014 7B68     	 ldr r3,[r7,#4]
 3251 0016 5A61     	 str r2,[r3,#20]
1322:../Libraries/XMCLib/src/xmc_ccu8.c ****   slice->TC |= ((uint32_t) channel) << CCU8_CC8_TC_STOS_Pos;
 3252              	 .loc 2 1322 0
 3253 0018 7B68     	 ldr r3,[r7,#4]
 3254 001a 5A69     	 ldr r2,[r3,#20]
 3255 001c FB78     	 ldrb r3,[r7,#3]
 3256 001e 5B07     	 lsls r3,r3,#29
 3257 0020 1A43     	 orrs r2,r2,r3
 3258 0022 7B68     	 ldr r3,[r7,#4]
 3259 0024 5A61     	 str r2,[r3,#20]
1323:../Libraries/XMCLib/src/xmc_ccu8.c **** }
 3260              	 .loc 2 1323 0
 3261 0026 0C37     	 adds r7,r7,#12
 3262              	.LCFI269:
 3263              	 .cfi_def_cfa_offset 4
 3264 0028 BD46     	 mov sp,r7
 3265              	.LCFI270:
 3266              	 .cfi_def_cfa_register 13
 3267              	 
 3268 002a 5DF8047B 	 ldr r7,[sp],#4
 3269              	.LCFI271:
 3270              	 .cfi_restore 7
 3271              	 .cfi_def_cfa_offset 0
 3272 002e 7047     	 bx lr
 3273              	 .cfi_endproc
 3274              	.LFE252:
 3276              	 .text
 3277              	.Letext0:
 3278              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3279              	 .file 4 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3280              	 .file 5 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 3281              	 .file 6 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc4_scu.h"
 3282              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
 3283              	 .file 8 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/system_XMC4700.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_ccu8.c
    {standard input}:20     .text.XMC_CCU8_StartPrescaler:00000000 $t
    {standard input}:24     .text.XMC_CCU8_StartPrescaler:00000000 XMC_CCU8_StartPrescaler
    {standard input}:66     .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:70     .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:109    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 $t
    {standard input}:113    .text.XMC_CCU8_SLICE_SetDitherCompareValue:00000000 XMC_CCU8_SLICE_SetDitherCompareValue
    {standard input}:154    .text.XMC_CCU8_lAssertReset:00000000 $t
    {standard input}:158    .text.XMC_CCU8_lAssertReset:00000000 XMC_CCU8_lAssertReset
    {standard input}:212    .text.XMC_CCU8_lAssertReset:00000030 $d
    {standard input}:218    .text.XMC_CCU8_lDeassertReset:00000000 $t
    {standard input}:222    .text.XMC_CCU8_lDeassertReset:00000000 XMC_CCU8_lDeassertReset
    {standard input}:275    .text.XMC_CCU8_lDeassertReset:00000030 $d
    {standard input}:281    .text.XMC_CCU8_lGateClock:00000000 $t
    {standard input}:285    .text.XMC_CCU8_lGateClock:00000000 XMC_CCU8_lGateClock
    {standard input}:338    .text.XMC_CCU8_lGateClock:00000030 $d
    {standard input}:344    .text.XMC_CCU8_lUngateClock:00000000 $t
    {standard input}:348    .text.XMC_CCU8_lUngateClock:00000000 XMC_CCU8_lUngateClock
    {standard input}:401    .text.XMC_CCU8_lUngateClock:00000030 $d
    {standard input}:407    .text.XMC_CCU8_EnableModule:00000000 $t
    {standard input}:412    .text.XMC_CCU8_EnableModule:00000000 XMC_CCU8_EnableModule
    {standard input}:452    .text.XMC_CCU8_DisableModule:00000000 $t
    {standard input}:457    .text.XMC_CCU8_DisableModule:00000000 XMC_CCU8_DisableModule
    {standard input}:494    .text.XMC_CCU8_Init:00000000 $t
    {standard input}:499    .text.XMC_CCU8_Init:00000000 XMC_CCU8_Init
    {standard input}:556    .text.XMC_CCU8_SetModuleClock:00000000 $t
    {standard input}:561    .text.XMC_CCU8_SetModuleClock:00000000 XMC_CCU8_SetModuleClock
    {standard input}:616    .text.XMC_CCU8_SLICE_CompareInit:00000000 $t
    {standard input}:621    .text.XMC_CCU8_SLICE_CompareInit:00000000 XMC_CCU8_SLICE_CompareInit
    {standard input}:704    .text.XMC_CCU8_SLICE_CaptureInit:00000000 $t
    {standard input}:709    .text.XMC_CCU8_SLICE_CaptureInit:00000000 XMC_CCU8_SLICE_CaptureInit
    {standard input}:773    .text.XMC_CCU8_SLICE_SetOutPath:00000000 $t
    {standard input}:778    .text.XMC_CCU8_SLICE_SetOutPath:00000000 XMC_CCU8_SLICE_SetOutPath
    {standard input}:835    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 $t
    {standard input}:840    .text.XMC_CCU8_SetMultiChannelShadowTransferMode:00000000 XMC_CCU8_SetMultiChannelShadowTransferMode
    {standard input}:897    .text.XMC_CCU8_SLICE_StartConfig:00000000 $t
    {standard input}:902    .text.XMC_CCU8_SLICE_StartConfig:00000000 XMC_CCU8_SLICE_StartConfig
    {standard input}:981    .text.XMC_CCU8_SLICE_StopConfig:00000000 $t
    {standard input}:986    .text.XMC_CCU8_SLICE_StopConfig:00000000 XMC_CCU8_SLICE_StopConfig
    {standard input}:1061   .text.XMC_CCU8_SLICE_LoadConfig:00000000 $t
    {standard input}:1066   .text.XMC_CCU8_SLICE_LoadConfig:00000000 XMC_CCU8_SLICE_LoadConfig
    {standard input}:1121   .text.XMC_CCU8_SLICE_LoadSelector:00000000 $t
    {standard input}:1126   .text.XMC_CCU8_SLICE_LoadSelector:00000000 XMC_CCU8_SLICE_LoadSelector
    {standard input}:1181   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 $t
    {standard input}:1186   .text.XMC_CCU8_SLICE_ModulationConfig:00000000 XMC_CCU8_SLICE_ModulationConfig
    {standard input}:1296   .text.XMC_CCU8_SLICE_CountConfig:00000000 $t
    {standard input}:1301   .text.XMC_CCU8_SLICE_CountConfig:00000000 XMC_CCU8_SLICE_CountConfig
    {standard input}:1356   .text.XMC_CCU8_SLICE_GateConfig:00000000 $t
    {standard input}:1361   .text.XMC_CCU8_SLICE_GateConfig:00000000 XMC_CCU8_SLICE_GateConfig
    {standard input}:1416   .text.XMC_CCU8_SLICE_Capture0Config:00000000 $t
    {standard input}:1421   .text.XMC_CCU8_SLICE_Capture0Config:00000000 XMC_CCU8_SLICE_Capture0Config
    {standard input}:1476   .text.XMC_CCU8_SLICE_Capture1Config:00000000 $t
    {standard input}:1481   .text.XMC_CCU8_SLICE_Capture1Config:00000000 XMC_CCU8_SLICE_Capture1Config
    {standard input}:1536   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 $t
    {standard input}:1541   .text.XMC_CCU8_SLICE_DirectionConfig:00000000 XMC_CCU8_SLICE_DirectionConfig
    {standard input}:1596   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 $t
    {standard input}:1601   .text.XMC_CCU8_SLICE_StatusBitOverrideConfig:00000000 XMC_CCU8_SLICE_StatusBitOverrideConfig
    {standard input}:1652   .text.XMC_CCU8_SLICE_TrapConfig:00000000 $t
    {standard input}:1657   .text.XMC_CCU8_SLICE_TrapConfig:00000000 XMC_CCU8_SLICE_TrapConfig
    {standard input}:1750   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 $t
    {standard input}:1755   .text.XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
    {standard input}:1888   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 $t
    {standard input}:1893   .text.XMC_CCU8_SLICE_ConfigureEvent:00000000 XMC_CCU8_SLICE_ConfigureEvent
    {standard input}:2031   .text.XMC_CCU8_SLICE_SetInput:00000000 $t
    {standard input}:2036   .text.XMC_CCU8_SLICE_SetInput:00000000 XMC_CCU8_SLICE_SetInput
    {standard input}:2106   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 $t
    {standard input}:2111   .text.XMC_CCU8_SLICE_SetTimerRepeatMode:00000000 XMC_CCU8_SLICE_SetTimerRepeatMode
    {standard input}:2171   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 $t
    {standard input}:2176   .text.XMC_CCU8_SLICE_SetTimerCountingMode:00000000 XMC_CCU8_SLICE_SetTimerCountingMode
    {standard input}:2236   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 $t
    {standard input}:2241   .text.XMC_CCU8_SLICE_SetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_SetTimerPeriodMatch
    {standard input}:2282   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 $t
    {standard input}:2287   .text.XMC_CCU8_SLICE_GetCaptureRegisterValue:00000000 XMC_CCU8_SLICE_GetCaptureRegisterValue
    {standard input}:2332   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 $t
    {standard input}:2337   .text.XMC_CCU8_SLICE_GetLastCapturedTimerValue:00000000 XMC_CCU8_SLICE_GetLastCapturedTimerValue
    {standard input}:2455   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 $t
    {standard input}:2460   .text.XMC_CCU8_SLICE_GetCapturedValueFromFifo:00000000 XMC_CCU8_SLICE_GetCapturedValueFromFifo
    {standard input}:2515   .text.XMC_CCU8_SLICE_EnableDithering:00000000 $t
    {standard input}:2520   .text.XMC_CCU8_SLICE_EnableDithering:00000000 XMC_CCU8_SLICE_EnableDithering
    {standard input}:2595   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 $t
    {standard input}:2600   .text.XMC_CCU8_SLICE_SetPrescaler:00000000 XMC_CCU8_SLICE_SetPrescaler
    {standard input}:2659   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 $t
    {standard input}:2664   .text.XMC_CCU8_SLICE_SetTimerCompareMatch:00000000 XMC_CCU8_SLICE_SetTimerCompareMatch
    {standard input}:2718   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 $t
    {standard input}:2723   .text.XMC_CCU8_SLICE_GetTimerCompareMatch:00000000 XMC_CCU8_SLICE_GetTimerCompareMatch
    {standard input}:2778   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 $t
    {standard input}:2783   .text.XMC_CCU8_SLICE_SetInterruptNode:00000000 XMC_CCU8_SLICE_SetInterruptNode
    {standard input}:2817   .text.XMC_CCU8_SLICE_SetInterruptNode:00000024 $d
    {standard input}:2827   .text.XMC_CCU8_SLICE_SetInterruptNode:0000004c $t
    {standard input}:2917   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 $t
    {standard input}:2922   .text.XMC_CCU8_SLICE_SetPassiveLevel:00000000 XMC_CCU8_SLICE_SetPassiveLevel
    {standard input}:2984   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 $t
    {standard input}:2989   .text.XMC_CCU8_SLICE_DeadTimeInit:00000000 XMC_CCU8_SLICE_DeadTimeInit
    {standard input}:3040   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 $t
    {standard input}:3045   .text.XMC_CCU8_SLICE_ConfigureDeadTime:00000000 XMC_CCU8_SLICE_ConfigureDeadTime
    {standard input}:3095   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 $t
    {standard input}:3100   .text.XMC_CCU8_SLICE_SetDeadTimeValue:00000000 XMC_CCU8_SLICE_SetDeadTimeValue
    {standard input}:3165   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 $t
    {standard input}:3170   .text.XMC_CCU8_SLICE_SetDeadTimePrescaler:00000000 XMC_CCU8_SLICE_SetDeadTimePrescaler
    {standard input}:3221   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 $t
    {standard input}:3226   .text.XMC_CCU8_SLICE_ConfigureStatusBitOutput:00000000 XMC_CCU8_SLICE_ConfigureStatusBitOutput
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GatePeripheralClock
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_EnableClock
