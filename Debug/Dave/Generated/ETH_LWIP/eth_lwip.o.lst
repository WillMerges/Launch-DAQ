   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "eth_lwip.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.ETH_LWIP_GetAppVersion,"ax",%progbits
  20              	 .align 2
  21              	 .global ETH_LWIP_GetAppVersion
  22              	 .thumb
  23              	 .thumb_func
  25              	ETH_LWIP_GetAppVersion:
  26              	.LFB182:
  27              	 .file 1 "../Dave/Generated/ETH_LWIP/eth_lwip.c"
   1:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**
   2:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @file eth_lwip.c
   3:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @date 2016-01-14
   4:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
   5:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * NOTE:
   6:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
   8:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @cond
   9:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  10:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * ETH_LWIP v4.0.10 - Initializes LWIP stack.
  11:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  12:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * Copyright (c) 2015-2016, Infineon Technologies AG
  13:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * All rights reserved.
  14:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  15:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * following conditions are met:
  17:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  18:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   disclaimer.
  20:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  21:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  24:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  27:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  35:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  38:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  39:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * Change History
  40:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * --------------
  41:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  42:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * 2016-01-14:
  43:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *     - Initial version for DAVEv4
  44:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  45:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @endcond
  46:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  47:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  */
  48:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  49:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**************************************************************************************************
  50:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * HEADER FILES
  51:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  52:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #include "eth_lwip.h"
  53:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  54:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #include "lwip/include/lwip/netif.h"
  55:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #include "lwip/port/netif/ethernetif.h"
  56:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #include "lwip/include/netif/etharp.h"
  57:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  58:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /*Extern declaration for objects defined in ethernetif.c*/
  59:../Dave/Generated/ETH_LWIP/eth_lwip.c **** extern XMC_ETH_MAC_t eth_mac;
  60:../Dave/Generated/ETH_LWIP/eth_lwip.c **** extern struct netif xnetif;
  61:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**************************************************************************************************
  62:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * MACROS
  63:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  64:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  65:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**************************************************************************************************
  66:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * LOCAL DATA
  67:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  68:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  69:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**************************************************************************************************
  70:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * LOCAL ROUTINES
  71:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  72:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if NO_SYS == 0
  73:../Dave/Generated/ETH_LWIP/eth_lwip.c **** static void lwip_linit(void const *arg);
  74:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #endif
  75:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /**************************************************************************************************
  76:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * API IMPLEMENTATION
  77:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  **************************************************************************************************
  78:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /*
  79:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @brief API to retrieve the version of the ETH_LWIP APP.
  80:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  81:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @return DAVE_APP_VERSION_t Structure containing major version, minor version
  82:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *         and patch version.
  83:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  */
  84:../Dave/Generated/ETH_LWIP/eth_lwip.c **** DAVE_APP_VERSION_t ETH_LWIP_GetAppVersion(void)
  85:../Dave/Generated/ETH_LWIP/eth_lwip.c **** {
  28              	 .loc 1 85 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  86:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   DAVE_APP_VERSION_t version;
  87:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  88:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   version.major = ETH_LWIP_MAJOR_VERSION;
  43              	 .loc 1 88 0
  44 0006 0423     	 movs r3,#4
  45 0008 3B70     	 strb r3,[r7]
  89:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   version.minor = ETH_LWIP_MINOR_VERSION;
  46              	 .loc 1 89 0
  47 000a 0023     	 movs r3,#0
  48 000c 7B70     	 strb r3,[r7,#1]
  90:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   version.patch = ETH_LWIP_PATCH_VERSION;
  49              	 .loc 1 90 0
  50 000e 0A23     	 movs r3,#10
  51 0010 BB70     	 strb r3,[r7,#2]
  91:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  92:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   return version;
  52              	 .loc 1 92 0
  53 0012 3B1D     	 adds r3,r7,#4
  54 0014 3A46     	 mov r2,r7
  55 0016 1268     	 ldr r2,[r2]
  56 0018 1146     	 mov r1,r2
  57 001a 1980     	 strh r1,[r3]
  58 001c 0233     	 adds r3,r3,#2
  59 001e 120C     	 lsrs r2,r2,#16
  60 0020 1A70     	 strb r2,[r3]
  61 0022 0023     	 movs r3,#0
  62 0024 3A79     	 ldrb r2,[r7,#4]
  63 0026 62F30703 	 bfi r3,r2,#0,#8
  64 002a 7A79     	 ldrb r2,[r7,#5]
  65 002c 62F30F23 	 bfi r3,r2,#8,#8
  66 0030 BA79     	 ldrb r2,[r7,#6]
  67 0032 62F31743 	 bfi r3,r2,#16,#8
  93:../Dave/Generated/ETH_LWIP/eth_lwip.c **** }
  68              	 .loc 1 93 0
  69 0036 1846     	 mov r0,r3
  70 0038 0C37     	 adds r7,r7,#12
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 4
  73 003a BD46     	 mov sp,r7
  74              	.LCFI4:
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 003c 5DF8047B 	 ldr r7,[sp],#4
  78              	.LCFI5:
  79              	 .cfi_restore 7
  80              	 .cfi_def_cfa_offset 0
  81 0040 7047     	 bx lr
  82              	 .cfi_endproc
  83              	.LFE182:
  85 0042 00BF     	 .section .text.ETH_LWIP_Init,"ax",%progbits
  86              	 .align 2
  87              	 .global ETH_LWIP_Init
  88              	 .thumb
  89              	 .thumb_func
  91              	ETH_LWIP_Init:
  92              	.LFB183:
  94:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  95:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
  96:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /*
  97:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @brief API to initialize the LWIP software stack.
  98:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
  99:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @param[in]  handle ETH_LWIP APP handle pointer of type ETH_LWIP_t*
 100:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
 101:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  * @return  ETH_LWIP_STATUS_t
 102:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *          ETH_LWIP_SUCCESS: for successful LWIP initialization.<BR>
 103:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *          ETH_LWIP_STATUS_FAILURE  : If LWIP initialization fails.<BR>
 104:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  *
 105:../Dave/Generated/ETH_LWIP/eth_lwip.c ****  */
 106:../Dave/Generated/ETH_LWIP/eth_lwip.c **** /*If RTOS is used*/
 107:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if NO_SYS == 0
 108:../Dave/Generated/ETH_LWIP/eth_lwip.c **** ETH_LWIP_STATUS_t ETH_LWIP_Init(ETH_LWIP_t* handle)
 109:../Dave/Generated/ETH_LWIP/eth_lwip.c **** {
 110:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   ETH_LWIP_STATUS_t status = ETH_LWIP_STATUS_SUCCESS;
 111:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 112:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   osThreadId threadId;
 113:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   osThreadDef(lwip_linit, ETH_LWIP_INIT_THREAD_PRIORITY, 1, ETH_LWIP_INIT_THREAD_STACK_SIZE);
 114:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   if (handle->initialized == false)
 115:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   {
 116:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /*Initialize RTOS APP*/
 117:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     status = CMSIS_RTOS_Init(&ETH_RTOS_NAME);
 118:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 119:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     threadId = osThreadCreate(osThread(lwip_linit), NULL);
 120:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   
 121:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     if (threadId == NULL)
 122:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     {
 123:../Dave/Generated/ETH_LWIP/eth_lwip.c ****       status = ETH_LWIP_STATUS_FAILURE;
 124:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     }
 125:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     else
 126:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     {
 127:../Dave/Generated/ETH_LWIP/eth_lwip.c ****       status = ETH_LWIP_STATUS_SUCCESS;
 128:../Dave/Generated/ETH_LWIP/eth_lwip.c ****       handle->initialized = true;
 129:../Dave/Generated/ETH_LWIP/eth_lwip.c ****       handle->eth_mac = &eth_mac;
 130:../Dave/Generated/ETH_LWIP/eth_lwip.c ****       handle->xnetif = &xnetif;
 131:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     }
 132:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   }
 133:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   return status;
 134:../Dave/Generated/ETH_LWIP/eth_lwip.c **** }
 135:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #else
 136:../Dave/Generated/ETH_LWIP/eth_lwip.c **** ETH_LWIP_STATUS_t ETH_LWIP_Init(ETH_LWIP_t* handle)
 137:../Dave/Generated/ETH_LWIP/eth_lwip.c **** {
  93              	 .loc 1 137 0
  94              	 .cfi_startproc
  95              	 
  96              	 
  97 0000 90B5     	 push {r4,r7,lr}
  98              	.LCFI6:
  99              	 .cfi_def_cfa_offset 12
 100              	 .cfi_offset 4,-12
 101              	 .cfi_offset 7,-8
 102              	 .cfi_offset 14,-4
 103 0002 8BB0     	 sub sp,sp,#44
 104              	.LCFI7:
 105              	 .cfi_def_cfa_offset 56
 106 0004 04AF     	 add r7,sp,#16
 107              	.LCFI8:
 108              	 .cfi_def_cfa 7,40
 109 0006 7860     	 str r0,[r7,#4]
 138:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   ETH_LWIP_STATUS_t status = ETH_LWIP_STATUS_SUCCESS;
 110              	 .loc 1 138 0
 111 0008 0023     	 movs r3,#0
 112 000a FB75     	 strb r3,[r7,#23]
 139:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 140:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   struct ip_addr ipaddr;
 141:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   struct ip_addr netmask;
 142:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   struct ip_addr gw;
 143:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 144:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   if (handle->initialized == false)
 113              	 .loc 1 144 0
 114 000c 7B68     	 ldr r3,[r7,#4]
 115 000e 1B7A     	 ldrb r3,[r3,#8]
 116 0010 83F00103 	 eor r3,r3,#1
 117 0014 DBB2     	 uxtb r3,r3
 118 0016 002B     	 cmp r3,#0
 119 0018 32D0     	 beq .L4
 145:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   {
 146:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* IP address setting */
 147:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if ((LWIP_DHCP == 1) || (LWIP_AUTOIP == 1))
 148:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     ipaddr.addr = 0;
 149:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     netmask.addr = 0;
 150:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     gw.addr = 0;
 151:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #else
 152:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     IP4_ADDR(&ipaddr, IP_ADDR0, IP_ADDR1, IP_ADDR2, IP_ADDR3);
 120              	 .loc 1 152 0
 121 001a 1C4B     	 ldr r3,.L6
 122 001c 3B61     	 str r3,[r7,#16]
 153:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     IP4_ADDR(&netmask, NETMASK_ADDR0, NETMASK_ADDR1 , NETMASK_ADDR2, NETMASK_ADDR3);
 123              	 .loc 1 153 0
 124 001e 6FF07F43 	 mvn r3,#-16777216
 125 0022 FB60     	 str r3,[r7,#12]
 154:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     IP4_ADDR(&gw, GW_ADDR0, GW_ADDR1, GW_ADDR2, GW_ADDR3);
 126              	 .loc 1 154 0
 127 0024 1A4B     	 ldr r3,.L6+4
 128 0026 BB60     	 str r3,[r7,#8]
 155:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #endif
 156:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /*Initialize SYSTIMER APP*/
 157:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     status = (ETH_LWIP_STATUS_t)SYSTIMER_Init(&ETH_SYSTIMER_NAME);
 129              	 .loc 1 157 0
 130 0028 1A48     	 ldr r0,.L6+8
 131 002a FFF7FEFF 	 bl SYSTIMER_Init
 132 002e 0346     	 mov r3,r0
 133 0030 FB75     	 strb r3,[r7,#23]
 158:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 159:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     lwip_init();
 134              	 .loc 1 159 0
 135 0032 FFF7FEFF 	 bl lwip_init
 160:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 161:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* Adds network interface to the netif_list */
 162:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     (void)netif_add(&xnetif, &ipaddr, &netmask, &gw, NULL, &ethernetif_init, &ethernet_input);
 136              	 .loc 1 162 0
 137 0036 07F11001 	 add r1,r7,#16
 138 003a 07F10C02 	 add r2,r7,#12
 139 003e 07F10804 	 add r4,r7,#8
 140 0042 0023     	 movs r3,#0
 141 0044 0093     	 str r3,[sp]
 142 0046 144B     	 ldr r3,.L6+12
 143 0048 0193     	 str r3,[sp,#4]
 144 004a 144B     	 ldr r3,.L6+16
 145 004c 0293     	 str r3,[sp,#8]
 146 004e 1448     	 ldr r0,.L6+20
 147 0050 2346     	 mov r3,r4
 148 0052 FFF7FEFF 	 bl netif_add
 163:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 164:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /*  Registers the default network interface.*/
 165:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     netif_set_default(&xnetif);
 149              	 .loc 1 165 0
 150 0056 1248     	 ldr r0,.L6+20
 151 0058 FFF7FEFF 	 bl netif_set_default
 166:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 167:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* If callback enabled */
 168:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if LWIP_NETIF_STATUS_CALLBACK == 1
 169:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* Initialize interface status change callback */
 170:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     netif_set_status_callback(&xnetif, ETH_NETIF_STATUS_CB_FUNCTION);
 171:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #endif
 172:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 173:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* device capabilities */
 174:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     xnetif.flags |= NETIF_FLAG_ETHARP;
 152              	 .loc 1 174 0
 153 005c 104B     	 ldr r3,.L6+20
 154 005e 93F82D30 	 ldrb r3,[r3,#45]
 155 0062 43F02003 	 orr r3,r3,#32
 156 0066 DAB2     	 uxtb r2,r3
 157 0068 0D4B     	 ldr r3,.L6+20
 158 006a 83F82D20 	 strb r2,[r3,#45]
 175:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 176:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if ETH_BROADCAST_EN == 1
 177:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     xnetif.flags |= NETIF_FLAG_BROADCAST;
 178:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #endif
 179:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 180:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #if LWIP_DHCP == 1
 181:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     /* Enable DHCP flag if DHCP is configured*/
 182:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     xnetif.flags |= NETIF_FLAG_DHCP;
 183:../Dave/Generated/ETH_LWIP/eth_lwip.c **** #endif
 184:../Dave/Generated/ETH_LWIP/eth_lwip.c **** 
 185:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     handle->initialized = true;
 159              	 .loc 1 185 0
 160 006e 7B68     	 ldr r3,[r7,#4]
 161 0070 0122     	 movs r2,#1
 162 0072 1A72     	 strb r2,[r3,#8]
 186:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     handle->eth_mac = &eth_mac;
 163              	 .loc 1 186 0
 164 0074 7B68     	 ldr r3,[r7,#4]
 165 0076 0B4A     	 ldr r2,.L6+24
 166 0078 1A60     	 str r2,[r3]
 187:../Dave/Generated/ETH_LWIP/eth_lwip.c ****     handle->xnetif = &xnetif;
 167              	 .loc 1 187 0
 168 007a 7B68     	 ldr r3,[r7,#4]
 169 007c 084A     	 ldr r2,.L6+20
 170 007e 5A60     	 str r2,[r3,#4]
 171              	.L4:
 188:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   }
 189:../Dave/Generated/ETH_LWIP/eth_lwip.c ****   return status;
 172              	 .loc 1 189 0
 173 0080 FB7D     	 ldrb r3,[r7,#23]
 190:../Dave/Generated/ETH_LWIP/eth_lwip.c **** }
 174              	 .loc 1 190 0
 175 0082 1846     	 mov r0,r3
 176 0084 1C37     	 adds r7,r7,#28
 177              	.LCFI9:
 178              	 .cfi_def_cfa_offset 12
 179 0086 BD46     	 mov sp,r7
 180              	.LCFI10:
 181              	 .cfi_def_cfa_register 13
 182              	 
 183 0088 90BD     	 pop {r4,r7,pc}
 184              	.L7:
 185 008a 00BF     	 .align 2
 186              	.L6:
 187 008c 0A0A0A19 	 .word 420088330
 188 0090 0A0A0A4B 	 .word 1258949130
 189 0094 00000000 	 .word SYSTIMER_0
 190 0098 00000000 	 .word ethernetif_init
 191 009c 00000000 	 .word ethernet_input
 192 00a0 00000000 	 .word xnetif
 193 00a4 00000000 	 .word eth_mac
 194              	 .cfi_endproc
 195              	.LFE183:
 197              	 .text
 198              	.Letext0:
 199              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 200              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 201              	 .file 4 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 202              	 .file 5 "../Dave/Generated/ETH_LWIP/lwip/include/lwip/../../port/include/arch/cc.h"
 203              	 .file 6 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Dave/Generated/DAVE_Common.h"
 204              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Dave/Generated/SYSTIMER/systimer.h"
 205              	 .file 8 "../Dave/Generated/ETH_LWIP/lwip/include/lwip/err.h"
 206              	 .file 9 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_eth_mac.h"
 207              	 .file 10 "../Dave/Generated/ETH_LWIP/lwip/include/lwip/pbuf.h"
 208              	 .file 11 "../Dave/Generated/ETH_LWIP/lwip/include/lwip/../ipv4/lwip/ip_addr.h"
 209              	 .file 12 "../Dave/Generated/ETH_LWIP/lwip/include/lwip/netif.h"
 210              	 .file 13 "../Dave/Generated/ETH_LWIP/eth_lwip.h"
 211              	 .file 14 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
 212              	 .file 15 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Dave/Generated/SYSTIMER/systimer_extern.h"
DEFINED SYMBOLS
                            *ABS*:00000000 eth_lwip.c
    {standard input}:20     .text.ETH_LWIP_GetAppVersion:00000000 $t
    {standard input}:25     .text.ETH_LWIP_GetAppVersion:00000000 ETH_LWIP_GetAppVersion
    {standard input}:86     .text.ETH_LWIP_Init:00000000 $t
    {standard input}:91     .text.ETH_LWIP_Init:00000000 ETH_LWIP_Init
    {standard input}:187    .text.ETH_LWIP_Init:0000008c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_Init
lwip_init
netif_add
netif_set_default
SYSTIMER_0
ethernetif_init
ethernet_input
xnetif
eth_mac
