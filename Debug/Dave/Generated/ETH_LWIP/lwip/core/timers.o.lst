   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "timers.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.next_timeout,"aw",%nobits
  20              	 .align 2
  23              	next_timeout:
  24 0000 00000000 	 .space 4
  25              	 .section .bss.timeouts_last_time,"aw",%nobits
  26              	 .align 1
  29              	timeouts_last_time:
  30 0000 0000     	 .space 2
  31              	 .section .text.arp_timer,"ax",%progbits
  32              	 .align 2
  33              	 .thumb
  34              	 .thumb_func
  36              	arp_timer:
  37              	.LFB128:
  38              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/timers.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Stack-internal timers implementation.
   4:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * This file includes timer callbacks for stack-internal timers as well as
   5:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * functions to set up or stop timers and check for expired timers.
   6:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
   7:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
   8:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
   9:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /*
  10:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  11:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * All rights reserved.
  12:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  13:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Redistribution and use in source and binary forms, with or without modification,
  14:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * are permitted provided that the following conditions are met:
  15:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  16:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  17:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *    this list of conditions and the following disclaimer.
  18:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  19:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *    this list of conditions and the following disclaimer in the documentation
  20:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *    and/or other materials provided with the distribution.
  21:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * 3. The name of the author may not be used to endorse or promote products
  22:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *    derived from this software without specific prior written permission.
  23:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  24:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
  25:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  26:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
  27:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
  28:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
  29:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  30:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  31:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
  32:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
  33:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * OF SUCH DAMAGE.
  34:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  35:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * This file is part of the lwIP TCP/IP stack.
  36:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  37:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Author: Adam Dunkels <adam@sics.se>
  38:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *         Simon Goldschmidt
  39:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  40:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
  41:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  42:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/opt.h"
  43:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  44:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/timers.h"
  45:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/tcp_impl.h"
  46:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  47:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_TIMERS
  48:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  49:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/def.h"
  50:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/memp.h"
  51:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/tcpip.h"
  52:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  53:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/ipv4/lwip/ip_frag.h"
  54:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/netif/etharp.h"
  55:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/dhcp.h"
  56:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/ipv4/lwip/autoip.h"
  57:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/ipv4/lwip/igmp.h"
  58:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/dns.h"
  59:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/sys.h"
  60:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #include "../include/lwip/pbuf.h"
  61:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  62:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  63:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /** The one and only timeout list */
  64:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static struct sys_timeo *next_timeout;
  65:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if NO_SYS
  66:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static u16_t timeouts_last_time;
  67:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* NO_SYS */
  68:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  69:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_TCP
  70:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /** global variable that shows if the tcp timer is currently scheduled or not */
  71:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static int tcpip_tcp_timer_active;
  72:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  73:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
  74:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls tcp_tmr() and reschedules itself.
  75:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
  76:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
  77:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
  78:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
  79:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** tcpip_tcp_timer(void *arg)
  80:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
  81:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
  82:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  83:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   /* call TCP timer handler */
  84:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   tcp_tmr();
  85:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   /* timer still needed? */
  86:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (tcp_active_pcbs || tcp_tw_pcbs) {
  87:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     /* restart timer */
  88:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
  89:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   } else {
  90:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     /* disable timer */
  91:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     tcpip_tcp_timer_active = 0;
  92:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
  93:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
  94:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
  95:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
  96:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Called from TCP_REG when registering a new PCB:
  97:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * the reason is to have the TCP timer only running when
  98:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * there are active (or time-wait) PCBs.
  99:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 100:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 101:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** tcp_timer_needed(void)
 102:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 103:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   /* timer is off but needed again? */
 104:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (!tcpip_tcp_timer_active && (tcp_active_pcbs || tcp_tw_pcbs)) {
 105:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     /* enable and start timer */
 106:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     tcpip_tcp_timer_active = 1;
 107:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     sys_timeout(TCP_TMR_INTERVAL, tcpip_tcp_timer, NULL);
 108:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 109:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 110:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_TCP */
 111:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 112:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if IP_REASSEMBLY
 113:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 114:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls ip_reass_tmr() and reschedules itself.
 115:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 116:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 117:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 118:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 119:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** ip_reass_timer(void *arg)
 120:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 121:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 122:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: ip_reass_tmr()\n"));
 123:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   ip_reass_tmr();
 124:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(IP_TMR_INTERVAL, ip_reass_timer, NULL);
 125:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 126:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* IP_REASSEMBLY */
 127:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 128:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_ARP
 129:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 130:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls etharp_tmr() and reschedules itself.
 131:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 132:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 133:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 134:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 135:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** arp_timer(void *arg)
 136:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
  39              	 .loc 1 136 0
  40              	 .cfi_startproc
  41              	 
  42              	 
  43 0000 80B5     	 push {r7,lr}
  44              	.LCFI0:
  45              	 .cfi_def_cfa_offset 8
  46              	 .cfi_offset 7,-8
  47              	 .cfi_offset 14,-4
  48 0002 82B0     	 sub sp,sp,#8
  49              	.LCFI1:
  50              	 .cfi_def_cfa_offset 16
  51 0004 00AF     	 add r7,sp,#0
  52              	.LCFI2:
  53              	 .cfi_def_cfa_register 7
  54 0006 7860     	 str r0,[r7,#4]
 137:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 138:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: etharp_tmr()\n"));
 139:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   etharp_tmr();
  55              	 .loc 1 139 0
  56 0008 FFF7FEFF 	 bl etharp_tmr
 140:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(ARP_TMR_INTERVAL, arp_timer, NULL);
  57              	 .loc 1 140 0
  58 000c 41F28830 	 movw r0,#5000
  59 0010 0349     	 ldr r1,.L2
  60 0012 0022     	 movs r2,#0
  61 0014 FFF7FEFF 	 bl sys_timeout
 141:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
  62              	 .loc 1 141 0
  63 0018 0837     	 adds r7,r7,#8
  64              	.LCFI3:
  65              	 .cfi_def_cfa_offset 8
  66 001a BD46     	 mov sp,r7
  67              	.LCFI4:
  68              	 .cfi_def_cfa_register 13
  69              	 
  70 001c 80BD     	 pop {r7,pc}
  71              	.L3:
  72 001e 00BF     	 .align 2
  73              	.L2:
  74 0020 00000000 	 .word arp_timer
  75              	 .cfi_endproc
  76              	.LFE128:
  78              	 .section .text.igmp_timer,"ax",%progbits
  79              	 .align 2
  80              	 .thumb
  81              	 .thumb_func
  83              	igmp_timer:
  84              	.LFB129:
 142:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_ARP */
 143:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 144:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DHCP
 145:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 146:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls dhcp_coarse_tmr() and reschedules itself.
 147:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 148:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 149:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 150:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 151:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** dhcp_timer_coarse(void *arg)
 152:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 153:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 154:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: dhcp_coarse_tmr()\n"));
 155:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   dhcp_coarse_tmr();
 156:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DHCP_COARSE_TIMER_MSECS, dhcp_timer_coarse, NULL);
 157:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 158:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 159:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 160:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls dhcp_fine_tmr() and reschedules itself.
 161:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 162:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 163:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 164:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 165:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** dhcp_timer_fine(void *arg)
 166:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 167:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 168:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: dhcp_fine_tmr()\n"));
 169:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   dhcp_fine_tmr();
 170:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DHCP_FINE_TIMER_MSECS, dhcp_timer_fine, NULL);
 171:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 172:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DHCP */
 173:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 174:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_AUTOIP
 175:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 176:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls autoip_tmr() and reschedules itself.
 177:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 178:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 179:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 180:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 181:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** autoip_timer(void *arg)
 182:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 183:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 184:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: autoip_tmr()\n"));
 185:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   autoip_tmr();
 186:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(AUTOIP_TMR_INTERVAL, autoip_timer, NULL);
 187:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 188:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_AUTOIP */
 189:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 190:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_IGMP
 191:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 192:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls igmp_tmr() and reschedules itself.
 193:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 194:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 195:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 196:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 197:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** igmp_timer(void *arg)
 198:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
  85              	 .loc 1 198 0
  86              	 .cfi_startproc
  87              	 
  88              	 
  89 0000 80B5     	 push {r7,lr}
  90              	.LCFI5:
  91              	 .cfi_def_cfa_offset 8
  92              	 .cfi_offset 7,-8
  93              	 .cfi_offset 14,-4
  94 0002 82B0     	 sub sp,sp,#8
  95              	.LCFI6:
  96              	 .cfi_def_cfa_offset 16
  97 0004 00AF     	 add r7,sp,#0
  98              	.LCFI7:
  99              	 .cfi_def_cfa_register 7
 100 0006 7860     	 str r0,[r7,#4]
 199:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 200:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: igmp_tmr()\n"));
 201:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   igmp_tmr();
 101              	 .loc 1 201 0
 102 0008 FFF7FEFF 	 bl igmp_tmr
 202:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(IGMP_TMR_INTERVAL, igmp_timer, NULL);
 103              	 .loc 1 202 0
 104 000c 6420     	 movs r0,#100
 105 000e 0349     	 ldr r1,.L5
 106 0010 0022     	 movs r2,#0
 107 0012 FFF7FEFF 	 bl sys_timeout
 203:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 108              	 .loc 1 203 0
 109 0016 0837     	 adds r7,r7,#8
 110              	.LCFI8:
 111              	 .cfi_def_cfa_offset 8
 112 0018 BD46     	 mov sp,r7
 113              	.LCFI9:
 114              	 .cfi_def_cfa_register 13
 115              	 
 116 001a 80BD     	 pop {r7,pc}
 117              	.L6:
 118              	 .align 2
 119              	.L5:
 120 001c 00000000 	 .word igmp_timer
 121              	 .cfi_endproc
 122              	.LFE129:
 124              	 .section .text.sys_timeouts_init,"ax",%progbits
 125              	 .align 2
 126              	 .global sys_timeouts_init
 127              	 .thumb
 128              	 .thumb_func
 130              	sys_timeouts_init:
 131              	.LFB130:
 204:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_IGMP */
 205:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 206:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DNS
 207:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 208:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Timer callback function that calls dns_tmr() and reschedules itself.
 209:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 210:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg unused argument
 211:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 212:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** static void
 213:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** dns_timer(void *arg)
 214:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 215:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_UNUSED_ARG(arg);
 216:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("tcpip: dns_tmr()\n"));
 217:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   dns_tmr();
 218:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DNS_TMR_INTERVAL, dns_timer, NULL);
 219:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 220:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DNS */
 221:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 222:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /** Initialize this module */
 223:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void sys_timeouts_init(void)
 224:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 132              	 .loc 1 224 0
 133              	 .cfi_startproc
 134              	 
 135              	 
 136 0000 80B5     	 push {r7,lr}
 137              	.LCFI10:
 138              	 .cfi_def_cfa_offset 8
 139              	 .cfi_offset 7,-8
 140              	 .cfi_offset 14,-4
 141 0002 00AF     	 add r7,sp,#0
 142              	.LCFI11:
 143              	 .cfi_def_cfa_register 7
 225:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if IP_REASSEMBLY
 226:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(IP_TMR_INTERVAL, ip_reass_timer, NULL);
 227:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* IP_REASSEMBLY */
 228:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_ARP
 229:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(ARP_TMR_INTERVAL, arp_timer, NULL);
 144              	 .loc 1 229 0
 145 0004 41F28830 	 movw r0,#5000
 146 0008 0749     	 ldr r1,.L8
 147 000a 0022     	 movs r2,#0
 148 000c FFF7FEFF 	 bl sys_timeout
 230:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_ARP */
 231:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DHCP
 232:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DHCP_COARSE_TIMER_MSECS, dhcp_timer_coarse, NULL);
 233:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DHCP_FINE_TIMER_MSECS, dhcp_timer_fine, NULL);
 234:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DHCP */
 235:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_AUTOIP
 236:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(AUTOIP_TMR_INTERVAL, autoip_timer, NULL);
 237:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_AUTOIP */
 238:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_IGMP
 239:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(IGMP_TMR_INTERVAL, igmp_timer, NULL);
 149              	 .loc 1 239 0
 150 0010 6420     	 movs r0,#100
 151 0012 0649     	 ldr r1,.L8+4
 152 0014 0022     	 movs r2,#0
 153 0016 FFF7FEFF 	 bl sys_timeout
 240:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_IGMP */
 241:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DNS
 242:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   sys_timeout(DNS_TMR_INTERVAL, dns_timer, NULL);
 243:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DNS */
 244:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 245:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if NO_SYS
 246:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   /* Initialise timestamp for sys_check_timeouts */
 247:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeouts_last_time = (u16_t)sys_now();
 154              	 .loc 1 247 0
 155 001a FFF7FEFF 	 bl sys_now
 156 001e 0346     	 mov r3,r0
 157 0020 9AB2     	 uxth r2,r3
 158 0022 034B     	 ldr r3,.L8+8
 159 0024 1A80     	 strh r2,[r3]
 248:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif
 249:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 160              	 .loc 1 249 0
 161 0026 80BD     	 pop {r7,pc}
 162              	.L9:
 163              	 .align 2
 164              	.L8:
 165 0028 00000000 	 .word arp_timer
 166 002c 00000000 	 .word igmp_timer
 167 0030 00000000 	 .word timeouts_last_time
 168              	 .cfi_endproc
 169              	.LFE130:
 171              	 .section .text.sys_timeout,"ax",%progbits
 172              	 .align 2
 173              	 .global sys_timeout
 174              	 .thumb
 175              	 .thumb_func
 177              	sys_timeout:
 178              	.LFB131:
 250:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 251:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 252:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Create a one-shot timer (aka timeout). Timeouts are processed in the
 253:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * following cases:
 254:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * - while waiting for a message using sys_timeouts_mbox_fetch()
 255:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * - by calling sys_check_timeouts() (NO_SYS==1 only)
 256:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 257:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param msecs time in milliseconds after that the timer should expire
 258:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param handler callback function to call when msecs have elapsed
 259:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg argument to pass to the callback function
 260:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 261:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DEBUG_TIMERNAMES
 262:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 263:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** sys_timeout_debug(u32_t msecs, sys_timeout_handler handler, void *arg, const char* handler_name)
 264:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #else /* LWIP_DEBUG_TIMERNAMES */
 265:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 266:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** sys_timeout(u32_t msecs, sys_timeout_handler handler, void *arg)
 267:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DEBUG_TIMERNAMES */
 268:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 179              	 .loc 1 268 0
 180              	 .cfi_startproc
 181              	 
 182              	 
 183 0000 80B5     	 push {r7,lr}
 184              	.LCFI12:
 185              	 .cfi_def_cfa_offset 8
 186              	 .cfi_offset 7,-8
 187              	 .cfi_offset 14,-4
 188 0002 86B0     	 sub sp,sp,#24
 189              	.LCFI13:
 190              	 .cfi_def_cfa_offset 32
 191 0004 00AF     	 add r7,sp,#0
 192              	.LCFI14:
 193              	 .cfi_def_cfa_register 7
 194 0006 F860     	 str r0,[r7,#12]
 195 0008 B960     	 str r1,[r7,#8]
 196 000a 7A60     	 str r2,[r7,#4]
 269:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   struct sys_timeo *timeout, *t;
 270:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 271:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout = (struct sys_timeo *)memp_malloc(MEMP_SYS_TIMEOUT);
 197              	 .loc 1 271 0
 198 000c 0320     	 movs r0,#3
 199 000e FFF7FEFF 	 bl memp_malloc
 200 0012 3861     	 str r0,[r7,#16]
 272:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (timeout == NULL) {
 201              	 .loc 1 272 0
 202 0014 3B69     	 ldr r3,[r7,#16]
 203 0016 002B     	 cmp r3,#0
 204 0018 00D1     	 bne .L11
 273:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     LWIP_ASSERT("sys_timeout: timeout != NULL, pool MEMP_SYS_TIMEOUT is empty", timeout != NULL);
 274:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     return;
 205              	 .loc 1 274 0
 206 001a 5AE0     	 b .L10
 207              	.L11:
 275:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 276:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout->next = NULL;
 208              	 .loc 1 276 0
 209 001c 3B69     	 ldr r3,[r7,#16]
 210 001e 0022     	 movs r2,#0
 211 0020 1A60     	 str r2,[r3]
 277:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout->h = handler;
 212              	 .loc 1 277 0
 213 0022 3B69     	 ldr r3,[r7,#16]
 214 0024 BA68     	 ldr r2,[r7,#8]
 215 0026 9A60     	 str r2,[r3,#8]
 278:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout->arg = arg;
 216              	 .loc 1 278 0
 217 0028 3B69     	 ldr r3,[r7,#16]
 218 002a 7A68     	 ldr r2,[r7,#4]
 219 002c DA60     	 str r2,[r3,#12]
 279:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout->time = msecs;
 220              	 .loc 1 279 0
 221 002e 3B69     	 ldr r3,[r7,#16]
 222 0030 FA68     	 ldr r2,[r7,#12]
 223 0032 5A60     	 str r2,[r3,#4]
 280:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DEBUG_TIMERNAMES
 281:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeout->handler_name = handler_name;
 282:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   LWIP_DEBUGF(TIMERS_DEBUG, ("sys_timeout: %p msecs=%"U32_F" handler=%s arg=%p\n",
 283:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     (void *)timeout, msecs, handler_name, (void *)arg));
 284:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DEBUG_TIMERNAMES */
 285:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 286:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (next_timeout == NULL) {
 224              	 .loc 1 286 0
 225 0034 284B     	 ldr r3,.L20
 226 0036 1B68     	 ldr r3,[r3]
 227 0038 002B     	 cmp r3,#0
 228 003a 03D1     	 bne .L13
 287:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     next_timeout = timeout;
 229              	 .loc 1 287 0
 230 003c 264A     	 ldr r2,.L20
 231 003e 3B69     	 ldr r3,[r7,#16]
 232 0040 1360     	 str r3,[r2]
 288:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     return;
 233              	 .loc 1 288 0
 234 0042 46E0     	 b .L10
 235              	.L13:
 289:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 290:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 291:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (next_timeout->time > msecs) {
 236              	 .loc 1 291 0
 237 0044 244B     	 ldr r3,.L20
 238 0046 1B68     	 ldr r3,[r3]
 239 0048 5A68     	 ldr r2,[r3,#4]
 240 004a FB68     	 ldr r3,[r7,#12]
 241 004c 9A42     	 cmp r2,r3
 242 004e 0FD9     	 bls .L14
 292:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     next_timeout->time -= msecs;
 243              	 .loc 1 292 0
 244 0050 214B     	 ldr r3,.L20
 245 0052 1B68     	 ldr r3,[r3]
 246 0054 204A     	 ldr r2,.L20
 247 0056 1268     	 ldr r2,[r2]
 248 0058 5168     	 ldr r1,[r2,#4]
 249 005a FA68     	 ldr r2,[r7,#12]
 250 005c 8A1A     	 subs r2,r1,r2
 251 005e 5A60     	 str r2,[r3,#4]
 293:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     timeout->next = next_timeout;
 252              	 .loc 1 293 0
 253 0060 1D4B     	 ldr r3,.L20
 254 0062 1A68     	 ldr r2,[r3]
 255 0064 3B69     	 ldr r3,[r7,#16]
 256 0066 1A60     	 str r2,[r3]
 294:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     next_timeout = timeout;
 257              	 .loc 1 294 0
 258 0068 1B4A     	 ldr r2,.L20
 259 006a 3B69     	 ldr r3,[r7,#16]
 260 006c 1360     	 str r3,[r2]
 261 006e 30E0     	 b .L10
 262              	.L14:
 295:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   } else {
 296:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     for(t = next_timeout; t != NULL; t = t->next) {
 263              	 .loc 1 296 0
 264 0070 194B     	 ldr r3,.L20
 265 0072 1B68     	 ldr r3,[r3]
 266 0074 7B61     	 str r3,[r7,#20]
 267 0076 29E0     	 b .L15
 268              	.L19:
 297:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       timeout->time -= t->time;
 269              	 .loc 1 297 0
 270 0078 3B69     	 ldr r3,[r7,#16]
 271 007a 5A68     	 ldr r2,[r3,#4]
 272 007c 7B69     	 ldr r3,[r7,#20]
 273 007e 5B68     	 ldr r3,[r3,#4]
 274 0080 D21A     	 subs r2,r2,r3
 275 0082 3B69     	 ldr r3,[r7,#16]
 276 0084 5A60     	 str r2,[r3,#4]
 298:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       if (t->next == NULL || t->next->time > timeout->time) {
 277              	 .loc 1 298 0
 278 0086 7B69     	 ldr r3,[r7,#20]
 279 0088 1B68     	 ldr r3,[r3]
 280 008a 002B     	 cmp r3,#0
 281 008c 06D0     	 beq .L16
 282              	 .loc 1 298 0 is_stmt 0 discriminator 1
 283 008e 7B69     	 ldr r3,[r7,#20]
 284 0090 1B68     	 ldr r3,[r3]
 285 0092 5A68     	 ldr r2,[r3,#4]
 286 0094 3B69     	 ldr r3,[r7,#16]
 287 0096 5B68     	 ldr r3,[r3,#4]
 288 0098 9A42     	 cmp r2,r3
 289 009a 14D9     	 bls .L17
 290              	.L16:
 299:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         if (t->next != NULL) {
 291              	 .loc 1 299 0 is_stmt 1
 292 009c 7B69     	 ldr r3,[r7,#20]
 293 009e 1B68     	 ldr r3,[r3]
 294 00a0 002B     	 cmp r3,#0
 295 00a2 08D0     	 beq .L18
 300:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****           t->next->time -= timeout->time;
 296              	 .loc 1 300 0
 297 00a4 7B69     	 ldr r3,[r7,#20]
 298 00a6 1B68     	 ldr r3,[r3]
 299 00a8 7A69     	 ldr r2,[r7,#20]
 300 00aa 1268     	 ldr r2,[r2]
 301 00ac 5168     	 ldr r1,[r2,#4]
 302 00ae 3A69     	 ldr r2,[r7,#16]
 303 00b0 5268     	 ldr r2,[r2,#4]
 304 00b2 8A1A     	 subs r2,r1,r2
 305 00b4 5A60     	 str r2,[r3,#4]
 306              	.L18:
 301:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         }
 302:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         timeout->next = t->next;
 307              	 .loc 1 302 0
 308 00b6 7B69     	 ldr r3,[r7,#20]
 309 00b8 1A68     	 ldr r2,[r3]
 310 00ba 3B69     	 ldr r3,[r7,#16]
 311 00bc 1A60     	 str r2,[r3]
 303:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         t->next = timeout;
 312              	 .loc 1 303 0
 313 00be 7B69     	 ldr r3,[r7,#20]
 314 00c0 3A69     	 ldr r2,[r7,#16]
 315 00c2 1A60     	 str r2,[r3]
 304:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         break;
 316              	 .loc 1 304 0
 317 00c4 05E0     	 b .L10
 318              	.L17:
 296:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       timeout->time -= t->time;
 319              	 .loc 1 296 0 discriminator 2
 320 00c6 7B69     	 ldr r3,[r7,#20]
 321 00c8 1B68     	 ldr r3,[r3]
 322 00ca 7B61     	 str r3,[r7,#20]
 323              	.L15:
 296:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       timeout->time -= t->time;
 324              	 .loc 1 296 0 is_stmt 0 discriminator 1
 325 00cc 7B69     	 ldr r3,[r7,#20]
 326 00ce 002B     	 cmp r3,#0
 327 00d0 D2D1     	 bne .L19
 328              	.L10:
 305:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       }
 306:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     }
 307:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 308:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 329              	 .loc 1 308 0 is_stmt 1
 330 00d2 1837     	 adds r7,r7,#24
 331              	.LCFI15:
 332              	 .cfi_def_cfa_offset 8
 333 00d4 BD46     	 mov sp,r7
 334              	.LCFI16:
 335              	 .cfi_def_cfa_register 13
 336              	 
 337 00d6 80BD     	 pop {r7,pc}
 338              	.L21:
 339              	 .align 2
 340              	.L20:
 341 00d8 00000000 	 .word next_timeout
 342              	 .cfi_endproc
 343              	.LFE131:
 345              	 .section .text.sys_untimeout,"ax",%progbits
 346              	 .align 2
 347              	 .global sys_untimeout
 348              	 .thumb
 349              	 .thumb_func
 351              	sys_untimeout:
 352              	.LFB132:
 309:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 310:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /**
 311:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Go through timeout list (for this task only) and remove the first matching
 312:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * entry, even though the timeout has not triggered yet.
 313:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 314:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @note This function only works as expected if there is only one timeout
 315:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * calling 'handler' in the list of timeouts.
 316:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 317:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param handler callback function that would be called by the timeout
 318:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * @param arg callback argument that would be passed to handler
 319:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** */
 320:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 321:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** sys_untimeout(sys_timeout_handler handler, void *arg)
 322:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 353              	 .loc 1 322 0
 354              	 .cfi_startproc
 355              	 
 356              	 
 357 0000 80B5     	 push {r7,lr}
 358              	.LCFI17:
 359              	 .cfi_def_cfa_offset 8
 360              	 .cfi_offset 7,-8
 361              	 .cfi_offset 14,-4
 362 0002 84B0     	 sub sp,sp,#16
 363              	.LCFI18:
 364              	 .cfi_def_cfa_offset 24
 365 0004 00AF     	 add r7,sp,#0
 366              	.LCFI19:
 367              	 .cfi_def_cfa_register 7
 368 0006 7860     	 str r0,[r7,#4]
 369 0008 3960     	 str r1,[r7]
 323:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   struct sys_timeo *prev_t, *t;
 324:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 325:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (next_timeout == NULL) {
 370              	 .loc 1 325 0
 371 000a 1F4B     	 ldr r3,.L31
 372 000c 1B68     	 ldr r3,[r3]
 373 000e 002B     	 cmp r3,#0
 374 0010 00D1     	 bne .L23
 326:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     return;
 375              	 .loc 1 326 0
 376 0012 36E0     	 b .L22
 377              	.L23:
 327:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 328:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 329:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   for (t = next_timeout, prev_t = NULL; t != NULL; prev_t = t, t = t->next) {
 378              	 .loc 1 329 0
 379 0014 1C4B     	 ldr r3,.L31
 380 0016 1B68     	 ldr r3,[r3]
 381 0018 BB60     	 str r3,[r7,#8]
 382 001a 0023     	 movs r3,#0
 383 001c FB60     	 str r3,[r7,#12]
 384 001e 2CE0     	 b .L25
 385              	.L30:
 330:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     if ((t->h == handler) && (t->arg == arg)) {
 386              	 .loc 1 330 0
 387 0020 BB68     	 ldr r3,[r7,#8]
 388 0022 9A68     	 ldr r2,[r3,#8]
 389 0024 7B68     	 ldr r3,[r7,#4]
 390 0026 9A42     	 cmp r2,r3
 391 0028 22D1     	 bne .L26
 392              	 .loc 1 330 0 is_stmt 0 discriminator 1
 393 002a BB68     	 ldr r3,[r7,#8]
 394 002c DA68     	 ldr r2,[r3,#12]
 395 002e 3B68     	 ldr r3,[r7]
 396 0030 9A42     	 cmp r2,r3
 397 0032 1DD1     	 bne .L26
 331:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       /* We have a match */
 332:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       /* Unlink from previous in list */
 333:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       if (prev_t == NULL) {
 398              	 .loc 1 333 0 is_stmt 1
 399 0034 FB68     	 ldr r3,[r7,#12]
 400 0036 002B     	 cmp r3,#0
 401 0038 04D1     	 bne .L27
 334:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         next_timeout = t->next;
 402              	 .loc 1 334 0
 403 003a BB68     	 ldr r3,[r7,#8]
 404 003c 1B68     	 ldr r3,[r3]
 405 003e 124A     	 ldr r2,.L31
 406 0040 1360     	 str r3,[r2]
 407 0042 03E0     	 b .L28
 408              	.L27:
 335:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       } else {
 336:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         prev_t->next = t->next;
 409              	 .loc 1 336 0
 410 0044 BB68     	 ldr r3,[r7,#8]
 411 0046 1A68     	 ldr r2,[r3]
 412 0048 FB68     	 ldr r3,[r7,#12]
 413 004a 1A60     	 str r2,[r3]
 414              	.L28:
 337:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       }
 338:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       /* If not the last one, add time of this one back to next */
 339:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       if (t->next != NULL) {
 415              	 .loc 1 339 0
 416 004c BB68     	 ldr r3,[r7,#8]
 417 004e 1B68     	 ldr r3,[r3]
 418 0050 002B     	 cmp r3,#0
 419 0052 08D0     	 beq .L29
 340:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         t->next->time += t->time;
 420              	 .loc 1 340 0
 421 0054 BB68     	 ldr r3,[r7,#8]
 422 0056 1B68     	 ldr r3,[r3]
 423 0058 BA68     	 ldr r2,[r7,#8]
 424 005a 1268     	 ldr r2,[r2]
 425 005c 5168     	 ldr r1,[r2,#4]
 426 005e BA68     	 ldr r2,[r7,#8]
 427 0060 5268     	 ldr r2,[r2,#4]
 428 0062 0A44     	 add r2,r2,r1
 429 0064 5A60     	 str r2,[r3,#4]
 430              	.L29:
 341:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       }
 342:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       memp_free(MEMP_SYS_TIMEOUT, t);
 431              	 .loc 1 342 0
 432 0066 0320     	 movs r0,#3
 433 0068 B968     	 ldr r1,[r7,#8]
 434 006a FFF7FEFF 	 bl memp_free
 343:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       return;
 435              	 .loc 1 343 0
 436 006e 08E0     	 b .L22
 437              	.L26:
 329:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     if ((t->h == handler) && (t->arg == arg)) {
 438              	 .loc 1 329 0 discriminator 2
 439 0070 BB68     	 ldr r3,[r7,#8]
 440 0072 FB60     	 str r3,[r7,#12]
 441 0074 BB68     	 ldr r3,[r7,#8]
 442 0076 1B68     	 ldr r3,[r3]
 443 0078 BB60     	 str r3,[r7,#8]
 444              	.L25:
 329:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     if ((t->h == handler) && (t->arg == arg)) {
 445              	 .loc 1 329 0 is_stmt 0 discriminator 1
 446 007a BB68     	 ldr r3,[r7,#8]
 447 007c 002B     	 cmp r3,#0
 448 007e CFD1     	 bne .L30
 344:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     }
 345:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 346:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   return;
 449              	 .loc 1 346 0 is_stmt 1 discriminator 2
 450 0080 00BF     	 nop
 451              	.L22:
 347:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 452              	 .loc 1 347 0
 453 0082 1037     	 adds r7,r7,#16
 454              	.LCFI20:
 455              	 .cfi_def_cfa_offset 8
 456 0084 BD46     	 mov sp,r7
 457              	.LCFI21:
 458              	 .cfi_def_cfa_register 13
 459              	 
 460 0086 80BD     	 pop {r7,pc}
 461              	.L32:
 462              	 .align 2
 463              	.L31:
 464 0088 00000000 	 .word next_timeout
 465              	 .cfi_endproc
 466              	.LFE132:
 468              	 .section .text.sys_check_timeouts,"ax",%progbits
 469              	 .align 2
 470              	 .global sys_check_timeouts
 471              	 .thumb
 472              	 .thumb_func
 474              	sys_check_timeouts:
 475              	.LFB133:
 348:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 349:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if NO_SYS
 350:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 351:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /** Handle timeouts for NO_SYS==1 (i.e. without using
 352:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * tcpip_thread/sys_timeouts_mbox_fetch(). Uses sys_now() to call timeout
 353:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * handler functions when timeouts expire.
 354:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  *
 355:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * Must be called periodically from your main loop.
 356:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 357:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 358:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** sys_check_timeouts(void)
 359:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 476              	 .loc 1 359 0
 477              	 .cfi_startproc
 478              	 
 479              	 
 480 0000 80B5     	 push {r7,lr}
 481              	.LCFI22:
 482              	 .cfi_def_cfa_offset 8
 483              	 .cfi_offset 7,-8
 484              	 .cfi_offset 14,-4
 485 0002 86B0     	 sub sp,sp,#24
 486              	.LCFI23:
 487              	 .cfi_def_cfa_offset 32
 488 0004 00AF     	 add r7,sp,#0
 489              	.LCFI24:
 490              	 .cfi_def_cfa_register 7
 360:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   if (next_timeout) {
 491              	 .loc 1 360 0
 492 0006 1F4B     	 ldr r3,.L37
 493 0008 1B68     	 ldr r3,[r3]
 494 000a 002B     	 cmp r3,#0
 495 000c 37D0     	 beq .L33
 496              	.LBB2:
 361:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     struct sys_timeo *tmptimeout;
 362:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     u16_t diff;
 363:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     sys_timeout_handler handler;
 364:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     void *arg;
 365:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     u8_t had_one;
 366:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     u16_t now;
 367:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 368:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     now = (u16_t)sys_now();
 497              	 .loc 1 368 0
 498 000e FFF7FEFF 	 bl sys_now
 499 0012 0346     	 mov r3,r0
 500 0014 7B82     	 strh r3,[r7,#18]
 369:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     /* this cares for wraparounds */
 370:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     diff = now - timeouts_last_time;
 501              	 .loc 1 370 0
 502 0016 1C4B     	 ldr r3,.L37+4
 503 0018 1B88     	 ldrh r3,[r3]
 504 001a 7A8A     	 ldrh r2,[r7,#18]
 505 001c D31A     	 subs r3,r2,r3
 506 001e FB82     	 strh r3,[r7,#22]
 507              	.L36:
 371:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     do
 372:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     {
 373:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if PBUF_POOL_FREE_OOSEQ
 374:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       PBUF_CHECK_FREE_OOSEQ();
 375:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* PBUF_POOL_FREE_OOSEQ */
 376:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       had_one = 0;
 508              	 .loc 1 376 0
 509 0020 0023     	 movs r3,#0
 510 0022 7B75     	 strb r3,[r7,#21]
 377:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       tmptimeout = next_timeout;
 511              	 .loc 1 377 0
 512 0024 174B     	 ldr r3,.L37
 513 0026 1B68     	 ldr r3,[r3]
 514 0028 FB60     	 str r3,[r7,#12]
 378:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       if (tmptimeout && (tmptimeout->time <= diff)) {
 515              	 .loc 1 378 0
 516 002a FB68     	 ldr r3,[r7,#12]
 517 002c 002B     	 cmp r3,#0
 518 002e 23D0     	 beq .L35
 519              	 .loc 1 378 0 is_stmt 0 discriminator 1
 520 0030 FB68     	 ldr r3,[r7,#12]
 521 0032 5A68     	 ldr r2,[r3,#4]
 522 0034 FB8A     	 ldrh r3,[r7,#22]
 523 0036 9A42     	 cmp r2,r3
 524 0038 1ED8     	 bhi .L35
 379:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         /* timeout has expired */
 380:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         had_one = 1;
 525              	 .loc 1 380 0 is_stmt 1
 526 003a 0123     	 movs r3,#1
 527 003c 7B75     	 strb r3,[r7,#21]
 381:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         timeouts_last_time = now;
 528              	 .loc 1 381 0
 529 003e 124A     	 ldr r2,.L37+4
 530 0040 7B8A     	 ldrh r3,[r7,#18]
 531 0042 1380     	 strh r3,[r2]
 382:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         diff -= tmptimeout->time;
 532              	 .loc 1 382 0
 533 0044 FB68     	 ldr r3,[r7,#12]
 534 0046 5B68     	 ldr r3,[r3,#4]
 535 0048 9BB2     	 uxth r3,r3
 536 004a FA8A     	 ldrh r2,[r7,#22]
 537 004c D31A     	 subs r3,r2,r3
 538 004e FB82     	 strh r3,[r7,#22]
 383:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         next_timeout = tmptimeout->next;
 539              	 .loc 1 383 0
 540 0050 FB68     	 ldr r3,[r7,#12]
 541 0052 1B68     	 ldr r3,[r3]
 542 0054 0B4A     	 ldr r2,.L37
 543 0056 1360     	 str r3,[r2]
 384:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         handler = tmptimeout->h;
 544              	 .loc 1 384 0
 545 0058 FB68     	 ldr r3,[r7,#12]
 546 005a 9B68     	 ldr r3,[r3,#8]
 547 005c BB60     	 str r3,[r7,#8]
 385:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         arg = tmptimeout->arg;
 548              	 .loc 1 385 0
 549 005e FB68     	 ldr r3,[r7,#12]
 550 0060 DB68     	 ldr r3,[r3,#12]
 551 0062 7B60     	 str r3,[r7,#4]
 386:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #if LWIP_DEBUG_TIMERNAMES
 387:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         if (handler != NULL) {
 388:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****           LWIP_DEBUGF(TIMERS_DEBUG, ("sct calling h=%s arg=%p\n",
 389:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****             tmptimeout->handler_name, arg));
 390:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         }
 391:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** #endif /* LWIP_DEBUG_TIMERNAMES */
 392:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         memp_free(MEMP_SYS_TIMEOUT, tmptimeout);
 552              	 .loc 1 392 0
 553 0064 0320     	 movs r0,#3
 554 0066 F968     	 ldr r1,[r7,#12]
 555 0068 FFF7FEFF 	 bl memp_free
 393:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         if (handler != NULL) {
 556              	 .loc 1 393 0
 557 006c BB68     	 ldr r3,[r7,#8]
 558 006e 002B     	 cmp r3,#0
 559 0070 02D0     	 beq .L35
 394:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****           handler(arg);
 560              	 .loc 1 394 0
 561 0072 BB68     	 ldr r3,[r7,#8]
 562 0074 7868     	 ldr r0,[r7,#4]
 563 0076 9847     	 blx r3
 564              	.L35:
 395:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****         }
 396:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****       }
 397:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     /* repeat until all expired timers have been called */
 398:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****     }while(had_one);
 565              	 .loc 1 398 0
 566 0078 7B7D     	 ldrb r3,[r7,#21]
 567 007a 002B     	 cmp r3,#0
 568 007c D0D1     	 bne .L36
 569              	.L33:
 570              	.LBE2:
 399:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   }
 400:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 571              	 .loc 1 400 0
 572 007e 1837     	 adds r7,r7,#24
 573              	.LCFI25:
 574              	 .cfi_def_cfa_offset 8
 575 0080 BD46     	 mov sp,r7
 576              	.LCFI26:
 577              	 .cfi_def_cfa_register 13
 578              	 
 579 0082 80BD     	 pop {r7,pc}
 580              	.L38:
 581              	 .align 2
 582              	.L37:
 583 0084 00000000 	 .word next_timeout
 584 0088 00000000 	 .word timeouts_last_time
 585              	 .cfi_endproc
 586              	.LFE133:
 588              	 .section .text.sys_restart_timeouts,"ax",%progbits
 589              	 .align 2
 590              	 .global sys_restart_timeouts
 591              	 .thumb
 592              	 .thumb_func
 594              	sys_restart_timeouts:
 595              	.LFB134:
 401:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** 
 402:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** /** Set back the timestamp of the last call to sys_check_timeouts()
 403:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * This is necessary if sys_check_timeouts() hasn't been called for a long
 404:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * time (e.g. while saving energy) to prevent all timer functions of that
 405:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  * period being called.
 406:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****  */
 407:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** void
 408:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** sys_restart_timeouts(void)
 409:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** {
 596              	 .loc 1 409 0
 597              	 .cfi_startproc
 598              	 
 599              	 
 600 0000 80B5     	 push {r7,lr}
 601              	.LCFI27:
 602              	 .cfi_def_cfa_offset 8
 603              	 .cfi_offset 7,-8
 604              	 .cfi_offset 14,-4
 605 0002 00AF     	 add r7,sp,#0
 606              	.LCFI28:
 607              	 .cfi_def_cfa_register 7
 410:../Dave/Generated/ETH_LWIP/lwip/core/timers.c ****   timeouts_last_time = (u16_t)sys_now();
 608              	 .loc 1 410 0
 609 0004 FFF7FEFF 	 bl sys_now
 610 0008 0346     	 mov r3,r0
 611 000a 9AB2     	 uxth r2,r3
 612 000c 014B     	 ldr r3,.L40
 613 000e 1A80     	 strh r2,[r3]
 411:../Dave/Generated/ETH_LWIP/lwip/core/timers.c **** }
 614              	 .loc 1 411 0
 615 0010 80BD     	 pop {r7,pc}
 616              	.L41:
 617 0012 00BF     	 .align 2
 618              	.L40:
 619 0014 00000000 	 .word timeouts_last_time
 620              	 .cfi_endproc
 621              	.LFE134:
 623              	 .text
 624              	.Letext0:
 625              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 626              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 627              	 .file 4 "../Dave/Generated/ETH_LWIP/lwip/core/../include/lwip/../../port/include/arch/cc.h"
 628              	 .file 5 "../Dave/Generated/ETH_LWIP/lwip/core/../include/lwip/timers.h"
 629              	 .file 6 "../Dave/Generated/ETH_LWIP/lwip/core/../include/lwip/memp.h"
 630              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
    {standard input}:20     .bss.next_timeout:00000000 $d
    {standard input}:23     .bss.next_timeout:00000000 next_timeout
    {standard input}:26     .bss.timeouts_last_time:00000000 $d
    {standard input}:29     .bss.timeouts_last_time:00000000 timeouts_last_time
    {standard input}:32     .text.arp_timer:00000000 $t
    {standard input}:36     .text.arp_timer:00000000 arp_timer
    {standard input}:177    .text.sys_timeout:00000000 sys_timeout
    {standard input}:74     .text.arp_timer:00000020 $d
    {standard input}:79     .text.igmp_timer:00000000 $t
    {standard input}:83     .text.igmp_timer:00000000 igmp_timer
    {standard input}:120    .text.igmp_timer:0000001c $d
    {standard input}:125    .text.sys_timeouts_init:00000000 $t
    {standard input}:130    .text.sys_timeouts_init:00000000 sys_timeouts_init
    {standard input}:165    .text.sys_timeouts_init:00000028 $d
    {standard input}:172    .text.sys_timeout:00000000 $t
    {standard input}:341    .text.sys_timeout:000000d8 $d
    {standard input}:346    .text.sys_untimeout:00000000 $t
    {standard input}:351    .text.sys_untimeout:00000000 sys_untimeout
    {standard input}:464    .text.sys_untimeout:00000088 $d
    {standard input}:469    .text.sys_check_timeouts:00000000 $t
    {standard input}:474    .text.sys_check_timeouts:00000000 sys_check_timeouts
    {standard input}:583    .text.sys_check_timeouts:00000084 $d
    {standard input}:589    .text.sys_restart_timeouts:00000000 $t
    {standard input}:594    .text.sys_restart_timeouts:00000000 sys_restart_timeouts
    {standard input}:619    .text.sys_restart_timeouts:00000014 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
etharp_tmr
igmp_tmr
sys_now
memp_malloc
memp_free
