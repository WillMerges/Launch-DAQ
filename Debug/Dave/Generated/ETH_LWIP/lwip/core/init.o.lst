   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "init.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.lwip_init,"ax",%progbits
  20              	 .align 2
  21              	 .global lwip_init
  22              	 .thumb
  23              	 .thumb_func
  25              	lwip_init:
  26              	.LFB133:
  27              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/init.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Modules initialization
   4:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
   5:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
   6:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
   7:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /*
   8:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
   9:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * All rights reserved. 
  10:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 
  11:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Redistribution and use in source and binary forms, with or without modification, 
  12:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * are permitted provided that the following conditions are met:
  13:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  14:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  15:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    this list of conditions and the following disclaimer.
  16:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  17:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    this list of conditions and the following disclaimer in the documentation
  18:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    and/or other materials provided with the distribution.
  19:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 3. The name of the author may not be used to endorse or promote products
  20:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *    derived from this software without specific prior written permission. 
  21:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  22:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
  23:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  24:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
  25:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  26:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
  27:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  28:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  29:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
  30:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  31:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * OF SUCH DAMAGE.
  32:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  33:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * This file is part of the lwIP TCP/IP stack.
  34:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * 
  35:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Author: Adam Dunkels <adam@sics.se>
  36:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  *
  37:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
  38:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  39:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/opt.h"
  40:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  41:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/init.h"
  42:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/stats.h"
  43:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/sys.h"
  44:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/mem.h"
  45:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/memp.h"
  46:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/pbuf.h"
  47:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/netif.h"
  48:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/sockets.h"
  49:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/ipv4/lwip/ip.h"
  50:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/raw.h"
  51:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/udp.h"
  52:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/tcp_impl.h"
  53:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/snmp_msg.h"
  54:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/ipv4/lwip/autoip.h"
  55:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/ipv4/lwip/igmp.h"
  56:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/dns.h"
  57:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/timers.h"
  58:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/netif/etharp.h"
  59:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #include "../include/lwip/api.h"
  60:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
  61:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* Compile-time sanity checks for configuration errors.
  62:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * These can be done independently of LWIP_DEBUG, without penalty.
  63:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
  64:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef BYTE_ORDER
  65:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "BYTE_ORDER is not defined, you have to define it in your cc.h"
  66:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  67:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!IP_SOF_BROADCAST && IP_SOF_BROADCAST_RECV)
  68:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use broadcast filter per pcb on recv operations, you have to define IP_SOF
  69:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  70:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_UDPLITE)
  71:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use UDP Lite, you have to define LWIP_UDP=1 in your lwipopts.h"
  72:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  73:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_SNMP)
  74:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define LWIP_UDP=1 in your lwipopts.h"
  75:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  76:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DHCP)
  77:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use DHCP, you have to define LWIP_UDP=1 in your lwipopts.h"
  78:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  79:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_IGMP)
  80:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use IGMP, you have to define LWIP_UDP=1 in your lwipopts.h"
  81:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  82:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_SNMP)
  83:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define LWIP_UDP=1 in your lwipopts.h"
  84:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  85:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_UDP && LWIP_DNS)
  86:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use DNS, you have to define LWIP_UDP=1 in your lwipopts.h"
  87:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  88:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC /* MEMP_NUM_* checks are disabled when not using the pool allocator */
  89:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_ARP && ARP_QUEUEING && (MEMP_NUM_ARP_QUEUE<=0))
  90:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use ARP Queueing, you have to define MEMP_NUM_ARP_QUEUE>=1 in your lwipopt
  91:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  92:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_RAW && (MEMP_NUM_RAW_PCB<=0))
  93:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use RAW, you have to define MEMP_NUM_RAW_PCB>=1 in your lwipopts.h"
  94:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  95:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_UDP && (MEMP_NUM_UDP_PCB<=0))
  96:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use UDP, you have to define MEMP_NUM_UDP_PCB>=1 in your lwipopts.h"
  97:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
  98:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (MEMP_NUM_TCP_PCB<=0))
  99:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use TCP, you have to define MEMP_NUM_TCP_PCB>=1 in your lwipopts.h"
 100:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 101:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_IGMP && (MEMP_NUM_IGMP_GROUP<=1))
 102:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use IGMP, you have to define MEMP_NUM_IGMP_GROUP>1 in your lwipopts.h"
 103:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 104:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if ((LWIP_NETCONN || LWIP_SOCKET) && (MEMP_NUM_TCPIP_MSG_API<=0))
 105:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use Sequential API, you have to define MEMP_NUM_TCPIP_MSG_API>=1 in your l
 106:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 107:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* There must be sufficient timeouts, taking into account requirements of the subsystems. */
 108:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TIMERS && (MEMP_NUM_SYS_TIMEOUT < (LWIP_TCP + IP_REASSEMBLY + LWIP_ARP + (2*LWIP_DHCP) + L
 109:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEMP_NUM_SYS_TIMEOUT is too low to accomodate all required timeouts"
 110:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 111:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (IP_REASSEMBLY && (MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS))
 112:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEMP_NUM_REASSDATA > IP_REASS_MAX_PBUFS doesn't make sense since each struct ip_reassdata
 113:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 114:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !MEMP_MEM_MALLOC */
 115:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_WND > 0xffff))
 116:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use TCP, TCP_WND must fit in an u16_t, so, you have to reduce it in your l
 117:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 118:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_SND_QUEUELEN > 0xffff))
 119:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use TCP, TCP_SND_QUEUELEN must fit in an u16_t, so, you have to reduce it 
 120:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 121:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && (TCP_SND_QUEUELEN < 2))
 122:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "TCP_SND_QUEUELEN must be at least 2 for no-copy TCP writes to work"
 123:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 124:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && ((TCP_MAXRTX > 12) || (TCP_SYNMAXRTX > 12)))
 125:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use TCP, TCP_MAXRTX and TCP_SYNMAXRTX must less or equal to 12 (due to tcp
 126:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 127:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && TCP_LISTEN_BACKLOG && (TCP_DEFAULT_LISTEN_BACKLOG < 0) || (TCP_DEFAULT_LISTEN_BACK
 128:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use TCP backlog, TCP_DEFAULT_LISTEN_BACKLOG must fit into an u8_t"
 129:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 130:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_NETIF_API && (NO_SYS==1))
 131:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use NETIF API, you have to define NO_SYS=0 in your lwipopts.h"
 132:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 133:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if ((LWIP_SOCKET || LWIP_NETCONN) && (NO_SYS==1))
 134:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use Sequential API, you have to define NO_SYS=0 in your lwipopts.h"
 135:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 136:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_NETCONN && LWIP_SOCKET)
 137:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use Socket API, you have to define LWIP_NETCONN=1 in your lwipopts.h"
 138:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 139:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_AUTOIP)) && LWIP_DHCP_AUTOIP_COOP)
 140:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use DHCP/AUTOIP cooperation mode, you have to define LWIP_DHCP=1 and LWIP_
 141:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 142:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (((!LWIP_DHCP) || (!LWIP_ARP)) && DHCP_DOES_ARP_CHECK)
 143:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use DHCP ARP checking, you have to define LWIP_DHCP=1 and LWIP_ARP=1 in yo
 144:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 145:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (!LWIP_ARP && LWIP_AUTOIP)
 146:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use AUTOIP, you have to define LWIP_ARP=1 in your lwipopts.h"
 147:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 148:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_SNMP && (SNMP_CONCURRENT_REQUESTS<=0))
 149:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define SNMP_CONCURRENT_REQUESTS>=1 in your lwipopts.
 150:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 151:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_SNMP && (SNMP_TRAP_DESTINATIONS<=0))
 152:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "If you want to use SNMP, you have to define SNMP_TRAP_DESTINATIONS>=1 in your lwipopts.h"
 153:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 154:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (LWIP_TCP && ((LWIP_EVENT_API && LWIP_CALLBACK_API) || (!LWIP_EVENT_API && !LWIP_CALLBACK_API))
 155:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "One and exactly one of LWIP_EVENT_API and LWIP_CALLBACK_API has to be enabled in your lwi
 156:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 157:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (MEM_LIBC_MALLOC && MEM_USE_POOLS)
 158:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEM_LIBC_MALLOC and MEM_USE_POOLS may not both be simultaneously enabled in your lwipopts
 159:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 160:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (MEM_USE_POOLS && !MEMP_USE_CUSTOM_POOLS)
 161:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEM_USE_POOLS requires custom pools (MEMP_USE_CUSTOM_POOLS) to be enabled in your lwipopt
 162:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 163:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (PBUF_POOL_BUFSIZE <= MEM_ALIGNMENT)
 164:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "PBUF_POOL_BUFSIZE must be greater than MEM_ALIGNMENT or the offset may take the full firs
 165:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 166:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if (DNS_LOCAL_HOSTLIST && !DNS_LOCAL_HOSTLIST_IS_DYNAMIC && !(defined(DNS_LOCAL_HOSTLIST_INIT)))
 167:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "you have to define define DNS_LOCAL_HOSTLIST_INIT {{'host1', 0x123}, {'host2', 0x234}} to
 168:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 169:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if PPP_SUPPORT && !PPPOS_SUPPORT & !PPPOE_SUPPORT
 170:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "PPP_SUPPORT needs either PPPOS_SUPPORT or PPPOE_SUPPORT turned on"
 171:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 172:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_ETHERNET && (LWIP_ARP || PPPOE_SUPPORT)
 173:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "LWIP_ETHERNET needs to be turned on for LWIP_ARP or PPPOE_SUPPORT"
 174:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 175:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_IGMP && !defined(LWIP_RAND)
 176:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "When using IGMP, LWIP_RAND() needs to be defined to a random-function returning an u32_t 
 177:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 178:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCPIP_CORE_LOCKING_INPUT && !LWIP_TCPIP_CORE_LOCKING
 179:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "When using LWIP_TCPIP_CORE_LOCKING_INPUT, LWIP_TCPIP_CORE_LOCKING must be enabled, too"
 180:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 181:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP && LWIP_NETIF_TX_SINGLE_PBUF && !TCP_OVERSIZE
 182:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "LWIP_NETIF_TX_SINGLE_PBUF needs TCP_OVERSIZE enabled to create single-pbuf TCP packets"
 183:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 184:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if IP_FRAG && IP_FRAG_USES_STATIC_BUF && LWIP_NETIF_TX_SINGLE_PBUF
 185:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "LWIP_NETIF_TX_SINGLE_PBUF does not work with IP_FRAG_USES_STATIC_BUF==1 as that creates p
 186:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 187:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_NETCONN && LWIP_TCP
 188:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if NETCONN_COPY != TCP_WRITE_FLAG_COPY
 189:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "NETCONN_COPY != TCP_WRITE_FLAG_COPY"
 190:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 191:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if NETCONN_MORE != TCP_WRITE_FLAG_MORE
 192:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "NETCONN_MORE != TCP_WRITE_FLAG_MORE"
 193:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 194:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_NETCONN && LWIP_TCP */ 
 195:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_SOCKET
 196:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* Check that the SO_* socket options and SOF_* lwIP-internal flags match */
 197:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if SO_ACCEPTCONN != SOF_ACCEPTCONN
 198:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "SO_ACCEPTCONN != SOF_ACCEPTCONN"
 199:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 200:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if SO_REUSEADDR != SOF_REUSEADDR
 201:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "WARNING: SO_REUSEADDR != SOF_REUSEADDR"
 202:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 203:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if SO_KEEPALIVE != SOF_KEEPALIVE
 204:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "WARNING: SO_KEEPALIVE != SOF_KEEPALIVE"
 205:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 206:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if SO_BROADCAST != SOF_BROADCAST
 207:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "WARNING: SO_BROADCAST != SOF_BROADCAST"
 208:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 209:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if SO_LINGER != SOF_LINGER
 210:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "WARNING: SO_LINGER != SOF_LINGER"
 211:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 212:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_SOCKET */
 213:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 214:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 215:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* Compile-time checks for deprecated options.
 216:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
 217:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef MEMP_NUM_TCPIP_MSG
 218:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEMP_NUM_TCPIP_MSG option is deprecated. Remove it from your lwipopts.h."
 219:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 220:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef MEMP_NUM_API_MSG
 221:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "MEMP_NUM_API_MSG option is deprecated. Remove it from your lwipopts.h."
 222:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 223:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef TCP_REXMIT_DEBUG
 224:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "TCP_REXMIT_DEBUG option is deprecated. Remove it from your lwipopts.h."
 225:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 226:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef RAW_STATS
 227:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "RAW_STATS option is deprecated. Remove it from your lwipopts.h."
 228:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 229:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef ETHARP_QUEUE_FIRST
 230:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "ETHARP_QUEUE_FIRST option is deprecated. Remove it from your lwipopts.h."
 231:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 232:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifdef ETHARP_ALWAYS_INSERT
 233:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "ETHARP_ALWAYS_INSERT option is deprecated. Remove it from your lwipopts.h."
 234:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 235:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 236:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_DISABLE_TCP_SANITY_CHECKS
 237:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #define LWIP_DISABLE_TCP_SANITY_CHECKS  0
 238:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 239:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #ifndef LWIP_DISABLE_MEMP_SANITY_CHECKS
 240:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #define LWIP_DISABLE_MEMP_SANITY_CHECKS 0
 241:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 242:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 243:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* MEMP sanity checks */
 244:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_DISABLE_MEMP_SANITY_CHECKS
 245:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_NETCONN
 246:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if MEMP_MEM_MALLOC
 247:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_NUM_NETCONN && LWIP_SOCKET
 248:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: MEMP_NUM_NETCONN cannot be 0 when using sockets!"
 249:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 250:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #else /* MEMP_MEM_MALLOC */
 251:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if MEMP_NUM_NETCONN > (MEMP_NUM_TCP_PCB+MEMP_NUM_TCP_PCB_LISTEN+MEMP_NUM_UDP_PCB+MEMP_NUM_RAW_PCB)
 252:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #error "lwip_sanity_check: WARNING: MEMP_NUM_NETCONN should be less than the sum of MEMP_NUM_{TCP,R
 253:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 254:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* MEMP_MEM_MALLOC */
 255:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_NETCONN */
 256:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !LWIP_DISABLE_MEMP_SANITY_CHECKS */
 257:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 258:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /* TCP sanity checks */
 259:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !LWIP_DISABLE_TCP_SANITY_CHECKS
 260:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP
 261:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC && (MEMP_NUM_TCP_SEG < TCP_SND_QUEUELEN)
 262:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: MEMP_NUM_TCP_SEG should be at least as big as TCP_SND_QUEUELE
 263:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 264:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SND_BUF < (2 * TCP_MSS)
 265:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_SND_BUF must be at least as much as (2 * TCP_MSS) for thi
 266:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 267:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SND_QUEUELEN < (2 * (TCP_SND_BUF / TCP_MSS))
 268:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_SND_QUEUELEN must be at least as much as (2 * TCP_SND_BUF
 269:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 270:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SNDLOWAT >= TCP_SND_BUF
 271:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_SNDLOWAT must be less than TCP_SND_BUF. If you know what 
 272:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 273:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_SNDQUEUELOWAT >= TCP_SND_QUEUELEN
 274:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_SNDQUEUELOWAT must be less than TCP_SND_QUEUELEN. If you 
 275:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 276:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !MEMP_MEM_MALLOC && (TCP_WND > (PBUF_POOL_SIZE * (PBUF_POOL_BUFSIZE - (PBUF_LINK_HLEN + PBUF_IP
 277:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_WND is larger than space provided by PBUF_POOL_SIZE * (PB
 278:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 279:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if TCP_WND < TCP_MSS
 280:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   #error "lwip_sanity_check: WARNING: TCP_WND is smaller than MSS. If you know what you are doing, 
 281:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif
 282:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TCP */
 283:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !LWIP_DISABLE_TCP_SANITY_CHECKS */
 284:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 285:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** /**
 286:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  * Perform Sanity check of user-configurable values, and initialize all modules.
 287:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****  */
 288:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** void
 289:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** lwip_init(void)
 290:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** {
  28              	 .loc 1 290 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32 0000 80B5     	 push {r7,lr}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 8
  35              	 .cfi_offset 7,-8
  36              	 .cfi_offset 14,-4
  37 0002 00AF     	 add r7,sp,#0
  38              	.LCFI1:
  39              	 .cfi_def_cfa_register 7
 291:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   /* Modules initialization */
 292:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   stats_init();
 293:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if !NO_SYS
 294:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   sys_init();
 295:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* !NO_SYS */
 296:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   mem_init();
  40              	 .loc 1 296 0
  41 0004 FFF7FEFF 	 bl mem_init
 297:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   memp_init();
  42              	 .loc 1 297 0
  43 0008 FFF7FEFF 	 bl memp_init
 298:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   pbuf_init();
 299:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   netif_init();
  44              	 .loc 1 299 0
  45 000c FFF7FEFF 	 bl netif_init
 300:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_SOCKET
 301:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   lwip_socket_init();
 302:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_SOCKET */
 303:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   ip_init();
 304:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_ARP
 305:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   etharp_init();
 306:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_ARP */
 307:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_RAW
 308:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   raw_init();
 309:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_RAW */
 310:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_UDP
 311:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   udp_init();
  46              	 .loc 1 311 0
  47 0010 FFF7FEFF 	 bl udp_init
 312:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_UDP */
 313:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TCP
 314:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   tcp_init();
 315:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TCP */
 316:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_SNMP
 317:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   snmp_init();
 318:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_SNMP */
 319:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_AUTOIP
 320:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   autoip_init();
 321:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_AUTOIP */
 322:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_IGMP
 323:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   igmp_init();
  48              	 .loc 1 323 0
  49 0014 FFF7FEFF 	 bl igmp_init
 324:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_IGMP */
 325:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_DNS
 326:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   dns_init();
 327:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_DNS */
 328:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** 
 329:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #if LWIP_TIMERS
 330:../Dave/Generated/ETH_LWIP/lwip/core/init.c ****   sys_timeouts_init();
  50              	 .loc 1 330 0
  51 0018 FFF7FEFF 	 bl sys_timeouts_init
 331:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** #endif /* LWIP_TIMERS */
 332:../Dave/Generated/ETH_LWIP/lwip/core/init.c **** }
  52              	 .loc 1 332 0
  53 001c 80BD     	 pop {r7,pc}
  54              	 .cfi_endproc
  55              	.LFE133:
  57 001e 00BF     	 .text
  58              	.Letext0:
  59              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
  60              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
  61              	 .file 4 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/cmsis_gcc.h"
  62              	 .file 5 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 init.c
    {standard input}:20     .text.lwip_init:00000000 $t
    {standard input}:25     .text.lwip_init:00000000 lwip_init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
mem_init
memp_init
netif_init
udp_init
igmp_init
sys_timeouts_init
