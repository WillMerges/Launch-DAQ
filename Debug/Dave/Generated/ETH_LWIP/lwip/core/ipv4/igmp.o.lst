   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "igmp.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .bss.igmp_group_list,"aw",%nobits
  20              	 .align 2
  23              	igmp_group_list:
  24 0000 00000000 	 .space 4
  25              	 .section .bss.allsystems,"aw",%nobits
  26              	 .align 2
  29              	allsystems:
  30 0000 00000000 	 .space 4
  31              	 .section .bss.allrouters,"aw",%nobits
  32              	 .align 2
  35              	allrouters:
  36 0000 00000000 	 .space 4
  37              	 .section .text.igmp_init,"ax",%progbits
  38              	 .align 2
  39              	 .global igmp_init
  40              	 .thumb
  41              	 .thumb_func
  43              	igmp_init:
  44              	.LFB133:
  45              	 .file 1 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c"
   1:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
   2:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @file
   3:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * IGMP - Internet Group Management Protocol
   4:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
   5:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
   6:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
   7:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /*
   8:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Copyright (c) 2002 CITEL Technologies Ltd.
   9:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * All rights reserved.
  10:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
  11:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Redistribution and use in source and binary forms, with or without 
  12:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * modification, are permitted provided that the following conditions 
  13:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * are met: 
  14:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * 1. Redistributions of source code must retain the above copyright 
  15:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *    notice, this list of conditions and the following disclaimer. 
  16:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * 2. Redistributions in binary form must reproduce the above copyright 
  17:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *    notice, this list of conditions and the following disclaimer in the 
  18:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *    documentation and/or other materials provided with the distribution. 
  19:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * 3. Neither the name of CITEL Technologies Ltd nor the names of its contributors 
  20:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *    may be used to endorse or promote products derived from this software 
  21:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *    without specific prior written permission. 
  22:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
  23:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * THIS SOFTWARE IS PROVIDED BY CITEL TECHNOLOGIES AND CONTRIBUTORS ``AS IS''
  24:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
  25:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
  26:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * ARE DISCLAIMED.  IN NO EVENT SHALL CITEL TECHNOLOGIES OR CONTRIBUTORS BE LIABLE 
  27:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
  28:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
  29:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
  30:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
  31:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
  32:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
  33:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * SUCH DAMAGE. 
  34:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
  35:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * This file is a contribution to the lwIP TCP/IP stack.
  36:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * The Swedish Institute of Computer Science and Adam Dunkels
  37:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * are specifically granted permission to redistribute this
  38:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * source code.
  39:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** */
  40:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  41:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /*-------------------------------------------------------------
  42:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** Note 1)
  43:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** Although the rfc requires V1 AND V2 capability
  44:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** we will only support v2 since now V1 is very old (August 1989)
  45:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** V1 can be added if required
  46:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  47:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** a debug print and statistic have been implemented to
  48:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** show this up.
  49:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** -------------------------------------------------------------
  50:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** -------------------------------------------------------------
  51:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** Note 2)
  52:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** A query for a specific group address (as opposed to ALLHOSTS)
  53:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** has now been implemented as I am unsure if it is required
  54:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  55:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** a debug print and statistic have been implemented to
  56:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** show this up.
  57:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** -------------------------------------------------------------
  58:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** -------------------------------------------------------------
  59:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** Note 3)
  60:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** The router alert rfc 2113 is implemented in outgoing packets
  61:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** but not checked rigorously incoming
  62:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** -------------------------------------------------------------
  63:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** Steve Reynolds
  64:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** ------------------------------------------------------------*/
  65:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  66:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /*-----------------------------------------------------------------------------
  67:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 988  - Host extensions for IP multicasting                         - V0
  68:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 1054 - Host extensions for IP multicasting                         -
  69:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 1112 - Host extensions for IP multicasting                         - V1
  70:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 2236 - Internet Group Management Protocol, Version 2               - V2  <- this code is bas
  71:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 3376 - Internet Group Management Protocol, Version 3               - V3
  72:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 4604 - Using Internet Group Management Protocol Version 3...       - V3+
  73:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * RFC 2113 - IP Router Alert Option                                      - 
  74:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *----------------------------------------------------------------------------*/
  75:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  76:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /*-----------------------------------------------------------------------------
  77:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Includes
  78:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *----------------------------------------------------------------------------*/
  79:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  80:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/opt.h"
  81:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  82:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #if LWIP_IGMP /* don't build if not configured for use in lwipopts.h */
  83:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  84:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/ipv4/lwip/igmp.h"
  85:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/debug.h"
  86:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/def.h"
  87:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/mem.h"
  88:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/ipv4/lwip/ip.h"
  89:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/ipv4/lwip/inet_chksum.h"
  90:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/netif.h"
  91:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/ipv4/lwip/icmp.h"
  92:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/udp.h"
  93:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/tcp.h"
  94:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "../../include/lwip/stats.h"
  95:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  96:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #include "string.h"
  97:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
  98:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /* 
  99:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * IGMP constants
 100:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 101:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_TTL                       1
 102:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_MINLEN                    8
 103:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define ROUTER_ALERT                   0x9404U
 104:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define ROUTER_ALERTLEN                4
 105:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 106:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /*
 107:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * IGMP message types, including version number.
 108:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 109:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_MEMB_QUERY                0x11 /* Membership query         */
 110:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_V1_MEMB_REPORT            0x12 /* Ver. 1 membership report */
 111:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_V2_MEMB_REPORT            0x16 /* Ver. 2 membership report */
 112:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_LEAVE_GROUP               0x17 /* Leave-group message      */
 113:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 114:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /* Group  membership states */
 115:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_GROUP_NON_MEMBER          0
 116:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_GROUP_DELAYING_MEMBER     1
 117:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define IGMP_GROUP_IDLE_MEMBER         2
 118:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 119:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 120:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * IGMP packet format.
 121:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 122:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #ifdef PACK_STRUCT_USE_INCLUDES
 123:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #  include "arch/bpstruct.h"
 124:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #endif
 125:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** PACK_STRUCT_BEGIN
 126:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** struct igmp_msg {
 127:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  PACK_STRUCT_FIELD(u8_t           igmp_msgtype);
 128:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  PACK_STRUCT_FIELD(u8_t           igmp_maxresp);
 129:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  PACK_STRUCT_FIELD(u16_t          igmp_checksum);
 130:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  PACK_STRUCT_FIELD(ip_addr_p_t    igmp_group_address);
 131:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** } PACK_STRUCT_STRUCT;
 132:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** PACK_STRUCT_END
 133:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #ifdef PACK_STRUCT_USE_INCLUDES
 134:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #  include "arch/epstruct.h"
 135:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #endif
 136:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 137:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 138:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static struct igmp_group *igmp_lookup_group(struct netif *ifp, ip_addr_t *addr);
 139:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static err_t  igmp_remove_group(struct igmp_group *group);
 140:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void   igmp_timeout( struct igmp_group *group);
 141:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void   igmp_start_timer(struct igmp_group *group, u8_t max_time);
 142:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void   igmp_delaying_member(struct igmp_group *group, u8_t maxresp);
 143:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static err_t  igmp_ip_output_if(struct pbuf *p, ip_addr_t *src, ip_addr_t *dest, struct netif *neti
 144:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void   igmp_send(struct igmp_group *group, u8_t type);
 145:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 146:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 147:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static struct igmp_group* igmp_group_list;
 148:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static ip_addr_t     allsystems;
 149:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static ip_addr_t     allrouters;
 150:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 151:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 152:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 153:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Initialize the IGMP module
 154:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 155:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** void
 156:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_init(void)
 157:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
  46              	 .loc 1 157 0
  47              	 .cfi_startproc
  48              	 
  49              	 
  50              	 
  51 0000 80B4     	 push {r7}
  52              	.LCFI0:
  53              	 .cfi_def_cfa_offset 4
  54              	 .cfi_offset 7,-4
  55 0002 00AF     	 add r7,sp,#0
  56              	.LCFI1:
  57              	 .cfi_def_cfa_register 7
 158:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_init: initializing\n"));
 159:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 160:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   IP4_ADDR(&allsystems, 224, 0, 0, 1);
  58              	 .loc 1 160 0
  59 0004 044B     	 ldr r3,.L2
  60 0006 054A     	 ldr r2,.L2+4
  61 0008 1A60     	 str r2,[r3]
 161:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   IP4_ADDR(&allrouters, 224, 0, 0, 2);
  62              	 .loc 1 161 0
  63 000a 054B     	 ldr r3,.L2+8
  64 000c 054A     	 ldr r2,.L2+12
  65 000e 1A60     	 str r2,[r3]
 162:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
  66              	 .loc 1 162 0
  67 0010 BD46     	 mov sp,r7
  68              	.LCFI2:
  69              	 .cfi_def_cfa_register 13
  70              	 
  71 0012 5DF8047B 	 ldr r7,[sp],#4
  72              	.LCFI3:
  73              	 .cfi_restore 7
  74              	 .cfi_def_cfa_offset 0
  75 0016 7047     	 bx lr
  76              	.L3:
  77              	 .align 2
  78              	.L2:
  79 0018 00000000 	 .word allsystems
  80 001c E0000001 	 .word 16777440
  81 0020 00000000 	 .word allrouters
  82 0024 E0000002 	 .word 33554656
  83              	 .cfi_endproc
  84              	.LFE133:
  86              	 .section .text.igmp_start,"ax",%progbits
  87              	 .align 2
  88              	 .global igmp_start
  89              	 .thumb
  90              	 .thumb_func
  92              	igmp_start:
  93              	.LFB134:
 163:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 164:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #ifdef LWIP_DEBUG
 165:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 166:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Dump global IGMP groups list
 167:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 168:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** void
 169:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_dump_group_list()
 170:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** { 
 171:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 172:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 173:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (group != NULL) {
 174:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_dump_group_list: [%"U32_F"] ", (u32_t)(group->group_state)));
 175:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     ip_addr_debug_print(IGMP_DEBUG, &group->group_address);
 176:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", group->netif));
 177:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group = group->next;
 178:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 179:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 180:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 181:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #else
 182:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #define igmp_dump_group_list()
 183:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** #endif /* LWIP_DEBUG */
 184:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 185:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 186:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Start IGMP processing on interface
 187:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 188:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param netif network interface on which start IGMP processing
 189:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 190:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** err_t
 191:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_start(struct netif *netif)
 192:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
  94              	 .loc 1 192 0
  95              	 .cfi_startproc
  96              	 
  97              	 
  98 0000 80B5     	 push {r7,lr}
  99              	.LCFI4:
 100              	 .cfi_def_cfa_offset 8
 101              	 .cfi_offset 7,-8
 102              	 .cfi_offset 14,-4
 103 0002 84B0     	 sub sp,sp,#16
 104              	.LCFI5:
 105              	 .cfi_def_cfa_offset 24
 106 0004 00AF     	 add r7,sp,#0
 107              	.LCFI6:
 108              	 .cfi_def_cfa_register 7
 109 0006 7860     	 str r0,[r7,#4]
 193:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group* group;
 194:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 195:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_start: starting IGMP processing on if %p\n", netif));
 196:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 197:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   group = igmp_lookup_group(netif, &allsystems);
 110              	 .loc 1 197 0
 111 0008 7868     	 ldr r0,[r7,#4]
 112 000a 1149     	 ldr r1,.L8
 113 000c FFF7FEFF 	 bl igmp_lookup_group
 114 0010 F860     	 str r0,[r7,#12]
 198:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 199:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (group != NULL) {
 115              	 .loc 1 199 0
 116 0012 FB68     	 ldr r3,[r7,#12]
 117 0014 002B     	 cmp r3,#0
 118 0016 14D0     	 beq .L5
 200:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->group_state = IGMP_GROUP_IDLE_MEMBER;
 119              	 .loc 1 200 0
 120 0018 FB68     	 ldr r3,[r7,#12]
 121 001a 0222     	 movs r2,#2
 122 001c 5A73     	 strb r2,[r3,#13]
 201:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->use++;
 123              	 .loc 1 201 0
 124 001e FB68     	 ldr r3,[r7,#12]
 125 0020 1B7C     	 ldrb r3,[r3,#16]
 126 0022 0133     	 adds r3,r3,#1
 127 0024 DAB2     	 uxtb r2,r3
 128 0026 FB68     	 ldr r3,[r7,#12]
 129 0028 1A74     	 strb r2,[r3,#16]
 202:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 203:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Allow the igmp messages at the MAC level */
 204:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (netif->igmp_mac_filter != NULL) {
 130              	 .loc 1 204 0
 131 002a 7B68     	 ldr r3,[r7,#4]
 132 002c 5B6B     	 ldr r3,[r3,#52]
 133 002e 002B     	 cmp r3,#0
 134 0030 05D0     	 beq .L6
 205:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       LWIP_DEBUGF(IGMP_DEBUG, ("igmp_start: igmp_mac_filter(ADD "));
 206:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       ip_addr_debug_print(IGMP_DEBUG, &allsystems);
 207:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 208:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       netif->igmp_mac_filter(netif, &allsystems, IGMP_ADD_MAC_FILTER);
 135              	 .loc 1 208 0
 136 0032 7B68     	 ldr r3,[r7,#4]
 137 0034 5B6B     	 ldr r3,[r3,#52]
 138 0036 7868     	 ldr r0,[r7,#4]
 139 0038 0549     	 ldr r1,.L8
 140 003a 0122     	 movs r2,#1
 141 003c 9847     	 blx r3
 142              	.L6:
 209:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 210:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 211:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     return ERR_OK;
 143              	 .loc 1 211 0
 144 003e 0023     	 movs r3,#0
 145 0040 00E0     	 b .L7
 146              	.L5:
 212:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 213:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 214:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return ERR_MEM;
 147              	 .loc 1 214 0
 148 0042 FF23     	 movs r3,#255
 149              	.L7:
 150 0044 5BB2     	 sxtb r3,r3
 215:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 151              	 .loc 1 215 0
 152 0046 1846     	 mov r0,r3
 153 0048 1037     	 adds r7,r7,#16
 154              	.LCFI7:
 155              	 .cfi_def_cfa_offset 8
 156 004a BD46     	 mov sp,r7
 157              	.LCFI8:
 158              	 .cfi_def_cfa_register 13
 159              	 
 160 004c 80BD     	 pop {r7,pc}
 161              	.L9:
 162 004e 00BF     	 .align 2
 163              	.L8:
 164 0050 00000000 	 .word allsystems
 165              	 .cfi_endproc
 166              	.LFE134:
 168              	 .section .text.igmp_stop,"ax",%progbits
 169              	 .align 2
 170              	 .global igmp_stop
 171              	 .thumb
 172              	 .thumb_func
 174              	igmp_stop:
 175              	.LFB135:
 216:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 217:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 218:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Stop IGMP processing on interface
 219:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 220:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param netif network interface on which stop IGMP processing
 221:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 222:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** err_t
 223:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_stop(struct netif *netif)
 224:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 176              	 .loc 1 224 0
 177              	 .cfi_startproc
 178              	 
 179              	 
 180 0000 80B5     	 push {r7,lr}
 181              	.LCFI9:
 182              	 .cfi_def_cfa_offset 8
 183              	 .cfi_offset 7,-8
 184              	 .cfi_offset 14,-4
 185 0002 86B0     	 sub sp,sp,#24
 186              	.LCFI10:
 187              	 .cfi_def_cfa_offset 32
 188 0004 00AF     	 add r7,sp,#0
 189              	.LCFI11:
 190              	 .cfi_def_cfa_register 7
 191 0006 7860     	 str r0,[r7,#4]
 225:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 192              	 .loc 1 225 0
 193 0008 1C4B     	 ldr r3,.L19
 194 000a 1B68     	 ldr r3,[r3]
 195 000c 7B61     	 str r3,[r7,#20]
 226:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *prev  = NULL;
 196              	 .loc 1 226 0
 197 000e 0023     	 movs r3,#0
 198 0010 3B61     	 str r3,[r7,#16]
 227:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *next;
 228:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 229:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* look for groups joined on this interface further down the list */
 230:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (group != NULL) {
 199              	 .loc 1 230 0
 200 0012 2AE0     	 b .L11
 201              	.L17:
 231:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     next = group->next;
 202              	 .loc 1 231 0
 203 0014 7B69     	 ldr r3,[r7,#20]
 204 0016 1B68     	 ldr r3,[r3]
 205 0018 FB60     	 str r3,[r7,#12]
 232:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* is it a group joined on this interface? */
 233:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (group->netif == netif) {
 206              	 .loc 1 233 0
 207 001a 7B69     	 ldr r3,[r7,#20]
 208 001c 5A68     	 ldr r2,[r3,#4]
 209 001e 7B68     	 ldr r3,[r7,#4]
 210 0020 9A42     	 cmp r2,r3
 211 0022 1ED1     	 bne .L12
 234:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* is it the first group of the list? */
 235:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (group == igmp_group_list) {
 212              	 .loc 1 235 0
 213 0024 154B     	 ldr r3,.L19
 214 0026 1B68     	 ldr r3,[r3]
 215 0028 7A69     	 ldr r2,[r7,#20]
 216 002a 9A42     	 cmp r2,r3
 217 002c 02D1     	 bne .L13
 236:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         igmp_group_list = next;
 218              	 .loc 1 236 0
 219 002e 134A     	 ldr r2,.L19
 220 0030 FB68     	 ldr r3,[r7,#12]
 221 0032 1360     	 str r3,[r2]
 222              	.L13:
 237:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 238:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* is there a "previous" group defined? */
 239:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (prev != NULL) {
 223              	 .loc 1 239 0
 224 0034 3B69     	 ldr r3,[r7,#16]
 225 0036 002B     	 cmp r3,#0
 226 0038 02D0     	 beq .L14
 240:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         prev->next = next;
 227              	 .loc 1 240 0
 228 003a 3B69     	 ldr r3,[r7,#16]
 229 003c FA68     	 ldr r2,[r7,#12]
 230 003e 1A60     	 str r2,[r3]
 231              	.L14:
 241:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 242:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* disable the group at the MAC level */
 243:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (netif->igmp_mac_filter != NULL) {
 232              	 .loc 1 243 0
 233 0040 7B68     	 ldr r3,[r7,#4]
 234 0042 5B6B     	 ldr r3,[r3,#52]
 235 0044 002B     	 cmp r3,#0
 236 0046 07D0     	 beq .L15
 244:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_stop: igmp_mac_filter(DEL "));
 245:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         ip_addr_debug_print(IGMP_DEBUG, &group->group_address);
 246:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 247:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         netif->igmp_mac_filter(netif, &(group->group_address), IGMP_DEL_MAC_FILTER);
 237              	 .loc 1 247 0
 238 0048 7B68     	 ldr r3,[r7,#4]
 239 004a 5B6B     	 ldr r3,[r3,#52]
 240 004c 7A69     	 ldr r2,[r7,#20]
 241 004e 0832     	 adds r2,r2,#8
 242 0050 7868     	 ldr r0,[r7,#4]
 243 0052 1146     	 mov r1,r2
 244 0054 0022     	 movs r2,#0
 245 0056 9847     	 blx r3
 246              	.L15:
 248:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 249:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* free group */
 250:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       memp_free(MEMP_IGMP_GROUP, group);
 247              	 .loc 1 250 0
 248 0058 0220     	 movs r0,#2
 249 005a 7969     	 ldr r1,[r7,#20]
 250 005c FFF7FEFF 	 bl memp_free
 251 0060 01E0     	 b .L16
 252              	.L12:
 251:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     } else {
 252:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* change the "previous" */
 253:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       prev = group;
 253              	 .loc 1 253 0
 254 0062 7B69     	 ldr r3,[r7,#20]
 255 0064 3B61     	 str r3,[r7,#16]
 256              	.L16:
 254:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 255:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* move to "next" */
 256:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group = next;
 257              	 .loc 1 256 0
 258 0066 FB68     	 ldr r3,[r7,#12]
 259 0068 7B61     	 str r3,[r7,#20]
 260              	.L11:
 230:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     next = group->next;
 261              	 .loc 1 230 0
 262 006a 7B69     	 ldr r3,[r7,#20]
 263 006c 002B     	 cmp r3,#0
 264 006e D1D1     	 bne .L17
 257:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 258:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return ERR_OK;
 265              	 .loc 1 258 0
 266 0070 0023     	 movs r3,#0
 267 0072 5BB2     	 sxtb r3,r3
 259:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 268              	 .loc 1 259 0
 269 0074 1846     	 mov r0,r3
 270 0076 1837     	 adds r7,r7,#24
 271              	.LCFI12:
 272              	 .cfi_def_cfa_offset 8
 273 0078 BD46     	 mov sp,r7
 274              	.LCFI13:
 275              	 .cfi_def_cfa_register 13
 276              	 
 277 007a 80BD     	 pop {r7,pc}
 278              	.L20:
 279              	 .align 2
 280              	.L19:
 281 007c 00000000 	 .word igmp_group_list
 282              	 .cfi_endproc
 283              	.LFE135:
 285              	 .section .text.igmp_report_groups,"ax",%progbits
 286              	 .align 2
 287              	 .global igmp_report_groups
 288              	 .thumb
 289              	 .thumb_func
 291              	igmp_report_groups:
 292              	.LFB136:
 260:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 261:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 262:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Report IGMP memberships for this interface
 263:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 264:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param netif network interface on which report IGMP memberships
 265:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 266:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** void
 267:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_report_groups(struct netif *netif)
 268:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 293              	 .loc 1 268 0
 294              	 .cfi_startproc
 295              	 
 296              	 
 297 0000 80B5     	 push {r7,lr}
 298              	.LCFI14:
 299              	 .cfi_def_cfa_offset 8
 300              	 .cfi_offset 7,-8
 301              	 .cfi_offset 14,-4
 302 0002 84B0     	 sub sp,sp,#16
 303              	.LCFI15:
 304              	 .cfi_def_cfa_offset 24
 305 0004 00AF     	 add r7,sp,#0
 306              	.LCFI16:
 307              	 .cfi_def_cfa_register 7
 308 0006 7860     	 str r0,[r7,#4]
 269:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 309              	 .loc 1 269 0
 310 0008 0A4B     	 ldr r3,.L25
 311 000a 1B68     	 ldr r3,[r3]
 312 000c FB60     	 str r3,[r7,#12]
 270:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 271:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_report_groups: sending IGMP reports on if %p\n", netif));
 272:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 273:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (group != NULL) {
 313              	 .loc 1 273 0
 314 000e 0BE0     	 b .L22
 315              	.L24:
 274:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (group->netif == netif) {
 316              	 .loc 1 274 0
 317 0010 FB68     	 ldr r3,[r7,#12]
 318 0012 5A68     	 ldr r2,[r3,#4]
 319 0014 7B68     	 ldr r3,[r7,#4]
 320 0016 9A42     	 cmp r2,r3
 321 0018 03D1     	 bne .L23
 275:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp_delaying_member(group, IGMP_JOIN_DELAYING_MEMBER_TMR);
 322              	 .loc 1 275 0
 323 001a F868     	 ldr r0,[r7,#12]
 324 001c 0521     	 movs r1,#5
 325 001e FFF7FEFF 	 bl igmp_delaying_member
 326              	.L23:
 276:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 277:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group = group->next;
 327              	 .loc 1 277 0
 328 0022 FB68     	 ldr r3,[r7,#12]
 329 0024 1B68     	 ldr r3,[r3]
 330 0026 FB60     	 str r3,[r7,#12]
 331              	.L22:
 273:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (group->netif == netif) {
 332              	 .loc 1 273 0
 333 0028 FB68     	 ldr r3,[r7,#12]
 334 002a 002B     	 cmp r3,#0
 335 002c F0D1     	 bne .L24
 278:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 279:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 336              	 .loc 1 279 0
 337 002e 1037     	 adds r7,r7,#16
 338              	.LCFI17:
 339              	 .cfi_def_cfa_offset 8
 340 0030 BD46     	 mov sp,r7
 341              	.LCFI18:
 342              	 .cfi_def_cfa_register 13
 343              	 
 344 0032 80BD     	 pop {r7,pc}
 345              	.L26:
 346              	 .align 2
 347              	.L25:
 348 0034 00000000 	 .word igmp_group_list
 349              	 .cfi_endproc
 350              	.LFE136:
 352              	 .section .text.igmp_lookfor_group,"ax",%progbits
 353              	 .align 2
 354              	 .global igmp_lookfor_group
 355              	 .thumb
 356              	 .thumb_func
 358              	igmp_lookfor_group:
 359              	.LFB137:
 280:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 281:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 282:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Search for a group in the global igmp_group_list
 283:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 284:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param ifp the network interface for which to look
 285:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param addr the group ip address to search for
 286:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return a struct igmp_group* if the group has been found,
 287:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *         NULL if the group wasn't found.
 288:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 289:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** struct igmp_group *
 290:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_lookfor_group(struct netif *ifp, ip_addr_t *addr)
 291:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 360              	 .loc 1 291 0
 361              	 .cfi_startproc
 362              	 
 363              	 
 364              	 
 365 0000 80B4     	 push {r7}
 366              	.LCFI19:
 367              	 .cfi_def_cfa_offset 4
 368              	 .cfi_offset 7,-4
 369 0002 85B0     	 sub sp,sp,#20
 370              	.LCFI20:
 371              	 .cfi_def_cfa_offset 24
 372 0004 00AF     	 add r7,sp,#0
 373              	.LCFI21:
 374              	 .cfi_def_cfa_register 7
 375 0006 7860     	 str r0,[r7,#4]
 376 0008 3960     	 str r1,[r7]
 292:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 377              	 .loc 1 292 0
 378 000a 0F4B     	 ldr r3,.L32
 379 000c 1B68     	 ldr r3,[r3]
 380 000e FB60     	 str r3,[r7,#12]
 293:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 294:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (group != NULL) {
 381              	 .loc 1 294 0
 382 0010 0FE0     	 b .L28
 383              	.L31:
 295:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if ((group->netif == ifp) && (ip_addr_cmp(&(group->group_address), addr))) {
 384              	 .loc 1 295 0
 385 0012 FB68     	 ldr r3,[r7,#12]
 386 0014 5A68     	 ldr r2,[r3,#4]
 387 0016 7B68     	 ldr r3,[r7,#4]
 388 0018 9A42     	 cmp r2,r3
 389 001a 07D1     	 bne .L29
 390              	 .loc 1 295 0 is_stmt 0 discriminator 1
 391 001c FB68     	 ldr r3,[r7,#12]
 392 001e 9A68     	 ldr r2,[r3,#8]
 393 0020 3B68     	 ldr r3,[r7]
 394 0022 1B68     	 ldr r3,[r3]
 395 0024 9A42     	 cmp r2,r3
 396 0026 01D1     	 bne .L29
 296:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       return group;
 397              	 .loc 1 296 0 is_stmt 1
 398 0028 FB68     	 ldr r3,[r7,#12]
 399 002a 06E0     	 b .L30
 400              	.L29:
 297:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 298:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group = group->next;
 401              	 .loc 1 298 0
 402 002c FB68     	 ldr r3,[r7,#12]
 403 002e 1B68     	 ldr r3,[r3]
 404 0030 FB60     	 str r3,[r7,#12]
 405              	.L28:
 294:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if ((group->netif == ifp) && (ip_addr_cmp(&(group->group_address), addr))) {
 406              	 .loc 1 294 0
 407 0032 FB68     	 ldr r3,[r7,#12]
 408 0034 002B     	 cmp r3,#0
 409 0036 ECD1     	 bne .L31
 299:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 300:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 301:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* to be clearer, we return NULL here instead of
 302:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    * 'group' (which is also NULL at this point).
 303:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    */
 304:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return NULL;
 410              	 .loc 1 304 0
 411 0038 0023     	 movs r3,#0
 412              	.L30:
 305:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 413              	 .loc 1 305 0
 414 003a 1846     	 mov r0,r3
 415 003c 1437     	 adds r7,r7,#20
 416              	.LCFI22:
 417              	 .cfi_def_cfa_offset 4
 418 003e BD46     	 mov sp,r7
 419              	.LCFI23:
 420              	 .cfi_def_cfa_register 13
 421              	 
 422 0040 5DF8047B 	 ldr r7,[sp],#4
 423              	.LCFI24:
 424              	 .cfi_restore 7
 425              	 .cfi_def_cfa_offset 0
 426 0044 7047     	 bx lr
 427              	.L33:
 428 0046 00BF     	 .align 2
 429              	.L32:
 430 0048 00000000 	 .word igmp_group_list
 431              	 .cfi_endproc
 432              	.LFE137:
 434              	 .section .text.igmp_lookup_group,"ax",%progbits
 435              	 .align 2
 436              	 .thumb
 437              	 .thumb_func
 439              	igmp_lookup_group:
 440              	.LFB138:
 306:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 307:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 308:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Search for a specific igmp group and create a new one if not found-
 309:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 310:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param ifp the network interface for which to look
 311:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param addr the group ip address to search
 312:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return a struct igmp_group*,
 313:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *         NULL on memory error.
 314:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 315:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** struct igmp_group *
 316:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_lookup_group(struct netif *ifp, ip_addr_t *addr)
 317:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 441              	 .loc 1 317 0
 442              	 .cfi_startproc
 443              	 
 444              	 
 445 0000 80B5     	 push {r7,lr}
 446              	.LCFI25:
 447              	 .cfi_def_cfa_offset 8
 448              	 .cfi_offset 7,-8
 449              	 .cfi_offset 14,-4
 450 0002 84B0     	 sub sp,sp,#16
 451              	.LCFI26:
 452              	 .cfi_def_cfa_offset 24
 453 0004 00AF     	 add r7,sp,#0
 454              	.LCFI27:
 455              	 .cfi_def_cfa_register 7
 456 0006 7860     	 str r0,[r7,#4]
 457 0008 3960     	 str r1,[r7]
 318:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 458              	 .loc 1 318 0
 459 000a 1C4B     	 ldr r3,.L40
 460 000c 1B68     	 ldr r3,[r3]
 461 000e FB60     	 str r3,[r7,#12]
 319:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   
 320:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Search if the group already exists */
 321:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   group = igmp_lookfor_group(ifp, addr);
 462              	 .loc 1 321 0
 463 0010 7868     	 ldr r0,[r7,#4]
 464 0012 3968     	 ldr r1,[r7]
 465 0014 FFF7FEFF 	 bl igmp_lookfor_group
 466 0018 F860     	 str r0,[r7,#12]
 322:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (group != NULL) {
 467              	 .loc 1 322 0
 468 001a FB68     	 ldr r3,[r7,#12]
 469 001c 002B     	 cmp r3,#0
 470 001e 01D0     	 beq .L35
 323:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Group already exists. */
 324:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     return group;
 471              	 .loc 1 324 0
 472 0020 FB68     	 ldr r3,[r7,#12]
 473 0022 26E0     	 b .L36
 474              	.L35:
 325:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 326:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 327:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Group doesn't exist yet, create a new one */
 328:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   group = (struct igmp_group *)memp_malloc(MEMP_IGMP_GROUP);
 475              	 .loc 1 328 0
 476 0024 0220     	 movs r0,#2
 477 0026 FFF7FEFF 	 bl memp_malloc
 478 002a F860     	 str r0,[r7,#12]
 329:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (group != NULL) {
 479              	 .loc 1 329 0
 480 002c FB68     	 ldr r3,[r7,#12]
 481 002e 002B     	 cmp r3,#0
 482 0030 1ED0     	 beq .L37
 330:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->netif              = ifp;
 483              	 .loc 1 330 0
 484 0032 FB68     	 ldr r3,[r7,#12]
 485 0034 7A68     	 ldr r2,[r7,#4]
 486 0036 5A60     	 str r2,[r3,#4]
 331:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     ip_addr_set(&(group->group_address), addr);
 487              	 .loc 1 331 0
 488 0038 3B68     	 ldr r3,[r7]
 489 003a 002B     	 cmp r3,#0
 490 003c 02D0     	 beq .L38
 491              	 .loc 1 331 0 is_stmt 0 discriminator 1
 492 003e 3B68     	 ldr r3,[r7]
 493 0040 1B68     	 ldr r3,[r3]
 494 0042 00E0     	 b .L39
 495              	.L38:
 496              	 .loc 1 331 0 discriminator 2
 497 0044 0023     	 movs r3,#0
 498              	.L39:
 499              	 .loc 1 331 0 discriminator 4
 500 0046 FA68     	 ldr r2,[r7,#12]
 501 0048 9360     	 str r3,[r2,#8]
 332:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->timer              = 0; /* Not running */
 502              	 .loc 1 332 0 is_stmt 1 discriminator 4
 503 004a FB68     	 ldr r3,[r7,#12]
 504 004c 0022     	 movs r2,#0
 505 004e DA81     	 strh r2,[r3,#14]
 333:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->group_state        = IGMP_GROUP_NON_MEMBER;
 506              	 .loc 1 333 0 discriminator 4
 507 0050 FB68     	 ldr r3,[r7,#12]
 508 0052 0022     	 movs r2,#0
 509 0054 5A73     	 strb r2,[r3,#13]
 334:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->last_reporter_flag = 0;
 510              	 .loc 1 334 0 discriminator 4
 511 0056 FB68     	 ldr r3,[r7,#12]
 512 0058 0022     	 movs r2,#0
 513 005a 1A73     	 strb r2,[r3,#12]
 335:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->use                = 0;
 514              	 .loc 1 335 0 discriminator 4
 515 005c FB68     	 ldr r3,[r7,#12]
 516 005e 0022     	 movs r2,#0
 517 0060 1A74     	 strb r2,[r3,#16]
 336:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->next               = igmp_group_list;
 518              	 .loc 1 336 0 discriminator 4
 519 0062 064B     	 ldr r3,.L40
 520 0064 1A68     	 ldr r2,[r3]
 521 0066 FB68     	 ldr r3,[r7,#12]
 522 0068 1A60     	 str r2,[r3]
 337:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     
 338:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     igmp_group_list = group;
 523              	 .loc 1 338 0 discriminator 4
 524 006a 044A     	 ldr r2,.L40
 525 006c FB68     	 ldr r3,[r7,#12]
 526 006e 1360     	 str r3,[r2]
 527              	.L37:
 339:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 340:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 341:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_lookup_group: %sallocated a new group with address ", (group?"":"i
 342:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, addr);
 343:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", ifp));
 344:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 345:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return group;
 528              	 .loc 1 345 0
 529 0070 FB68     	 ldr r3,[r7,#12]
 530              	.L36:
 346:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 531              	 .loc 1 346 0
 532 0072 1846     	 mov r0,r3
 533 0074 1037     	 adds r7,r7,#16
 534              	.LCFI28:
 535              	 .cfi_def_cfa_offset 8
 536 0076 BD46     	 mov sp,r7
 537              	.LCFI29:
 538              	 .cfi_def_cfa_register 13
 539              	 
 540 0078 80BD     	 pop {r7,pc}
 541              	.L41:
 542 007a 00BF     	 .align 2
 543              	.L40:
 544 007c 00000000 	 .word igmp_group_list
 545              	 .cfi_endproc
 546              	.LFE138:
 548              	 .section .text.igmp_remove_group,"ax",%progbits
 549              	 .align 2
 550              	 .thumb
 551              	 .thumb_func
 553              	igmp_remove_group:
 554              	.LFB139:
 347:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 348:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 349:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Remove a group in the global igmp_group_list
 350:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 351:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param group the group to remove from the global igmp_group_list
 352:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return ERR_OK if group was removed from the list, an err_t otherwise
 353:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 354:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static err_t
 355:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_remove_group(struct igmp_group *group)
 356:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 555              	 .loc 1 356 0
 556              	 .cfi_startproc
 557              	 
 558              	 
 559 0000 80B5     	 push {r7,lr}
 560              	.LCFI30:
 561              	 .cfi_def_cfa_offset 8
 562              	 .cfi_offset 7,-8
 563              	 .cfi_offset 14,-4
 564 0002 84B0     	 sub sp,sp,#16
 565              	.LCFI31:
 566              	 .cfi_def_cfa_offset 24
 567 0004 00AF     	 add r7,sp,#0
 568              	.LCFI32:
 569              	 .cfi_def_cfa_register 7
 570 0006 7860     	 str r0,[r7,#4]
 357:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   err_t err = ERR_OK;
 571              	 .loc 1 357 0
 572 0008 0023     	 movs r3,#0
 573 000a FB73     	 strb r3,[r7,#15]
 358:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 359:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Is it the first group? */
 360:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (igmp_group_list == group) {
 574              	 .loc 1 360 0
 575 000c 164B     	 ldr r3,.L50
 576 000e 1A68     	 ldr r2,[r3]
 577 0010 7B68     	 ldr r3,[r7,#4]
 578 0012 9A42     	 cmp r2,r3
 579 0014 04D1     	 bne .L43
 361:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     igmp_group_list = group->next;
 580              	 .loc 1 361 0
 581 0016 7B68     	 ldr r3,[r7,#4]
 582 0018 1B68     	 ldr r3,[r3]
 583 001a 134A     	 ldr r2,.L50
 584 001c 1360     	 str r3,[r2]
 585 001e 18E0     	 b .L44
 586              	.L43:
 587              	.LBB2:
 362:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   } else {
 363:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* look for group further down the list */
 364:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     struct igmp_group *tmpGroup;
 365:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     for (tmpGroup = igmp_group_list; tmpGroup != NULL; tmpGroup = tmpGroup->next) {
 588              	 .loc 1 365 0
 589 0020 114B     	 ldr r3,.L50
 590 0022 1B68     	 ldr r3,[r3]
 591 0024 BB60     	 str r3,[r7,#8]
 592 0026 0CE0     	 b .L45
 593              	.L48:
 366:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (tmpGroup->next == group) {
 594              	 .loc 1 366 0
 595 0028 BB68     	 ldr r3,[r7,#8]
 596 002a 1A68     	 ldr r2,[r3]
 597 002c 7B68     	 ldr r3,[r7,#4]
 598 002e 9A42     	 cmp r2,r3
 599 0030 04D1     	 bne .L46
 367:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         tmpGroup->next = group->next;
 600              	 .loc 1 367 0
 601 0032 7B68     	 ldr r3,[r7,#4]
 602 0034 1A68     	 ldr r2,[r3]
 603 0036 BB68     	 ldr r3,[r7,#8]
 604 0038 1A60     	 str r2,[r3]
 368:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         break;
 605              	 .loc 1 368 0
 606 003a 05E0     	 b .L47
 607              	.L46:
 365:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (tmpGroup->next == group) {
 608              	 .loc 1 365 0 discriminator 2
 609 003c BB68     	 ldr r3,[r7,#8]
 610 003e 1B68     	 ldr r3,[r3]
 611 0040 BB60     	 str r3,[r7,#8]
 612              	.L45:
 365:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (tmpGroup->next == group) {
 613              	 .loc 1 365 0 is_stmt 0 discriminator 1
 614 0042 BB68     	 ldr r3,[r7,#8]
 615 0044 002B     	 cmp r3,#0
 616 0046 EFD1     	 bne .L48
 617              	.L47:
 369:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 370:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 371:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Group not found in the global igmp_group_list */
 372:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (tmpGroup == NULL)
 618              	 .loc 1 372 0 is_stmt 1
 619 0048 BB68     	 ldr r3,[r7,#8]
 620 004a 002B     	 cmp r3,#0
 621 004c 01D1     	 bne .L44
 373:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       err = ERR_ARG;
 622              	 .loc 1 373 0
 623 004e F223     	 movs r3,#242
 624 0050 FB73     	 strb r3,[r7,#15]
 625              	.L44:
 626              	.LBE2:
 374:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 375:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* free group */
 376:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   memp_free(MEMP_IGMP_GROUP, group);
 627              	 .loc 1 376 0
 628 0052 0220     	 movs r0,#2
 629 0054 7968     	 ldr r1,[r7,#4]
 630 0056 FFF7FEFF 	 bl memp_free
 377:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 378:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return err;
 631              	 .loc 1 378 0
 632 005a FB7B     	 ldrb r3,[r7,#15]
 633 005c 5BB2     	 sxtb r3,r3
 379:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 634              	 .loc 1 379 0
 635 005e 1846     	 mov r0,r3
 636 0060 1037     	 adds r7,r7,#16
 637              	.LCFI33:
 638              	 .cfi_def_cfa_offset 8
 639 0062 BD46     	 mov sp,r7
 640              	.LCFI34:
 641              	 .cfi_def_cfa_register 13
 642              	 
 643 0064 80BD     	 pop {r7,pc}
 644              	.L51:
 645 0066 00BF     	 .align 2
 646              	.L50:
 647 0068 00000000 	 .word igmp_group_list
 648              	 .cfi_endproc
 649              	.LFE139:
 651              	 .section .text.igmp_input,"ax",%progbits
 652              	 .align 2
 653              	 .global igmp_input
 654              	 .thumb
 655              	 .thumb_func
 657              	igmp_input:
 658              	.LFB140:
 380:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 381:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 382:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Called from ip_input() if a new IGMP packet is received.
 383:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 384:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param p received igmp packet, p->payload pointing to the ip header
 385:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param inp network interface on which the packet was received
 386:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param dest destination ip address of the igmp packet
 387:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 388:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** void
 389:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_input(struct pbuf *p, struct netif *inp, ip_addr_t *dest)
 390:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 659              	 .loc 1 390 0
 660              	 .cfi_startproc
 661              	 
 662              	 
 663 0000 80B5     	 push {r7,lr}
 664              	.LCFI35:
 665              	 .cfi_def_cfa_offset 8
 666              	 .cfi_offset 7,-8
 667              	 .cfi_offset 14,-4
 668 0002 8AB0     	 sub sp,sp,#40
 669              	.LCFI36:
 670              	 .cfi_def_cfa_offset 48
 671 0004 00AF     	 add r7,sp,#0
 672              	.LCFI37:
 673              	 .cfi_def_cfa_register 7
 674 0006 F860     	 str r0,[r7,#12]
 675 0008 B960     	 str r1,[r7,#8]
 676 000a 7A60     	 str r2,[r7,#4]
 391:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct ip_hdr *    iphdr;
 392:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_msg*   igmp;
 393:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group* group;
 394:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group* groupref;
 395:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 396:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   IGMP_STATS_INC(igmp.recv);
 397:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 398:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Note that the length CAN be greater than 8 but only 8 are used - All are included in the check
 399:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   iphdr = (struct ip_hdr *)p->payload;
 677              	 .loc 1 399 0
 678 000c FB68     	 ldr r3,[r7,#12]
 679 000e 5B68     	 ldr r3,[r3,#4]
 680 0010 FB61     	 str r3,[r7,#28]
 400:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (pbuf_header(p, -(s16_t)(IPH_HL(iphdr) * 4)) || (p->len < IGMP_MINLEN)) {
 681              	 .loc 1 400 0
 682 0012 FB69     	 ldr r3,[r7,#28]
 683 0014 1B78     	 ldrb r3,[r3]
 684 0016 9BB2     	 uxth r3,r3
 685 0018 03F00F03 	 and r3,r3,#15
 686 001c 9BB2     	 uxth r3,r3
 687 001e 9B00     	 lsls r3,r3,#2
 688 0020 9BB2     	 uxth r3,r3
 689 0022 5B42     	 negs r3,r3
 690 0024 9BB2     	 uxth r3,r3
 691 0026 9BB2     	 uxth r3,r3
 692 0028 1BB2     	 sxth r3,r3
 693 002a F868     	 ldr r0,[r7,#12]
 694 002c 1946     	 mov r1,r3
 695 002e FFF7FEFF 	 bl pbuf_header
 696 0032 0346     	 mov r3,r0
 697 0034 002B     	 cmp r3,#0
 698 0036 03D1     	 bne .L53
 699              	 .loc 1 400 0 is_stmt 0 discriminator 1
 700 0038 FB68     	 ldr r3,[r7,#12]
 701 003a 5B89     	 ldrh r3,[r3,#10]
 702 003c 072B     	 cmp r3,#7
 703 003e 03D8     	 bhi .L54
 704              	.L53:
 401:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     pbuf_free(p);
 705              	 .loc 1 401 0 is_stmt 1
 706 0040 F868     	 ldr r0,[r7,#12]
 707 0042 FFF7FEFF 	 bl pbuf_free
 402:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.lenerr);
 403:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: length error\n"));
 404:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     return;
 708              	 .loc 1 404 0
 709 0046 88E0     	 b .L52
 710              	.L54:
 405:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 406:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 407:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: message from "));
 408:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, &(iphdr->src));
 409:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" to address "));
 410:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ip_addr_debug_print(IGMP_DEBUG, &(iphdr->dest));
 411:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", inp));
 412:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 413:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Now calculate and check the checksum */
 414:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   igmp = (struct igmp_msg *)p->payload;
 711              	 .loc 1 414 0
 712 0048 FB68     	 ldr r3,[r7,#12]
 713 004a 5B68     	 ldr r3,[r3,#4]
 714 004c BB61     	 str r3,[r7,#24]
 415:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (inet_chksum(igmp, p->len)) {
 715              	 .loc 1 415 0
 716 004e FB68     	 ldr r3,[r7,#12]
 717 0050 5B89     	 ldrh r3,[r3,#10]
 718 0052 B869     	 ldr r0,[r7,#24]
 719 0054 1946     	 mov r1,r3
 720 0056 FFF7FEFF 	 bl inet_chksum
 721 005a 0346     	 mov r3,r0
 722 005c 002B     	 cmp r3,#0
 723 005e 03D0     	 beq .L56
 416:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     pbuf_free(p);
 724              	 .loc 1 416 0
 725 0060 F868     	 ldr r0,[r7,#12]
 726 0062 FFF7FEFF 	 bl pbuf_free
 417:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.chkerr);
 418:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: checksum error\n"));
 419:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     return;
 727              	 .loc 1 419 0
 728 0066 78E0     	 b .L52
 729              	.L56:
 420:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 421:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 422:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* Packet is ok so find an existing group */
 423:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   group = igmp_lookfor_group(inp, dest); /* use the destination IP address of incoming packet */
 730              	 .loc 1 423 0
 731 0068 B868     	 ldr r0,[r7,#8]
 732 006a 7968     	 ldr r1,[r7,#4]
 733 006c FFF7FEFF 	 bl igmp_lookfor_group
 734 0070 7862     	 str r0,[r7,#36]
 424:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   
 425:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* If group can be found or create... */
 426:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (!group) {
 735              	 .loc 1 426 0
 736 0072 7B6A     	 ldr r3,[r7,#36]
 737 0074 002B     	 cmp r3,#0
 738 0076 03D1     	 bne .L57
 427:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     pbuf_free(p);
 739              	 .loc 1 427 0
 740 0078 F868     	 ldr r0,[r7,#12]
 741 007a FFF7FEFF 	 bl pbuf_free
 428:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.drop);
 429:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP frame not for us\n"));
 430:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     return;
 742              	 .loc 1 430 0
 743 007e 6CE0     	 b .L52
 744              	.L57:
 431:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 432:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 433:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* NOW ACT ON THE INCOMING MESSAGE TYPE... */
 434:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   switch (igmp->igmp_msgtype) {
 745              	 .loc 1 434 0
 746 0080 BB69     	 ldr r3,[r7,#24]
 747 0082 1B78     	 ldrb r3,[r3]
 748 0084 112B     	 cmp r3,#17
 749 0086 02D0     	 beq .L59
 750 0088 162B     	 cmp r3,#22
 751 008a 53D0     	 beq .L60
 435:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    case IGMP_MEMB_QUERY: {
 436:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      /* IGMP_MEMB_QUERY to the "all systems" address ? */
 437:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      if ((ip_addr_cmp(dest, &allsystems)) && ip_addr_isany(&igmp->igmp_group_address)) {
 438:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 439:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: General IGMP_MEMB_QUERY on \"ALL SYSTEMS\" address (22
 440:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 441:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        if (igmp->igmp_maxresp == 0) {
 442:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          IGMP_STATS_INC(igmp.rx_v1);
 443:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: got an all hosts query with time== 0 - this is V1 an
 444:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          igmp->igmp_maxresp = IGMP_V1_DELAYING_MEMBER_TMR;
 445:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        } else {
 446:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          IGMP_STATS_INC(igmp.rx_general);
 447:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        }
 448:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 449:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        groupref = igmp_group_list;
 450:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        while (groupref) {
 451:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          /* Do not send messages on the all systems group address! */
 452:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          if ((groupref->netif == inp) && (!(ip_addr_cmp(&(groupref->group_address), &allsystems))))
 453:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            igmp_delaying_member(groupref, igmp->igmp_maxresp);
 454:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          }
 455:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          groupref = groupref->next;
 456:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        }
 457:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      } else {
 458:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* IGMP_MEMB_QUERY to a specific group ? */
 459:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        if (!ip_addr_isany(&igmp->igmp_group_address)) {
 460:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_MEMB_QUERY to a specific group "));
 461:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          ip_addr_debug_print(IGMP_DEBUG, &igmp->igmp_group_address);
 462:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          if (ip_addr_cmp(dest, &allsystems)) {
 463:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            ip_addr_t groupaddr;
 464:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            LWIP_DEBUGF(IGMP_DEBUG, (" using \"ALL SYSTEMS\" address (224.0.0.1) [igmp_maxresp=%i]\n
 465:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            /* we first need to re-look for the group since we used dest last time */
 466:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            ip_addr_copy(groupaddr, igmp->igmp_group_address);
 467:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            group = igmp_lookfor_group(inp, &groupaddr);
 468:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          } else {
 469:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            LWIP_DEBUGF(IGMP_DEBUG, (" with the group address as destination [igmp_maxresp=%i]\n", (
 470:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          }
 471:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 472:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          if (group != NULL) {
 473:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            IGMP_STATS_INC(igmp.rx_group);
 474:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            igmp_delaying_member(group, igmp->igmp_maxresp);
 475:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          } else {
 476:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            IGMP_STATS_INC(igmp.drop);
 477:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          }
 478:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        } else {
 479:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          IGMP_STATS_INC(igmp.proterr);
 480:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        }
 481:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      }
 482:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      break;
 483:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    }
 484:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    case IGMP_V2_MEMB_REPORT: {
 485:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_V2_MEMB_REPORT\n"));
 486:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      IGMP_STATS_INC(igmp.rx_report);
 487:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      if (group->group_state == IGMP_GROUP_DELAYING_MEMBER) {
 488:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* This is on a specific group we have already looked up */
 489:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        group->timer = 0; /* stopped */
 490:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        group->group_state = IGMP_GROUP_IDLE_MEMBER;
 491:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        group->last_reporter_flag = 0;
 492:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      }
 493:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      break;
 494:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    }
 495:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    default: {
 496:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: unexpected msg %d in state %d on group %p on if %p\n",
 497:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        igmp->igmp_msgtype, group->group_state, &group, group->netif));
 498:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      IGMP_STATS_INC(igmp.proterr);
 499:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      break;
 752              	 .loc 1 499 0
 753 008c 61E0     	 b .L69
 754              	.L59:
 437:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 755              	 .loc 1 437 0
 756 008e 7B68     	 ldr r3,[r7,#4]
 757 0090 1A68     	 ldr r2,[r3]
 758 0092 334B     	 ldr r3,.L72
 759 0094 1B68     	 ldr r3,[r3]
 760 0096 9A42     	 cmp r2,r3
 761 0098 2AD1     	 bne .L61
 437:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 762              	 .loc 1 437 0 is_stmt 0 discriminator 1
 763 009a BB69     	 ldr r3,[r7,#24]
 764 009c 0433     	 adds r3,r3,#4
 765 009e 002B     	 cmp r3,#0
 766 00a0 03D0     	 beq .L62
 437:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 767              	 .loc 1 437 0 discriminator 2
 768 00a2 BB69     	 ldr r3,[r7,#24]
 769 00a4 5B68     	 ldr r3,[r3,#4]
 770 00a6 002B     	 cmp r3,#0
 771 00a8 22D1     	 bne .L61
 772              	.L62:
 441:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          IGMP_STATS_INC(igmp.rx_v1);
 773              	 .loc 1 441 0 is_stmt 1
 774 00aa BB69     	 ldr r3,[r7,#24]
 775 00ac 5B78     	 ldrb r3,[r3,#1]
 776 00ae 002B     	 cmp r3,#0
 777 00b0 02D1     	 bne .L63
 444:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        } else {
 778              	 .loc 1 444 0
 779 00b2 BB69     	 ldr r3,[r7,#24]
 780 00b4 0A22     	 movs r2,#10
 781 00b6 5A70     	 strb r2,[r3,#1]
 782              	.L63:
 449:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        while (groupref) {
 783              	 .loc 1 449 0
 784 00b8 2A4B     	 ldr r3,.L72+4
 785 00ba 1B68     	 ldr r3,[r3]
 786 00bc 3B62     	 str r3,[r7,#32]
 450:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          /* Do not send messages on the all systems group address! */
 787              	 .loc 1 450 0
 788 00be 13E0     	 b .L64
 789              	.L66:
 452:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            igmp_delaying_member(groupref, igmp->igmp_maxresp);
 790              	 .loc 1 452 0
 791 00c0 3B6A     	 ldr r3,[r7,#32]
 792 00c2 5A68     	 ldr r2,[r3,#4]
 793 00c4 BB68     	 ldr r3,[r7,#8]
 794 00c6 9A42     	 cmp r2,r3
 795 00c8 0BD1     	 bne .L65
 452:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            igmp_delaying_member(groupref, igmp->igmp_maxresp);
 796              	 .loc 1 452 0 is_stmt 0 discriminator 1
 797 00ca 3B6A     	 ldr r3,[r7,#32]
 798 00cc 9A68     	 ldr r2,[r3,#8]
 799 00ce 244B     	 ldr r3,.L72
 800 00d0 1B68     	 ldr r3,[r3]
 801 00d2 9A42     	 cmp r2,r3
 802 00d4 05D0     	 beq .L65
 453:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          }
 803              	 .loc 1 453 0 is_stmt 1
 804 00d6 BB69     	 ldr r3,[r7,#24]
 805 00d8 5B78     	 ldrb r3,[r3,#1]
 806 00da 386A     	 ldr r0,[r7,#32]
 807 00dc 1946     	 mov r1,r3
 808 00de FFF7FEFF 	 bl igmp_delaying_member
 809              	.L65:
 455:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        }
 810              	 .loc 1 455 0
 811 00e2 3B6A     	 ldr r3,[r7,#32]
 812 00e4 1B68     	 ldr r3,[r3]
 813 00e6 3B62     	 str r3,[r7,#32]
 814              	.L64:
 450:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          /* Do not send messages on the all systems group address! */
 815              	 .loc 1 450 0
 816 00e8 3B6A     	 ldr r3,[r7,#32]
 817 00ea 002B     	 cmp r3,#0
 818 00ec E8D1     	 bne .L66
 437:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* THIS IS THE GENERAL QUERY */
 819              	 .loc 1 437 0
 820 00ee 20E0     	 b .L67
 821              	.L61:
 459:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_MEMB_QUERY to a specific group "));
 822              	 .loc 1 459 0
 823 00f0 BB69     	 ldr r3,[r7,#24]
 824 00f2 0433     	 adds r3,r3,#4
 825 00f4 002B     	 cmp r3,#0
 826 00f6 1CD0     	 beq .L67
 459:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          LWIP_DEBUGF(IGMP_DEBUG, ("igmp_input: IGMP_MEMB_QUERY to a specific group "));
 827              	 .loc 1 459 0 is_stmt 0 discriminator 1
 828 00f8 BB69     	 ldr r3,[r7,#24]
 829 00fa 5B68     	 ldr r3,[r3,#4]
 830 00fc 002B     	 cmp r3,#0
 831 00fe 18D0     	 beq .L67
 462:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            ip_addr_t groupaddr;
 832              	 .loc 1 462 0 is_stmt 1
 833 0100 7B68     	 ldr r3,[r7,#4]
 834 0102 1A68     	 ldr r2,[r3]
 835 0104 164B     	 ldr r3,.L72
 836 0106 1B68     	 ldr r3,[r3]
 837 0108 9A42     	 cmp r2,r3
 838 010a 09D1     	 bne .L68
 839              	.LBB3:
 466:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            group = igmp_lookfor_group(inp, &groupaddr);
 840              	 .loc 1 466 0
 841 010c BB69     	 ldr r3,[r7,#24]
 842 010e 5B68     	 ldr r3,[r3,#4]
 843 0110 7B61     	 str r3,[r7,#20]
 467:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          } else {
 844              	 .loc 1 467 0
 845 0112 07F11403 	 add r3,r7,#20
 846 0116 B868     	 ldr r0,[r7,#8]
 847 0118 1946     	 mov r1,r3
 848 011a FFF7FEFF 	 bl igmp_lookfor_group
 849 011e 7862     	 str r0,[r7,#36]
 850              	.L68:
 851              	.LBE3:
 472:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****            IGMP_STATS_INC(igmp.rx_group);
 852              	 .loc 1 472 0
 853 0120 7B6A     	 ldr r3,[r7,#36]
 854 0122 002B     	 cmp r3,#0
 855 0124 05D0     	 beq .L67
 474:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****          } else {
 856              	 .loc 1 474 0
 857 0126 BB69     	 ldr r3,[r7,#24]
 858 0128 5B78     	 ldrb r3,[r3,#1]
 859 012a 786A     	 ldr r0,[r7,#36]
 860 012c 1946     	 mov r1,r3
 861 012e FFF7FEFF 	 bl igmp_delaying_member
 862              	.L67:
 482:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    }
 863              	 .loc 1 482 0 discriminator 1
 864 0132 0EE0     	 b .L69
 865              	.L60:
 487:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        /* This is on a specific group we have already looked up */
 866              	 .loc 1 487 0
 867 0134 7B6A     	 ldr r3,[r7,#36]
 868 0136 5B7B     	 ldrb r3,[r3,#13]
 869 0138 012B     	 cmp r3,#1
 870 013a 09D1     	 bne .L70
 489:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        group->group_state = IGMP_GROUP_IDLE_MEMBER;
 871              	 .loc 1 489 0
 872 013c 7B6A     	 ldr r3,[r7,#36]
 873 013e 0022     	 movs r2,#0
 874 0140 DA81     	 strh r2,[r3,#14]
 490:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****        group->last_reporter_flag = 0;
 875              	 .loc 1 490 0
 876 0142 7B6A     	 ldr r3,[r7,#36]
 877 0144 0222     	 movs r2,#2
 878 0146 5A73     	 strb r2,[r3,#13]
 491:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      }
 879              	 .loc 1 491 0
 880 0148 7B6A     	 ldr r3,[r7,#36]
 881 014a 0022     	 movs r2,#0
 882 014c 1A73     	 strb r2,[r3,#12]
 493:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    }
 883              	 .loc 1 493 0
 884 014e FFE7     	 b .L71
 885              	.L70:
 886              	.L71:
 887 0150 00BF     	 nop
 888              	.L69:
 500:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****    }
 501:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 502:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 503:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   pbuf_free(p);
 889              	 .loc 1 503 0
 890 0152 F868     	 ldr r0,[r7,#12]
 891 0154 FFF7FEFF 	 bl pbuf_free
 504:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return;
 892              	 .loc 1 504 0
 893 0158 00BF     	 nop
 894              	.L52:
 505:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 895              	 .loc 1 505 0
 896 015a 2837     	 adds r7,r7,#40
 897              	.LCFI38:
 898              	 .cfi_def_cfa_offset 8
 899 015c BD46     	 mov sp,r7
 900              	.LCFI39:
 901              	 .cfi_def_cfa_register 13
 902              	 
 903 015e 80BD     	 pop {r7,pc}
 904              	.L73:
 905              	 .align 2
 906              	.L72:
 907 0160 00000000 	 .word allsystems
 908 0164 00000000 	 .word igmp_group_list
 909              	 .cfi_endproc
 910              	.LFE140:
 912              	 .section .text.igmp_joingroup,"ax",%progbits
 913              	 .align 2
 914              	 .global igmp_joingroup
 915              	 .thumb
 916              	 .thumb_func
 918              	igmp_joingroup:
 919              	.LFB141:
 506:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 507:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 508:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Join a group on one network interface.
 509:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 510:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param ifaddr ip address of the network interface which should join a new group
 511:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param groupaddr the ip address of the group which to join
 512:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return ERR_OK if group was joined on the netif(s), an err_t otherwise
 513:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 514:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** err_t
 515:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_joingroup(ip_addr_t *ifaddr, ip_addr_t *groupaddr)
 516:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 920              	 .loc 1 516 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924 0000 80B5     	 push {r7,lr}
 925              	.LCFI40:
 926              	 .cfi_def_cfa_offset 8
 927              	 .cfi_offset 7,-8
 928              	 .cfi_offset 14,-4
 929 0002 86B0     	 sub sp,sp,#24
 930              	.LCFI41:
 931              	 .cfi_def_cfa_offset 32
 932 0004 00AF     	 add r7,sp,#0
 933              	.LCFI42:
 934              	 .cfi_def_cfa_register 7
 935 0006 7860     	 str r0,[r7,#4]
 936 0008 3960     	 str r1,[r7]
 517:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   err_t              err = ERR_VAL; /* no matching interface */
 937              	 .loc 1 517 0
 938 000a FA23     	 movs r3,#250
 939 000c FB75     	 strb r3,[r7,#23]
 518:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group;
 519:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct netif      *netif;
 520:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 521:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* make sure it is multicast address */
 522:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_joingroup: attempt to join non-multicast address", ip_addr_ismulticast(groupaddr
 940              	 .loc 1 522 0
 941 000e 3B68     	 ldr r3,[r7]
 942 0010 1B68     	 ldr r3,[r3]
 943 0012 03F0F003 	 and r3,r3,#240
 944 0016 E02B     	 cmp r3,#224
 945 0018 02D0     	 beq .L75
 946              	 .loc 1 522 0 is_stmt 0 discriminator 1
 947              	
 948 001a 00BE     	 bkpt 0
 949              	
 950              	 .thumb
 951 001c FA23     	 movs r3,#250
 952 001e 57E0     	 b .L76
 953              	.L75:
 523:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_joingroup: attempt to join allsystems address", (!ip_addr_cmp(groupaddr, &allsys
 954              	 .loc 1 523 0 is_stmt 1
 955 0020 3B68     	 ldr r3,[r7]
 956 0022 1A68     	 ldr r2,[r3]
 957 0024 2D4B     	 ldr r3,.L85
 958 0026 1B68     	 ldr r3,[r3]
 959 0028 9A42     	 cmp r2,r3
 960 002a 02D1     	 bne .L77
 961              	 .loc 1 523 0 is_stmt 0 discriminator 1
 962              	
 963 002c 00BE     	 bkpt 0
 964              	
 965              	 .thumb
 966 002e FA23     	 movs r3,#250
 967 0030 4EE0     	 b .L76
 968              	.L77:
 524:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 525:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* loop through netif's */
 526:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   netif = netif_list;
 969              	 .loc 1 526 0 is_stmt 1
 970 0032 2B4B     	 ldr r3,.L85+4
 971 0034 1B68     	 ldr r3,[r3]
 972 0036 3B61     	 str r3,[r7,#16]
 527:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (netif != NULL) {
 973              	 .loc 1 527 0
 974 0038 46E0     	 b .L78
 975              	.L84:
 528:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Should we join this interface ? */
 529:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if ((netif->flags & NETIF_FLAG_IGMP) && ((ip_addr_isany(ifaddr) || ip_addr_cmp(&(netif->ip_addr
 976              	 .loc 1 529 0
 977 003a 3B69     	 ldr r3,[r7,#16]
 978 003c 93F82D30 	 ldrb r3,[r3,#45]
 979 0040 DBB2     	 uxtb r3,r3
 980 0042 5BB2     	 sxtb r3,r3
 981 0044 002B     	 cmp r3,#0
 982 0046 3CDA     	 bge .L79
 983              	 .loc 1 529 0 is_stmt 0 discriminator 1
 984 0048 7B68     	 ldr r3,[r7,#4]
 985 004a 002B     	 cmp r3,#0
 986 004c 09D0     	 beq .L80
 987              	 .loc 1 529 0 discriminator 2
 988 004e 7B68     	 ldr r3,[r7,#4]
 989 0050 1B68     	 ldr r3,[r3]
 990 0052 002B     	 cmp r3,#0
 991 0054 05D0     	 beq .L80
 992              	 .loc 1 529 0 discriminator 3
 993 0056 3B69     	 ldr r3,[r7,#16]
 994 0058 5A68     	 ldr r2,[r3,#4]
 995 005a 7B68     	 ldr r3,[r7,#4]
 996 005c 1B68     	 ldr r3,[r3]
 997 005e 9A42     	 cmp r2,r3
 998 0060 2FD1     	 bne .L79
 999              	.L80:
 530:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* find group or create a new one if not found */
 531:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       group = igmp_lookup_group(netif, groupaddr);
 1000              	 .loc 1 531 0 is_stmt 1
 1001 0062 3869     	 ldr r0,[r7,#16]
 1002 0064 3968     	 ldr r1,[r7]
 1003 0066 FFF7FEFF 	 bl igmp_lookup_group
 1004 006a F860     	 str r0,[r7,#12]
 532:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 533:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (group != NULL) {
 1005              	 .loc 1 533 0
 1006 006c FB68     	 ldr r3,[r7,#12]
 1007 006e 002B     	 cmp r3,#0
 1008 0070 25D0     	 beq .L81
 534:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* This should create a new group, check the state to make sure */
 535:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         if (group->group_state != IGMP_GROUP_NON_MEMBER) {
 1009              	 .loc 1 535 0
 1010 0072 FB68     	 ldr r3,[r7,#12]
 1011 0074 5B7B     	 ldrb r3,[r3,#13]
 1012 0076 002B     	 cmp r3,#0
 1013 0078 18D1     	 bne .L82
 536:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: join to group not in state IGMP_GROUP_NON_MEMBE
 537:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         } else {
 538:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* OK - it was new group */
 539:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: join to new group: "));
 540:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 541:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 542:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 543:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* If first use of the group, allow the group at the MAC level */
 544:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           if ((group->use==0) && (netif->igmp_mac_filter != NULL)) {
 1014              	 .loc 1 544 0
 1015 007a FB68     	 ldr r3,[r7,#12]
 1016 007c 1B7C     	 ldrb r3,[r3,#16]
 1017 007e 002B     	 cmp r3,#0
 1018 0080 09D1     	 bne .L83
 1019              	 .loc 1 544 0 is_stmt 0 discriminator 1
 1020 0082 3B69     	 ldr r3,[r7,#16]
 1021 0084 5B6B     	 ldr r3,[r3,#52]
 1022 0086 002B     	 cmp r3,#0
 1023 0088 05D0     	 beq .L83
 545:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: igmp_mac_filter(ADD "));
 546:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 547:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 548:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             netif->igmp_mac_filter(netif, groupaddr, IGMP_ADD_MAC_FILTER);
 1024              	 .loc 1 548 0 is_stmt 1
 1025 008a 3B69     	 ldr r3,[r7,#16]
 1026 008c 5B6B     	 ldr r3,[r3,#52]
 1027 008e 3869     	 ldr r0,[r7,#16]
 1028 0090 3968     	 ldr r1,[r7]
 1029 0092 0122     	 movs r2,#1
 1030 0094 9847     	 blx r3
 1031              	.L83:
 549:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           }
 550:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 551:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           IGMP_STATS_INC(igmp.tx_join);
 552:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           igmp_send(group, IGMP_V2_MEMB_REPORT);
 1032              	 .loc 1 552 0
 1033 0096 F868     	 ldr r0,[r7,#12]
 1034 0098 1621     	 movs r1,#22
 1035 009a FFF7FEFF 	 bl igmp_send
 553:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 554:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           igmp_start_timer(group, IGMP_JOIN_DELAYING_MEMBER_TMR);
 1036              	 .loc 1 554 0
 1037 009e F868     	 ldr r0,[r7,#12]
 1038 00a0 0521     	 movs r1,#5
 1039 00a2 FFF7FEFF 	 bl igmp_start_timer
 555:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 556:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* Need to work out where this timer comes from */
 557:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           group->group_state = IGMP_GROUP_DELAYING_MEMBER;
 1040              	 .loc 1 557 0
 1041 00a6 FB68     	 ldr r3,[r7,#12]
 1042 00a8 0122     	 movs r2,#1
 1043 00aa 5A73     	 strb r2,[r3,#13]
 1044              	.L82:
 558:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         }
 559:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* Increment group use */
 560:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         group->use++;
 1045              	 .loc 1 560 0
 1046 00ac FB68     	 ldr r3,[r7,#12]
 1047 00ae 1B7C     	 ldrb r3,[r3,#16]
 1048 00b0 0133     	 adds r3,r3,#1
 1049 00b2 DAB2     	 uxtb r2,r3
 1050 00b4 FB68     	 ldr r3,[r7,#12]
 1051 00b6 1A74     	 strb r2,[r3,#16]
 561:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* Join on this interface */
 562:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         err = ERR_OK;
 1052              	 .loc 1 562 0
 1053 00b8 0023     	 movs r3,#0
 1054 00ba FB75     	 strb r3,[r7,#23]
 1055 00bc 01E0     	 b .L79
 1056              	.L81:
 563:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       } else {
 564:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* Return an error even if some network interfaces are joined */
 565:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /** @todo undo any other netif already joined */
 566:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_joingroup: Not enought memory to join to group\n"));
 567:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         return ERR_MEM;
 1057              	 .loc 1 567 0
 1058 00be FF23     	 movs r3,#255
 1059 00c0 06E0     	 b .L76
 1060              	.L79:
 568:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 569:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 570:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* proceed to next network interface */
 571:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     netif = netif->next;
 1061              	 .loc 1 571 0
 1062 00c2 3B69     	 ldr r3,[r7,#16]
 1063 00c4 1B68     	 ldr r3,[r3]
 1064 00c6 3B61     	 str r3,[r7,#16]
 1065              	.L78:
 527:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Should we join this interface ? */
 1066              	 .loc 1 527 0
 1067 00c8 3B69     	 ldr r3,[r7,#16]
 1068 00ca 002B     	 cmp r3,#0
 1069 00cc B5D1     	 bne .L84
 572:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 573:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 574:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return err;
 1070              	 .loc 1 574 0
 1071 00ce FB7D     	 ldrb r3,[r7,#23]
 1072              	.L76:
 1073 00d0 5BB2     	 sxtb r3,r3
 575:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1074              	 .loc 1 575 0
 1075 00d2 1846     	 mov r0,r3
 1076 00d4 1837     	 adds r7,r7,#24
 1077              	.LCFI43:
 1078              	 .cfi_def_cfa_offset 8
 1079 00d6 BD46     	 mov sp,r7
 1080              	.LCFI44:
 1081              	 .cfi_def_cfa_register 13
 1082              	 
 1083 00d8 80BD     	 pop {r7,pc}
 1084              	.L86:
 1085 00da 00BF     	 .align 2
 1086              	.L85:
 1087 00dc 00000000 	 .word allsystems
 1088 00e0 00000000 	 .word netif_list
 1089              	 .cfi_endproc
 1090              	.LFE141:
 1092              	 .section .text.igmp_leavegroup,"ax",%progbits
 1093              	 .align 2
 1094              	 .global igmp_leavegroup
 1095              	 .thumb
 1096              	 .thumb_func
 1098              	igmp_leavegroup:
 1099              	.LFB142:
 576:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 577:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 578:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Leave a group on one network interface.
 579:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 580:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param ifaddr ip address of the network interface which should leave a group
 581:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param groupaddr the ip address of the group which to leave
 582:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return ERR_OK if group was left on the netif(s), an err_t otherwise
 583:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 584:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** err_t
 585:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_leavegroup(ip_addr_t *ifaddr, ip_addr_t *groupaddr)
 586:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1100              	 .loc 1 586 0
 1101              	 .cfi_startproc
 1102              	 
 1103              	 
 1104 0000 80B5     	 push {r7,lr}
 1105              	.LCFI45:
 1106              	 .cfi_def_cfa_offset 8
 1107              	 .cfi_offset 7,-8
 1108              	 .cfi_offset 14,-4
 1109 0002 86B0     	 sub sp,sp,#24
 1110              	.LCFI46:
 1111              	 .cfi_def_cfa_offset 32
 1112 0004 00AF     	 add r7,sp,#0
 1113              	.LCFI47:
 1114              	 .cfi_def_cfa_register 7
 1115 0006 7860     	 str r0,[r7,#4]
 1116 0008 3960     	 str r1,[r7]
 587:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   err_t              err = ERR_VAL; /* no matching interface */
 1117              	 .loc 1 587 0
 1118 000a FA23     	 movs r3,#250
 1119 000c FB75     	 strb r3,[r7,#23]
 588:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group;
 589:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct netif      *netif;
 590:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 591:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* make sure it is multicast address */
 592:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_leavegroup: attempt to leave non-multicast address", ip_addr_ismulticast(groupad
 1120              	 .loc 1 592 0
 1121 000e 3B68     	 ldr r3,[r7]
 1122 0010 1B68     	 ldr r3,[r3]
 1123 0012 03F0F003 	 and r3,r3,#240
 1124 0016 E02B     	 cmp r3,#224
 1125 0018 02D0     	 beq .L88
 1126              	 .loc 1 592 0 is_stmt 0 discriminator 1
 1127              	
 1128 001a 00BE     	 bkpt 0
 1129              	
 1130              	 .thumb
 1131 001c FA23     	 movs r3,#250
 1132 001e 51E0     	 b .L89
 1133              	.L88:
 593:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   LWIP_ERROR("igmp_leavegroup: attempt to leave allsystems address", (!ip_addr_cmp(groupaddr, &alls
 1134              	 .loc 1 593 0 is_stmt 1
 1135 0020 3B68     	 ldr r3,[r7]
 1136 0022 1A68     	 ldr r2,[r3]
 1137 0024 2A4B     	 ldr r3,.L99
 1138 0026 1B68     	 ldr r3,[r3]
 1139 0028 9A42     	 cmp r2,r3
 1140 002a 02D1     	 bne .L90
 1141              	 .loc 1 593 0 is_stmt 0 discriminator 1
 1142              	
 1143 002c 00BE     	 bkpt 0
 1144              	
 1145              	 .thumb
 1146 002e FA23     	 movs r3,#250
 1147 0030 48E0     	 b .L89
 1148              	.L90:
 594:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 595:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* loop through netif's */
 596:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   netif = netif_list;
 1149              	 .loc 1 596 0 is_stmt 1
 1150 0032 284B     	 ldr r3,.L99+4
 1151 0034 1B68     	 ldr r3,[r3]
 1152 0036 3B61     	 str r3,[r7,#16]
 597:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (netif != NULL) {
 1153              	 .loc 1 597 0
 1154 0038 40E0     	 b .L91
 1155              	.L98:
 598:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Should we leave this interface ? */
 599:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if ((netif->flags & NETIF_FLAG_IGMP) && ((ip_addr_isany(ifaddr) || ip_addr_cmp(&(netif->ip_addr
 1156              	 .loc 1 599 0
 1157 003a 3B69     	 ldr r3,[r7,#16]
 1158 003c 93F82D30 	 ldrb r3,[r3,#45]
 1159 0040 DBB2     	 uxtb r3,r3
 1160 0042 5BB2     	 sxtb r3,r3
 1161 0044 002B     	 cmp r3,#0
 1162 0046 36DA     	 bge .L92
 1163              	 .loc 1 599 0 is_stmt 0 discriminator 1
 1164 0048 7B68     	 ldr r3,[r7,#4]
 1165 004a 002B     	 cmp r3,#0
 1166 004c 09D0     	 beq .L93
 1167              	 .loc 1 599 0 discriminator 2
 1168 004e 7B68     	 ldr r3,[r7,#4]
 1169 0050 1B68     	 ldr r3,[r3]
 1170 0052 002B     	 cmp r3,#0
 1171 0054 05D0     	 beq .L93
 1172              	 .loc 1 599 0 discriminator 3
 1173 0056 3B69     	 ldr r3,[r7,#16]
 1174 0058 5A68     	 ldr r2,[r3,#4]
 1175 005a 7B68     	 ldr r3,[r7,#4]
 1176 005c 1B68     	 ldr r3,[r3]
 1177 005e 9A42     	 cmp r2,r3
 1178 0060 29D1     	 bne .L92
 1179              	.L93:
 600:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       /* find group */
 601:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       group = igmp_lookfor_group(netif, groupaddr);
 1180              	 .loc 1 601 0 is_stmt 1
 1181 0062 3869     	 ldr r0,[r7,#16]
 1182 0064 3968     	 ldr r1,[r7]
 1183 0066 FFF7FEFF 	 bl igmp_lookfor_group
 1184 006a F860     	 str r0,[r7,#12]
 602:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 603:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (group != NULL) {
 1185              	 .loc 1 603 0
 1186 006c FB68     	 ldr r3,[r7,#12]
 1187 006e 002B     	 cmp r3,#0
 1188 0070 21D0     	 beq .L92
 604:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* Only send a leave if the flag is set according to the state diagram */
 605:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: Leaving group: "));
 606:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 607:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("\n"));
 608:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 609:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* If there is no other use of the group */
 610:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         if (group->use <= 1) {
 1189              	 .loc 1 610 0
 1190 0072 FB68     	 ldr r3,[r7,#12]
 1191 0074 1B7C     	 ldrb r3,[r3,#16]
 1192 0076 012B     	 cmp r3,#1
 1193 0078 15D8     	 bhi .L94
 611:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* If we are the last reporter for this group */
 612:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           if (group->last_reporter_flag) {
 1194              	 .loc 1 612 0
 1195 007a FB68     	 ldr r3,[r7,#12]
 1196 007c 1B7B     	 ldrb r3,[r3,#12]
 1197 007e 002B     	 cmp r3,#0
 1198 0080 03D0     	 beq .L95
 613:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: sending leaving group\n"));
 614:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             IGMP_STATS_INC(igmp.tx_leave);
 615:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             igmp_send(group, IGMP_LEAVE_GROUP);
 1199              	 .loc 1 615 0
 1200 0082 F868     	 ldr r0,[r7,#12]
 1201 0084 1721     	 movs r1,#23
 1202 0086 FFF7FEFF 	 bl igmp_send
 1203              	.L95:
 616:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           }
 617:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           
 618:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* Disable the group at the MAC level */
 619:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           if (netif->igmp_mac_filter != NULL) {
 1204              	 .loc 1 619 0
 1205 008a 3B69     	 ldr r3,[r7,#16]
 1206 008c 5B6B     	 ldr r3,[r3,#52]
 1207 008e 002B     	 cmp r3,#0
 1208 0090 05D0     	 beq .L96
 620:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: igmp_mac_filter(DEL "));
 621:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 622:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             LWIP_DEBUGF(IGMP_DEBUG, (") on if %p\n", netif));
 623:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             netif->igmp_mac_filter(netif, groupaddr, IGMP_DEL_MAC_FILTER);
 1209              	 .loc 1 623 0
 1210 0092 3B69     	 ldr r3,[r7,#16]
 1211 0094 5B6B     	 ldr r3,[r3,#52]
 1212 0096 3869     	 ldr r0,[r7,#16]
 1213 0098 3968     	 ldr r1,[r7]
 1214 009a 0022     	 movs r2,#0
 1215 009c 9847     	 blx r3
 1216              	.L96:
 624:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           }
 625:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           
 626:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: remove group: "));
 627:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           ip_addr_debug_print(IGMP_DEBUG, groupaddr);
 628:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           LWIP_DEBUGF(IGMP_DEBUG, ("\n"));          
 629:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           
 630:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* Free the group */
 631:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           igmp_remove_group(group);
 1217              	 .loc 1 631 0
 1218 009e F868     	 ldr r0,[r7,#12]
 1219 00a0 FFF7FEFF 	 bl igmp_remove_group
 1220 00a4 05E0     	 b .L97
 1221              	.L94:
 632:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         } else {
 633:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           /* Decrement group use */
 634:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****           group->use--;
 1222              	 .loc 1 634 0
 1223 00a6 FB68     	 ldr r3,[r7,#12]
 1224 00a8 1B7C     	 ldrb r3,[r3,#16]
 1225 00aa 013B     	 subs r3,r3,#1
 1226 00ac DAB2     	 uxtb r2,r3
 1227 00ae FB68     	 ldr r3,[r7,#12]
 1228 00b0 1A74     	 strb r2,[r3,#16]
 1229              	.L97:
 635:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         }
 636:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* Leave on this interface */
 637:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         err = ERR_OK;
 1230              	 .loc 1 637 0
 1231 00b2 0023     	 movs r3,#0
 1232 00b4 FB75     	 strb r3,[r7,#23]
 1233              	.L92:
 638:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       } else {
 639:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         /* It's not a fatal error on "leavegroup" */
 640:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         LWIP_DEBUGF(IGMP_DEBUG, ("igmp_leavegroup: not member of group\n"));
 641:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 642:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 643:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* proceed to next network interface */
 644:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     netif = netif->next;
 1234              	 .loc 1 644 0
 1235 00b6 3B69     	 ldr r3,[r7,#16]
 1236 00b8 1B68     	 ldr r3,[r3]
 1237 00ba 3B61     	 str r3,[r7,#16]
 1238              	.L91:
 597:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     /* Should we leave this interface ? */
 1239              	 .loc 1 597 0
 1240 00bc 3B69     	 ldr r3,[r7,#16]
 1241 00be 002B     	 cmp r3,#0
 1242 00c0 BBD1     	 bne .L98
 645:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 646:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 647:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return err;
 1243              	 .loc 1 647 0
 1244 00c2 FB7D     	 ldrb r3,[r7,#23]
 1245              	.L89:
 1246 00c4 5BB2     	 sxtb r3,r3
 648:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1247              	 .loc 1 648 0
 1248 00c6 1846     	 mov r0,r3
 1249 00c8 1837     	 adds r7,r7,#24
 1250              	.LCFI48:
 1251              	 .cfi_def_cfa_offset 8
 1252 00ca BD46     	 mov sp,r7
 1253              	.LCFI49:
 1254              	 .cfi_def_cfa_register 13
 1255              	 
 1256 00cc 80BD     	 pop {r7,pc}
 1257              	.L100:
 1258 00ce 00BF     	 .align 2
 1259              	.L99:
 1260 00d0 00000000 	 .word allsystems
 1261 00d4 00000000 	 .word netif_list
 1262              	 .cfi_endproc
 1263              	.LFE142:
 1265              	 .section .text.igmp_tmr,"ax",%progbits
 1266              	 .align 2
 1267              	 .global igmp_tmr
 1268              	 .thumb
 1269              	 .thumb_func
 1271              	igmp_tmr:
 1272              	.LFB143:
 649:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 650:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 651:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * The igmp timer function (both for NO_SYS=1 and =0)
 652:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Should be called every IGMP_TMR_INTERVAL milliseconds (100 ms is default).
 653:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 654:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** void
 655:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_tmr(void)
 656:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1273              	 .loc 1 656 0
 1274              	 .cfi_startproc
 1275              	 
 1276              	 
 1277 0000 80B5     	 push {r7,lr}
 1278              	.LCFI50:
 1279              	 .cfi_def_cfa_offset 8
 1280              	 .cfi_offset 7,-8
 1281              	 .cfi_offset 14,-4
 1282 0002 82B0     	 sub sp,sp,#8
 1283              	.LCFI51:
 1284              	 .cfi_def_cfa_offset 16
 1285 0004 00AF     	 add r7,sp,#0
 1286              	.LCFI52:
 1287              	 .cfi_def_cfa_register 7
 657:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_group *group = igmp_group_list;
 1288              	 .loc 1 657 0
 1289 0006 0F4B     	 ldr r3,.L105
 1290 0008 1B68     	 ldr r3,[r3]
 1291 000a 7B60     	 str r3,[r7,#4]
 658:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 659:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   while (group != NULL) {
 1292              	 .loc 1 659 0
 1293 000c 13E0     	 b .L102
 1294              	.L104:
 660:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (group->timer > 0) {
 1295              	 .loc 1 660 0
 1296 000e 7B68     	 ldr r3,[r7,#4]
 1297 0010 DB89     	 ldrh r3,[r3,#14]
 1298 0012 002B     	 cmp r3,#0
 1299 0014 0CD0     	 beq .L103
 661:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       group->timer--;
 1300              	 .loc 1 661 0
 1301 0016 7B68     	 ldr r3,[r7,#4]
 1302 0018 DB89     	 ldrh r3,[r3,#14]
 1303 001a 013B     	 subs r3,r3,#1
 1304 001c 9AB2     	 uxth r2,r3
 1305 001e 7B68     	 ldr r3,[r7,#4]
 1306 0020 DA81     	 strh r2,[r3,#14]
 662:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (group->timer == 0) {
 1307              	 .loc 1 662 0
 1308 0022 7B68     	 ldr r3,[r7,#4]
 1309 0024 DB89     	 ldrh r3,[r3,#14]
 1310 0026 002B     	 cmp r3,#0
 1311 0028 02D1     	 bne .L103
 663:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         igmp_timeout(group);
 1312              	 .loc 1 663 0
 1313 002a 7868     	 ldr r0,[r7,#4]
 1314 002c FFF7FEFF 	 bl igmp_timeout
 1315              	.L103:
 664:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 665:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 666:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group = group->next;
 1316              	 .loc 1 666 0
 1317 0030 7B68     	 ldr r3,[r7,#4]
 1318 0032 1B68     	 ldr r3,[r3]
 1319 0034 7B60     	 str r3,[r7,#4]
 1320              	.L102:
 659:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (group->timer > 0) {
 1321              	 .loc 1 659 0
 1322 0036 7B68     	 ldr r3,[r7,#4]
 1323 0038 002B     	 cmp r3,#0
 1324 003a E8D1     	 bne .L104
 667:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 668:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1325              	 .loc 1 668 0
 1326 003c 0837     	 adds r7,r7,#8
 1327              	.LCFI53:
 1328              	 .cfi_def_cfa_offset 8
 1329 003e BD46     	 mov sp,r7
 1330              	.LCFI54:
 1331              	 .cfi_def_cfa_register 13
 1332              	 
 1333 0040 80BD     	 pop {r7,pc}
 1334              	.L106:
 1335 0042 00BF     	 .align 2
 1336              	.L105:
 1337 0044 00000000 	 .word igmp_group_list
 1338              	 .cfi_endproc
 1339              	.LFE143:
 1341              	 .section .text.igmp_timeout,"ax",%progbits
 1342              	 .align 2
 1343              	 .thumb
 1344              	 .thumb_func
 1346              	igmp_timeout:
 1347              	.LFB144:
 669:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 670:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 671:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Called if a timeout for one group is reached.
 672:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Sends a report for this group.
 673:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 674:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param group an igmp_group for which a timeout is reached
 675:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 676:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void
 677:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_timeout(struct igmp_group *group)
 678:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1348              	 .loc 1 678 0
 1349              	 .cfi_startproc
 1350              	 
 1351              	 
 1352 0000 80B5     	 push {r7,lr}
 1353              	.LCFI55:
 1354              	 .cfi_def_cfa_offset 8
 1355              	 .cfi_offset 7,-8
 1356              	 .cfi_offset 14,-4
 1357 0002 82B0     	 sub sp,sp,#8
 1358              	.LCFI56:
 1359              	 .cfi_def_cfa_offset 16
 1360 0004 00AF     	 add r7,sp,#0
 1361              	.LCFI57:
 1362              	 .cfi_def_cfa_register 7
 1363 0006 7860     	 str r0,[r7,#4]
 679:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* If the state is IGMP_GROUP_DELAYING_MEMBER then we send a report for this group */
 680:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (group->group_state == IGMP_GROUP_DELAYING_MEMBER) {
 1364              	 .loc 1 680 0
 1365 0008 7B68     	 ldr r3,[r7,#4]
 1366 000a 5B7B     	 ldrb r3,[r3,#13]
 1367 000c 012B     	 cmp r3,#1
 1368 000e 03D1     	 bne .L107
 681:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_timeout: report membership for group with address "));
 682:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     ip_addr_debug_print(IGMP_DEBUG, &(group->group_address));
 683:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, (" on if %p\n", group->netif));
 684:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 685:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.tx_report);
 686:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     igmp_send(group, IGMP_V2_MEMB_REPORT);
 1369              	 .loc 1 686 0
 1370 0010 7868     	 ldr r0,[r7,#4]
 1371 0012 1621     	 movs r1,#22
 1372 0014 FFF7FEFF 	 bl igmp_send
 1373              	.L107:
 687:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 688:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1374              	 .loc 1 688 0
 1375 0018 0837     	 adds r7,r7,#8
 1376              	.LCFI58:
 1377              	 .cfi_def_cfa_offset 8
 1378 001a BD46     	 mov sp,r7
 1379              	.LCFI59:
 1380              	 .cfi_def_cfa_register 13
 1381              	 
 1382 001c 80BD     	 pop {r7,pc}
 1383              	 .cfi_endproc
 1384              	.LFE144:
 1386 001e 00BF     	 .section .text.igmp_start_timer,"ax",%progbits
 1387              	 .align 2
 1388              	 .thumb
 1389              	 .thumb_func
 1391              	igmp_start_timer:
 1392              	.LFB145:
 689:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 690:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 691:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Start a timer for an igmp group
 692:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 693:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param group the igmp_group for which to start a timer
 694:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param max_time the time in multiples of IGMP_TMR_INTERVAL (decrease with
 695:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *        every call to igmp_tmr())
 696:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 697:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void
 698:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_start_timer(struct igmp_group *group, u8_t max_time)
 699:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1393              	 .loc 1 699 0
 1394              	 .cfi_startproc
 1395              	 
 1396              	 
 1397 0000 80B5     	 push {r7,lr}
 1398              	.LCFI60:
 1399              	 .cfi_def_cfa_offset 8
 1400              	 .cfi_offset 7,-8
 1401              	 .cfi_offset 14,-4
 1402 0002 82B0     	 sub sp,sp,#8
 1403              	.LCFI61:
 1404              	 .cfi_def_cfa_offset 16
 1405 0004 00AF     	 add r7,sp,#0
 1406              	.LCFI62:
 1407              	 .cfi_def_cfa_register 7
 1408 0006 7860     	 str r0,[r7,#4]
 1409 0008 0B46     	 mov r3,r1
 1410 000a FB70     	 strb r3,[r7,#3]
 700:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* ensure the input value is > 0 */
 701:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (max_time == 0) {
 1411              	 .loc 1 701 0
 1412 000c FB78     	 ldrb r3,[r7,#3]
 1413 000e 002B     	 cmp r3,#0
 1414 0010 01D1     	 bne .L110
 702:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     max_time = 1;
 1415              	 .loc 1 702 0
 1416 0012 0123     	 movs r3,#1
 1417 0014 FB70     	 strb r3,[r7,#3]
 1418              	.L110:
 703:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 704:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* ensure the random value is > 0 */
 705:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   group->timer = (LWIP_RAND() % (max_time - 1)) + 1;
 1419              	 .loc 1 705 0
 1420 0016 FFF7FEFF 	 bl rand
 1421 001a 0346     	 mov r3,r0
 1422 001c FA78     	 ldrb r2,[r7,#3]
 1423 001e 013A     	 subs r2,r2,#1
 1424 0020 B3FBF2F1 	 udiv r1,r3,r2
 1425 0024 02FB01F2 	 mul r2,r2,r1
 1426 0028 9B1A     	 subs r3,r3,r2
 1427 002a 9BB2     	 uxth r3,r3
 1428 002c 0133     	 adds r3,r3,#1
 1429 002e 9AB2     	 uxth r2,r3
 1430 0030 7B68     	 ldr r3,[r7,#4]
 1431 0032 DA81     	 strh r2,[r3,#14]
 706:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1432              	 .loc 1 706 0
 1433 0034 0837     	 adds r7,r7,#8
 1434              	.LCFI63:
 1435              	 .cfi_def_cfa_offset 8
 1436 0036 BD46     	 mov sp,r7
 1437              	.LCFI64:
 1438              	 .cfi_def_cfa_register 13
 1439              	 
 1440 0038 80BD     	 pop {r7,pc}
 1441              	 .cfi_endproc
 1442              	.LFE145:
 1444 003a 00BF     	 .section .text.igmp_delaying_member,"ax",%progbits
 1445              	 .align 2
 1446              	 .thumb
 1447              	 .thumb_func
 1449              	igmp_delaying_member:
 1450              	.LFB146:
 707:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 708:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 709:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Delaying membership report for a group if necessary
 710:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 711:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param group the igmp_group for which "delaying" membership report
 712:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param maxresp query delay
 713:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 714:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void
 715:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_delaying_member(struct igmp_group *group, u8_t maxresp)
 716:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1451              	 .loc 1 716 0
 1452              	 .cfi_startproc
 1453              	 
 1454              	 
 1455 0000 80B5     	 push {r7,lr}
 1456              	.LCFI65:
 1457              	 .cfi_def_cfa_offset 8
 1458              	 .cfi_offset 7,-8
 1459              	 .cfi_offset 14,-4
 1460 0002 82B0     	 sub sp,sp,#8
 1461              	.LCFI66:
 1462              	 .cfi_def_cfa_offset 16
 1463 0004 00AF     	 add r7,sp,#0
 1464              	.LCFI67:
 1465              	 .cfi_def_cfa_register 7
 1466 0006 7860     	 str r0,[r7,#4]
 1467 0008 0B46     	 mov r3,r1
 1468 000a FB70     	 strb r3,[r7,#3]
 717:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
 1469              	 .loc 1 717 0
 1470 000c 7B68     	 ldr r3,[r7,#4]
 1471 000e 5B7B     	 ldrb r3,[r3,#13]
 1472 0010 022B     	 cmp r3,#2
 1473 0012 0DD0     	 beq .L112
 718:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      ((group->group_state == IGMP_GROUP_DELAYING_MEMBER) &&
 1474              	 .loc 1 718 0 discriminator 1
 1475 0014 7B68     	 ldr r3,[r7,#4]
 1476 0016 5B7B     	 ldrb r3,[r3,#13]
 717:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if ((group->group_state == IGMP_GROUP_IDLE_MEMBER) ||
 1477              	 .loc 1 717 0 discriminator 1
 1478 0018 012B     	 cmp r3,#1
 1479 001a 11D1     	 bne .L111
 719:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       ((group->timer == 0) || (maxresp < group->timer)))) {
 1480              	 .loc 1 719 0
 1481 001c 7B68     	 ldr r3,[r7,#4]
 1482 001e DB89     	 ldrh r3,[r3,#14]
 718:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      ((group->group_state == IGMP_GROUP_DELAYING_MEMBER) &&
 1483              	 .loc 1 718 0
 1484 0020 002B     	 cmp r3,#0
 1485 0022 05D0     	 beq .L112
 1486              	 .loc 1 719 0
 1487 0024 FB78     	 ldrb r3,[r7,#3]
 1488 0026 9AB2     	 uxth r2,r3
 1489 0028 7B68     	 ldr r3,[r7,#4]
 1490 002a DB89     	 ldrh r3,[r3,#14]
 1491 002c 9A42     	 cmp r2,r3
 1492 002e 07D2     	 bcs .L111
 1493              	.L112:
 720:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     igmp_start_timer(group, maxresp);
 1494              	 .loc 1 720 0
 1495 0030 FB78     	 ldrb r3,[r7,#3]
 1496 0032 7868     	 ldr r0,[r7,#4]
 1497 0034 1946     	 mov r1,r3
 1498 0036 FFF7FEFF 	 bl igmp_start_timer
 721:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     group->group_state = IGMP_GROUP_DELAYING_MEMBER;
 1499              	 .loc 1 721 0
 1500 003a 7B68     	 ldr r3,[r7,#4]
 1501 003c 0122     	 movs r2,#1
 1502 003e 5A73     	 strb r2,[r3,#13]
 1503              	.L111:
 722:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 723:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1504              	 .loc 1 723 0
 1505 0040 0837     	 adds r7,r7,#8
 1506              	.LCFI68:
 1507              	 .cfi_def_cfa_offset 8
 1508 0042 BD46     	 mov sp,r7
 1509              	.LCFI69:
 1510              	 .cfi_def_cfa_register 13
 1511              	 
 1512 0044 80BD     	 pop {r7,pc}
 1513              	 .cfi_endproc
 1514              	.LFE146:
 1516 0046 00BF     	 .section .text.igmp_ip_output_if,"ax",%progbits
 1517              	 .align 2
 1518              	 .thumb
 1519              	 .thumb_func
 1521              	igmp_ip_output_if:
 1522              	.LFB147:
 724:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 725:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 726:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 727:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Sends an IP packet on a network interface. This function constructs the IP header
 728:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * and calculates the IP header checksum. If the source IP address is NULL,
 729:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * the IP address of the outgoing network interface is filled in as source address.
 730:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 731:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param p the packet to send (p->payload points to the data, e.g. next
 732:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             protocol header; if dest == IP_HDRINCL, p already includes an IP
 733:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****             header and p->payload points to that IP header)
 734:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param src the source IP address to send from (if src == IP_ADDR_ANY, the
 735:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *         IP  address of the netif used to send is used as source address)
 736:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param dest the destination IP address to send the packet to
 737:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param ttl the TTL value to be set in the IP header
 738:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param proto the PROTOCOL to be set in the IP header
 739:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param netif the netif on which to send this packet
 740:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @return ERR_OK if the packet was sent OK
 741:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *         ERR_BUF if p doesn't have enough space for IP/LINK headers
 742:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *         returns errors returned by netif->output
 743:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 744:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static err_t
 745:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_ip_output_if(struct pbuf *p, ip_addr_t *src, ip_addr_t *dest, struct netif *netif)
 746:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1523              	 .loc 1 746 0
 1524              	 .cfi_startproc
 1525              	 
 1526              	 
 1527 0000 80B5     	 push {r7,lr}
 1528              	.LCFI70:
 1529              	 .cfi_def_cfa_offset 8
 1530              	 .cfi_offset 7,-8
 1531              	 .cfi_offset 14,-4
 1532 0002 8CB0     	 sub sp,sp,#48
 1533              	.LCFI71:
 1534              	 .cfi_def_cfa_offset 56
 1535 0004 06AF     	 add r7,sp,#24
 1536              	.LCFI72:
 1537              	 .cfi_def_cfa 7,32
 1538 0006 F860     	 str r0,[r7,#12]
 1539 0008 B960     	 str r1,[r7,#8]
 1540 000a 7A60     	 str r2,[r7,#4]
 1541 000c 3B60     	 str r3,[r7]
 747:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* This is the "router alert" option */
 748:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   u16_t ra[2];
 749:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ra[0] = PP_HTONS(ROUTER_ALERT);
 1542              	 .loc 1 749 0
 1543 000e 40F29443 	 movw r3,#1172
 1544 0012 BB82     	 strh r3,[r7,#20]
 750:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ra[1] = 0x0000; /* Router shall examine packet */
 1545              	 .loc 1 750 0
 1546 0014 0023     	 movs r3,#0
 1547 0016 FB82     	 strh r3,[r7,#22]
 751:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   IGMP_STATS_INC(igmp.xmit);
 752:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   return ip_output_if_opt(p, src, dest, IGMP_TTL, 0, IP_PROTO_IGMP, netif, ra, ROUTER_ALERTLEN);
 1548              	 .loc 1 752 0
 1549 0018 0023     	 movs r3,#0
 1550 001a 0093     	 str r3,[sp]
 1551 001c 0223     	 movs r3,#2
 1552 001e 0193     	 str r3,[sp,#4]
 1553 0020 3B68     	 ldr r3,[r7]
 1554 0022 0293     	 str r3,[sp,#8]
 1555 0024 07F11403 	 add r3,r7,#20
 1556 0028 0393     	 str r3,[sp,#12]
 1557 002a 0423     	 movs r3,#4
 1558 002c 0493     	 str r3,[sp,#16]
 1559 002e F868     	 ldr r0,[r7,#12]
 1560 0030 B968     	 ldr r1,[r7,#8]
 1561 0032 7A68     	 ldr r2,[r7,#4]
 1562 0034 0123     	 movs r3,#1
 1563 0036 FFF7FEFF 	 bl ip_output_if_opt
 1564 003a 0346     	 mov r3,r0
 753:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1565              	 .loc 1 753 0
 1566 003c 1846     	 mov r0,r3
 1567 003e 1837     	 adds r7,r7,#24
 1568              	.LCFI73:
 1569              	 .cfi_def_cfa_offset 8
 1570 0040 BD46     	 mov sp,r7
 1571              	.LCFI74:
 1572              	 .cfi_def_cfa_register 13
 1573              	 
 1574 0042 80BD     	 pop {r7,pc}
 1575              	 .cfi_endproc
 1576              	.LFE147:
 1578              	 .section .text.igmp_send,"ax",%progbits
 1579              	 .align 2
 1580              	 .thumb
 1581              	 .thumb_func
 1583              	igmp_send:
 1584              	.LFB148:
 754:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 755:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** /**
 756:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * Send an igmp packet to a specific group.
 757:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  *
 758:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param group the group to which to send the packet
 759:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  * @param type the type of igmp packet to send
 760:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****  */
 761:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** static void
 762:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** igmp_send(struct igmp_group *group, u8_t type)
 763:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** {
 1585              	 .loc 1 763 0
 1586              	 .cfi_startproc
 1587              	 
 1588              	 
 1589 0000 80B5     	 push {r7,lr}
 1590              	.LCFI75:
 1591              	 .cfi_def_cfa_offset 8
 1592              	 .cfi_offset 7,-8
 1593              	 .cfi_offset 14,-4
 1594 0002 86B0     	 sub sp,sp,#24
 1595              	.LCFI76:
 1596              	 .cfi_def_cfa_offset 32
 1597 0004 00AF     	 add r7,sp,#0
 1598              	.LCFI77:
 1599              	 .cfi_def_cfa_register 7
 1600 0006 7860     	 str r0,[r7,#4]
 1601 0008 0B46     	 mov r3,r1
 1602 000a FB70     	 strb r3,[r7,#3]
 764:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct pbuf*     p    = NULL;
 1603              	 .loc 1 764 0
 1604 000c 0023     	 movs r3,#0
 1605 000e 3B61     	 str r3,[r7,#16]
 765:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   struct igmp_msg* igmp = NULL;
 1606              	 .loc 1 765 0
 1607 0010 0023     	 movs r3,#0
 1608 0012 FB60     	 str r3,[r7,#12]
 766:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ip_addr_t   src  = *IP_ADDR_ANY;
 1609              	 .loc 1 766 0
 1610 0014 294B     	 ldr r3,.L122
 1611 0016 1B68     	 ldr r3,[r3]
 1612 0018 BB60     	 str r3,[r7,#8]
 767:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   ip_addr_t*  dest = NULL;
 1613              	 .loc 1 767 0
 1614 001a 0023     	 movs r3,#0
 1615 001c 7B61     	 str r3,[r7,#20]
 768:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 769:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   /* IP header + "router alert" option + IGMP header */
 770:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   p = pbuf_alloc(PBUF_TRANSPORT, IGMP_MINLEN, PBUF_RAM);
 1616              	 .loc 1 770 0
 1617 001e 0020     	 movs r0,#0
 1618 0020 0821     	 movs r1,#8
 1619 0022 0022     	 movs r2,#0
 1620 0024 FFF7FEFF 	 bl pbuf_alloc
 1621 0028 3861     	 str r0,[r7,#16]
 771:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   
 772:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   if (p) {
 1622              	 .loc 1 772 0
 1623 002a 3B69     	 ldr r3,[r7,#16]
 1624 002c 002B     	 cmp r3,#0
 1625 002e 42D0     	 beq .L116
 773:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     igmp = (struct igmp_msg *)p->payload;
 1626              	 .loc 1 773 0
 1627 0030 3B69     	 ldr r3,[r7,#16]
 1628 0032 5B68     	 ldr r3,[r3,#4]
 1629 0034 FB60     	 str r3,[r7,#12]
 774:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_ASSERT("igmp_send: check that first pbuf can hold struct igmp_msg",
 775:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****                (p->len >= sizeof(struct igmp_msg)));
 776:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     ip_addr_copy(src, group->netif->ip_addr);
 1630              	 .loc 1 776 0
 1631 0036 7B68     	 ldr r3,[r7,#4]
 1632 0038 5B68     	 ldr r3,[r3,#4]
 1633 003a 5B68     	 ldr r3,[r3,#4]
 1634 003c BB60     	 str r3,[r7,#8]
 777:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****      
 778:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if (type == IGMP_V2_MEMB_REPORT) {
 1635              	 .loc 1 778 0
 1636 003e FB78     	 ldrb r3,[r7,#3]
 1637 0040 162B     	 cmp r3,#22
 1638 0042 0AD1     	 bne .L118
 779:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       dest = &(group->group_address);
 1639              	 .loc 1 779 0
 1640 0044 7B68     	 ldr r3,[r7,#4]
 1641 0046 0833     	 adds r3,r3,#8
 1642 0048 7B61     	 str r3,[r7,#20]
 780:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       ip_addr_copy(igmp->igmp_group_address, group->group_address);
 1643              	 .loc 1 780 0
 1644 004a 7B68     	 ldr r3,[r7,#4]
 1645 004c 9A68     	 ldr r2,[r3,#8]
 1646 004e FB68     	 ldr r3,[r7,#12]
 1647 0050 5A60     	 str r2,[r3,#4]
 781:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       group->last_reporter_flag = 1; /* Remember we were the last to report */
 1648              	 .loc 1 781 0
 1649 0052 7B68     	 ldr r3,[r7,#4]
 1650 0054 0122     	 movs r2,#1
 1651 0056 1A73     	 strb r2,[r3,#12]
 1652 0058 08E0     	 b .L119
 1653              	.L118:
 782:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     } else {
 783:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       if (type == IGMP_LEAVE_GROUP) {
 1654              	 .loc 1 783 0
 1655 005a FB78     	 ldrb r3,[r7,#3]
 1656 005c 172B     	 cmp r3,#23
 1657 005e 05D1     	 bne .L119
 784:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         dest = &allrouters;
 1658              	 .loc 1 784 0
 1659 0060 174B     	 ldr r3,.L122+4
 1660 0062 7B61     	 str r3,[r7,#20]
 785:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****         ip_addr_copy(igmp->igmp_group_address, group->group_address);
 1661              	 .loc 1 785 0
 1662 0064 7B68     	 ldr r3,[r7,#4]
 1663 0066 9A68     	 ldr r2,[r3,#8]
 1664 0068 FB68     	 ldr r3,[r7,#12]
 1665 006a 5A60     	 str r2,[r3,#4]
 1666              	.L119:
 786:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       }
 787:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 788:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 789:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     if ((type == IGMP_V2_MEMB_REPORT) || (type == IGMP_LEAVE_GROUP)) {
 1667              	 .loc 1 789 0
 1668 006c FB78     	 ldrb r3,[r7,#3]
 1669 006e 162B     	 cmp r3,#22
 1670 0070 02D0     	 beq .L120
 1671              	 .loc 1 789 0 is_stmt 0 discriminator 1
 1672 0072 FB78     	 ldrb r3,[r7,#3]
 1673 0074 172B     	 cmp r3,#23
 1674 0076 1BD1     	 bne .L121
 1675              	.L120:
 790:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp->igmp_msgtype  = type;
 1676              	 .loc 1 790 0 is_stmt 1
 1677 0078 FB68     	 ldr r3,[r7,#12]
 1678 007a FA78     	 ldrb r2,[r7,#3]
 1679 007c 1A70     	 strb r2,[r3]
 791:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp->igmp_maxresp  = 0;
 1680              	 .loc 1 791 0
 1681 007e FB68     	 ldr r3,[r7,#12]
 1682 0080 0022     	 movs r2,#0
 1683 0082 5A70     	 strb r2,[r3,#1]
 792:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp->igmp_checksum = 0;
 1684              	 .loc 1 792 0
 1685 0084 FB68     	 ldr r3,[r7,#12]
 1686 0086 0022     	 movs r2,#0
 1687 0088 9A70     	 strb r2,[r3,#2]
 1688 008a 0022     	 movs r2,#0
 1689 008c DA70     	 strb r2,[r3,#3]
 793:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp->igmp_checksum = inet_chksum(igmp, IGMP_MINLEN);
 1690              	 .loc 1 793 0
 1691 008e F868     	 ldr r0,[r7,#12]
 1692 0090 0821     	 movs r1,#8
 1693 0092 FFF7FEFF 	 bl inet_chksum
 1694 0096 0346     	 mov r3,r0
 1695 0098 1A46     	 mov r2,r3
 1696 009a FB68     	 ldr r3,[r7,#12]
 1697 009c 5A80     	 strh r2,[r3,#2]
 794:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 795:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****       igmp_ip_output_if(p, &src, dest, group->netif);
 1698              	 .loc 1 795 0
 1699 009e 7B68     	 ldr r3,[r7,#4]
 1700 00a0 5B68     	 ldr r3,[r3,#4]
 1701 00a2 07F10802 	 add r2,r7,#8
 1702 00a6 3869     	 ldr r0,[r7,#16]
 1703 00a8 1146     	 mov r1,r2
 1704 00aa 7A69     	 ldr r2,[r7,#20]
 1705 00ac FFF7FEFF 	 bl igmp_ip_output_if
 1706              	.L121:
 796:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     }
 797:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** 
 798:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     pbuf_free(p);
 1707              	 .loc 1 798 0
 1708 00b0 3869     	 ldr r0,[r7,#16]
 1709 00b2 FFF7FEFF 	 bl pbuf_free
 1710              	.L116:
 799:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   } else {
 800:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     LWIP_DEBUGF(IGMP_DEBUG, ("igmp_send: not enough memory for igmp_send\n"));
 801:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****     IGMP_STATS_INC(igmp.memerr);
 802:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c ****   }
 803:../Dave/Generated/ETH_LWIP/lwip/core/ipv4/igmp.c **** }
 1711              	 .loc 1 803 0
 1712 00b6 1837     	 adds r7,r7,#24
 1713              	.LCFI78:
 1714              	 .cfi_def_cfa_offset 8
 1715 00b8 BD46     	 mov sp,r7
 1716              	.LCFI79:
 1717              	 .cfi_def_cfa_register 13
 1718              	 
 1719 00ba 80BD     	 pop {r7,pc}
 1720              	.L123:
 1721              	 .align 2
 1722              	.L122:
 1723 00bc 00000000 	 .word ip_addr_any
 1724 00c0 00000000 	 .word allrouters
 1725              	 .cfi_endproc
 1726              	.LFE148:
 1728              	 .text
 1729              	.Letext0:
 1730              	 .file 2 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1731              	 .file 3 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1732              	 .file 4 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/lwip/../../port/include/arch/cc.h"
 1733              	 .file 5 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/ip_addr.h"
 1734              	 .file 6 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/../../lwip/err.h"
 1735              	 .file 7 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/../../lwip/pbuf.h"
 1736              	 .file 8 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/../../lwip/netif.h"
 1737              	 .file 9 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/igmp.h"
 1738              	 .file 10 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/ipv4/lwip/ip.h"
 1739              	 .file 11 "../Dave/Generated/ETH_LWIP/lwip/core/ipv4/../../include/lwip/memp.h"
 1740              	 .file 12 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/cmsis_gcc.h"
 1741              	 .file 13 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 igmp.c
    {standard input}:20     .bss.igmp_group_list:00000000 $d
    {standard input}:23     .bss.igmp_group_list:00000000 igmp_group_list
    {standard input}:26     .bss.allsystems:00000000 $d
    {standard input}:29     .bss.allsystems:00000000 allsystems
    {standard input}:32     .bss.allrouters:00000000 $d
    {standard input}:35     .bss.allrouters:00000000 allrouters
    {standard input}:38     .text.igmp_init:00000000 $t
    {standard input}:43     .text.igmp_init:00000000 igmp_init
    {standard input}:79     .text.igmp_init:00000018 $d
    {standard input}:87     .text.igmp_start:00000000 $t
    {standard input}:92     .text.igmp_start:00000000 igmp_start
    {standard input}:439    .text.igmp_lookup_group:00000000 igmp_lookup_group
    {standard input}:164    .text.igmp_start:00000050 $d
    {standard input}:169    .text.igmp_stop:00000000 $t
    {standard input}:174    .text.igmp_stop:00000000 igmp_stop
    {standard input}:281    .text.igmp_stop:0000007c $d
    {standard input}:286    .text.igmp_report_groups:00000000 $t
    {standard input}:291    .text.igmp_report_groups:00000000 igmp_report_groups
    {standard input}:1449   .text.igmp_delaying_member:00000000 igmp_delaying_member
    {standard input}:348    .text.igmp_report_groups:00000034 $d
    {standard input}:353    .text.igmp_lookfor_group:00000000 $t
    {standard input}:358    .text.igmp_lookfor_group:00000000 igmp_lookfor_group
    {standard input}:430    .text.igmp_lookfor_group:00000048 $d
    {standard input}:435    .text.igmp_lookup_group:00000000 $t
    {standard input}:544    .text.igmp_lookup_group:0000007c $d
    {standard input}:549    .text.igmp_remove_group:00000000 $t
    {standard input}:553    .text.igmp_remove_group:00000000 igmp_remove_group
    {standard input}:647    .text.igmp_remove_group:00000068 $d
    {standard input}:652    .text.igmp_input:00000000 $t
    {standard input}:657    .text.igmp_input:00000000 igmp_input
    {standard input}:907    .text.igmp_input:00000160 $d
    {standard input}:913    .text.igmp_joingroup:00000000 $t
    {standard input}:918    .text.igmp_joingroup:00000000 igmp_joingroup
    {standard input}:1583   .text.igmp_send:00000000 igmp_send
    {standard input}:1391   .text.igmp_start_timer:00000000 igmp_start_timer
    {standard input}:1087   .text.igmp_joingroup:000000dc $d
    {standard input}:1093   .text.igmp_leavegroup:00000000 $t
    {standard input}:1098   .text.igmp_leavegroup:00000000 igmp_leavegroup
    {standard input}:1260   .text.igmp_leavegroup:000000d0 $d
    {standard input}:1266   .text.igmp_tmr:00000000 $t
    {standard input}:1271   .text.igmp_tmr:00000000 igmp_tmr
    {standard input}:1346   .text.igmp_timeout:00000000 igmp_timeout
    {standard input}:1337   .text.igmp_tmr:00000044 $d
    {standard input}:1342   .text.igmp_timeout:00000000 $t
    {standard input}:1387   .text.igmp_start_timer:00000000 $t
    {standard input}:1445   .text.igmp_delaying_member:00000000 $t
    {standard input}:1517   .text.igmp_ip_output_if:00000000 $t
    {standard input}:1521   .text.igmp_ip_output_if:00000000 igmp_ip_output_if
    {standard input}:1579   .text.igmp_send:00000000 $t
    {standard input}:1723   .text.igmp_send:000000bc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memp_free
memp_malloc
pbuf_header
pbuf_free
inet_chksum
netif_list
rand
ip_output_if_opt
pbuf_alloc
ip_addr_any
