   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "ethernetif.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.__NVIC_GetPriorityGrouping,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	__NVIC_GetPriorityGrouping:
  25              	.LFB106:
  26              	 .file 1 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.1.1
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * @date     27. March 2020
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_FP
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __VTOR_PRESENT
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __VTOR_PRESENT             1U
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__VTOR_PRESENT not defined in device header file; using default!"
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #else
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   struct
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   struct
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   struct
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   struct
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[24U];
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[32U];
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
 995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
 998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
 999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
1529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
1537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif
1572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** */
1591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   @{
1600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #else
1608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #else
1628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1673 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  39              	 .loc 1 1674 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 DB68     	 ldr r3,[r3,#12]
  42 0008 03F4E063 	 and r3,r3,#1792
  43 000c 1B0A     	 lsrs r3,r3,#8
1675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
  44              	 .loc 1 1675 0
  45 000e 1846     	 mov r0,r3
  46 0010 BD46     	 mov sp,r7
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0012 5DF8047B 	 ldr r7,[sp],#4
  51              	.LCFI3:
  52              	 .cfi_restore 7
  53              	 .cfi_def_cfa_offset 0
  54 0016 7047     	 bx lr
  55              	.L4:
  56              	 .align 2
  57              	.L3:
  58 0018 00ED00E0 	 .word -536810240
  59              	 .cfi_endproc
  60              	.LFE106:
  62              	 .section .text.__NVIC_EnableIRQ,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	__NVIC_EnableIRQ:
  68              	.LFB107:
1676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
  69              	 .loc 1 1685 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI4:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 FB71     	 strb r3,[r7,#7]
1686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  86              	 .loc 1 1686 0
  87 000a 97F90730 	 ldrsb r3,[r7,#7]
  88 000e 002B     	 cmp r3,#0
  89 0010 0BDB     	 blt .L5
1687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
  90              	 .loc 1 1688 0
1689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  91              	 .loc 1 1689 0
  92 0012 0849     	 ldr r1,.L7
  93 0014 97F90730 	 ldrsb r3,[r7,#7]
  94 0018 5B09     	 lsrs r3,r3,#5
  95 001a FA79     	 ldrb r2,[r7,#7]
  96 001c 02F01F02 	 and r2,r2,#31
  97 0020 0120     	 movs r0,#1
  98 0022 00FA02F2 	 lsl r2,r0,r2
  99 0026 41F82320 	 str r2,[r1,r3,lsl#2]
1690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __COMPILER_BARRIER();
 100              	 .loc 1 1690 0
 101              	.L5:
1691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 102              	 .loc 1 1692 0
 103 002a 0C37     	 adds r7,r7,#12
 104              	.LCFI7:
 105              	 .cfi_def_cfa_offset 4
 106 002c BD46     	 mov sp,r7
 107              	.LCFI8:
 108              	 .cfi_def_cfa_register 13
 109              	 
 110 002e 5DF8047B 	 ldr r7,[sp],#4
 111              	.LCFI9:
 112              	 .cfi_restore 7
 113              	 .cfi_def_cfa_offset 0
 114 0032 7047     	 bx lr
 115              	.L8:
 116              	 .align 2
 117              	.L7:
 118 0034 00E100E0 	 .word -536813312
 119              	 .cfi_endproc
 120              	.LFE107:
 122              	 .section .text.__NVIC_DisableIRQ,"ax",%progbits
 123              	 .align 2
 124              	 .thumb
 125              	 .thumb_func
 127              	__NVIC_DisableIRQ:
 128              	.LFB109:
1693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   else
1710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 129              	 .loc 1 1723 0
 130              	 .cfi_startproc
 131              	 
 132              	 
 133              	 
 134 0000 80B4     	 push {r7}
 135              	.LCFI10:
 136              	 .cfi_def_cfa_offset 4
 137              	 .cfi_offset 7,-4
 138 0002 83B0     	 sub sp,sp,#12
 139              	.LCFI11:
 140              	 .cfi_def_cfa_offset 16
 141 0004 00AF     	 add r7,sp,#0
 142              	.LCFI12:
 143              	 .cfi_def_cfa_register 7
 144 0006 0346     	 mov r3,r0
 145 0008 FB71     	 strb r3,[r7,#7]
1724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 146              	 .loc 1 1724 0
 147 000a 97F90730 	 ldrsb r3,[r7,#7]
 148 000e 002B     	 cmp r3,#0
 149 0010 10DB     	 blt .L9
1725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 150              	 .loc 1 1726 0
 151 0012 0B49     	 ldr r1,.L11
 152 0014 97F90730 	 ldrsb r3,[r7,#7]
 153 0018 5B09     	 lsrs r3,r3,#5
 154 001a FA79     	 ldrb r2,[r7,#7]
 155 001c 02F01F02 	 and r2,r2,#31
 156 0020 0120     	 movs r0,#1
 157 0022 00FA02F2 	 lsl r2,r0,r2
 158 0026 2033     	 adds r3,r3,#32
 159 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 160              	.LBB6:
 161              	.LBB7:
 162              	 .file 2 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.3.0
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     26. March 2020
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 163              	 .loc 2 946 0
 164              	
 165 002c BFF34F8F 	 dsb 0xF
 166              	
 167              	 .thumb
 168              	.LBE7:
 169              	.LBE6:
 170              	.LBB8:
 171              	.LBB9:
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 172              	 .loc 2 935 0
 173              	
 174 0030 BFF36F8F 	 isb 0xF
 175              	
 176              	 .thumb
 177              	.L9:
 178              	.LBE9:
 179              	.LBE8:
1727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 180              	 .loc 1 1730 0
 181 0034 0C37     	 adds r7,r7,#12
 182              	.LCFI13:
 183              	 .cfi_def_cfa_offset 4
 184 0036 BD46     	 mov sp,r7
 185              	.LCFI14:
 186              	 .cfi_def_cfa_register 13
 187              	 
 188 0038 5DF8047B 	 ldr r7,[sp],#4
 189              	.LCFI15:
 190              	 .cfi_restore 7
 191              	 .cfi_def_cfa_offset 0
 192 003c 7047     	 bx lr
 193              	.L12:
 194 003e 00BF     	 .align 2
 195              	.L11:
 196 0040 00E100E0 	 .word -536813312
 197              	 .cfi_endproc
 198              	.LFE109:
 200              	 .section .text.__NVIC_ClearPendingIRQ,"ax",%progbits
 201              	 .align 2
 202              	 .thumb
 203              	 .thumb_func
 205              	__NVIC_ClearPendingIRQ:
 206              	.LFB112:
1731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   else
1748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 207              	 .loc 1 1776 0
 208              	 .cfi_startproc
 209              	 
 210              	 
 211              	 
 212 0000 80B4     	 push {r7}
 213              	.LCFI16:
 214              	 .cfi_def_cfa_offset 4
 215              	 .cfi_offset 7,-4
 216 0002 83B0     	 sub sp,sp,#12
 217              	.LCFI17:
 218              	 .cfi_def_cfa_offset 16
 219 0004 00AF     	 add r7,sp,#0
 220              	.LCFI18:
 221              	 .cfi_def_cfa_register 7
 222 0006 0346     	 mov r3,r0
 223 0008 FB71     	 strb r3,[r7,#7]
1777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 224              	 .loc 1 1777 0
 225 000a 97F90730 	 ldrsb r3,[r7,#7]
 226 000e 002B     	 cmp r3,#0
 227 0010 0CDB     	 blt .L13
1778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 228              	 .loc 1 1779 0
 229 0012 0949     	 ldr r1,.L15
 230 0014 97F90730 	 ldrsb r3,[r7,#7]
 231 0018 5B09     	 lsrs r3,r3,#5
 232 001a FA79     	 ldrb r2,[r7,#7]
 233 001c 02F01F02 	 and r2,r2,#31
 234 0020 0120     	 movs r0,#1
 235 0022 00FA02F2 	 lsl r2,r0,r2
 236 0026 6033     	 adds r3,r3,#96
 237 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 238              	.L13:
1780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 239              	 .loc 1 1781 0
 240 002c 0C37     	 adds r7,r7,#12
 241              	.LCFI19:
 242              	 .cfi_def_cfa_offset 4
 243 002e BD46     	 mov sp,r7
 244              	.LCFI20:
 245              	 .cfi_def_cfa_register 13
 246              	 
 247 0030 5DF8047B 	 ldr r7,[sp],#4
 248              	.LCFI21:
 249              	 .cfi_restore 7
 250              	 .cfi_def_cfa_offset 0
 251 0034 7047     	 bx lr
 252              	.L16:
 253 0036 00BF     	 .align 2
 254              	.L15:
 255 0038 00E100E0 	 .word -536813312
 256              	 .cfi_endproc
 257              	.LFE112:
 259              	 .section .text.__NVIC_SetPriority,"ax",%progbits
 260              	 .align 2
 261              	 .thumb
 262              	 .thumb_func
 264              	__NVIC_SetPriority:
 265              	.LFB114:
1782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   else
1799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 266              	 .loc 1 1815 0
 267              	 .cfi_startproc
 268              	 
 269              	 
 270              	 
 271 0000 80B4     	 push {r7}
 272              	.LCFI22:
 273              	 .cfi_def_cfa_offset 4
 274              	 .cfi_offset 7,-4
 275 0002 83B0     	 sub sp,sp,#12
 276              	.LCFI23:
 277              	 .cfi_def_cfa_offset 16
 278 0004 00AF     	 add r7,sp,#0
 279              	.LCFI24:
 280              	 .cfi_def_cfa_register 7
 281 0006 0346     	 mov r3,r0
 282 0008 3960     	 str r1,[r7]
 283 000a FB71     	 strb r3,[r7,#7]
1816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 284              	 .loc 1 1816 0
 285 000c 97F90730 	 ldrsb r3,[r7,#7]
 286 0010 002B     	 cmp r3,#0
 287 0012 0ADB     	 blt .L18
1817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 288              	 .loc 1 1818 0
 289 0014 0D49     	 ldr r1,.L20
 290 0016 97F90730 	 ldrsb r3,[r7,#7]
 291 001a 3A68     	 ldr r2,[r7]
 292 001c D2B2     	 uxtb r2,r2
 293 001e 9200     	 lsls r2,r2,#2
 294 0020 D2B2     	 uxtb r2,r2
 295 0022 0B44     	 add r3,r3,r1
 296 0024 83F80023 	 strb r2,[r3,#768]
 297 0028 0AE0     	 b .L17
 298              	.L18:
1819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   else
1821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 299              	 .loc 1 1822 0
 300 002a 0949     	 ldr r1,.L20+4
 301 002c FB79     	 ldrb r3,[r7,#7]
 302 002e 03F00F03 	 and r3,r3,#15
 303 0032 043B     	 subs r3,r3,#4
 304 0034 3A68     	 ldr r2,[r7]
 305 0036 D2B2     	 uxtb r2,r2
 306 0038 9200     	 lsls r2,r2,#2
 307 003a D2B2     	 uxtb r2,r2
 308 003c 0B44     	 add r3,r3,r1
 309 003e 1A76     	 strb r2,[r3,#24]
 310              	.L17:
1823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 311              	 .loc 1 1824 0
 312 0040 0C37     	 adds r7,r7,#12
 313              	.LCFI25:
 314              	 .cfi_def_cfa_offset 4
 315 0042 BD46     	 mov sp,r7
 316              	.LCFI26:
 317              	 .cfi_def_cfa_register 13
 318              	 
 319 0044 5DF8047B 	 ldr r7,[sp],#4
 320              	.LCFI27:
 321              	 .cfi_restore 7
 322              	 .cfi_def_cfa_offset 0
 323 0048 7047     	 bx lr
 324              	.L21:
 325 004a 00BF     	 .align 2
 326              	.L20:
 327 004c 00E100E0 	 .word -536813312
 328 0050 00ED00E0 	 .word -536810240
 329              	 .cfi_endproc
 330              	.LFE114:
 332              	 .section .text.NVIC_EncodePriority,"ax",%progbits
 333              	 .align 2
 334              	 .thumb
 335              	 .thumb_func
 337              	NVIC_EncodePriority:
 338              	.LFB116:
1825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Priority
1829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return             Interrupt Priority.
1834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
1838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   else
1844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   {
1845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   }
1847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
1848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** /**
1851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Encode Priority
1852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            preemptive priority value, and subpriority value.
1854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****  */
1861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** {
 339              	 .loc 1 1862 0
 340              	 .cfi_startproc
 341              	 
 342              	 
 343              	 
 344 0000 80B4     	 push {r7}
 345              	.LCFI28:
 346              	 .cfi_def_cfa_offset 4
 347              	 .cfi_offset 7,-4
 348 0002 89B0     	 sub sp,sp,#36
 349              	.LCFI29:
 350              	 .cfi_def_cfa_offset 40
 351 0004 00AF     	 add r7,sp,#0
 352              	.LCFI30:
 353              	 .cfi_def_cfa_register 7
 354 0006 F860     	 str r0,[r7,#12]
 355 0008 B960     	 str r1,[r7,#8]
 356 000a 7A60     	 str r2,[r7,#4]
1863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 357              	 .loc 1 1863 0
 358 000c FB68     	 ldr r3,[r7,#12]
 359 000e 03F00703 	 and r3,r3,#7
 360 0012 FB61     	 str r3,[r7,#28]
1864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 361              	 .loc 1 1867 0
 362 0014 FB69     	 ldr r3,[r7,#28]
 363 0016 C3F10703 	 rsb r3,r3,#7
 364 001a 062B     	 cmp r3,#6
 365 001c 28BF     	 it cs
 366 001e 0623     	 movcs r3,#6
 367 0020 BB61     	 str r3,[r7,#24]
1868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 368              	 .loc 1 1868 0
 369 0022 FB69     	 ldr r3,[r7,#28]
 370 0024 0633     	 adds r3,r3,#6
 371 0026 062B     	 cmp r3,#6
 372 0028 02D9     	 bls .L23
 373              	 .loc 1 1868 0 is_stmt 0 discriminator 1
 374 002a FB69     	 ldr r3,[r7,#28]
 375 002c 013B     	 subs r3,r3,#1
 376 002e 00E0     	 b .L24
 377              	.L23:
 378              	 .loc 1 1868 0 discriminator 2
 379 0030 0023     	 movs r3,#0
 380              	.L24:
 381              	 .loc 1 1868 0 discriminator 4
 382 0032 7B61     	 str r3,[r7,#20]
1869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** 
1870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****   return (
1871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 383              	 .loc 1 1871 0 is_stmt 1 discriminator 4
 384 0034 BB69     	 ldr r3,[r7,#24]
 385 0036 0122     	 movs r2,#1
 386 0038 02FA03F3 	 lsl r3,r2,r3
 387 003c 5A1E     	 subs r2,r3,#1
 388 003e BB68     	 ldr r3,[r7,#8]
 389 0040 1A40     	 ands r2,r2,r3
 390 0042 7B69     	 ldr r3,[r7,#20]
 391 0044 9A40     	 lsls r2,r2,r3
1872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 392              	 .loc 1 1872 0 discriminator 4
 393 0046 7B69     	 ldr r3,[r7,#20]
 394 0048 0121     	 movs r1,#1
 395 004a 01FA03F3 	 lsl r3,r1,r3
 396 004e 591E     	 subs r1,r3,#1
 397 0050 7B68     	 ldr r3,[r7,#4]
 398 0052 0B40     	 ands r3,r3,r1
1870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 399              	 .loc 1 1870 0 discriminator 4
 400 0054 1343     	 orrs r3,r3,r2
1873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h ****          );
1874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Include\core_cm4.h **** }
 401              	 .loc 1 1874 0 discriminator 4
 402 0056 1846     	 mov r0,r3
 403 0058 2437     	 adds r7,r7,#36
 404              	.LCFI31:
 405              	 .cfi_def_cfa_offset 4
 406 005a BD46     	 mov sp,r7
 407              	.LCFI32:
 408              	 .cfi_def_cfa_register 13
 409              	 
 410 005c 5DF8047B 	 ldr r7,[sp],#4
 411              	.LCFI33:
 412              	 .cfi_restore 7
 413              	 .cfi_def_cfa_offset 0
 414 0060 7047     	 bx lr
 415              	 .cfi_endproc
 416              	.LFE116:
 418 0062 00BF     	 .section .text.XMC_ETH_MAC_SetPortControl,"ax",%progbits
 419              	 .align 2
 420              	 .thumb
 421              	 .thumb_func
 423              	XMC_ETH_MAC_SetPortControl:
 424              	.LFB134:
 425              	 .file 3 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_eth_mac.h"
   1:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
   2:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
   3:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @file xmc_eth_mac.h
   4:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @date 2019-12-16
   5:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
   6:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @cond
   7:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *****************************************************************************
   8:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   9:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  10:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  11:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * All rights reserved.
  12:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  13:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  14:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  15:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Permission is hereby granted, free of charge, to any person or organization
  16:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * obtaining a copy of the software and accompanying documentation covered by
  17:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  18:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  19:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  20:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * do so, all subject to the following:
  21:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  22:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The copyright notices in the Software and this entire statement, including
  23:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the above license grant, this restriction and the following disclaimer,
  24:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * must be included in all copies of the Software, in whole or in part, and
  25:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * all derivative works of the Software, unless such copies or derivative
  26:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * works are solely in the form of machine-executable object code generated by
  27:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * a source language processor.
  28:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  29:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  30:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  31:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  32:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  33:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  34:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  35:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DEALINGS IN THE SOFTWARE.
  36:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  37:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * To improve the quality of the software, users are encouraged to share
  38:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  39:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * at XMCSupport@infineon.com.
  40:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *****************************************************************************
  41:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  42:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Change History
  43:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * --------------
  44:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  45:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2015-06-20:
  46:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Initial
  47:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  48:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-04-25:
  49:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Change XMC_ETH_MAC_BUF_SIZE to 1524 to allow for Tagged MAC frame format
  50:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  51:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-05-19:
  52:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_GetTxBuffer() and XMC_ETH_MAC_GetRxBuffer()
  53:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_SetTxBufferSize()
  54:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  55:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2016-06-08:
  56:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - Added XMC_ETH_MAC_IsRxDescriptorOwnedByDma()
  57:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  58:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-02-25:
  59:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *      - XMC_ETH_MAC_SetPortControl() fixed compilation warning
  60:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  61:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-02:
  62:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitPTPEx()
  63:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetPTPTime()
  64:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_UpdateAddend()
  65:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  66:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-11:
  67:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_EnablePTPAlarm() and XMC_ETH_MAC_DisablePTPAlarm
  68:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  69:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-04-17:
  70:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed ordering of PTP nanoseconds and seconds in XMC_ETH_MAC_DMA_DESC_t
  71:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  72:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-08-07:
  73:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_TIMESTAMP_STATUS_t
  74:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  75:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2017-09-27:
  76:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_InitEx()
  77:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - XMC_ETH_MAC_SetAddressEx(), XMC_ETH_MAC_GetAddressEx() and XMC_ETH_MAC_SetAddressPerfectFi
  78:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  79:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2018-06-21:
  80:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Changed definition of XMC_ETH_MAC_DMA_DESC_t declaring its fields volatile
  81:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  82:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2018-08-08:
  83:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_SetVLANTag() which now accepts a 32bit tag parameter that allows setting
  84:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  85:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2019-12-16:
  86:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed addr parameter qualifier for XMC_ETH_MAC_SetAddressEx()
  87:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx()
  88:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_GetCurrentTxDescIndex(), XMC_ETH_MAC_GetCurrentRxDescIndex()
  89:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_GetTxBufferEx(), XMC_ETH_MAC_SetTxBuffer(), XMC_ETH_MAC_SetTxBufferEx()
  90:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetRxBuffer(), XMC_ETH_MAC_SetRxBufferEx()
  91:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Added XMC_ETH_MAC_SetTxBufferSizeEx()
  92:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
  93:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 2020-11-12:
  94:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *     - Fixed XMC_ETH_MAC_GetAddress()
  95:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * 
  96:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @endcond
  97:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
  98:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
  99:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup XMClib XMC Peripheral Library
 101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
 102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @addtogroup ETH_MAC
 106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @brief Ethernet Low level driver for XMC4000 microcontroller family.
 107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The Ethernet MAC (ETH) is a major communication peripheral that supports 10/100
 109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MBit/s data transfer rates in compliance with the IEEE 802.3-2002 standard. The ETH
 110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * may be used to implement internet connected applications using IPv4 and IPv6. The
 111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH also includes support for IEEE1588 time synchronisation to allow implementation
 112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * of Real Time Ethernet protocols.
 113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The XMC_ETH_MAC low level driver provides functions to configure and initialize
 115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the ETH_MAC hardware peripheral.
 116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @{
 117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifndef XMC_ETH_MAC_H
 120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_H
 121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * HEADER FILES
 124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_common.h"
 127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (ETH0)
 129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #include "xmc_eth_mac_map.h"
 131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MACROS
 134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_BUF_SIZE           (1524)     /**< ETH MAC buffer size */
 137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_MAC_PHY_MAX_RETRIES    (0xffffUL) /**< Maximum retries */
 138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define XMC_ETH_WAKEUP_REGISTER_LENGTH (8U)       /**< Remote wakeup frame reg length */
 139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * TDES0 Descriptor TX Packet Control/Status
 142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IC   (0x40000000U) /**< Interrupt on competition */
 145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LS   (0x20000000U) /**< Last segment */
 146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FS   (0x10000000U) /**< First segment */
 147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DC   (0x08000000U) /**< Disable CRC */
 148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DP   (0x04000000U) /**< Disable pad */
 149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSE (0x02000000U) /**< Transmit time stamp enable */
 150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CIC  (0x00C00000U) /**< Checksum insertion control */
 151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TER  (0x00200000U) /**< Transmit end of ring */
 152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TCH  (0x00100000U) /**< Second address chained */
 153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_TTSS (0x00020000U) /**< Transmit time stamp status */
 154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IHE  (0x00010000U) /**< IP header error */
 155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ES   (0x00008000U) /**< Error summary */
 156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_JT   (0x00004000U) /**< Jabber timeout */
 157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_FF   (0x00002000U) /**< Frame flushed */
 158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_IPE  (0x00001000U) /**< IP payload error */
 159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LOC  (0x00000800U) /**< Loss of carrier */
 160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_NC   (0x00000400U) /**< No carrier */
 161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_LC   (0x00000200U) /**< Late collision */
 162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_EC   (0x00000100U) /**< Excessive collision */
 163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_VF   (0x00000080U) /**< VLAN frame */
 164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_CC   (0x00000078U) /**< Collision count */
 165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_ED   (0x00000004U) /**< Excessive deferral */
 166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_UF   (0x00000002U) /**< Underflow error */
 167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_TDES0_DB   (0x00000001U) /**< Deferred bit */
 168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * RDES0 Descriptor RX Packet Status
 171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OWN  (0x80000000U) /**< Own bit 1=DMA, 0=CPU */
 173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_AFM  (0x40000000U) /**< Destination address filter fail */
 174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FL   (0x3FFF0000U) /**< Frame length mask */
 175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ES   (0x00008000U) /**< Error summary */
 176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DE   (0x00004000U) /**< Descriptor error */
 177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_SAF  (0x00002000U) /**< Source address filter fail */
 178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LE   (0x00001000U) /**< Length error */
 179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_OE   (0x00000800U) /**< Overflow error */
 180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_VLAN (0x00000400U) /**< VLAN tag */
 181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FS   (0x00000200U) /**< First descriptor */
 182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LS   (0x00000100U) /**< Last descriptor */
 183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_TSA  (0x00000080U) /**< Timestamp available */
 184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_LC   (0x00000040U) /**< Late collision */
 185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_FT   (0x00000020U) /**< Frame type */
 186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RWT  (0x00000010U) /**< Receive watchdog timeout */
 187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_RE   (0x00000008U) /**< Receive error */
 188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_DBE  (0x00000004U) /**< Dribble bit error */
 189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_CE   (0x00000002U) /**< CRC error */
 190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #define ETH_MAC_DMA_RDES0_ESA  (0x00000001U) /**< Extended Status/Rx MAC address */
 191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ENUMS
 194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Ethernet MAC status return values
 198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_STATUS
 200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_OK    = 0U, /**< Driver accepted application request */
 202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_BUSY  = 1U, /**< Driver is busy and cannot handle request */
 203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_STATUS_ERROR = 2U  /**< Driver could not fulfil application request */
 204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_STATUS_t;
 205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Transmission frame
 208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TX_FRAME
 210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_FRAGMENT  = 0x1U, /**< Indicate frame fragment */
 212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_EVENT     = 0x2U, /**< Generate event when frame is transmitted */
 213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TX_FRAME_TIMESTAMP = 0x4U  /**< Capture frame time stamp */
 214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TX_FRAME_t;
 215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC event
 218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_EVENT
 220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_PMT = ETH_INTERRUPT_MASK_PMTIM_Msk << 16,        /**< Power management event */
 222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TIMESTAMP = ETH_INTERRUPT_MASK_TSIM_Msk << 16,   /**< Time stamp event */
 223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_RECEIVE = ETH_STATUS_ERI_Msk,              /**< Early receive */
 224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_BUS_ERROR = ETH_STATUS_FBI_Msk,                  /**< Bus error */
 225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_EARLY_TRANSMIT = ETH_STATUS_ETI_Msk,             /**< Early transmit */
 226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_WATCHDOG_TIMEOUT = ETH_STATUS_RWT_Msk,   /**< Receive watchdog time-out
 227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_PROCESS_STOPPED = ETH_STATUS_RPS_Msk,    /**< Receive process stopped *
 228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_BUFFER_UNAVAILABLE = ETH_STATUS_RU_Msk,  /**< Receive buffer unavailabl
 229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE = ETH_STATUS_RI_Msk,                     /**< Receive event */
 230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_UNDERFLOW = ETH_STATUS_UNF_Msk,         /**< Transmit underflow */
 231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_RECEIVE_OVERFLOW = ETH_STATUS_OVF_Msk,           /**< Receive overflow */
 232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_JABBER_TIMEOUT = ETH_STATUS_TJT_Msk,    /**< Transmit jabber time-out 
 233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_BUFFER_UNAVAILABLE = ETH_STATUS_TU_Msk, /**< Transmit buffer unavailab
 234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT_PROCESS_STOPPED = ETH_STATUS_TPS_Msk,   /**< Transmit process stopped 
 235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_EVENT_TRANSMIT = ETH_STATUS_TI_Msk                     /**< Transmit event */
 236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_EVENT_t;
 237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Link interface
 240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_INTERFACE
 242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_MII, /**< Link interface: Media independent interface */
 244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_INTERFACE_RMII /**< Link interface: Reduced media independent interface */
 245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_INTERFACE_t;
 246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link status
 249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_STATUS
 251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_DOWN, /**< Link status down */
 253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_STATUS_UP    /**< Link status up */
 254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_STATUS_t;
 255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH link speed
 258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_SPEED
 260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_10M  = 0UL << ETH_MAC_CONFIGURATION_FES_Pos, /**< Link speed: 10M */
 262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_SPEED_100M = 1UL << ETH_MAC_CONFIGURATION_FES_Pos  /**< Link speed: 100M */
 263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_SPEED_t;
 264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH duplex settings (full/half?)
 267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_LINK_DUPLEX
 269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_HALF = 0UL << ETH_MAC_CONFIGURATION_DM_Pos, /**< Half duplex */
 271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_LINK_DUPLEX_FULL = 1UL << ETH_MAC_CONFIGURATION_DM_Pos  /**< Full duplex */
 272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_LINK_DUPLEX_t;
 273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC address filter
 276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_ADDR_FILTER
 278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE0 = 0x01000000UL, /**< Address filter mask: byte 0 */
 280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE1 = 0x02000000UL, /**< Address filter mask: byte 1 */
 281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE2 = 0x04000000UL, /**< Address filter mask: byte 2 */
 282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE3 = 0x08000000UL, /**< Address filter mask: byte 3 */
 283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE4 = 0x10000000UL, /**< Address filter mask: byte 4 */
 284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_MASK_BYTE5 = 0x20000000UL, /**< Address filter mask: byte 5 */
 285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_ADDR_FILTER_SA         = 0x40000000UL  /**< Address filter SA */
 286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_ADDR_FILTER_t;
 287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Power management events that triggers a PMT interrupt
 290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_PMT_EVENT
 292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_WAKEUP_FRAME         = ETH_PMT_CONTROL_STATUS_RWKPKTEN_Msk,  /**< Wakeup
 294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_MAGIC_PACKET         = ETH_PMT_CONTROL_STATUS_MGKPKTEN_Msk,  /**< Magic 
 295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_PMT_EVENT_ON_UNICAST_FRAME_FILTER = ETH_PMT_CONTROL_STATUS_GLBLUCAST_Msk  /**< Unicas
 296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PMT_EVENT_t;
 297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp configuration enable
 301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_CONFIG
 303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_FINE_UPDATE = ETH_TIMESTAMP_CONTROL_TSCFUPDT_Msk,             /**< F
 305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_TS_INTERRUPT = ETH_TIMESTAMP_CONTROL_TSTRIG_Msk,       /**< T
 306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_ALL_FRAMES = ETH_TIMESTAMP_CONTROL_TSENALL_Msk,        /**< E
 307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTPV2 = ETH_TIMESTAMP_CONTROL_TSVER2ENA_Msk,           /**< P
 308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_ETHERNET = ETH_TIMESTAMP_CONTROL_TSIPENA_Msk, /**< P
 309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV6 = ETH_TIMESTAMP_CONTROL_TSIPV6ENA_Msk,   /**< P
 310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_PTP_OVER_IPV4 = ETH_TIMESTAMP_CONTROL_TSIPV4ENA_Msk,   /**< P
 311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_CONFIG_ENABLE_MAC_ADDRESS_FILTER = ETH_TIMESTAMP_CONTROL_TSENMACADDR_Msk /*
 312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_CONFIG_t;
 313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time-stamp status
 316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef enum XMC_ETH_MAC_TIMESTAMP_STATUS
 318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_SECONDS_OVERFLOW = ETH_TIMESTAMP_STATUS_TSSOVF_Msk,           /**< I
 320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIME_REACHED = ETH_TIMESTAMP_STATUS_TSTARGT_Msk,       /**< I
 321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_TIMESTAMP_STATUS_TARGET_TIMER_ERROR = ETH_TIMESTAMP_STATUS_TSTRGTERR_Msk,      /**< S
 322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIMESTAMP_STATUS_t;
 323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * DATA STRUCTURES
 327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard start */
 330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma push
 332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma anon_unions
 333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning 586
 335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC port control
 339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef union XMC_ETH_MAC_PORT_CTRL
 341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   struct
 343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd0: 2;     /**< Receive data bit 0 (::XMC_ETH_MAC_PORT_CTRL_RXD0_t) */
 345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd1: 2;     /**< Receive data bit 1 (::XMC_ETH_MAC_PORT_CTRL_RXD1_t) */
 346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd2: 2;     /**< Receive data bit 2 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD2_t) */
 347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxd3: 2;     /**< Receive data bit 3 (only MII) (::XMC_ETH_MAC_PORT_CTRL_RXD3_t) */
 348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_rmii: 2; /**< RMII: Continuous 50 MHz reference clock.
 349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                MII: Receive clock, 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/s
 350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                (::XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t) */
 351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs_dv: 2;   /**< RMII: carrier sense/RX_Data valid. MII: RX_Data valid (::XMC_ETH_MAC
 352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t crs: 2;      /**< Carrier sense for only MII (::XMC_ETH_MAC_PORT_CTRL_CRS_t) */
 353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t rxer: 2;     /**< Receive error (::XMC_ETH_MAC_PORT_CTRL_RXER_t) */
 354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t col: 2;      /**< Collision Detect for only MII (::XMC_ETH_MAC_PORT_CTRL_COL_t) */
 355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t clk_tx: 2;   /**< Transmit clock (only MII), 25 MHz for 100Mbit/s, 2.5 MHz for 10Mbit/
 356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mdio: 2;     /**< Bidirectional, push-pull management data I/O line (::XMC_ETH_MAC_POR
 358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t: 2;          /**< Reserved bits */
 359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t mode: 1;     /**< RMII or MII (::XMC_ETH_MAC_PORT_CTRL_MODE_t) */
 360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   };
 361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t raw;
 363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_PORT_CTRL_t;
 364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC DMA descriptor
 367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_DMA_DESC
 369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t status;                 /**< DMA descriptor status */
 371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t length;                 /**< Descriptor length */
 372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer1;                /**< Buffer 1 */
 373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t buffer2;                /**< Buffer 2 */
 374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t extended_status;        /**< Extended status */
 375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t reserved;               /**< Reserved */
 376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_nanoseconds; /**< Time stamp low */
 377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   volatile uint32_t time_stamp_seconds;     /**< Time stamp high */
 378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_DMA_DESC_t;
 379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC time
 382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC_TIME
 384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t seconds;                 /**< Seconds */
 386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   int32_t nanoseconds;              /**< Nanoseconds */
 387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_TIME_t;
 388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH driver structure
 391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** typedef struct XMC_ETH_MAC
 393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH_GLOBAL_TypeDef *regs;        /**< ETH module 0 (now, we have a single ETH module) */
 395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint64_t address;              /**< MAC address */
 396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *rx_desc; /**< DMA descriptor: RX */
 397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_ETH_MAC_DMA_DESC_t *tx_desc; /**< DMA descriptor: TX */
 398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *rx_buf;                /**< RX buffer */
 399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *tx_buf;                /**< TX buffer */
 400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t *frame_end;              /**< End of assembled frame fragments */
 401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_rx_buf;              /**< How many RX descriptors? */
 402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t num_tx_buf;              /**< How many TX descriptors? */
 403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_index;                /**< Transmit descriptor index */
 404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t rx_index;                /**< Receive descriptor index */
 405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint8_t tx_ts_index;             /**< Transmit time-stamp descriptor index */
 406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** } XMC_ETH_MAC_t;
 407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /* Anonymous structure/union guard end */
 409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #if defined (__CC_ARM)
 410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma pop
 411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #elif defined (__TASKING__)
 412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #pragma warning restore
 413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**************************************************************************************************
 416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * API PROTOTYPES
 417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  **************************************************************************************************
 418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #ifdef __cplusplus
 420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** extern "C" {
 421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** #endif
 422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t Initialization status
 426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral <br>
 429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_Init(XMC_ETH_MAC_t *const eth_mac);
 435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the Ethernet MAC peripheral. <br>
 442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Required when initializing the PHY, to deliver the clocks to the MAC, before MAC is reseted.
 443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \note The module needs to be enabled before using XMC_ETH_MAC_Enable() <br>
 444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed, applies the duplex mode, sets auto-negotiation
 447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * and loop-back settings.
 448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitEx(XMC_ETH_MAC_t *const eth_mac);
 450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the RX DMA descriptors <br>
 457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX descriptors in a chained configuration. It sets
 460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitRxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Initialize the TX DMA descriptors <br>
 470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX descriptors in a chained configuration. It sets
 473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * up the status bit, control bit, buffer length and the buffer pointer.
 474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_InitTxDescriptors(XMC_ETH_MAC_t *const eth_mac);
 476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable the Ethernet MAC peripheral <br>
 483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function de-asserts the peripheral reset.
 486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Enable(XMC_ETH_MAC_t *const eth_mac);
 488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable the Ethernet MAC peripheral <br>
 495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function asserts the peripheral reset.
 498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_Disable(XMC_ETH_MAC_t *const eth_mac);
 500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Reset the ETH MAC peripheral <br>
 507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the ETH MAC peripheral. It blocks until reset.
 510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_Reset(XMC_ETH_MAC_t *const eth_mac)
 512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->BUS_MODE |= (uint32_t)ETH_BUS_MODE_SWR_Msk;
 514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   while ((eth_mac->regs->BUS_MODE & (uint32_t)ETH_BUS_MODE_SWR_Msk) != 0U)
 515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   {
 516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   }
 517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The destination to which the read data needs to be copied to
 524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Read a PHY register <br>
 528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially polls busy bit during max
 531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * PHY_TIMEOUT time and reads the information into 'data' when not busy.
 532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_ReadPhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t re
 534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param phy_addr PHY address
 538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param reg_addr Register address
 539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param data The data to write
 540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Write a PHY register <br>
 544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function reads a PHY register. It essentially writes the data and polls
 547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the busy bit until it is no longer busy.
 548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_WritePhy(XMC_ETH_MAC_t *const eth_mac, uint8_t phy_addr, uint8_t r
 550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param port_ctrl Port control configuration
 554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set port control configuration <br>
 558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the port control by writing the configuration into the
 561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * CON register.
 562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \note
 564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MII Mode is only available in:
 565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4500 LQFP144 and BGA144 packages
 566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4700 LQFP144 and BGA196 packages
 567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * - XMC4800 LQFP144 and BGA196 packages
 568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetPortControl(XMC_ETH_MAC_t *const eth_mac, const XMC_ETH_MAC_POR
 571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 426              	 .loc 3 571 0
 427              	 .cfi_startproc
 428              	 
 429              	 
 430              	 
 431 0000 80B4     	 push {r7}
 432              	.LCFI34:
 433              	 .cfi_def_cfa_offset 4
 434              	 .cfi_offset 7,-4
 435 0002 83B0     	 sub sp,sp,#12
 436              	.LCFI35:
 437              	 .cfi_def_cfa_offset 16
 438 0004 00AF     	 add r7,sp,#0
 439              	.LCFI36:
 440              	 .cfi_def_cfa_register 7
 441 0006 7860     	 str r0,[r7,#4]
 442 0008 3960     	 str r1,[r7]
 572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   XMC_UNUSED_ARG(eth_mac);
 573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   ETH0_CON->CON = (uint32_t)port_ctrl.raw;
 443              	 .loc 3 573 0
 444 000a 044A     	 ldr r2,.L27
 445 000c 3B68     	 ldr r3,[r7]
 446 000e 1360     	 str r3,[r2]
 574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 447              	 .loc 3 574 0
 448 0010 0C37     	 adds r7,r7,#12
 449              	.LCFI37:
 450              	 .cfi_def_cfa_offset 4
 451 0012 BD46     	 mov sp,r7
 452              	.LCFI38:
 453              	 .cfi_def_cfa_register 13
 454              	 
 455 0014 5DF8047B 	 ldr r7,[sp],#4
 456              	.LCFI39:
 457              	 .cfi_restore 7
 458              	 .cfi_def_cfa_offset 0
 459 0018 7047     	 bx lr
 460              	.L28:
 461 001a 00BF     	 .align 2
 462              	.L27:
 463 001c 40400050 	 .word 1342193728
 464              	 .cfi_endproc
 465              	.LFE134:
 467              	 .section .text.XMC_ETH_MAC_DisableJumboFrame,"ax",%progbits
 468              	 .align 2
 469              	 .thumb
 470              	 .thumb_func
 472              	XMC_ETH_MAC_DisableJumboFrame:
 473              	.LFB164:
 575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status
 579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set management clock divider <br>
 582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the management clock divider by writing to the GMII_ADDRESS
 585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * register.
 586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SetManagmentClockDivider(XMC_ETH_MAC_t *const eth_mac);
 588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr The MAC address to set
 592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetAddress(XMC_ETH_MAC_t *const eth_mac, uint64_t addr)
 602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_HIGH = (uint32_t)(addr >> 32);
 604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_ADDRESS0_LOW = (uint32_t)addr;
 605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr Pointer to 6 byte MAC address
 610:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 611:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 612:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 613:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set MAC address <br>
 614:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 615:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 616:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the MAC address by writing to the MAC_ADDRESS0_HIGH and
 617:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC_ADDRESS0_LOW registers.
 618:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 619:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_SetAddressEx(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const addr);
 620:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 621:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 622:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 623:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return uint64_t The MAC address which has been set
 624:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 625:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 626:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Get MAC address <br>
 627:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 628:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 629:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function returns the current ETH MAC address.
 630:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 631:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint64_t XMC_ETH_MAC_GetAddress(XMC_ETH_MAC_t *const eth_mac)
 632:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 633:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t mac_addr_high = eth_mac->regs->MAC_ADDRESS0_HIGH;
 634:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   uint32_t mac_addr_low = eth_mac->regs->MAC_ADDRESS0_HIGH;
 635:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return ((((uint64_t)mac_addr_high << 32)) | (uint64_t)mac_addr_low);
 636:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 637:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 638:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 639:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 640:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return uint64_t The MAC address which has been set
 641:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 642:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 643:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Get MAC address <br>
 644:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 645:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 646:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function returns the current ETH MAC address.
 647:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 648:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_GetAddressEx(XMC_ETH_MAC_t *const eth_mac, uint8_t *const addr);
 649:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 650:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 651:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 652:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param index Table entry index
 653:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr Address value
 654:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param flags Compare control. OR'ed combination of @ref XMC_ETH_MAC_ADDR_FILTER_t or zero.
 655:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 656:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 657:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 658:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 659:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set perfect filter for address filtering <br>
 660:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 661:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 662:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to set perfect filter for address filtering.
 663:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 664:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_SetAddressPerfectFilter(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const uint64_
 665:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 666:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 667:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 668:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param index Table entry index
 669:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addr Pointer to 6 byte MAC address
 670:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param flags Compare control. OR'ed combination of @ref XMC_ETH_MAC_ADDR_FILTER_t or zero.
 671:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 672:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 673:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 674:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 675:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set perfect filter for address filtering <br>
 676:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 677:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 678:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to set perfect filter for address filtering.
 679:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 680:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_SetAddressPerfectFilterEx(XMC_ETH_MAC_t *const eth_mac, uint8_t index, uint8_t *co
 681:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 682:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 683:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 684:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param hash The hash to be used for filtering
 685:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 686:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 687:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 688:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set hash filter for group address filtering <br>
 689:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 690:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 691:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets up a hash filter for group address filtering. It writes the
 692:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * given hash value into the HASH_TABLE_LOW and HASH_TABLE_HIGH registers.
 693:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 694:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_SetAddressHashFilter(XMC_ETH_MAC_t *const eth_mac, const uint64_t hash);
 695:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 696:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 697:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 698:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 699:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 700:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 701:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable frame filter <br>
 702:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 703:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 704:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the RA bitfield of the MAC_FRAME_FILTER register. This
 705:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ensures that the receiver module passes only those frames (to the application)
 706:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * that pass the SA or DA address filter.
 707:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 708:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableFrameFilter(XMC_ETH_MAC_t *const eth_mac)
 709:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 710:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_RA_Msk;
 711:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 712:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 713:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 714:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 715:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 716:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 717:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 718:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable frame filter <br>
 719:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 720:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 721:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the RA bitfield of the MAC_FRAME_FILTER register. This
 722:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ensures that the receiver module passes all received frames, irrespective
 723:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * of whether they pass the address filter or not.
 724:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 725:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableFrameFilter(XMC_ETH_MAC_t *const eth_mac)
 726:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 727:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_RA_Msk;
 728:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 729:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 730:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 731:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 732:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 733:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 734:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 735:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable hash perfect filter <br>
 736:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 737:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 738:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the HPF bitfield of the MAC_FRAME_FILTER register. The
 739:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * function configures the address filter to pass a frame if it matches
 740:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * either the perfect filtering or the hash filtering.
 741:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 742:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableHashPerfectFilter(XMC_ETH_MAC_t *const eth_mac)
 743:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 744:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_HPF_Msk;
 745:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 746:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 747:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 748:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 749:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 750:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 751:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 752:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable perfect filter <br>
 753:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 754:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 755:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function clears the HPF bitfield of the MAC_FRAME_FILTER register. When the
 756:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * function is invoked, the frame is passed only if it matches the hash filter.
 757:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 758:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnablePerfectFilter(XMC_ETH_MAC_t *const eth_mac)
 759:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 760:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_HPF_Msk;
 761:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 762:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 763:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 764:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 765:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 766:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 767:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 768:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable source address filter <br>
 769:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 770:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 771:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the SAF bitfield of the MAC_FRAME_FILTER register. Verbatim
 772:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the reference manual - "When invoked, the MAC compares the SA field of the
 773:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * received frames with the values programmed in the enabled SA registers. If the
 774:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * comparison matches, then the SA Match bit of RxStatus Word is set high. When
 775:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * this bit is set high and the SA filter fails, the MAC drops the frame.
 776:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 777:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableSourceAddressFilter(XMC_ETH_MAC_t *const eth_mac)
 778:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 779:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_SAF_Msk;
 780:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 781:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 782:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 783:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 784:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 785:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 786:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 787:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable source address filter <br>
 788:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 789:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 790:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the SAF bitfield of the MAC_FRAME_FILTER register. Verbatim
 791:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the reference manual - "When invoked, the MAC forwards the received frame to
 792:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the application and updates the SA Match bit of the RxStatus depending on
 793:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the SA address comparison".
 794:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 795:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableSourceAddressFilter(XMC_ETH_MAC_t *const eth_mac)
 796:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 797:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_SAF_Msk;
 798:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 799:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 800:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 801:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 802:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 803:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 804:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 805:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable source address inverse filtering <br>
 806:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 807:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 808:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the SAIF bitfield of the MAC_FRAME_FILTER register. Verbatim
 809:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the reference manual - "When invoked, the address check block operates in
 810:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * inverse filtering mode for the SA address comparison. The frames whose SA matches
 811:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the SA registers are marked as failing the SA Address filter".
 812:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 813:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableSourceAddressInverseFilter(XMC_ETH_MAC_t *const eth_mac)
 814:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 815:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_SAIF_Msk;
 816:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 817:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 818:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 819:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 820:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 821:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 822:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 823:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable source address inverse filtering <br>
 824:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 825:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 826:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function resets the SAIF bitfield of the MAC_FRAME_FILTER register. Verbatim
 827:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the reference manual - "When invoked, frames whose SA does not match the SA
 828:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * registers are marked as failing the SA Address filter".
 829:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 830:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableSourceAddressInverseFilter(XMC_ETH_MAC_t *const eth_mac)
 831:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 832:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_SAIF_Msk;
 833:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 834:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 835:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 836:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 837:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 838:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 839:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 840:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable destination address inverse filtering <br>
 841:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 842:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 843:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the DAIF bitfield of the MAC_FRAME_FILTER register. Verbatim
 844:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the reference manual - "When invoked, the address check block operates in
 845:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * inverse filtering mode for the DA address comparison for both unicast and
 846:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * multicast frames".
 847:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 848:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableDestinationAddressInverseFilter(XMC_ETH_MAC_t *const eth_mac
 849:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 850:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_DAIF_Msk;
 851:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 852:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 853:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 854:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 855:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 856:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 857:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 858:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable destination address inverse filtering <br>
 859:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 860:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 861:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the DAIF bitfield of the MAC_FRAME_FILTER register. It can
 862:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * be used to perform normal filtering of frames.
 863:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 864:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableDestinationAddressInverseFilter(XMC_ETH_MAC_t *const eth_ma
 865:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 866:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_DAIF_Msk;
 867:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 868:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 869:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 870:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 871:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 872:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 873:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 874:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable multicast hash filter <br>
 875:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 876:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 877:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * When invoked, the MAC performs destination address filtering of received
 878:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * multicast frames according to the hash table.
 879:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 880:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableMulticastHashFilter(XMC_ETH_MAC_t *const eth_mac)
 881:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 882:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_HMC_Msk;
 883:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 884:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 885:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 886:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 887:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 888:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 889:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 890:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable multicast hash filter <br>
 891:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 892:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 893:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables multicast hash filtering. The MAC performs a perfect
 894:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * destination address filtering for multicast frames post invocation.
 895:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 896:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableMulticastHashFilter(XMC_ETH_MAC_t *const eth_mac)
 897:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 898:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_HMC_Msk;
 899:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 900:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 901:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 902:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 903:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 904:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 905:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 906:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable unicast hash filter <br>
 907:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 908:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 909:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the MAC to perform destination address filtering of
 910:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * unicast frames according to the hash table.
 911:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 912:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableUnicastHashFilter(XMC_ETH_MAC_t *const eth_mac)
 913:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 914:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_HUC_Msk;
 915:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 916:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 917:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 918:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 919:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 920:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 921:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 922:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable unicast hash filter <br>
 923:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 924:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 925:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables unicast hash filtering. When invoked, the MAC performs a
 926:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * perfect destination address filtering for unicast frames.
 927:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 928:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableUnicastHashFilter(XMC_ETH_MAC_t *const eth_mac)
 929:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 930:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_HUC_Msk;
 931:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 932:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 933:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 934:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 935:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param frame A pointer to a uint8_t constant, holding the frame to be transmitted
 936:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param len Length of the frame to transmit
 937:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param flags Additional flags: ored combination of ::XMC_ETH_MAC_TX_FRAME_t or zero.
 938:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return XMC_ETH_MAC_STATUS_t ETH MAC status (XMC_ETH_MAC_STATUS_BUSY if busy,
 939:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *         XMC_ETH_MAC_STATUS_OK otherwise).
 940:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 941:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 942:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Send a frame <br>
 943:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 944:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 945:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function is used to send a frame. The transmission is done using
 946:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the ETH MAC's dedicated DMA unit.
 947:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 948:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** XMC_ETH_MAC_STATUS_t XMC_ETH_MAC_SendFrame(XMC_ETH_MAC_t *const eth_mac,
 949:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     const uint8_t *frame,
 950:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t len,
 951:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     uint32_t flags);
 952:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 953:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 954:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 955:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param frame A constant pointer to a uint8_t constant, holding the received frame
 956:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param len Frame length?
 957:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return uint32_t Length of the frame
 958:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 959:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 960:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Read a frame <br>
 961:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 962:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 963:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function is used to read a frame. The function returns 'len', the length
 964:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * as specified as the actual parameter in the function call.
 965:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 966:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** uint32_t XMC_ETH_MAC_ReadFrame(XMC_ETH_MAC_t *const eth_mac, uint8_t *const frame, uint32_t len);
 967:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 968:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 969:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 970:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return uint32_t RX frame size
 971:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 972:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 973:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Get RX frame size <br>
 974:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 975:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 976:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function is used to get the effective length of the RX frame size.
 977:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 978:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** uint32_t XMC_ETH_MAC_GetRxFrameSize(XMC_ETH_MAC_t *const eth_mac);
 979:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 980:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 981:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 982:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 983:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 984:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
 985:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable reception of broadcast frames <br>
 986:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 987:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
 988:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * This function enables the AFM module to pass all received broadcast frames.
 989:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
 990:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableReceptionBroadcastFrames(XMC_ETH_MAC_t *const eth_mac)
 991:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 992:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_DBF_Msk;
 993:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 994:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
 995:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
 996:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
 997:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
 998:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
 999:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1000:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable reception of broadcast frames <br>
1001:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1002:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1003:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the DBF bitfield of the MAC_FRAME_FILTER register. When set,
1004:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the AFM module filters all incoming broadcast frames. In addition, it overrides
1005:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * all other filter settings.
1006:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1007:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableReceptionBroadcastFrames(XMC_ETH_MAC_t *const eth_mac)
1008:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1009:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_DBF_Msk;
1010:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1011:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1012:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1013:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1014:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1015:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1016:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1017:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable reception of multicast frames <br>
1018:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1019:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1020:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the DBF bitfield of the MAC_FRAME_FILTER register. When set,
1021:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * the AFM module filters all incoming broadcast frames. In addition, it overrides
1022:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * all other filter settings.
1023:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1024:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableReceptionMulticastFrames(XMC_ETH_MAC_t *const eth_mac)
1025:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1026:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_PM_Msk;
1027:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1028:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1029:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1030:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1031:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1032:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1033:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1034:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable reception of multicast frames <br>
1035:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1036:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1037:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables the reception of multicast frames. When invoked, the AFM
1038:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * module passes all received broadcast frames.
1039:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1040:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableReceptionMulticastFrames(XMC_ETH_MAC_t *const eth_mac)
1041:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1042:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_PM_Msk;
1043:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1044:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1045:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1046:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1047:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1048:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1049:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1050:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable promiscuous mode <br>
1051:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1052:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1053:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the promiscuous mode. In this mode, the address filter
1054:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * module passes all incoming frames regardless of its destination or source
1055:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * address.
1056:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1057:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnablePromiscuousMode(XMC_ETH_MAC_t *const eth_mac)
1058:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1059:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER |= (uint32_t)ETH_MAC_FRAME_FILTER_PR_Msk;
1060:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1061:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1062:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1063:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1064:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1065:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1066:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1067:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable promiscuous mode <br>
1068:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1069:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1070:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables the promiscuous mode.
1071:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1072:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisablePromiscuousMode(XMC_ETH_MAC_t *const eth_mac)
1073:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1074:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_FRAME_FILTER &= (uint32_t)~ETH_MAC_FRAME_FILTER_PR_Msk;
1075:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1076:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1077:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1078:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1079:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1080:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1081:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1082:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable RX watchdog <br>
1083:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1084:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1085:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the RX watchdog by clearing the WD bitfield of the
1086:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MAC_CONFIGURATION register. When invoked, the MAC does not allow more
1087:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * than 2048 bytes of the frame being received.
1088:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1089:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableRxWatchdog(XMC_ETH_MAC_t *const eth_mac)
1090:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1091:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_WD_Msk;
1092:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1093:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1094:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1095:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1096:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1097:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1098:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1099:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable RX watchdog <br>
1100:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1101:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1102:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables the RX watchdog by disabling the timer on the RX.
1103:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1104:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableRxWatchdog(XMC_ETH_MAC_t *const eth_mac)
1105:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1106:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_WD_Msk;
1107:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1108:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1109:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1110:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1111:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1112:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1113:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1114:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable TX jabber <br>
1115:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1116:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1117:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * When the function is invoked, the MAC cuts off the transmitter if the application
1118:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * sends out more than 2,048 bytes of data during transmission (10,240 bytes if
1119:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * jumbo frames are enabled)
1120:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1121:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableTxJabber(XMC_ETH_MAC_t *const eth_mac)
1122:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1123:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_JD_Msk;
1124:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1125:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1126:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1127:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1128:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1129:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1130:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1131:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable TX jabber <br>
1132:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1133:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1134:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * When the function is invoked, the MAC disables the jabber timer on TX.
1135:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1136:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableTxJabber(XMC_ETH_MAC_t *const eth_mac)
1137:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1138:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_JD_Msk;
1139:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1140:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1141:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1142:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1143:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1144:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1145:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1146:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Frame burst enable <br>
1147:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1148:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1149:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to enable frame bursting during transmission in the
1150:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * MII half-duplex mode.
1151:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1152:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableFrameBurst(XMC_ETH_MAC_t *const eth_mac)
1153:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1154:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_BE_Msk;
1155:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1156:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1157:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1158:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1159:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1160:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1161:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1162:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Frame burst disable <br>
1163:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1164:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1165:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to disable frame bursting.
1166:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1167:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableFrameBurst(XMC_ETH_MAC_t *const eth_mac)
1168:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1169:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_BE_Msk;
1170:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1171:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1172:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1173:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1174:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1175:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1176:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1177:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Jumbo frame enable <br>
1178:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1179:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1180:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to enable jumbo frames. When enabled, the MAC allows
1181:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * jumbo frames of 9,018 bytes without reporting a giant frame error in the receive
1182:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * frame status.
1183:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1184:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableJumboFrame(XMC_ETH_MAC_t *const eth_mac)
1185:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1186:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_JE_Msk;
1187:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1188:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1189:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1190:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1191:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1192:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1193:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1194:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Jumbo frame disable <br>
1195:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1196:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1197:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to disable jumbo frames.
1198:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1199:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableJumboFrame(XMC_ETH_MAC_t *const eth_mac)
1200:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 474              	 .loc 3 1200 0
 475              	 .cfi_startproc
 476              	 
 477              	 
 478              	 
 479 0000 80B4     	 push {r7}
 480              	.LCFI40:
 481              	 .cfi_def_cfa_offset 4
 482              	 .cfi_offset 7,-4
 483 0002 83B0     	 sub sp,sp,#12
 484              	.LCFI41:
 485              	 .cfi_def_cfa_offset 16
 486 0004 00AF     	 add r7,sp,#0
 487              	.LCFI42:
 488              	 .cfi_def_cfa_register 7
 489 0006 7860     	 str r0,[r7,#4]
1201:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_JE_Msk;
 490              	 .loc 3 1201 0
 491 0008 7B68     	 ldr r3,[r7,#4]
 492 000a 1B68     	 ldr r3,[r3]
 493 000c 7A68     	 ldr r2,[r7,#4]
 494 000e 1268     	 ldr r2,[r2]
 495 0010 1268     	 ldr r2,[r2]
 496 0012 22F48012 	 bic r2,r2,#1048576
 497 0016 1A60     	 str r2,[r3]
1202:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 498              	 .loc 3 1202 0
 499 0018 0C37     	 adds r7,r7,#12
 500              	.LCFI43:
 501              	 .cfi_def_cfa_offset 4
 502 001a BD46     	 mov sp,r7
 503              	.LCFI44:
 504              	 .cfi_def_cfa_register 13
 505              	 
 506 001c 5DF8047B 	 ldr r7,[sp],#4
 507              	.LCFI45:
 508              	 .cfi_restore 7
 509              	 .cfi_def_cfa_offset 0
 510 0020 7047     	 bx lr
 511              	 .cfi_endproc
 512              	.LFE164:
 514 0022 00BF     	 .section .text.XMC_ETH_MAC_SetLink,"ax",%progbits
 515              	 .align 2
 516              	 .thumb
 517              	 .thumb_func
 519              	XMC_ETH_MAC_SetLink:
 520              	.LFB169:
1203:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1204:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1205:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1206:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1207:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1208:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1209:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable receive own <br>
1210:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1211:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1212:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the MAC to receive all packets that are given by the PHY
1213:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * while transmitting.
1214:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1215:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableRxOwn(XMC_ETH_MAC_t *const eth_mac)
1216:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1217:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_DO_Msk;
1218:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1219:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1220:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1221:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1222:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1223:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1224:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1225:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable receive own <br>
1226:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1227:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1228:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * On invocation of the function, the MAC disables the reception of frames in the
1229:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * half-duplex mode.
1230:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1231:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableRxOwn(XMC_ETH_MAC_t *const eth_mac)
1232:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1233:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_DO_Msk;
1234:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1235:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1236:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1237:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1238:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1239:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1240:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1241:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Enable loopback mode <br>
1242:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1243:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1244:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the MAC to operate in the loopback mode using the MII.
1245:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1246:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableLoopback(XMC_ETH_MAC_t *const eth_mac)
1247:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1248:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_LM_Msk;
1249:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1250:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1251:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1252:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1253:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1254:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1255:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1256:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Disable loopback mode <br>
1257:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1258:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1259:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function can be used to disable the loopback mode.
1260:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1261:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableLoopback(XMC_ETH_MAC_t *const eth_mac)
1262:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1263:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_LM_Msk;
1264:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1265:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1266:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1267:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1268:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param speed The speed at which the link is set (10M or 100M?)
1269:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param duplex Duplex settings (half or full duplex?)
1270:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1271:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1272:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1273:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Set link <br>
1274:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1275:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1276:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the link speed and duplex settings.
1277:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1278:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetLink(XMC_ETH_MAC_t *const eth_mac,
1279:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     XMC_ETH_LINK_SPEED_t speed,
1280:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****     XMC_ETH_LINK_DUPLEX_t duplex)
1281:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 521              	 .loc 3 1281 0
 522              	 .cfi_startproc
 523              	 
 524              	 
 525              	 
 526 0000 80B4     	 push {r7}
 527              	.LCFI46:
 528              	 .cfi_def_cfa_offset 4
 529              	 .cfi_offset 7,-4
 530 0002 83B0     	 sub sp,sp,#12
 531              	.LCFI47:
 532              	 .cfi_def_cfa_offset 16
 533 0004 00AF     	 add r7,sp,#0
 534              	.LCFI48:
 535              	 .cfi_def_cfa_register 7
 536 0006 7860     	 str r0,[r7,#4]
 537 0008 0B46     	 mov r3,r1
 538 000a 7B80     	 strh r3,[r7,#2]
 539 000c 1346     	 mov r3,r2
 540 000e 3B80     	 strh r3,[r7]
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION = (eth_mac->regs->MAC_CONFIGURATION &
 541              	 .loc 3 1282 0
 542 0010 7B68     	 ldr r3,[r7,#4]
 543 0012 1B68     	 ldr r3,[r3]
 544 0014 7A68     	 ldr r2,[r7,#4]
 545 0016 1268     	 ldr r2,[r2]
 546 0018 1268     	 ldr r2,[r2]
 547 001a 22F49041 	 bic r1,r2,#18432
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                       (uint32_t)~(ETH_MAC_CONFIGURATION_DM_Msk | ETH_MAC_CONFIGURAT
1284:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                      (uint32_t)speed | (uint32_t)duplex;
 548              	 .loc 3 1284 0
 549 001e 7A88     	 ldrh r2,[r7,#2]
1283:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****                                       (uint32_t)~(ETH_MAC_CONFIGURATION_DM_Msk | ETH_MAC_CONFIGURAT
 550              	 .loc 3 1283 0
 551 0020 1143     	 orrs r1,r1,r2
 552              	 .loc 3 1284 0
 553 0022 3A88     	 ldrh r2,[r7]
 554 0024 0A43     	 orrs r2,r2,r1
1282:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION = (eth_mac->regs->MAC_CONFIGURATION &
 555              	 .loc 3 1282 0
 556 0026 1A60     	 str r2,[r3]
1285:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 557              	 .loc 3 1285 0
 558 0028 0C37     	 adds r7,r7,#12
 559              	.LCFI49:
 560              	 .cfi_def_cfa_offset 4
 561 002a BD46     	 mov sp,r7
 562              	.LCFI50:
 563              	 .cfi_def_cfa_register 13
 564              	 
 565 002c 5DF8047B 	 ldr r7,[sp],#4
 566              	.LCFI51:
 567              	 .cfi_restore 7
 568              	 .cfi_def_cfa_offset 0
 569 0030 7047     	 bx lr
 570              	 .cfi_endproc
 571              	.LFE169:
 573 0032 00BF     	 .section .text.XMC_ETH_MAC_IsRxDescriptorOwnedByDma,"ax",%progbits
 574              	 .align 2
 575              	 .thumb
 576              	 .thumb_func
 578              	XMC_ETH_MAC_IsRxDescriptorOwnedByDma:
 579              	.LFB170:
1286:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1287:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1288:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1289:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1290:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1291:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1292:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Return RX descriptor <br>
1293:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1294:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1295:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the specified DMA RX descriptor own bit.
1296:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1297:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_ReturnRxDescriptor(XMC_ETH_MAC_t *const eth_mac);
1298:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1299:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1300:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1301:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return bool true if RX descriptor is owned by DMA, false otherwise
1302:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1303:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1304:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Is RX descriptor owned by DMA? <br>
1305:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1306:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1307:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the RX descriptor is owned by the DMA.
1308:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1309:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE bool XMC_ETH_MAC_IsRxDescriptorOwnedByDma(XMC_ETH_MAC_t *const eth_mac)
1310:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 580              	 .loc 3 1310 0
 581              	 .cfi_startproc
 582              	 
 583              	 
 584              	 
 585 0000 80B4     	 push {r7}
 586              	.LCFI52:
 587              	 .cfi_def_cfa_offset 4
 588              	 .cfi_offset 7,-4
 589 0002 83B0     	 sub sp,sp,#12
 590              	.LCFI53:
 591              	 .cfi_def_cfa_offset 16
 592 0004 00AF     	 add r7,sp,#0
 593              	.LCFI54:
 594              	 .cfi_def_cfa_register 7
 595 0006 7860     	 str r0,[r7,#4]
1311:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return ((eth_mac->rx_desc[eth_mac->rx_index].status & ETH_MAC_DMA_RDES0_OWN) != 0U);
 596              	 .loc 3 1311 0
 597 0008 7B68     	 ldr r3,[r7,#4]
 598 000a 1A69     	 ldr r2,[r3,#16]
 599 000c 7B68     	 ldr r3,[r7,#4]
 600 000e 93F82730 	 ldrb r3,[r3,#39]
 601 0012 5B01     	 lsls r3,r3,#5
 602 0014 1344     	 add r3,r3,r2
 603 0016 1B68     	 ldr r3,[r3]
 604 0018 DB0F     	 lsrs r3,r3,#31
 605 001a DBB2     	 uxtb r3,r3
1312:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 606              	 .loc 3 1312 0
 607 001c 1846     	 mov r0,r3
 608 001e 0C37     	 adds r7,r7,#12
 609              	.LCFI55:
 610              	 .cfi_def_cfa_offset 4
 611 0020 BD46     	 mov sp,r7
 612              	.LCFI56:
 613              	 .cfi_def_cfa_register 13
 614              	 
 615 0022 5DF8047B 	 ldr r7,[sp],#4
 616              	.LCFI57:
 617              	 .cfi_restore 7
 618              	 .cfi_def_cfa_offset 0
 619 0026 7047     	 bx lr
 620              	 .cfi_endproc
 621              	.LFE170:
 623              	 .section .text.XMC_ETH_MAC_IsTxDescriptorOwnedByDma,"ax",%progbits
 624              	 .align 2
 625              	 .thumb
 626              	 .thumb_func
 628              	XMC_ETH_MAC_IsTxDescriptorOwnedByDma:
 629              	.LFB171:
1313:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1314:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1315:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1316:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1317:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1318:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1319:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Return TX descriptor <br>
1320:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1321:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1322:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function sets the specified DMA TX descriptor own bit.
1323:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1324:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_ReturnTxDescriptor(XMC_ETH_MAC_t *const eth_mac);
1325:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1326:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1327:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1328:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return bool true if TX descriptor is owned by DMA, false otherwise
1329:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1330:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1331:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Is TX descriptor owned by DMA? <br>
1332:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1333:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1334:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the TX descriptor is owned by the DMA.
1335:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1336:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE bool XMC_ETH_MAC_IsTxDescriptorOwnedByDma(XMC_ETH_MAC_t *const eth_mac)
1337:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 630              	 .loc 3 1337 0
 631              	 .cfi_startproc
 632              	 
 633              	 
 634              	 
 635 0000 80B4     	 push {r7}
 636              	.LCFI58:
 637              	 .cfi_def_cfa_offset 4
 638              	 .cfi_offset 7,-4
 639 0002 83B0     	 sub sp,sp,#12
 640              	.LCFI59:
 641              	 .cfi_def_cfa_offset 16
 642 0004 00AF     	 add r7,sp,#0
 643              	.LCFI60:
 644              	 .cfi_def_cfa_register 7
 645 0006 7860     	 str r0,[r7,#4]
1338:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return ((eth_mac->tx_desc[eth_mac->tx_index].status & ETH_MAC_DMA_TDES0_OWN) != 0U);
 646              	 .loc 3 1338 0
 647 0008 7B68     	 ldr r3,[r7,#4]
 648 000a 5A69     	 ldr r2,[r3,#20]
 649 000c 7B68     	 ldr r3,[r7,#4]
 650 000e 93F82630 	 ldrb r3,[r3,#38]
 651 0012 5B01     	 lsls r3,r3,#5
 652 0014 1344     	 add r3,r3,r2
 653 0016 1B68     	 ldr r3,[r3]
 654 0018 DB0F     	 lsrs r3,r3,#31
 655 001a DBB2     	 uxtb r3,r3
1339:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 656              	 .loc 3 1339 0
 657 001c 1846     	 mov r0,r3
 658 001e 0C37     	 adds r7,r7,#12
 659              	.LCFI61:
 660              	 .cfi_def_cfa_offset 4
 661 0020 BD46     	 mov sp,r7
 662              	.LCFI62:
 663              	 .cfi_def_cfa_register 13
 664              	 
 665 0022 5DF8047B 	 ldr r7,[sp],#4
 666              	.LCFI63:
 667              	 .cfi_restore 7
 668              	 .cfi_def_cfa_offset 0
 669 0026 7047     	 bx lr
 670              	 .cfi_endproc
 671              	.LFE171:
 673              	 .section .text.XMC_ETH_MAC_EnableRx,"ax",%progbits
 674              	 .align 2
 675              	 .thumb
 676              	 .thumb_func
 678              	XMC_ETH_MAC_EnableRx:
 679              	.LFB173:
1340:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1341:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1342:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1343:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return bool true if TX descriptor is owned by DMA, false otherwise
1344:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1345:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1346:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Is TX descriptor owned by DMA? <br>
1347:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1348:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1349:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function checks if the TX descriptor is owned by the DMA.
1350:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1351:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE bool XMC_ETH_MAC_IsTxDescriptorOwnedByDmaEx(XMC_ETH_MAC_t *const eth_mac, uint8_t i
1352:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1353:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return ((eth_mac->tx_desc[index].status & ETH_MAC_DMA_TDES0_OWN) != 0U);
1354:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1355:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1356:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1357:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1358:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1359:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1360:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1361:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC Enable RX <br>
1362:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1363:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1364:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the receiver state machine of the MAC and puts the
1365:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * receive process in running state. The DMA then acquires the descriptor
1366:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * from the receive list and processes the received frames.
1367:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1368:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableRx(XMC_ETH_MAC_t *const eth_mac)
1369:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 680              	 .loc 3 1369 0
 681              	 .cfi_startproc
 682              	 
 683              	 
 684              	 
 685 0000 80B4     	 push {r7}
 686              	.LCFI64:
 687              	 .cfi_def_cfa_offset 4
 688              	 .cfi_offset 7,-4
 689 0002 83B0     	 sub sp,sp,#12
 690              	.LCFI65:
 691              	 .cfi_def_cfa_offset 16
 692 0004 00AF     	 add r7,sp,#0
 693              	.LCFI66:
 694              	 .cfi_def_cfa_register 7
 695 0006 7860     	 str r0,[r7,#4]
1370:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_SR_Msk;
 696              	 .loc 3 1370 0
 697 0008 7B68     	 ldr r3,[r7,#4]
 698 000a 1968     	 ldr r1,[r3]
 699 000c 7B68     	 ldr r3,[r7,#4]
 700 000e 1B68     	 ldr r3,[r3]
 701 0010 03F58053 	 add r3,r3,#4096
 702 0014 1833     	 adds r3,r3,#24
 703 0016 1B68     	 ldr r3,[r3]
 704 0018 43F00202 	 orr r2,r3,#2
 705 001c 01F58053 	 add r3,r1,#4096
 706 0020 1833     	 adds r3,r3,#24
 707 0022 1A60     	 str r2,[r3]
1371:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_RE_Msk;
 708              	 .loc 3 1371 0
 709 0024 7B68     	 ldr r3,[r7,#4]
 710 0026 1B68     	 ldr r3,[r3]
 711 0028 7A68     	 ldr r2,[r7,#4]
 712 002a 1268     	 ldr r2,[r2]
 713 002c 1268     	 ldr r2,[r2]
 714 002e 42F00402 	 orr r2,r2,#4
 715 0032 1A60     	 str r2,[r3]
1372:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 716              	 .loc 3 1372 0
 717 0034 0C37     	 adds r7,r7,#12
 718              	.LCFI67:
 719              	 .cfi_def_cfa_offset 4
 720 0036 BD46     	 mov sp,r7
 721              	.LCFI68:
 722              	 .cfi_def_cfa_register 13
 723              	 
 724 0038 5DF8047B 	 ldr r7,[sp],#4
 725              	.LCFI69:
 726              	 .cfi_restore 7
 727              	 .cfi_def_cfa_offset 0
 728 003c 7047     	 bx lr
 729              	 .cfi_endproc
 730              	.LFE173:
 732 003e 00BF     	 .section .text.XMC_ETH_MAC_DisableRx,"ax",%progbits
 733              	 .align 2
 734              	 .thumb
 735              	 .thumb_func
 737              	XMC_ETH_MAC_DisableRx:
 738              	.LFB174:
1373:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1374:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1375:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1376:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1377:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1378:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1379:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC Disable RX <br>
1380:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1381:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1382:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables the receive process.
1383:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1384:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableRx(XMC_ETH_MAC_t *const eth_mac)
1385:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 739              	 .loc 3 1385 0
 740              	 .cfi_startproc
 741              	 
 742              	 
 743              	 
 744 0000 80B4     	 push {r7}
 745              	.LCFI70:
 746              	 .cfi_def_cfa_offset 4
 747              	 .cfi_offset 7,-4
 748 0002 83B0     	 sub sp,sp,#12
 749              	.LCFI71:
 750              	 .cfi_def_cfa_offset 16
 751 0004 00AF     	 add r7,sp,#0
 752              	.LCFI72:
 753              	 .cfi_def_cfa_register 7
 754 0006 7860     	 str r0,[r7,#4]
1386:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_RE_Msk;
 755              	 .loc 3 1386 0
 756 0008 7B68     	 ldr r3,[r7,#4]
 757 000a 1B68     	 ldr r3,[r3]
 758 000c 7A68     	 ldr r2,[r7,#4]
 759 000e 1268     	 ldr r2,[r2]
 760 0010 1268     	 ldr r2,[r2]
 761 0012 22F00402 	 bic r2,r2,#4
 762 0016 1A60     	 str r2,[r3]
1387:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_SR_Msk;
 763              	 .loc 3 1387 0
 764 0018 7B68     	 ldr r3,[r7,#4]
 765 001a 1968     	 ldr r1,[r3]
 766 001c 7B68     	 ldr r3,[r7,#4]
 767 001e 1B68     	 ldr r3,[r3]
 768 0020 03F58053 	 add r3,r3,#4096
 769 0024 1833     	 adds r3,r3,#24
 770 0026 1B68     	 ldr r3,[r3]
 771 0028 23F00202 	 bic r2,r3,#2
 772 002c 01F58053 	 add r3,r1,#4096
 773 0030 1833     	 adds r3,r3,#24
 774 0032 1A60     	 str r2,[r3]
1388:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 775              	 .loc 3 1388 0
 776 0034 0C37     	 adds r7,r7,#12
 777              	.LCFI73:
 778              	 .cfi_def_cfa_offset 4
 779 0036 BD46     	 mov sp,r7
 780              	.LCFI74:
 781              	 .cfi_def_cfa_register 13
 782              	 
 783 0038 5DF8047B 	 ldr r7,[sp],#4
 784              	.LCFI75:
 785              	 .cfi_restore 7
 786              	 .cfi_def_cfa_offset 0
 787 003c 7047     	 bx lr
 788              	 .cfi_endproc
 789              	.LFE174:
 791 003e 00BF     	 .section .text.XMC_ETH_MAC_EnableTx,"ax",%progbits
 792              	 .align 2
 793              	 .thumb
 794              	 .thumb_func
 796              	XMC_ETH_MAC_EnableTx:
 797              	.LFB175:
1389:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1390:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1391:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1392:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1393:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1394:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1395:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC Enable TX <br>
1396:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1397:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1398:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function enables the transmit state machine of the MAC and puts the
1399:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * transmit process in running state. The DMA then checks the TX list at the
1400:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * current position for transmitting a frame.
1401:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1402:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_EnableTx(XMC_ETH_MAC_t *const eth_mac)
1403:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 798              	 .loc 3 1403 0
 799              	 .cfi_startproc
 800              	 
 801              	 
 802              	 
 803 0000 80B4     	 push {r7}
 804              	.LCFI76:
 805              	 .cfi_def_cfa_offset 4
 806              	 .cfi_offset 7,-4
 807 0002 83B0     	 sub sp,sp,#12
 808              	.LCFI77:
 809              	 .cfi_def_cfa_offset 16
 810 0004 00AF     	 add r7,sp,#0
 811              	.LCFI78:
 812              	 .cfi_def_cfa_register 7
 813 0006 7860     	 str r0,[r7,#4]
1404:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->OPERATION_MODE |= (uint32_t)ETH_OPERATION_MODE_ST_Msk;
 814              	 .loc 3 1404 0
 815 0008 7B68     	 ldr r3,[r7,#4]
 816 000a 1968     	 ldr r1,[r3]
 817 000c 7B68     	 ldr r3,[r7,#4]
 818 000e 1B68     	 ldr r3,[r3]
 819 0010 03F58053 	 add r3,r3,#4096
 820 0014 1833     	 adds r3,r3,#24
 821 0016 1B68     	 ldr r3,[r3]
 822 0018 43F40052 	 orr r2,r3,#8192
 823 001c 01F58053 	 add r3,r1,#4096
 824 0020 1833     	 adds r3,r3,#24
 825 0022 1A60     	 str r2,[r3]
1405:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION |= (uint32_t)ETH_MAC_CONFIGURATION_TE_Msk;
 826              	 .loc 3 1405 0
 827 0024 7B68     	 ldr r3,[r7,#4]
 828 0026 1B68     	 ldr r3,[r3]
 829 0028 7A68     	 ldr r2,[r7,#4]
 830 002a 1268     	 ldr r2,[r2]
 831 002c 1268     	 ldr r2,[r2]
 832 002e 42F00802 	 orr r2,r2,#8
 833 0032 1A60     	 str r2,[r3]
1406:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 834              	 .loc 3 1406 0
 835 0034 0C37     	 adds r7,r7,#12
 836              	.LCFI79:
 837              	 .cfi_def_cfa_offset 4
 838 0036 BD46     	 mov sp,r7
 839              	.LCFI80:
 840              	 .cfi_def_cfa_register 13
 841              	 
 842 0038 5DF8047B 	 ldr r7,[sp],#4
 843              	.LCFI81:
 844              	 .cfi_restore 7
 845              	 .cfi_def_cfa_offset 0
 846 003c 7047     	 bx lr
 847              	 .cfi_endproc
 848              	.LFE175:
 850 003e 00BF     	 .section .text.XMC_ETH_MAC_DisableTx,"ax",%progbits
 851              	 .align 2
 852              	 .thumb
 853              	 .thumb_func
 855              	XMC_ETH_MAC_DisableTx:
 856              	.LFB176:
1407:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1408:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1409:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1410:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1411:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1412:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1413:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * ETH MAC Disable TX <br>
1414:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1415:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1416:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function disables the transmit process.
1417:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1418:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_DisableTx(XMC_ETH_MAC_t *const eth_mac)
1419:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 857              	 .loc 3 1419 0
 858              	 .cfi_startproc
 859              	 
 860              	 
 861              	 
 862 0000 80B4     	 push {r7}
 863              	.LCFI82:
 864              	 .cfi_def_cfa_offset 4
 865              	 .cfi_offset 7,-4
 866 0002 83B0     	 sub sp,sp,#12
 867              	.LCFI83:
 868              	 .cfi_def_cfa_offset 16
 869 0004 00AF     	 add r7,sp,#0
 870              	.LCFI84:
 871              	 .cfi_def_cfa_register 7
 872 0006 7860     	 str r0,[r7,#4]
1420:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->MAC_CONFIGURATION &= (uint32_t)~ETH_MAC_CONFIGURATION_TE_Msk;
 873              	 .loc 3 1420 0
 874 0008 7B68     	 ldr r3,[r7,#4]
 875 000a 1B68     	 ldr r3,[r3]
 876 000c 7A68     	 ldr r2,[r7,#4]
 877 000e 1268     	 ldr r2,[r2]
 878 0010 1268     	 ldr r2,[r2]
 879 0012 22F00802 	 bic r2,r2,#8
 880 0016 1A60     	 str r2,[r3]
1421:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->OPERATION_MODE &= (uint32_t)~ETH_OPERATION_MODE_ST_Msk;
 881              	 .loc 3 1421 0
 882 0018 7B68     	 ldr r3,[r7,#4]
 883 001a 1968     	 ldr r1,[r3]
 884 001c 7B68     	 ldr r3,[r7,#4]
 885 001e 1B68     	 ldr r3,[r3]
 886 0020 03F58053 	 add r3,r3,#4096
 887 0024 1833     	 adds r3,r3,#24
 888 0026 1B68     	 ldr r3,[r3]
 889 0028 23F40052 	 bic r2,r3,#8192
 890 002c 01F58053 	 add r3,r1,#4096
 891 0030 1833     	 adds r3,r3,#24
 892 0032 1A60     	 str r2,[r3]
1422:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 893              	 .loc 3 1422 0
 894 0034 0C37     	 adds r7,r7,#12
 895              	.LCFI85:
 896              	 .cfi_def_cfa_offset 4
 897 0036 BD46     	 mov sp,r7
 898              	.LCFI86:
 899              	 .cfi_def_cfa_register 13
 900              	 
 901 0038 5DF8047B 	 ldr r7,[sp],#4
 902              	.LCFI87:
 903              	 .cfi_restore 7
 904              	 .cfi_def_cfa_offset 0
 905 003c 7047     	 bx lr
 906              	 .cfi_endproc
 907              	.LFE176:
 909 003e 00BF     	 .section .text.XMC_ETH_MAC_ResumeTx,"ax",%progbits
 910              	 .align 2
 911              	 .thumb
 912              	 .thumb_func
 914              	XMC_ETH_MAC_ResumeTx:
 915              	.LFB177:
1423:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1424:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1425:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1426:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1427:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1428:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1429:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Flush TX <br>
1430:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1431:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1432:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the TX DMA descriptors and enables the DMA transmission.
1433:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1434:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_FlushTx(XMC_ETH_MAC_t *const eth_mac);
1435:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1436:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1437:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1438:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1439:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1440:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1441:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Flush RX <br>
1442:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1443:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1444:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * The function initializes the RX DMA descriptors and enables the DMA transmission.
1445:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1446:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** void XMC_ETH_MAC_FlushRx(XMC_ETH_MAC_t *const eth_mac);
1447:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1448:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1449:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1450:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1451:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1452:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1453:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Resume TX <br>
1454:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1455:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1456:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Verbatim from the reference manual, the function enables the DMA to read the
1457:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * current descriptor pointed to by the "current host transmit descriptor" reg.
1458:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * If that descriptor is not available (owned by the CPU), the transmission
1459:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * returns to the suspend state else the transmission resumes.
1460:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1461:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_ResumeTx(XMC_ETH_MAC_t *const eth_mac)
1462:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 916              	 .loc 3 1462 0
 917              	 .cfi_startproc
 918              	 
 919              	 
 920              	 
 921 0000 80B4     	 push {r7}
 922              	.LCFI88:
 923              	 .cfi_def_cfa_offset 4
 924              	 .cfi_offset 7,-4
 925 0002 83B0     	 sub sp,sp,#12
 926              	.LCFI89:
 927              	 .cfi_def_cfa_offset 16
 928 0004 00AF     	 add r7,sp,#0
 929              	.LCFI90:
 930              	 .cfi_def_cfa_register 7
 931 0006 7860     	 str r0,[r7,#4]
1463:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_TPS_Msk;
 932              	 .loc 3 1463 0
 933 0008 7B68     	 ldr r3,[r7,#4]
 934 000a 1B68     	 ldr r3,[r3]
 935 000c 03F58053 	 add r3,r3,#4096
 936 0010 1433     	 adds r3,r3,#20
 937 0012 0222     	 movs r2,#2
 938 0014 1A60     	 str r2,[r3]
1464:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->TRANSMIT_POLL_DEMAND = 0U;
 939              	 .loc 3 1464 0
 940 0016 7B68     	 ldr r3,[r7,#4]
 941 0018 1B68     	 ldr r3,[r3]
 942 001a 03F58053 	 add r3,r3,#4096
 943 001e 0433     	 adds r3,r3,#4
 944 0020 0022     	 movs r2,#0
 945 0022 1A60     	 str r2,[r3]
1465:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 946              	 .loc 3 1465 0
 947 0024 0C37     	 adds r7,r7,#12
 948              	.LCFI91:
 949              	 .cfi_def_cfa_offset 4
 950 0026 BD46     	 mov sp,r7
 951              	.LCFI92:
 952              	 .cfi_def_cfa_register 13
 953              	 
 954 0028 5DF8047B 	 ldr r7,[sp],#4
 955              	.LCFI93:
 956              	 .cfi_restore 7
 957              	 .cfi_def_cfa_offset 0
 958 002c 7047     	 bx lr
 959              	 .cfi_endproc
 960              	.LFE177:
 962 002e 00BF     	 .section .text.XMC_ETH_MAC_ResumeRx,"ax",%progbits
 963              	 .align 2
 964              	 .thumb
 965              	 .thumb_func
 967              	XMC_ETH_MAC_ResumeRx:
 968              	.LFB178:
1466:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1467:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1468:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1469:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1470:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1471:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1472:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Resume RX <br>
1473:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1474:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par
1475:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Verbatim from the reference manual the function enables the DMA to read the
1476:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * current descriptor pointed to by the "current host transmit descriptor" reg.
1477:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * If that descriptor is not available (owned by the CPU), the transmission
1478:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * returns to the suspend state else the transmission resumes.
1479:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1480:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_ResumeRx(XMC_ETH_MAC_t *const eth_mac)
1481:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 969              	 .loc 3 1481 0
 970              	 .cfi_startproc
 971              	 
 972              	 
 973              	 
 974 0000 80B4     	 push {r7}
 975              	.LCFI94:
 976              	 .cfi_def_cfa_offset 4
 977              	 .cfi_offset 7,-4
 978 0002 83B0     	 sub sp,sp,#12
 979              	.LCFI95:
 980              	 .cfi_def_cfa_offset 16
 981 0004 00AF     	 add r7,sp,#0
 982              	.LCFI96:
 983              	 .cfi_def_cfa_register 7
 984 0006 7860     	 str r0,[r7,#4]
1482:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->STATUS = (uint32_t)ETH_STATUS_RU_Msk;
 985              	 .loc 3 1482 0
 986 0008 7B68     	 ldr r3,[r7,#4]
 987 000a 1B68     	 ldr r3,[r3]
 988 000c 03F58053 	 add r3,r3,#4096
 989 0010 1433     	 adds r3,r3,#20
 990 0012 8022     	 movs r2,#128
 991 0014 1A60     	 str r2,[r3]
1483:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->regs->RECEIVE_POLL_DEMAND = 0U;
 992              	 .loc 3 1483 0
 993 0016 7B68     	 ldr r3,[r7,#4]
 994 0018 1B68     	 ldr r3,[r3]
 995 001a 03F58053 	 add r3,r3,#4096
 996 001e 0833     	 adds r3,r3,#8
 997 0020 0022     	 movs r2,#0
 998 0022 1A60     	 str r2,[r3]
1484:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 999              	 .loc 3 1484 0
 1000 0024 0C37     	 adds r7,r7,#12
 1001              	.LCFI97:
 1002              	 .cfi_def_cfa_offset 4
 1003 0026 BD46     	 mov sp,r7
 1004              	.LCFI98:
 1005              	 .cfi_def_cfa_register 13
 1006              	 
 1007 0028 5DF8047B 	 ldr r7,[sp],#4
 1008              	.LCFI99:
 1009              	 .cfi_restore 7
 1010              	 .cfi_def_cfa_offset 0
 1011 002c 7047     	 bx lr
 1012              	 .cfi_endproc
 1013              	.LFE178:
 1015 002e 00BF     	 .section .text.XMC_ETH_MAC_GetTxBuffer,"ax",%progbits
 1016              	 .align 2
 1017              	 .thumb
 1018              	 .thumb_func
 1020              	XMC_ETH_MAC_GetTxBuffer:
 1021              	.LFB181:
1485:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1486:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1487:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1488:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return Pointer to current TX buffer
1489:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1490:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1491:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Returns the current TX buffer.
1492:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1493:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint8_t XMC_ETH_MAC_GetCurrentTxDescIndex(XMC_ETH_MAC_t *const eth_mac)
1494:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1495:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return eth_mac->tx_index;
1496:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1497:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1498:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1499:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1500:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return Pointer to current TX buffer
1501:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1502:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1503:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Returns the current TX buffer.
1504:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1505:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint8_t XMC_ETH_MAC_GetCurrentRxDescIndex(XMC_ETH_MAC_t *const eth_mac)
1506:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1507:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return eth_mac->rx_index;
1508:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1509:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1510:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1511:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1512:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return Pointer to current TX buffer
1513:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1514:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1515:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Returns the current TX buffer.
1516:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1517:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint8_t *XMC_ETH_MAC_GetTxBuffer(XMC_ETH_MAC_t *const eth_mac)
1518:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 1022              	 .loc 3 1518 0
 1023              	 .cfi_startproc
 1024              	 
 1025              	 
 1026              	 
 1027 0000 80B4     	 push {r7}
 1028              	.LCFI100:
 1029              	 .cfi_def_cfa_offset 4
 1030              	 .cfi_offset 7,-4
 1031 0002 83B0     	 sub sp,sp,#12
 1032              	.LCFI101:
 1033              	 .cfi_def_cfa_offset 16
 1034 0004 00AF     	 add r7,sp,#0
 1035              	.LCFI102:
 1036              	 .cfi_def_cfa_register 7
 1037 0006 7860     	 str r0,[r7,#4]
1519:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return (uint8_t *)(eth_mac->tx_desc[eth_mac->tx_index].buffer1);
 1038              	 .loc 3 1519 0
 1039 0008 7B68     	 ldr r3,[r7,#4]
 1040 000a 5A69     	 ldr r2,[r3,#20]
 1041 000c 7B68     	 ldr r3,[r7,#4]
 1042 000e 93F82630 	 ldrb r3,[r3,#38]
 1043 0012 5B01     	 lsls r3,r3,#5
 1044 0014 1344     	 add r3,r3,r2
 1045 0016 9B68     	 ldr r3,[r3,#8]
1520:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 1046              	 .loc 3 1520 0
 1047 0018 1846     	 mov r0,r3
 1048 001a 0C37     	 adds r7,r7,#12
 1049              	.LCFI103:
 1050              	 .cfi_def_cfa_offset 4
 1051 001c BD46     	 mov sp,r7
 1052              	.LCFI104:
 1053              	 .cfi_def_cfa_register 13
 1054              	 
 1055 001e 5DF8047B 	 ldr r7,[sp],#4
 1056              	.LCFI105:
 1057              	 .cfi_restore 7
 1058              	 .cfi_def_cfa_offset 0
 1059 0022 7047     	 bx lr
 1060              	 .cfi_endproc
 1061              	.LFE181:
 1063              	 .section .text.XMC_ETH_MAC_GetRxBuffer,"ax",%progbits
 1064              	 .align 2
 1065              	 .thumb
 1066              	 .thumb_func
 1068              	XMC_ETH_MAC_GetRxBuffer:
 1069              	.LFB187:
1521:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1522:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1523:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1524:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return Pointer to current TX buffer
1525:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1526:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1527:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Returns the current TX buffer.
1528:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1529:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint8_t *XMC_ETH_MAC_GetTxBufferEx(XMC_ETH_MAC_t *const eth_mac, uint8_t index)
1530:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1531:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return (uint8_t *)(eth_mac->tx_desc[index].buffer1);
1532:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1533:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1534:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1535:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1536:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addresss Buffer address
1537:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1538:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1539:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1540:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Sets the buffer address of the current TX buffer.
1541:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1542:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetTxBuffer(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const add
1543:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1544:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->tx_desc[eth_mac->tx_index].buffer1 = (uint32_t)address;
1545:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1546:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1547:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1548:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1549:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addresss Buffer address
1550:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1551:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1552:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1553:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Sets the buffer address of the current TX buffer.
1554:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1555:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetTxBufferEx(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const u
1556:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1557:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->tx_desc[index].buffer1 = (uint32_t)address;
1558:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1559:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1560:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1561:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1562:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addresss Buffer address
1563:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1564:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1565:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1566:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Sets the buffer address of the current TX buffer.
1567:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1568:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetRxBuffer(XMC_ETH_MAC_t *const eth_mac, const uint8_t *const add
1569:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1570:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->rx_desc[eth_mac->rx_index].buffer1 = (uint32_t)address;
1571:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1572:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1573:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1574:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1575:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param addresss Buffer address
1576:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1577:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1578:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1579:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Sets the buffer address of the current TX buffer.
1580:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1581:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetRxBufferEx(XMC_ETH_MAC_t *const eth_mac, uint8_t index, const u
1582:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
1583:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->rx_desc[index].buffer1 = (uint32_t)address;
1584:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
1585:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1586:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1587:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1588:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return Pointer to current RX buffer
1589:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1590:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1591:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Returns the current RX buffer.
1592:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1593:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE uint8_t *XMC_ETH_MAC_GetRxBuffer(XMC_ETH_MAC_t *const eth_mac)
1594:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 1070              	 .loc 3 1594 0
 1071              	 .cfi_startproc
 1072              	 
 1073              	 
 1074              	 
 1075 0000 80B4     	 push {r7}
 1076              	.LCFI106:
 1077              	 .cfi_def_cfa_offset 4
 1078              	 .cfi_offset 7,-4
 1079 0002 83B0     	 sub sp,sp,#12
 1080              	.LCFI107:
 1081              	 .cfi_def_cfa_offset 16
 1082 0004 00AF     	 add r7,sp,#0
 1083              	.LCFI108:
 1084              	 .cfi_def_cfa_register 7
 1085 0006 7860     	 str r0,[r7,#4]
1595:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   return (uint8_t *)(eth_mac->rx_desc[eth_mac->rx_index].buffer1);
 1086              	 .loc 3 1595 0
 1087 0008 7B68     	 ldr r3,[r7,#4]
 1088 000a 1A69     	 ldr r2,[r3,#16]
 1089 000c 7B68     	 ldr r3,[r7,#4]
 1090 000e 93F82730 	 ldrb r3,[r3,#39]
 1091 0012 5B01     	 lsls r3,r3,#5
 1092 0014 1344     	 add r3,r3,r2
 1093 0016 9B68     	 ldr r3,[r3,#8]
1596:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 1094              	 .loc 3 1596 0
 1095 0018 1846     	 mov r0,r3
 1096 001a 0C37     	 adds r7,r7,#12
 1097              	.LCFI109:
 1098              	 .cfi_def_cfa_offset 4
 1099 001c BD46     	 mov sp,r7
 1100              	.LCFI110:
 1101              	 .cfi_def_cfa_register 13
 1102              	 
 1103 001e 5DF8047B 	 ldr r7,[sp],#4
 1104              	.LCFI111:
 1105              	 .cfi_restore 7
 1106              	 .cfi_def_cfa_offset 0
 1107 0022 7047     	 bx lr
 1108              	 .cfi_endproc
 1109              	.LFE187:
 1111              	 .section .text.XMC_ETH_MAC_SetTxBufferSize,"ax",%progbits
 1112              	 .align 2
 1113              	 .thumb
 1114              	 .thumb_func
 1116              	XMC_ETH_MAC_SetTxBufferSize:
 1117              	.LFB188:
1597:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** 
1598:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** /**
1599:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param eth_mac A constant pointer to XMC_ETH_MAC_t, pointing to the ETH MAC base address
1600:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @param size Size of buffer
1601:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * @return None
1602:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  *
1603:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * \par<b>Description: </b><br>
1604:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  * Sets the current TX buffer size.
1605:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****  */
1606:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** __STATIC_INLINE void XMC_ETH_MAC_SetTxBufferSize(XMC_ETH_MAC_t *const eth_mac, uint32_t size)
1607:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** {
 1118              	 .loc 3 1607 0
 1119              	 .cfi_startproc
 1120              	 
 1121              	 
 1122              	 
 1123 0000 80B4     	 push {r7}
 1124              	.LCFI112:
 1125              	 .cfi_def_cfa_offset 4
 1126              	 .cfi_offset 7,-4
 1127 0002 83B0     	 sub sp,sp,#12
 1128              	.LCFI113:
 1129              	 .cfi_def_cfa_offset 16
 1130 0004 00AF     	 add r7,sp,#0
 1131              	.LCFI114:
 1132              	 .cfi_def_cfa_register 7
 1133 0006 7860     	 str r0,[r7,#4]
 1134 0008 3960     	 str r1,[r7]
1608:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h ****   eth_mac->tx_desc[eth_mac->tx_index].length = size;
 1135              	 .loc 3 1608 0
 1136 000a 7B68     	 ldr r3,[r7,#4]
 1137 000c 5A69     	 ldr r2,[r3,#20]
 1138 000e 7B68     	 ldr r3,[r7,#4]
 1139 0010 93F82630 	 ldrb r3,[r3,#38]
 1140 0014 5B01     	 lsls r3,r3,#5
 1141 0016 1344     	 add r3,r3,r2
 1142 0018 3A68     	 ldr r2,[r7]
 1143 001a 5A60     	 str r2,[r3,#4]
1609:C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc\xmc_eth_mac.h **** }
 1144              	 .loc 3 1609 0
 1145 001c 0C37     	 adds r7,r7,#12
 1146              	.LCFI115:
 1147              	 .cfi_def_cfa_offset 4
 1148 001e BD46     	 mov sp,r7
 1149              	.LCFI116:
 1150              	 .cfi_def_cfa_register 13
 1151              	 
 1152 0020 5DF8047B 	 ldr r7,[sp],#4
 1153              	.LCFI117:
 1154              	 .cfi_restore 7
 1155              	 .cfi_def_cfa_offset 0
 1156 0024 7047     	 bx lr
 1157              	 .cfi_endproc
 1158              	.LFE188:
 1160              	 .section ETH_RAM,"aw",%progbits
 1161              	 .align 2
 1164              	ETH_LWIP_0_rx_desc:
 1165 0000 00000000 	 .space 128
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1165      00000000 
 1166              	 .align 2
 1169              	ETH_LWIP_0_tx_desc:
 1170 0080 00000000 	 .space 128
 1170      00000000 
 1170      00000000 
 1170      00000000 
 1170      00000000 
 1171              	 .align 2
 1174              	ETH_LWIP_0_rx_buf:
 1175 0100 00000000 	 .space 6096
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1175      00000000 
 1176              	 .align 2
 1179              	ETH_LWIP_0_tx_buf:
 1180 18d0 00000000 	 .space 6096
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1180      00000000 
 1181              	 .global eth_phy_config
 1182              	 .section .rodata.eth_phy_config,"a",%progbits
 1183              	 .align 2
 1186              	eth_phy_config:
 1187 0000 01       	 .byte 1
 1188 0001 00000000 	 .space 5
 1188      00
 1189 0006 01       	 .byte 1
 1190 0007 00       	 .space 1
 1191              	 .global eth_mac
 1192              	 .section .data.eth_mac,"aw",%progbits
 1193              	 .align 3
 1196              	eth_mac:
 1197 0000 00C00050 	 .word 1342226432
 1198 0004 00000000 	 .space 4
 1199 0008 00031945 	 .word 1159267072
 1200 000c 00010000 	 .word 256
 1201 0010 00000000 	 .word ETH_LWIP_0_rx_desc
 1202 0014 80000000 	 .word ETH_LWIP_0_tx_desc
 1203 0018 00010000 	 .word ETH_LWIP_0_rx_buf
 1204 001c D0180000 	 .word ETH_LWIP_0_tx_buf
 1205 0020 00000000 	 .space 4
 1206 0024 04       	 .byte 4
 1207 0025 04       	 .byte 4
 1208 0026 00000000 	 .space 10
 1208      00000000 
 1208      0000
 1209              	 .global xnetif
 1210              	 .section .data.xnetif,"aw",%progbits
 1211              	 .align 2
 1214              	xnetif:
 1215 0000 00000000 	 .space 36
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1215      00000000 
 1216 0024 DC05     	 .short 1500
 1217 0026 06       	 .byte 6
 1218 0027 00       	 .byte 0
 1219 0028 03       	 .byte 3
 1220 0029 19       	 .byte 25
 1221 002a 45       	 .byte 69
 1222 002b 00       	 .byte 0
 1223 002c 01       	 .byte 1
 1224 002d 00       	 .space 1
 1225 002e 65       	 .byte 101
 1226 002f 6E       	 .byte 110
 1227 0030 00000000 	 .space 8
 1227      00000000 
 1228              	 .section .text.ethernetif_link_callback,"ax",%progbits
 1229              	 .align 2
 1230              	 .thumb
 1231              	 .thumb_func
 1233              	ethernetif_link_callback:
 1234              	.LFB208:
 1235              	 .file 4 "../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c"
   1:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**************************************************************************************************
   2:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** * DAVE APP Name : ETH_LWIP       APP Version: 4.0.10
   3:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** *
   4:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** * NOTE:
   5:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** * This file is generated by DAVE. Any manual modification done to this file will be lost when the c
   6:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** ***************************************************************************************************
   7:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
   8:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /*
   9:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
  10:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * All rights reserved. 
  11:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * 
  12:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Redistribution and use in source and binary forms, with or without modification, 
  13:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * are permitted provided that the following conditions are met:
  14:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
  15:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * 1. Redistributions of source code must retain the above copyright notice,
  16:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *    this list of conditions and the following disclaimer.
  17:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * 2. Redistributions in binary form must reproduce the above copyright notice,
  18:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *    this list of conditions and the following disclaimer in the documentation
  19:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *    and/or other materials provided with the distribution.
  20:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * 3. The name of the author may not be used to endorse or promote products
  21:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *    derived from this software without specific prior written permission. 
  22:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
  23:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED 
  24:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  25:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT 
  26:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
  27:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT 
  28:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  29:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN 
  30:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING 
  31:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY 
  32:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * OF SUCH DAMAGE.
  33:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
  34:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * This file is part of the lwIP TCP/IP stack.
  35:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * 
  36:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Author: Adam Dunkels <adam@sics.se>
  37:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
  38:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
  39:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  40:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/opt.h"
  41:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  42:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/def.h"
  43:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/sys.h"
  44:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/mem.h"
  45:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/pbuf.h"
  46:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/stats.h"
  47:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/lwip/snmp.h"
  48:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/netif/etharp.h"
  49:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../include/netif/ppp_oe.h"
  50:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "../../../eth_lwip.h"
  51:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  52:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "xmc_gpio.h"
  53:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "xmc_eth_mac.h"
  54:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include "xmc_eth_phy.h"
  55:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #include <string.h>
  56:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_CRS_DV  XMC_GPIO_PORT15, 9U
  57:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_RXER  XMC_GPIO_PORT2, 4U
  58:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_RXD0  XMC_GPIO_PORT2, 2U
  59:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_RXD1  XMC_GPIO_PORT2, 3U
  60:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_TXEN  XMC_GPIO_PORT2, 5U
  61:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_TXD0  XMC_GPIO_PORT2, 8U
  62:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_TXD1  XMC_GPIO_PORT2, 9U
  63:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_RMII_CLK  XMC_GPIO_PORT15, 8U
  64:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_MDC  XMC_GPIO_PORT2, 7U
  65:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_MDIO  XMC_GPIO_PORT2, 0U
  66:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_PIN_LIST_SIZE 10U
  67:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  68:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  69:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  70:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  71:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_PHY_ADDR   (0)
  72:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  73:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_NUM_RX_BUF (4U)
  74:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_0_NUM_TX_BUF (4U)
  75:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  76:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /* MAC ADDRESS*/
  77:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  78:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /* MAC address*/
  79:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR0 (0x00U)
  80:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR1 (0x03U)
  81:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR2 (0x19U)
  82:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR3 (0x45U)
  83:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR4 (0x00U)
  84:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR5 (0x01U)
  85:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  86:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define MAC_ADDR    ((uint64_t)MAC_ADDR0 | \
  87:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****                      ((uint64_t)MAC_ADDR1 << 8) | \
  88:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****                      ((uint64_t)MAC_ADDR2 << 16) | \
  89:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****                      ((uint64_t)MAC_ADDR3 << 24) | \
  90:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****                      ((uint64_t)MAC_ADDR4 << 32) | \
  91:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****                      ((uint64_t)MAC_ADDR5 << 40))
  92:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  93:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /* Define those to better describe your network interface. */
  94:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define IFNAME0 'e'
  95:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define IFNAME1 'n'
  96:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
  97:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /*Maximum retry iterations for phy auto-negotiation*/
  98:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #define ETH_LWIP_PHY_MAX_RETRIES  0xfffffU
  99:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 100:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 101:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if defined(__ICCARM__)
 102:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #pragma data_alignment=4
 103:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_rx_desc[ETH_LWIP_0_NUM_RX_BUF];
 104:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #pragma data_alignment=4
 105:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_tx_desc[ETH_LWIP_0_NUM_TX_BUF];
 106:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #pragma data_alignment=4
 107:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static uint8_t ETH_LWIP_0_rx_buf[ETH_LWIP_0_NUM_RX_BUF][XMC_ETH_MAC_BUF_SIZE];
 108:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #pragma data_alignment=4
 109:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static uint8_t ETH_LWIP_0_tx_buf[ETH_LWIP_0_NUM_TX_BUF][XMC_ETH_MAC_BUF_SIZE];
 110:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #elif defined(__CC_ARM)
 111:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_rx_desc[ETH_LWIP_0_NUM_RX_BUF]
 112:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_tx_desc[ETH_LWIP_0_NUM_TX_BUF]
 113:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_rx_buf[ETH_LWIP_0_NUM_RX_BUF][XMC_ETH_MAC_BUF
 114:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_tx_buf[ETH_LWIP_0_NUM_TX_BUF][XMC_ETH_MAC_BUF
 115:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #elif defined(__GNUC__)
 116:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_rx_desc[ETH_LWIP_0_NUM_RX_BUF]
 117:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_tx_desc[ETH_LWIP_0_NUM_TX_BUF]
 118:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_rx_buf[ETH_LWIP_0_NUM_RX_BUF][XMC_ETH_MAC_BUF
 119:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_tx_buf[ETH_LWIP_0_NUM_TX_BUF][XMC_ETH_MAC_BUF
 120:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #else
 121:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_rx_desc[ETH_LWIP_0_NUM_RX_BUF]
 122:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) XMC_ETH_MAC_DMA_DESC_t ETH_LWIP_0_tx_desc[ETH_LWIP_0_NUM_TX_BUF]
 123:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_rx_buf[ETH_LWIP_0_NUM_RX_BUF][XMC_ETH_MAC_BUF
 124:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static __attribute__((aligned(4))) uint8_t ETH_LWIP_0_tx_buf[ETH_LWIP_0_NUM_TX_BUF][XMC_ETH_MAC_BUF
 125:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 126:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 127:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 128:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** const XMC_ETH_PHY_CONFIG_t eth_phy_config =
 129:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 130:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .interface = XMC_ETH_LINK_INTERFACE_RMII,
 131:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .enable_auto_negotiate = true
 132:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** };
 133:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 134:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** XMC_ETH_MAC_t eth_mac =
 135:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 136:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .regs = ETH0,
 137:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .address = MAC_ADDR,
 138:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .rx_desc = ETH_LWIP_0_rx_desc,
 139:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .tx_desc = ETH_LWIP_0_tx_desc,
 140:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .rx_buf = &ETH_LWIP_0_rx_buf[0][0],
 141:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .tx_buf = &ETH_LWIP_0_tx_buf[0][0],
 142:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .num_rx_buf = ETH_LWIP_0_NUM_RX_BUF,
 143:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .num_tx_buf = ETH_LWIP_0_NUM_TX_BUF
 144:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** };
 145:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 146:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** struct netif xnetif = 
 147:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 148:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   /* set MAC hardware address length */
 149:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .hwaddr_len = (u8_t)ETHARP_HWADDR_LEN,
 150:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 151:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   /* set MAC hardware address */
 152:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .hwaddr =  {(u8_t)MAC_ADDR0, (u8_t)MAC_ADDR1,
 153:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****               (u8_t)MAC_ADDR2, (u8_t)MAC_ADDR3,
 154:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****               (u8_t)MAC_ADDR4, (u8_t)MAC_ADDR5},
 155:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 156:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   /* maximum transfer unit */
 157:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .mtu = 1500U,
 158:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 159:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   .name = {IFNAME0, IFNAME1},
 160:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** };
 161:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 162:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /*Local function declarations*/
 163:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void low_level_init(struct netif *netif);
 164:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p);
 165:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static struct pbuf * low_level_input(void);
 166:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_input(void *arg);
 167:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** err_t ethernetif_init(struct netif *netif);
 168:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_link_callback(struct netif *netif);
 169:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_link_status(void *args);
 170:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 171:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_link_callback(struct netif *netif)
 172:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1236              	 .loc 4 172 0
 1237              	 .cfi_startproc
 1238              	 
 1239              	 
 1240 0000 80B5     	 push {r7,lr}
 1241              	.LCFI118:
 1242              	 .cfi_def_cfa_offset 8
 1243              	 .cfi_offset 7,-8
 1244              	 .cfi_offset 14,-4
 1245 0002 86B0     	 sub sp,sp,#24
 1246              	.LCFI119:
 1247              	 .cfi_def_cfa_offset 32
 1248 0004 00AF     	 add r7,sp,#0
 1249              	.LCFI120:
 1250              	 .cfi_def_cfa_register 7
 1251 0006 7860     	 str r0,[r7,#4]
 173:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_LINK_SPEED_t speed;
 174:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_LINK_DUPLEX_t duplex;
 175:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   bool phy_autoneg_state;
 176:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   uint32_t retries = 0U;
 1252              	 .loc 4 176 0
 1253 0008 0023     	 movs r3,#0
 1254 000a 7B61     	 str r3,[r7,#20]
 177:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   int32_t status;
 178:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 179:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   if (netif_is_link_up(netif))
 1255              	 .loc 4 179 0
 1256 000c 7B68     	 ldr r3,[r7,#4]
 1257 000e 93F82D30 	 ldrb r3,[r3,#45]
 1258 0012 03F01003 	 and r3,r3,#16
 1259 0016 002B     	 cmp r3,#0
 1260 0018 5DD0     	 beq .L47
 180:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 181:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     if((status = XMC_ETH_PHY_Init(&eth_mac, ETH_LWIP_0_PHY_ADDR, &eth_phy_config)) != XMC_ETH_PHY_S
 1261              	 .loc 4 181 0
 1262 001a 3848     	 ldr r0,.L52
 1263 001c 0021     	 movs r1,#0
 1264 001e 384A     	 ldr r2,.L52+4
 1265 0020 FFF7FEFF 	 bl XMC_ETH_PHY_Init
 1266 0024 3861     	 str r0,[r7,#16]
 1267 0026 3B69     	 ldr r3,[r7,#16]
 1268 0028 002B     	 cmp r3,#0
 1269 002a 04D0     	 beq .L48
 182:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 183:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       ETH_LWIP_Error((ETH_LWIP_ERROR_t)status);
 1270              	 .loc 4 183 0
 1271 002c 3B69     	 ldr r3,[r7,#16]
 1272 002e DBB2     	 uxtb r3,r3
 1273 0030 1846     	 mov r0,r3
 1274 0032 FFF7FEFF 	 bl ETH_LWIP_Error
 1275              	.L48:
 184:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 185:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 186:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* If autonegotiation is enabled */
 187:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     do {
 188:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       phy_autoneg_state = XMC_ETH_PHY_IsAutonegotiationCompleted(&eth_mac, ETH_LWIP_0_PHY_ADDR);
 1276              	 .loc 4 188 0 discriminator 2
 1277 0036 3148     	 ldr r0,.L52
 1278 0038 0021     	 movs r1,#0
 1279 003a FFF7FEFF 	 bl XMC_ETH_PHY_IsAutonegotiationCompleted
 1280 003e 0346     	 mov r3,r0
 1281 0040 FB73     	 strb r3,[r7,#15]
 189:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       retries++;
 1282              	 .loc 4 189 0 discriminator 2
 1283 0042 7B69     	 ldr r3,[r7,#20]
 1284 0044 0133     	 adds r3,r3,#1
 1285 0046 7B61     	 str r3,[r7,#20]
 190:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     } while ((phy_autoneg_state == false) && (retries < ETH_LWIP_PHY_MAX_RETRIES));
 1286              	 .loc 4 190 0 discriminator 2
 1287 0048 FB7B     	 ldrb r3,[r7,#15]
 1288 004a 83F00103 	 eor r3,r3,#1
 1289 004e DBB2     	 uxtb r3,r3
 1290 0050 002B     	 cmp r3,#0
 1291 0052 03D0     	 beq .L49
 1292              	 .loc 4 190 0 is_stmt 0 discriminator 1
 1293 0054 7B69     	 ldr r3,[r7,#20]
 1294 0056 2B4A     	 ldr r2,.L52+8
 1295 0058 9342     	 cmp r3,r2
 1296 005a ECD9     	 bls .L48
 1297              	.L49:
 191:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     
 192:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     if(phy_autoneg_state == false)
 1298              	 .loc 4 192 0 is_stmt 1
 1299 005c FB7B     	 ldrb r3,[r7,#15]
 1300 005e 83F00103 	 eor r3,r3,#1
 1301 0062 DBB2     	 uxtb r3,r3
 1302 0064 002B     	 cmp r3,#0
 1303 0066 02D0     	 beq .L50
 193:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 194:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       ETH_LWIP_Error(ETH_LWIP_ERROR_PHY_TIMEOUT);
 1304              	 .loc 4 194 0
 1305 0068 0420     	 movs r0,#4
 1306 006a FFF7FEFF 	 bl ETH_LWIP_Error
 1307              	.L50:
 195:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 196:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 	
 197:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     speed = XMC_ETH_PHY_GetLinkSpeed(&eth_mac, ETH_LWIP_0_PHY_ADDR);
 1308              	 .loc 4 197 0
 1309 006e 2348     	 ldr r0,.L52
 1310 0070 0021     	 movs r1,#0
 1311 0072 FFF7FEFF 	 bl XMC_ETH_PHY_GetLinkSpeed
 1312 0076 0346     	 mov r3,r0
 1313 0078 BB81     	 strh r3,[r7,#12]
 198:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     duplex = XMC_ETH_PHY_GetLinkDuplex(&eth_mac, ETH_LWIP_0_PHY_ADDR);
 1314              	 .loc 4 198 0
 1315 007a 2048     	 ldr r0,.L52
 1316 007c 0021     	 movs r1,#0
 1317 007e FFF7FEFF 	 bl XMC_ETH_PHY_GetLinkDuplex
 1318 0082 0346     	 mov r3,r0
 1319 0084 7B81     	 strh r3,[r7,#10]
 199:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 	
 200:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_SetLink(&eth_mac, speed, duplex);
 1320              	 .loc 4 200 0
 1321 0086 BA89     	 ldrh r2,[r7,#12]
 1322 0088 7B89     	 ldrh r3,[r7,#10]
 1323 008a 1C48     	 ldr r0,.L52
 1324 008c 1146     	 mov r1,r2
 1325 008e 1A46     	 mov r2,r3
 1326 0090 FFF7FEFF 	 bl XMC_ETH_MAC_SetLink
 201:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Enable ethernet interrupts */
 202:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_EnableEvent(&eth_mac, (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE);
 1327              	 .loc 4 202 0
 1328 0094 1948     	 ldr r0,.L52
 1329 0096 4021     	 movs r1,#64
 1330 0098 FFF7FEFF 	 bl XMC_ETH_MAC_EnableEvent
 203:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 204:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     NVIC_SetPriority((IRQn_Type)108, NVIC_EncodePriority(NVIC_GetPriorityGrouping(), 63U, 0U));
 1331              	 .loc 4 204 0
 1332 009c FFF7FEFF 	 bl __NVIC_GetPriorityGrouping
 1333 00a0 0346     	 mov r3,r0
 1334 00a2 1846     	 mov r0,r3
 1335 00a4 3F21     	 movs r1,#63
 1336 00a6 0022     	 movs r2,#0
 1337 00a8 FFF7FEFF 	 bl NVIC_EncodePriority
 1338 00ac 0346     	 mov r3,r0
 1339 00ae 6C20     	 movs r0,#108
 1340 00b0 1946     	 mov r1,r3
 1341 00b2 FFF7FEFF 	 bl __NVIC_SetPriority
 205:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     NVIC_ClearPendingIRQ((IRQn_Type)108);
 1342              	 .loc 4 205 0
 1343 00b6 6C20     	 movs r0,#108
 1344 00b8 FFF7FEFF 	 bl __NVIC_ClearPendingIRQ
 206:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     NVIC_EnableIRQ((IRQn_Type)108);
 1345              	 .loc 4 206 0
 1346 00bc 6C20     	 movs r0,#108
 1347 00be FFF7FEFF 	 bl __NVIC_EnableIRQ
 207:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_EnableTx(&eth_mac);
 1348              	 .loc 4 207 0
 1349 00c2 0E48     	 ldr r0,.L52
 1350 00c4 FFF7FEFF 	 bl XMC_ETH_MAC_EnableTx
 208:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_EnableRx(&eth_mac);
 1351              	 .loc 4 208 0
 1352 00c8 0C48     	 ldr r0,.L52
 1353 00ca FFF7FEFF 	 bl XMC_ETH_MAC_EnableRx
 209:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 210:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if LWIP_DHCP == 1
 211:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Start DHCP query */
 212:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     dhcp_start(&xnetif);
 213:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #elif LWIP_AUTOIP == 1
 214:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Start AUTOIP probing */
 215:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     autoip_start(&xnetif);
 216:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #else
 217:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* When the netif is fully configured this function must be called. */
 218:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     netif_set_up(&xnetif);
 1354              	 .loc 4 218 0
 1355 00ce 0E48     	 ldr r0,.L52+12
 1356 00d0 FFF7FEFF 	 bl netif_set_up
 1357 00d4 0FE0     	 b .L46
 1358              	.L47:
 219:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 220:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 221:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 222:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   else
 223:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 224:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Enable ethernet interrupts */
 225:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_DisableEvent(&eth_mac, (uint32_t)XMC_ETH_MAC_EVENT_RECEIVE);
 1359              	 .loc 4 225 0
 1360 00d6 0948     	 ldr r0,.L52
 1361 00d8 4021     	 movs r1,#64
 1362 00da FFF7FEFF 	 bl XMC_ETH_MAC_DisableEvent
 226:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     NVIC_DisableIRQ((IRQn_Type)108);
 1363              	 .loc 4 226 0
 1364 00de 6C20     	 movs r0,#108
 1365 00e0 FFF7FEFF 	 bl __NVIC_DisableIRQ
 227:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 228:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_DisableTx(&eth_mac);
 1366              	 .loc 4 228 0
 1367 00e4 0548     	 ldr r0,.L52
 1368 00e6 FFF7FEFF 	 bl XMC_ETH_MAC_DisableTx
 229:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_DisableRx(&eth_mac);
 1369              	 .loc 4 229 0
 1370 00ea 0448     	 ldr r0,.L52
 1371 00ec FFF7FEFF 	 bl XMC_ETH_MAC_DisableRx
 230:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 231:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if LWIP_DHCP == 1
 232:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Stop DHCP query */
 233:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     dhcp_stop(&xnetif);
 234:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #elif LWIP_AUTOIP == 1
 235:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* Stop AUTOIP probing */
 236:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     autoip_stop(&xnetif);
 237:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #else
 238:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     /* When the netif link is down, set the status down. */
 239:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     netif_set_down(&xnetif);
 1372              	 .loc 4 239 0
 1373 00f0 0548     	 ldr r0,.L52+12
 1374 00f2 FFF7FEFF 	 bl netif_set_down
 1375              	.L46:
 240:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 241:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 242:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 243:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 1376              	 .loc 4 243 0
 1377 00f6 1837     	 adds r7,r7,#24
 1378              	.LCFI121:
 1379              	 .cfi_def_cfa_offset 8
 1380 00f8 BD46     	 mov sp,r7
 1381              	.LCFI122:
 1382              	 .cfi_def_cfa_register 13
 1383              	 
 1384 00fa 80BD     	 pop {r7,pc}
 1385              	.L53:
 1386              	 .align 2
 1387              	.L52:
 1388 00fc 00000000 	 .word eth_mac
 1389 0100 00000000 	 .word eth_phy_config
 1390 0104 FEFF0F00 	 .word 1048574
 1391 0108 00000000 	 .word xnetif
 1392              	 .cfi_endproc
 1393              	.LFE208:
 1395              	 .section .text.ethernetif_link_status,"ax",%progbits
 1396              	 .align 2
 1397              	 .thumb
 1398              	 .thumb_func
 1400              	ethernetif_link_status:
 1401              	.LFB209:
 244:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 245:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_link_status(void *args)
 246:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1402              	 .loc 4 246 0
 1403              	 .cfi_startproc
 1404              	 
 1405              	 
 1406 0000 80B5     	 push {r7,lr}
 1407              	.LCFI123:
 1408              	 .cfi_def_cfa_offset 8
 1409              	 .cfi_offset 7,-8
 1410              	 .cfi_offset 14,-4
 1411 0002 82B0     	 sub sp,sp,#8
 1412              	.LCFI124:
 1413              	 .cfi_def_cfa_offset 16
 1414 0004 00AF     	 add r7,sp,#0
 1415              	.LCFI125:
 1416              	 .cfi_def_cfa_register 7
 1417 0006 7860     	 str r0,[r7,#4]
 247:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 248:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   if (XMC_ETH_PHY_GetLinkStatus(&eth_mac, ETH_LWIP_0_PHY_ADDR) == XMC_ETH_LINK_STATUS_DOWN)
 1418              	 .loc 4 248 0
 1419 0008 1248     	 ldr r0,.L58
 1420 000a 0021     	 movs r1,#0
 1421 000c FFF7FEFF 	 bl XMC_ETH_PHY_GetLinkStatus
 1422 0010 0346     	 mov r3,r0
 1423 0012 002B     	 cmp r3,#0
 1424 0014 0AD1     	 bne .L55
 249:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 250:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     if (netif_is_link_up(&xnetif))
 1425              	 .loc 4 250 0
 1426 0016 104B     	 ldr r3,.L58+4
 1427 0018 93F82D30 	 ldrb r3,[r3,#45]
 1428 001c 03F01003 	 and r3,r3,#16
 1429 0020 002B     	 cmp r3,#0
 1430 0022 0DD0     	 beq .L57
 251:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 252:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       netif_set_link_down(&xnetif);
 1431              	 .loc 4 252 0
 1432 0024 0C48     	 ldr r0,.L58+4
 1433 0026 FFF7FEFF 	 bl netif_set_link_down
 1434 002a 09E0     	 b .L57
 1435              	.L55:
 253:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 254:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 255:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   else
 256:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 257:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     if (!netif_is_link_up(&xnetif))
 1436              	 .loc 4 257 0
 1437 002c 0A4B     	 ldr r3,.L58+4
 1438 002e 93F82D30 	 ldrb r3,[r3,#45]
 1439 0032 03F01003 	 and r3,r3,#16
 1440 0036 002B     	 cmp r3,#0
 1441 0038 02D1     	 bne .L57
 258:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 259:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       netif_set_link_up(&xnetif);
 1442              	 .loc 4 259 0
 1443 003a 0748     	 ldr r0,.L58+4
 1444 003c FFF7FEFF 	 bl netif_set_link_up
 1445              	.L57:
 260:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 261:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 262:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 263:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   sys_timeout(1000U, ethernetif_link_status, NULL);
 1446              	 .loc 4 263 0
 1447 0040 4FF47A70 	 mov r0,#1000
 1448 0044 0549     	 ldr r1,.L58+8
 1449 0046 0022     	 movs r2,#0
 1450 0048 FFF7FEFF 	 bl sys_timeout
 264:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 265:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 1451              	 .loc 4 265 0
 1452 004c 0837     	 adds r7,r7,#8
 1453              	.LCFI126:
 1454              	 .cfi_def_cfa_offset 8
 1455 004e BD46     	 mov sp,r7
 1456              	.LCFI127:
 1457              	 .cfi_def_cfa_register 13
 1458              	 
 1459 0050 80BD     	 pop {r7,pc}
 1460              	.L59:
 1461 0052 00BF     	 .align 2
 1462              	.L58:
 1463 0054 00000000 	 .word eth_mac
 1464 0058 00000000 	 .word xnetif
 1465 005c 00000000 	 .word ethernetif_link_status
 1466              	 .cfi_endproc
 1467              	.LFE209:
 1469              	 .section .text.low_level_init,"ax",%progbits
 1470              	 .align 2
 1471              	 .thumb
 1472              	 .thumb_func
 1474              	low_level_init:
 1475              	.LFB210:
 266:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 267:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 268:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 269:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**
 270:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * In this function, the hardware should be initialized.
 271:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Called from ethernetif_init().
 272:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 273:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param netif the already initialized lwip network interface structure
 274:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *        for this ethernetif
 275:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
 276:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void low_level_init(struct netif *netif)
 277:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1476              	 .loc 4 277 0
 1477              	 .cfi_startproc
 1478              	 
 1479              	 
 1480 0000 80B5     	 push {r7,lr}
 1481              	.LCFI128:
 1482              	 .cfi_def_cfa_offset 8
 1483              	 .cfi_offset 7,-8
 1484              	 .cfi_offset 14,-4
 1485 0002 86B0     	 sub sp,sp,#24
 1486              	.LCFI129:
 1487              	 .cfi_def_cfa_offset 32
 1488 0004 00AF     	 add r7,sp,#0
 1489              	.LCFI130:
 1490              	 .cfi_def_cfa_register 7
 1491 0006 7860     	 str r0,[r7,#4]
 278:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_MAC_PORT_CTRL_t port_control;
 279:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_CONFIG_t gpio_config;
 280:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.output_level = XMC_GPIO_OUTPUT_LEVEL_LOW;
 1492              	 .loc 4 280 0
 1493 0008 4FF48033 	 mov r3,#65536
 1494 000c FB60     	 str r3,[r7,#12]
 281:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1495              	 .loc 4 281 0
 1496 000e 0023     	 movs r3,#0
 1497 0010 3B72     	 strb r3,[r7,#8]
 282:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 283:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_CRS_DV, &gpio_config);
 1498              	 .loc 4 283 0
 1499 0012 07F10803 	 add r3,r7,#8
 1500 0016 4748     	 ldr r0,.L61
 1501 0018 0921     	 movs r1,#9
 1502 001a 1A46     	 mov r2,r3
 1503 001c FFF7FEFF 	 bl XMC_GPIO_Init
 284:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 285:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1504              	 .loc 4 285 0
 1505 0020 0023     	 movs r3,#0
 1506 0022 3B72     	 strb r3,[r7,#8]
 286:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 287:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_RXER, &gpio_config);
 1507              	 .loc 4 287 0
 1508 0024 07F10803 	 add r3,r7,#8
 1509 0028 4348     	 ldr r0,.L61+4
 1510 002a 0421     	 movs r1,#4
 1511 002c 1A46     	 mov r2,r3
 1512 002e FFF7FEFF 	 bl XMC_GPIO_Init
 288:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 289:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1513              	 .loc 4 289 0
 1514 0032 0023     	 movs r3,#0
 1515 0034 3B72     	 strb r3,[r7,#8]
 290:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 291:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_RXD0, &gpio_config);
 1516              	 .loc 4 291 0
 1517 0036 07F10803 	 add r3,r7,#8
 1518 003a 3F48     	 ldr r0,.L61+4
 1519 003c 0221     	 movs r1,#2
 1520 003e 1A46     	 mov r2,r3
 1521 0040 FFF7FEFF 	 bl XMC_GPIO_Init
 292:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 293:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1522              	 .loc 4 293 0
 1523 0044 0023     	 movs r3,#0
 1524 0046 3B72     	 strb r3,[r7,#8]
 294:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 295:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_RXD1, &gpio_config);
 1525              	 .loc 4 295 0
 1526 0048 07F10803 	 add r3,r7,#8
 1527 004c 3A48     	 ldr r0,.L61+4
 1528 004e 0321     	 movs r1,#3
 1529 0050 1A46     	 mov r2,r3
 1530 0052 FFF7FEFF 	 bl XMC_GPIO_Init
 296:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 297:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE;
 1531              	 .loc 4 297 0
 1532 0056 0023     	 movs r3,#0
 1533 0058 3B74     	 strb r3,[r7,#16]
 298:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1;
 1534              	 .loc 4 298 0
 1535 005a 8823     	 movs r3,#136
 1536 005c 3B72     	 strb r3,[r7,#8]
 299:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 300:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_TXEN, &gpio_config);
 1537              	 .loc 4 300 0
 1538 005e 07F10803 	 add r3,r7,#8
 1539 0062 3548     	 ldr r0,.L61+4
 1540 0064 0521     	 movs r1,#5
 1541 0066 1A46     	 mov r2,r3
 1542 0068 FFF7FEFF 	 bl XMC_GPIO_Init
 301:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 302:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE;
 1543              	 .loc 4 302 0
 1544 006c 0023     	 movs r3,#0
 1545 006e 3B74     	 strb r3,[r7,#16]
 303:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1;
 1546              	 .loc 4 303 0
 1547 0070 8823     	 movs r3,#136
 1548 0072 3B72     	 strb r3,[r7,#8]
 304:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 305:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_TXD0, &gpio_config);
 1549              	 .loc 4 305 0
 1550 0074 07F10803 	 add r3,r7,#8
 1551 0078 2F48     	 ldr r0,.L61+4
 1552 007a 0821     	 movs r1,#8
 1553 007c 1A46     	 mov r2,r3
 1554 007e FFF7FEFF 	 bl XMC_GPIO_Init
 306:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 307:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE;
 1555              	 .loc 4 307 0
 1556 0082 0023     	 movs r3,#0
 1557 0084 3B74     	 strb r3,[r7,#16]
 308:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1;
 1558              	 .loc 4 308 0
 1559 0086 8823     	 movs r3,#136
 1560 0088 3B72     	 strb r3,[r7,#8]
 309:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 310:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_TXD1, &gpio_config);
 1561              	 .loc 4 310 0
 1562 008a 07F10803 	 add r3,r7,#8
 1563 008e 2A48     	 ldr r0,.L61+4
 1564 0090 0921     	 movs r1,#9
 1565 0092 1A46     	 mov r2,r3
 1566 0094 FFF7FEFF 	 bl XMC_GPIO_Init
 311:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 312:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1567              	 .loc 4 312 0
 1568 0098 0023     	 movs r3,#0
 1569 009a 3B72     	 strb r3,[r7,#8]
 313:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 314:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_RMII_CLK, &gpio_config);
 1570              	 .loc 4 314 0
 1571 009c 07F10803 	 add r3,r7,#8
 1572 00a0 2448     	 ldr r0,.L61
 1573 00a2 0821     	 movs r1,#8
 1574 00a4 1A46     	 mov r2,r3
 1575 00a6 FFF7FEFF 	 bl XMC_GPIO_Init
 315:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 316:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.output_strength = XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE;
 1576              	 .loc 4 316 0
 1577 00aa 0023     	 movs r3,#0
 1578 00ac 3B74     	 strb r3,[r7,#16]
 317:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_OUTPUT_PUSH_PULL_ALT1;
 1579              	 .loc 4 317 0
 1580 00ae 8823     	 movs r3,#136
 1581 00b0 3B72     	 strb r3,[r7,#8]
 318:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 319:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_MDC, &gpio_config);
 1582              	 .loc 4 319 0
 1583 00b2 07F10803 	 add r3,r7,#8
 1584 00b6 2048     	 ldr r0,.L61+4
 1585 00b8 0721     	 movs r1,#7
 1586 00ba 1A46     	 mov r2,r3
 1587 00bc FFF7FEFF 	 bl XMC_GPIO_Init
 320:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 321:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   gpio_config.mode = XMC_GPIO_MODE_INPUT_TRISTATE;
 1588              	 .loc 4 321 0
 1589 00c0 0023     	 movs r3,#0
 1590 00c2 3B72     	 strb r3,[r7,#8]
 322:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 323:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_Init(ETH_LWIP_0_MDIO, &gpio_config);
 1591              	 .loc 4 323 0
 1592 00c4 07F10803 	 add r3,r7,#8
 1593 00c8 1B48     	 ldr r0,.L61+4
 1594 00ca 0021     	 movs r1,#0
 1595 00cc 1A46     	 mov r2,r3
 1596 00ce FFF7FEFF 	 bl XMC_GPIO_Init
 324:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 325:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 326:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_GPIO_SetHardwareControl(ETH_LWIP_0_MDIO, XMC_GPIO_HWCTRL_PERIPHERAL1);
 1597              	 .loc 4 326 0
 1598 00d2 1948     	 ldr r0,.L61+4
 1599 00d4 0021     	 movs r1,#0
 1600 00d6 0122     	 movs r2,#1
 1601 00d8 FFF7FEFF 	 bl XMC_GPIO_SetHardwareControl
 327:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 328:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 329:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.mode = XMC_ETH_MAC_PORT_CTRL_MODE_RMII;
 1602              	 .loc 4 329 0
 1603 00dc FB7D     	 ldrb r3,[r7,#23]
 1604 00de 43F00403 	 orr r3,r3,#4
 1605 00e2 FB75     	 strb r3,[r7,#23]
 330:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.rxd0 = (XMC_ETH_MAC_PORT_CTRL_RXD0_t)0U;
 1606              	 .loc 4 330 0
 1607 00e4 3B7D     	 ldrb r3,[r7,#20]
 1608 00e6 6FF30103 	 bfc r3,#0,#2
 1609 00ea 3B75     	 strb r3,[r7,#20]
 331:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.rxd1 = (XMC_ETH_MAC_PORT_CTRL_RXD1_t)0U;
 1610              	 .loc 4 331 0
 1611 00ec 3B7D     	 ldrb r3,[r7,#20]
 1612 00ee 6FF38303 	 bfc r3,#2,#2
 1613 00f2 3B75     	 strb r3,[r7,#20]
 332:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.clk_rmii = (XMC_ETH_MAC_PORT_CTRL_CLK_RMII_t)2U;
 1614              	 .loc 4 332 0
 1615 00f4 7B7D     	 ldrb r3,[r7,#21]
 1616 00f6 0222     	 movs r2,#2
 1617 00f8 62F30103 	 bfi r3,r2,#0,#2
 1618 00fc 7B75     	 strb r3,[r7,#21]
 333:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.crs_dv = (XMC_ETH_MAC_PORT_CTRL_CRS_DV_t)2U;
 1619              	 .loc 4 333 0
 1620 00fe 7B7D     	 ldrb r3,[r7,#21]
 1621 0100 0222     	 movs r2,#2
 1622 0102 62F38303 	 bfi r3,r2,#2,#2
 1623 0106 7B75     	 strb r3,[r7,#21]
 334:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.rxer = (XMC_ETH_MAC_PORT_CTRL_RXER_t)0U;
 1624              	 .loc 4 334 0
 1625 0108 7B7D     	 ldrb r3,[r7,#21]
 1626 010a 6FF38713 	 bfc r3,#6,#2
 1627 010e 7B75     	 strb r3,[r7,#21]
 335:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   port_control.mdio = (XMC_ETH_MAC_PORT_CTRL_MDIO_t)1U;
 1628              	 .loc 4 335 0
 1629 0110 BB7D     	 ldrb r3,[r7,#22]
 1630 0112 0122     	 movs r2,#1
 1631 0114 62F38713 	 bfi r3,r2,#6,#2
 1632 0118 BB75     	 strb r3,[r7,#22]
 336:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_MAC_SetPortControl(&eth_mac, port_control);
 1633              	 .loc 4 336 0
 1634 011a 0848     	 ldr r0,.L61+8
 1635 011c 7969     	 ldr r1,[r7,#20]
 1636 011e FFF7FEFF 	 bl XMC_ETH_MAC_SetPortControl
 337:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 338:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   (void)XMC_ETH_MAC_Init(&eth_mac);
 1637              	 .loc 4 338 0
 1638 0122 0648     	 ldr r0,.L61+8
 1639 0124 FFF7FEFF 	 bl XMC_ETH_MAC_Init
 339:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 340:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_MAC_DisableJumboFrame(&eth_mac);
 1640              	 .loc 4 340 0
 1641 0128 0448     	 ldr r0,.L61+8
 1642 012a FFF7FEFF 	 bl XMC_ETH_MAC_DisableJumboFrame
 341:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 342:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 343:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 1643              	 .loc 4 343 0
 1644 012e 1837     	 adds r7,r7,#24
 1645              	.LCFI131:
 1646              	 .cfi_def_cfa_offset 8
 1647 0130 BD46     	 mov sp,r7
 1648              	.LCFI132:
 1649              	 .cfi_def_cfa_register 13
 1650              	 
 1651 0132 80BD     	 pop {r7,pc}
 1652              	.L62:
 1653              	 .align 2
 1654              	.L61:
 1655 0134 008F0248 	 .word 1208127232
 1656 0138 00820248 	 .word 1208123904
 1657 013c 00000000 	 .word eth_mac
 1658              	 .cfi_endproc
 1659              	.LFE210:
 1661              	 .section .text.low_level_output,"ax",%progbits
 1662              	 .align 2
 1663              	 .thumb
 1664              	 .thumb_func
 1666              	low_level_output:
 1667              	.LFB211:
 344:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 345:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**
 346:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * This function should do the actual transmission of the packet. The packet is
 347:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * contained in the pbuf that is passed to the function. This pbuf
 348:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * might be chained.
 349:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 350:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 351:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param p the MAC packet to send (e.g. IP packet including MAC addresses and type)
 352:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @return ERR_OK if the packet could be sent
 353:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *         an err_t value if the packet couldn't be sent
 354:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 355:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @note Returning ERR_MEM here if a DMA queue of your MAC is full can lead to
 356:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *       strange results. You might consider waiting for space in the DMA queue
 357:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *       to become availale since the stack doesn't retry to send a packet
 358:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *       dropped because of memory failure (except for the TCP timers).
 359:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
 360:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 361:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static err_t low_level_output(struct netif *netif, struct pbuf *p)
 362:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1668              	 .loc 4 362 0
 1669              	 .cfi_startproc
 1670              	 
 1671              	 
 1672 0000 80B5     	 push {r7,lr}
 1673              	.LCFI133:
 1674              	 .cfi_def_cfa_offset 8
 1675              	 .cfi_offset 7,-8
 1676              	 .cfi_offset 14,-4
 1677 0002 86B0     	 sub sp,sp,#24
 1678              	.LCFI134:
 1679              	 .cfi_def_cfa_offset 32
 1680 0004 00AF     	 add r7,sp,#0
 1681              	.LCFI135:
 1682              	 .cfi_def_cfa_register 7
 1683 0006 7860     	 str r0,[r7,#4]
 1684 0008 3960     	 str r1,[r7]
 363:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct pbuf *q;
 364:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   uint32_t framelen = 0U;
 1685              	 .loc 4 364 0
 1686 000a 0023     	 movs r3,#0
 1687 000c 3B61     	 str r3,[r7,#16]
 365:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   uint8_t *buffer;
 366:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 367:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   if (p->tot_len > (u16_t)XMC_ETH_MAC_BUF_SIZE) {
 1688              	 .loc 4 367 0
 1689 000e 3B68     	 ldr r3,[r7]
 1690 0010 1B89     	 ldrh r3,[r3,#8]
 1691 0012 40F2F452 	 movw r2,#1524
 1692 0016 9342     	 cmp r3,r2
 1693 0018 01D9     	 bls .L64
 368:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     return ERR_BUF;
 1694              	 .loc 4 368 0
 1695 001a FE23     	 movs r3,#254
 1696 001c 40E0     	 b .L65
 1697              	.L64:
 369:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 370:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 371:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   if (XMC_ETH_MAC_IsTxDescriptorOwnedByDma(&eth_mac))
 1698              	 .loc 4 371 0
 1699 001e 2348     	 ldr r0,.L69
 1700 0020 FFF7FEFF 	 bl XMC_ETH_MAC_IsTxDescriptorOwnedByDma
 1701 0024 0346     	 mov r3,r0
 1702 0026 002B     	 cmp r3,#0
 1703 0028 04D0     	 beq .L66
 372:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 373:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_ResumeTx(&eth_mac);
 1704              	 .loc 4 373 0
 1705 002a 2048     	 ldr r0,.L69
 1706 002c FFF7FEFF 	 bl XMC_ETH_MAC_ResumeTx
 374:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 375:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     return ERR_BUF;
 1707              	 .loc 4 375 0
 1708 0030 FE23     	 movs r3,#254
 1709 0032 35E0     	 b .L65
 1710              	.L66:
 376:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 377:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   else
 378:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 379:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     buffer = XMC_ETH_MAC_GetTxBuffer(&eth_mac);
 1711              	 .loc 4 379 0
 1712 0034 1D48     	 ldr r0,.L69
 1713 0036 FFF7FEFF 	 bl XMC_ETH_MAC_GetTxBuffer
 1714 003a F860     	 str r0,[r7,#12]
 380:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 381:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if ETH_PAD_SIZE
 382:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     pbuf_header(p, -ETH_PAD_SIZE);    /* Drop the padding word */
 1715              	 .loc 4 382 0
 1716 003c 3868     	 ldr r0,[r7]
 1717 003e 6FF00101 	 mvn r1,#1
 1718 0042 FFF7FEFF 	 bl pbuf_header
 383:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 384:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 385:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     for(q = p; q != NULL; q = q->next)
 1719              	 .loc 4 385 0
 1720 0046 3B68     	 ldr r3,[r7]
 1721 0048 7B61     	 str r3,[r7,#20]
 1722 004a 17E0     	 b .L67
 1723              	.L68:
 386:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 387:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       /* Send the data from the pbuf to the interface, one pbuf at a
 388:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****        time. The size of the data in each pbuf is kept in the ->len
 389:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****        variable. */
 390:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       MEMCPY(buffer, q->payload, q->len);
 1724              	 .loc 4 390 0 discriminator 3
 1725 004c 7B69     	 ldr r3,[r7,#20]
 1726 004e 5A68     	 ldr r2,[r3,#4]
 1727 0050 7B69     	 ldr r3,[r7,#20]
 1728 0052 5B89     	 ldrh r3,[r3,#10]
 1729 0054 F868     	 ldr r0,[r7,#12]
 1730 0056 1146     	 mov r1,r2
 1731 0058 1A46     	 mov r2,r3
 1732 005a FFF7FEFF 	 bl thumb2_memcpy
 391:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       framelen += (uint32_t)q->len;
 1733              	 .loc 4 391 0 discriminator 3
 1734 005e 7B69     	 ldr r3,[r7,#20]
 1735 0060 5B89     	 ldrh r3,[r3,#10]
 1736 0062 1A46     	 mov r2,r3
 1737 0064 3B69     	 ldr r3,[r7,#16]
 1738 0066 1344     	 add r3,r3,r2
 1739 0068 3B61     	 str r3,[r7,#16]
 392:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       buffer += q->len;
 1740              	 .loc 4 392 0 discriminator 3
 1741 006a 7B69     	 ldr r3,[r7,#20]
 1742 006c 5B89     	 ldrh r3,[r3,#10]
 1743 006e 1A46     	 mov r2,r3
 1744 0070 FB68     	 ldr r3,[r7,#12]
 1745 0072 1344     	 add r3,r3,r2
 1746 0074 FB60     	 str r3,[r7,#12]
 385:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 1747              	 .loc 4 385 0 discriminator 3
 1748 0076 7B69     	 ldr r3,[r7,#20]
 1749 0078 1B68     	 ldr r3,[r3]
 1750 007a 7B61     	 str r3,[r7,#20]
 1751              	.L67:
 385:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 1752              	 .loc 4 385 0 is_stmt 0 discriminator 1
 1753 007c 7B69     	 ldr r3,[r7,#20]
 1754 007e 002B     	 cmp r3,#0
 1755 0080 E4D1     	 bne .L68
 393:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 394:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 395:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if ETH_PAD_SIZE
 396:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     pbuf_header(p, ETH_PAD_SIZE);    /* Reclaim the padding word */
 1756              	 .loc 4 396 0 is_stmt 1
 1757 0082 3868     	 ldr r0,[r7]
 1758 0084 0221     	 movs r1,#2
 1759 0086 FFF7FEFF 	 bl pbuf_header
 397:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 398:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 399:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_SetTxBufferSize(&eth_mac, framelen);
 1760              	 .loc 4 399 0
 1761 008a 0848     	 ldr r0,.L69
 1762 008c 3969     	 ldr r1,[r7,#16]
 1763 008e FFF7FEFF 	 bl XMC_ETH_MAC_SetTxBufferSize
 400:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 401:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_ReturnTxDescriptor(&eth_mac);
 1764              	 .loc 4 401 0
 1765 0092 0648     	 ldr r0,.L69
 1766 0094 FFF7FEFF 	 bl XMC_ETH_MAC_ReturnTxDescriptor
 402:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_ResumeTx(&eth_mac);
 1767              	 .loc 4 402 0
 1768 0098 0448     	 ldr r0,.L69
 1769 009a FFF7FEFF 	 bl XMC_ETH_MAC_ResumeTx
 403:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 404:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     return ERR_OK;
 1770              	 .loc 4 404 0
 1771 009e 0023     	 movs r3,#0
 1772              	.L65:
 1773 00a0 5BB2     	 sxtb r3,r3
 405:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 406:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 1774              	 .loc 4 406 0
 1775 00a2 1846     	 mov r0,r3
 1776 00a4 1837     	 adds r7,r7,#24
 1777              	.LCFI136:
 1778              	 .cfi_def_cfa_offset 8
 1779 00a6 BD46     	 mov sp,r7
 1780              	.LCFI137:
 1781              	 .cfi_def_cfa_register 13
 1782              	 
 1783 00a8 80BD     	 pop {r7,pc}
 1784              	.L70:
 1785 00aa 00BF     	 .align 2
 1786              	.L69:
 1787 00ac 00000000 	 .word eth_mac
 1788              	 .cfi_endproc
 1789              	.LFE211:
 1791              	 .section .text.low_level_input,"ax",%progbits
 1792              	 .align 2
 1793              	 .thumb
 1794              	 .thumb_func
 1796              	low_level_input:
 1797              	.LFB212:
 407:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 408:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**
 409:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Should allocate a pbuf and transfer the bytes of the incoming
 410:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * packet from the interface into the pbuf.
 411:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 412:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 413:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @return a pbuf filled with the received packet (including MAC header)
 414:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *         NULL on memory error
 415:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
 416:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static struct pbuf * low_level_input(void)
 417:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1798              	 .loc 4 417 0
 1799              	 .cfi_startproc
 1800              	 
 1801              	 
 1802 0000 80B5     	 push {r7,lr}
 1803              	.LCFI138:
 1804              	 .cfi_def_cfa_offset 8
 1805              	 .cfi_offset 7,-8
 1806              	 .cfi_offset 14,-4
 1807 0002 84B0     	 sub sp,sp,#16
 1808              	.LCFI139:
 1809              	 .cfi_def_cfa_offset 24
 1810 0004 00AF     	 add r7,sp,#0
 1811              	.LCFI140:
 1812              	 .cfi_def_cfa_register 7
 418:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct pbuf *p = NULL;
 1813              	 .loc 4 418 0
 1814 0006 0023     	 movs r3,#0
 1815 0008 FB60     	 str r3,[r7,#12]
 419:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct pbuf *q;
 420:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   uint32_t len;
 421:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   uint8_t *buffer;
 422:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 423:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   if (XMC_ETH_MAC_IsRxDescriptorOwnedByDma(&eth_mac) == false)
 1816              	 .loc 4 423 0
 1817 000a 2E48     	 ldr r0,.L79
 1818 000c FFF7FEFF 	 bl XMC_ETH_MAC_IsRxDescriptorOwnedByDma
 1819 0010 0346     	 mov r3,r0
 1820 0012 83F00103 	 eor r3,r3,#1
 1821 0016 DBB2     	 uxtb r3,r3
 1822 0018 002B     	 cmp r3,#0
 1823 001a 4DD0     	 beq .L72
 424:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 425:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     len = XMC_ETH_MAC_GetRxFrameSize(&eth_mac);
 1824              	 .loc 4 425 0
 1825 001c 2948     	 ldr r0,.L79
 1826 001e FFF7FEFF 	 bl XMC_ETH_MAC_GetRxFrameSize
 1827 0022 7860     	 str r0,[r7,#4]
 426:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 427:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     if ((len > 0U) && (len <= (uint32_t)XMC_ETH_MAC_BUF_SIZE))
 1828              	 .loc 4 427 0
 1829 0024 7B68     	 ldr r3,[r7,#4]
 1830 0026 002B     	 cmp r3,#0
 1831 0028 40D0     	 beq .L73
 1832              	 .loc 4 427 0 is_stmt 0 discriminator 1
 1833 002a 7B68     	 ldr r3,[r7,#4]
 1834 002c 40F2F452 	 movw r2,#1524
 1835 0030 9342     	 cmp r3,r2
 1836 0032 3BD8     	 bhi .L73
 428:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 429:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if ETH_PAD_SIZE
 430:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     len += ETH_PAD_SIZE;    /* allow room for Ethernet padding */
 1837              	 .loc 4 430 0 is_stmt 1
 1838 0034 7B68     	 ldr r3,[r7,#4]
 1839 0036 0233     	 adds r3,r3,#2
 1840 0038 7B60     	 str r3,[r7,#4]
 431:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 432:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 433:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       /* We allocate a pbuf chain of pbufs from the pool. */
 434:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       p = pbuf_alloc(PBUF_RAW, (u16_t)len, PBUF_POOL);
 1841              	 .loc 4 434 0
 1842 003a 7B68     	 ldr r3,[r7,#4]
 1843 003c 9BB2     	 uxth r3,r3
 1844 003e 0320     	 movs r0,#3
 1845 0040 1946     	 mov r1,r3
 1846 0042 0322     	 movs r2,#3
 1847 0044 FFF7FEFF 	 bl pbuf_alloc
 1848 0048 F860     	 str r0,[r7,#12]
 435:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     
 436:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       if (p != NULL)
 1849              	 .loc 4 436 0
 1850 004a FB68     	 ldr r3,[r7,#12]
 1851 004c 002B     	 cmp r3,#0
 1852 004e 29D0     	 beq .L74
 437:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       {
 438:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if ETH_PAD_SIZE
 439:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         pbuf_header(p, -ETH_PAD_SIZE);  /* drop the padding word */
 1853              	 .loc 4 439 0
 1854 0050 F868     	 ldr r0,[r7,#12]
 1855 0052 6FF00101 	 mvn r1,#1
 1856 0056 FFF7FEFF 	 bl pbuf_header
 440:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 441:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 442:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         buffer = XMC_ETH_MAC_GetRxBuffer(&eth_mac);
 1857              	 .loc 4 442 0
 1858 005a 1A48     	 ldr r0,.L79
 1859 005c FFF7FEFF 	 bl XMC_ETH_MAC_GetRxBuffer
 1860 0060 3860     	 str r0,[r7]
 443:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 444:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         len = 0U;
 1861              	 .loc 4 444 0
 1862 0062 0023     	 movs r3,#0
 1863 0064 7B60     	 str r3,[r7,#4]
 445:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         /* We iterate over the pbuf chain until we have read the entire
 446:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****          * packet into the pbuf. */
 447:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         for (q = p; q != NULL; q = q->next)
 1864              	 .loc 4 447 0
 1865 0066 FB68     	 ldr r3,[r7,#12]
 1866 0068 BB60     	 str r3,[r7,#8]
 1867 006a 14E0     	 b .L75
 1868              	.L76:
 448:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         {
 449:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****           /* Read enough bytes to fill this pbuf in the chain. The
 450:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * available data in the pbuf is given by the q->len
 451:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * variable.
 452:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * This does not necessarily have to be a memcpy, you can also preallocate
 453:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * pbufs for a DMA-enabled MAC and after receiving truncate it to the
 454:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * actually received size. In this case, ensure the tot_len member of the
 455:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            * pbuf is the sum of the chained pbuf len members.
 456:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            */
 457:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            MEMCPY(q->payload, &buffer[len], q->len);
 1869              	 .loc 4 457 0 discriminator 3
 1870 006c BB68     	 ldr r3,[r7,#8]
 1871 006e 5968     	 ldr r1,[r3,#4]
 1872 0070 3A68     	 ldr r2,[r7]
 1873 0072 7B68     	 ldr r3,[r7,#4]
 1874 0074 1A44     	 add r2,r2,r3
 1875 0076 BB68     	 ldr r3,[r7,#8]
 1876 0078 5B89     	 ldrh r3,[r3,#10]
 1877 007a 0846     	 mov r0,r1
 1878 007c 1146     	 mov r1,r2
 1879 007e 1A46     	 mov r2,r3
 1880 0080 FFF7FEFF 	 bl thumb2_memcpy
 458:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****            len += q->len;
 1881              	 .loc 4 458 0 discriminator 3
 1882 0084 BB68     	 ldr r3,[r7,#8]
 1883 0086 5B89     	 ldrh r3,[r3,#10]
 1884 0088 1A46     	 mov r2,r3
 1885 008a 7B68     	 ldr r3,[r7,#4]
 1886 008c 1344     	 add r3,r3,r2
 1887 008e 7B60     	 str r3,[r7,#4]
 447:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         {
 1888              	 .loc 4 447 0 discriminator 3
 1889 0090 BB68     	 ldr r3,[r7,#8]
 1890 0092 1B68     	 ldr r3,[r3]
 1891 0094 BB60     	 str r3,[r7,#8]
 1892              	.L75:
 447:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         {
 1893              	 .loc 4 447 0 is_stmt 0 discriminator 1
 1894 0096 BB68     	 ldr r3,[r7,#8]
 1895 0098 002B     	 cmp r3,#0
 1896 009a E7D1     	 bne .L76
 459:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         }
 460:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #if ETH_PAD_SIZE
 461:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         pbuf_header(p, ETH_PAD_SIZE);    /* Reclaim the padding word */
 1897              	 .loc 4 461 0 is_stmt 1
 1898 009c F868     	 ldr r0,[r7,#12]
 1899 009e 0221     	 movs r1,#2
 1900 00a0 FFF7FEFF 	 bl pbuf_header
 1901              	.L74:
 462:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** #endif
 463:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   
 464:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       }
 465:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       XMC_ETH_MAC_ReturnRxDescriptor(&eth_mac);
 1902              	 .loc 4 465 0
 1903 00a4 0748     	 ldr r0,.L79
 1904 00a6 FFF7FEFF 	 bl XMC_ETH_MAC_ReturnRxDescriptor
 1905 00aa 02E0     	 b .L77
 1906              	.L73:
 466:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 467:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     else
 468:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 469:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       /* Discard frame */
 470:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       XMC_ETH_MAC_ReturnRxDescriptor(&eth_mac);
 1907              	 .loc 4 470 0
 1908 00ac 0548     	 ldr r0,.L79
 1909 00ae FFF7FEFF 	 bl XMC_ETH_MAC_ReturnRxDescriptor
 1910              	.L77:
 471:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 472:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     XMC_ETH_MAC_ResumeRx(&eth_mac);
 1911              	 .loc 4 472 0
 1912 00b2 0448     	 ldr r0,.L79
 1913 00b4 FFF7FEFF 	 bl XMC_ETH_MAC_ResumeRx
 1914              	.L72:
 473:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 474:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   return p;  
 1915              	 .loc 4 474 0
 1916 00b8 FB68     	 ldr r3,[r7,#12]
 475:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 1917              	 .loc 4 475 0
 1918 00ba 1846     	 mov r0,r3
 1919 00bc 1037     	 adds r7,r7,#16
 1920              	.LCFI141:
 1921              	 .cfi_def_cfa_offset 8
 1922 00be BD46     	 mov sp,r7
 1923              	.LCFI142:
 1924              	 .cfi_def_cfa_register 13
 1925              	 
 1926 00c0 80BD     	 pop {r7,pc}
 1927              	.L80:
 1928 00c2 00BF     	 .align 2
 1929              	.L79:
 1930 00c4 00000000 	 .word eth_mac
 1931              	 .cfi_endproc
 1932              	.LFE212:
 1934              	 .section .text.ethernetif_input,"ax",%progbits
 1935              	 .align 2
 1936              	 .thumb
 1937              	 .thumb_func
 1939              	ethernetif_input:
 1940              	.LFB213:
 476:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 477:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**
 478:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * This function should be called when a packet is ready to be read
 479:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * from the interface. It uses the function low_level_input() that
 480:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * should handle the actual reception of bytes from the network
 481:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * interface. Then the type of the received packet is determined and
 482:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * the appropriate input function is called.
 483:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 484:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 485:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
 486:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** static void ethernetif_input(void *arg)
 487:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 1941              	 .loc 4 487 0
 1942              	 .cfi_startproc
 1943              	 
 1944              	 
 1945 0000 80B5     	 push {r7,lr}
 1946              	.LCFI143:
 1947              	 .cfi_def_cfa_offset 8
 1948              	 .cfi_offset 7,-8
 1949              	 .cfi_offset 14,-4
 1950 0002 86B0     	 sub sp,sp,#24
 1951              	.LCFI144:
 1952              	 .cfi_def_cfa_offset 32
 1953 0004 00AF     	 add r7,sp,#0
 1954              	.LCFI145:
 1955              	 .cfi_def_cfa_register 7
 1956 0006 7860     	 str r0,[r7,#4]
 488:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct pbuf *p = NULL;
 1957              	 .loc 4 488 0
 1958 0008 0023     	 movs r3,#0
 1959 000a 7B61     	 str r3,[r7,#20]
 489:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct eth_hdr *ethhdr;
 490:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   struct netif *netif = (struct netif *)arg;
 1960              	 .loc 4 490 0
 1961 000c 7B68     	 ldr r3,[r7,#4]
 1962 000e 3B61     	 str r3,[r7,#16]
 491:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 492:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 493:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     p = low_level_input();
 1963              	 .loc 4 493 0
 1964 0010 FFF7FEFF 	 bl low_level_input
 1965 0014 7861     	 str r0,[r7,#20]
 494:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 495:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     while (p != NULL)
 1966              	 .loc 4 495 0
 1967 0016 24E0     	 b .L82
 1968              	.L87:
 496:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 497:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	  ethhdr = p->payload;
 1969              	 .loc 4 497 0
 1970 0018 7B69     	 ldr r3,[r7,#20]
 1971 001a 5B68     	 ldr r3,[r3,#4]
 1972 001c FB60     	 str r3,[r7,#12]
 498:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	  switch (htons(ethhdr->type))
 1973              	 .loc 4 498 0
 1974 001e FB68     	 ldr r3,[r7,#12]
 1975 0020 DB89     	 ldrh r3,[r3,#14]
 1976 0022 9BB2     	 uxth r3,r3
 1977 0024 1846     	 mov r0,r3
 1978 0026 FFF7FEFF 	 bl lwip_htons
 1979 002a 0346     	 mov r3,r0
 1980 002c B3F5006F 	 cmp r3,#2048
 1981 0030 03D0     	 beq .L84
 1982 0032 40F60602 	 movw r2,#2054
 1983 0036 9342     	 cmp r3,r2
 1984 0038 0CD1     	 bne .L88
 1985              	.L84:
 499:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	  {
 500:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	    case ETHTYPE_IP:
 501:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	    case ETHTYPE_ARP:
 502:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	      /* full packet send to tcpip_thread to process */
 503:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****           if (netif->input( p, netif) != ERR_OK)
 1986              	 .loc 4 503 0
 1987 003a 3B69     	 ldr r3,[r7,#16]
 1988 003c 1B69     	 ldr r3,[r3,#16]
 1989 003e 7869     	 ldr r0,[r7,#20]
 1990 0040 3969     	 ldr r1,[r7,#16]
 1991 0042 9847     	 blx r3
 1992 0044 0346     	 mov r3,r0
 1993 0046 002B     	 cmp r3,#0
 1994 0048 03D0     	 beq .L85
 504:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****           {
 505:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****             pbuf_free(p);
 1995              	 .loc 4 505 0
 1996 004a 7869     	 ldr r0,[r7,#20]
 1997 004c FFF7FEFF 	 bl pbuf_free
 506:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****           }
 507:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 508:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****           break;
 1998              	 .loc 4 508 0
 1999 0050 04E0     	 b .L86
 2000              	.L85:
 2001 0052 03E0     	 b .L86
 2002              	.L88:
 509:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 510:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	    default:
 511:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	      pbuf_free(p);
 2003              	 .loc 4 511 0
 2004 0054 7869     	 ldr r0,[r7,#20]
 2005 0056 FFF7FEFF 	 bl pbuf_free
 512:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	      break;
 2006              	 .loc 4 512 0
 2007 005a 00BF     	 nop
 2008              	.L86:
 513:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    	  }
 514:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       
 515:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       p = low_level_input();
 2009              	 .loc 4 515 0
 2010 005c FFF7FEFF 	 bl low_level_input
 2011 0060 7861     	 str r0,[r7,#20]
 2012              	.L82:
 495:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     {
 2013              	 .loc 4 495 0
 2014 0062 7B69     	 ldr r3,[r7,#20]
 2015 0064 002B     	 cmp r3,#0
 2016 0066 D7D1     	 bne .L87
 516:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     }
 517:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 518:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 519:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 2017              	 .loc 4 519 0
 2018 0068 1837     	 adds r7,r7,#24
 2019              	.LCFI146:
 2020              	 .cfi_def_cfa_offset 8
 2021 006a BD46     	 mov sp,r7
 2022              	.LCFI147:
 2023              	 .cfi_def_cfa_register 13
 2024              	 
 2025 006c 80BD     	 pop {r7,pc}
 2026              	 .cfi_endproc
 2027              	.LFE213:
 2029 006e 00BF     	 .section .text.ethernetif_init,"ax",%progbits
 2030              	 .align 2
 2031              	 .global ethernetif_init
 2032              	 .thumb
 2033              	 .thumb_func
 2035              	ethernetif_init:
 2036              	.LFB214:
 520:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 521:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /**
 522:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * Should be called at the beginning of the program to set up the
 523:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * network interface. It calls the function low_level_init() to do the
 524:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * actual setup of the hardware.
 525:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 526:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * This function should be passed as a parameter to netif_add().
 527:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *
 528:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @param netif the lwip network interface structure for this ethernetif
 529:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  * @return ERR_OK if the loopif is initialized
 530:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *         ERR_MEM if private data couldn't be allocated
 531:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  *         any other err_t on error
 532:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****  */
 533:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** err_t ethernetif_init(struct netif* netif)
 534:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 2037              	 .loc 4 534 0
 2038              	 .cfi_startproc
 2039              	 
 2040              	 
 2041 0000 80B5     	 push {r7,lr}
 2042              	.LCFI148:
 2043              	 .cfi_def_cfa_offset 8
 2044              	 .cfi_offset 7,-8
 2045              	 .cfi_offset 14,-4
 2046 0002 82B0     	 sub sp,sp,#8
 2047              	.LCFI149:
 2048              	 .cfi_def_cfa_offset 16
 2049 0004 00AF     	 add r7,sp,#0
 2050              	.LCFI150:
 2051              	 .cfi_def_cfa_register 7
 2052 0006 7860     	 str r0,[r7,#4]
 535:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   LWIP_ASSERT("netif != NULL", (netif != NULL));
 536:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 537:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 538:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   netif->output = etharp_output;
 2053              	 .loc 4 538 0
 2054 0008 7B68     	 ldr r3,[r7,#4]
 2055 000a 0C4A     	 ldr r2,.L91
 2056 000c 5A61     	 str r2,[r3,#20]
 539:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   netif->linkoutput = low_level_output;
 2057              	 .loc 4 539 0
 2058 000e 7B68     	 ldr r3,[r7,#4]
 2059 0010 0B4A     	 ldr r2,.L91+4
 2060 0012 9A61     	 str r2,[r3,#24]
 540:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 541:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   /* initialize the hardware */
 542:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   low_level_init(netif);
 2061              	 .loc 4 542 0
 2062 0014 7868     	 ldr r0,[r7,#4]
 2063 0016 FFF7FEFF 	 bl low_level_init
 543:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 544:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   sys_timeout(1000U, ethernetif_link_status, NULL);
 2064              	 .loc 4 544 0
 2065 001a 4FF47A70 	 mov r0,#1000
 2066 001e 0949     	 ldr r1,.L91+8
 2067 0020 0022     	 movs r2,#0
 2068 0022 FFF7FEFF 	 bl sys_timeout
 545:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 546:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   netif_set_link_callback(netif, ethernetif_link_callback);
 2069              	 .loc 4 546 0
 2070 0026 7868     	 ldr r0,[r7,#4]
 2071 0028 0749     	 ldr r1,.L91+12
 2072 002a FFF7FEFF 	 bl netif_set_link_callback
 547:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 548:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 549:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   return ERR_OK;
 2073              	 .loc 4 549 0
 2074 002e 0023     	 movs r3,#0
 2075 0030 5BB2     	 sxtb r3,r3
 550:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 2076              	 .loc 4 550 0
 2077 0032 1846     	 mov r0,r3
 2078 0034 0837     	 adds r7,r7,#8
 2079              	.LCFI151:
 2080              	 .cfi_def_cfa_offset 8
 2081 0036 BD46     	 mov sp,r7
 2082              	.LCFI152:
 2083              	 .cfi_def_cfa_register 13
 2084              	 
 2085 0038 80BD     	 pop {r7,pc}
 2086              	.L92:
 2087 003a 00BF     	 .align 2
 2088              	.L91:
 2089 003c 00000000 	 .word etharp_output
 2090 0040 00000000 	 .word low_level_output
 2091 0044 00000000 	 .word ethernetif_link_status
 2092 0048 00000000 	 .word ethernetif_link_callback
 2093              	 .cfi_endproc
 2094              	.LFE214:
 2096              	 .section .text.ETH0_0_IRQHandler,"ax",%progbits
 2097              	 .align 2
 2098              	 .global ETH0_0_IRQHandler
 2099              	 .thumb
 2100              	 .thumb_func
 2102              	ETH0_0_IRQHandler:
 2103              	.LFB215:
 551:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 552:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** void IRQ_Hdlr_108(void)
 553:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 2104              	 .loc 4 553 0
 2105              	 .cfi_startproc
 2106              	 
 2107              	 
 2108 0000 80B5     	 push {r7,lr}
 2109              	.LCFI153:
 2110              	 .cfi_def_cfa_offset 8
 2111              	 .cfi_offset 7,-8
 2112              	 .cfi_offset 14,-4
 2113 0002 00AF     	 add r7,sp,#0
 2114              	.LCFI154:
 2115              	 .cfi_def_cfa_register 7
 554:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   XMC_ETH_MAC_ClearEventStatus(&eth_mac, XMC_ETH_MAC_EVENT_RECEIVE);
 2116              	 .loc 4 554 0
 2117 0004 0348     	 ldr r0,.L94
 2118 0006 4021     	 movs r1,#64
 2119 0008 FFF7FEFF 	 bl XMC_ETH_MAC_ClearEventStatus
 555:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     ethernetif_input(&xnetif);
 2120              	 .loc 4 555 0
 2121 000c 0248     	 ldr r0,.L94+4
 2122 000e FFF7FEFF 	 bl ethernetif_input
 556:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 2123              	 .loc 4 556 0
 2124 0012 80BD     	 pop {r7,pc}
 2125              	.L95:
 2126              	 .align 2
 2127              	.L94:
 2128 0014 00000000 	 .word eth_mac
 2129 0018 00000000 	 .word xnetif
 2130              	 .cfi_endproc
 2131              	.LFE215:
 2133              	 .section .text.ETH_LWIP_Poll,"ax",%progbits
 2134              	 .align 2
 2135              	 .global ETH_LWIP_Poll
 2136              	 .thumb
 2137              	 .thumb_func
 2139              	ETH_LWIP_Poll:
 2140              	.LFB216:
 557:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 558:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** void ETH_LWIP_Poll(void)
 559:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 2141              	 .loc 4 559 0
 2142              	 .cfi_startproc
 2143              	 
 2144              	 
 2145 0000 80B5     	 push {r7,lr}
 2146              	.LCFI155:
 2147              	 .cfi_def_cfa_offset 8
 2148              	 .cfi_offset 7,-8
 2149              	 .cfi_offset 14,-4
 2150 0002 00AF     	 add r7,sp,#0
 2151              	.LCFI156:
 2152              	 .cfi_def_cfa_register 7
 560:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     ethernetif_input(&xnetif);
 2153              	 .loc 4 560 0
 2154 0004 0148     	 ldr r0,.L97
 2155 0006 FFF7FEFF 	 bl ethernetif_input
 561:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** }
 2156              	 .loc 4 561 0
 2157 000a 80BD     	 pop {r7,pc}
 2158              	.L98:
 2159              	 .align 2
 2160              	.L97:
 2161 000c 00000000 	 .word xnetif
 2162              	 .cfi_endproc
 2163              	.LFE216:
 2165              	 .section .text.ETH_LWIP_Error,"ax",%progbits
 2166              	 .align 2
 2167              	 .weak ETH_LWIP_Error
 2168              	 .thumb
 2169              	 .thumb_func
 2171              	ETH_LWIP_Error:
 2172              	.LFB217:
 562:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 563:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** /*Weak function to be called incase of error*/
 564:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** __WEAK void ETH_LWIP_Error (ETH_LWIP_ERROR_t error_code)
 565:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** {
 2173              	 .loc 4 565 0
 2174              	 .cfi_startproc
 2175              	 
 2176              	 
 2177              	 
 2178 0000 80B4     	 push {r7}
 2179              	.LCFI157:
 2180              	 .cfi_def_cfa_offset 4
 2181              	 .cfi_offset 7,-4
 2182 0002 83B0     	 sub sp,sp,#12
 2183              	.LCFI158:
 2184              	 .cfi_def_cfa_offset 16
 2185 0004 00AF     	 add r7,sp,#0
 2186              	.LCFI159:
 2187              	 .cfi_def_cfa_register 7
 2188 0006 0346     	 mov r3,r0
 2189 0008 FB71     	 strb r3,[r7,#7]
 566:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   switch (error_code)
 2190              	 .loc 4 566 0
 2191 000a FB79     	 ldrb r3,[r7,#7]
 2192 000c 032B     	 cmp r3,#3
 2193 000e 04D0     	 beq .L101
 2194 0010 042B     	 cmp r3,#4
 2195 0012 03D0     	 beq .L102
 2196 0014 022B     	 cmp r3,#2
 2197 0016 02D0     	 beq .L103
 2198 0018 02E0     	 b .L105
 2199              	.L101:
 567:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   {
 568:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****     case ETH_LWIP_ERROR_PHY_DEVICE_ID:
 569:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****        /* Wrong PHY address configured in the ETH_LWIP APP Network Interface.
 570:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****         * Because the connect PHY does not match the configuration or the PHYADR is wrong*/
 571:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****        break;
 2200              	 .loc 4 571 0
 2201 001a 02E0     	 b .L104
 2202              	.L102:
 572:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 573:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    case ETH_LWIP_ERROR_PHY_TIMEOUT:
 574:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       /* PHY did not respond.*/
 575:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****       break;
 2203              	 .loc 4 575 0 discriminator 2
 2204 001c 01E0     	 b .L104
 2205              	.L103:
 576:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 577:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    case ETH_LWIP_ERROR_PHY_ERROR:
 578:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****      /*PHY register update failed*/
 579:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****      break;
 2206              	 .loc 4 579 0 discriminator 3
 2207 001e 00E0     	 b .L104
 2208              	.L105:
 580:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 581:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****    default:
 582:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****      break;
 2209              	 .loc 4 582 0 discriminator 4
 2210 0020 00BF     	 nop
 2211              	.L104:
 583:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   }
 584:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c **** 
 585:../Dave/Generated/ETH_LWIP/lwip/port/netif/ethernetif.c ****   for (;;);
 2212              	 .loc 4 585 0 discriminator 5
 2213 0022 FEE7     	 b .L104
 2214              	 .cfi_endproc
 2215              	.LFE217:
 2217              	 .text
 2218              	.Letext0:
 2219              	 .file 5 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 2220              	 .file 6 "c:\\infineon\\tools\\dave ide\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 2221              	 .file 7 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/CMSIS/Infineon/XMC4700_series/Include/XMC4700.h"
 2222              	 .file 8 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/lwip/../../port/include/arch/cc.h"
 2223              	 .file 9 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/lwip/err.h"
 2224              	 .file 10 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/lwip/pbuf.h"
 2225              	 .file 11 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/lwip/../ipv4/lwip/ip_addr.h"
 2226              	 .file 12 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/netif/../lwip/netif.h"
 2227              	 .file 13 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../include/netif/etharp.h"
 2228              	 .file 14 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_eth_mac_map.h"
 2229              	 .file 15 "../Dave/Generated/ETH_LWIP/lwip/port/netif/../../../eth_lwip.h"
 2230              	 .file 16 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_gpio.h"
 2231              	 .file 17 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc4_gpio.h"
 2232              	 .file 18 "C:/Users/Will/Documents/GitHub/Launch-DAQ/Libraries/XMCLib/inc/xmc_eth_phy.h"
DEFINED SYMBOLS
                            *ABS*:00000000 ethernetif.c
    {standard input}:20     .text.__NVIC_GetPriorityGrouping:00000000 $t
    {standard input}:24     .text.__NVIC_GetPriorityGrouping:00000000 __NVIC_GetPriorityGrouping
    {standard input}:58     .text.__NVIC_GetPriorityGrouping:00000018 $d
    {standard input}:63     .text.__NVIC_EnableIRQ:00000000 $t
    {standard input}:67     .text.__NVIC_EnableIRQ:00000000 __NVIC_EnableIRQ
    {standard input}:118    .text.__NVIC_EnableIRQ:00000034 $d
    {standard input}:123    .text.__NVIC_DisableIRQ:00000000 $t
    {standard input}:127    .text.__NVIC_DisableIRQ:00000000 __NVIC_DisableIRQ
    {standard input}:196    .text.__NVIC_DisableIRQ:00000040 $d
    {standard input}:201    .text.__NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:205    .text.__NVIC_ClearPendingIRQ:00000000 __NVIC_ClearPendingIRQ
    {standard input}:255    .text.__NVIC_ClearPendingIRQ:00000038 $d
    {standard input}:260    .text.__NVIC_SetPriority:00000000 $t
    {standard input}:264    .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
    {standard input}:327    .text.__NVIC_SetPriority:0000004c $d
    {standard input}:333    .text.NVIC_EncodePriority:00000000 $t
    {standard input}:337    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
    {standard input}:419    .text.XMC_ETH_MAC_SetPortControl:00000000 $t
    {standard input}:423    .text.XMC_ETH_MAC_SetPortControl:00000000 XMC_ETH_MAC_SetPortControl
    {standard input}:463    .text.XMC_ETH_MAC_SetPortControl:0000001c $d
    {standard input}:468    .text.XMC_ETH_MAC_DisableJumboFrame:00000000 $t
    {standard input}:472    .text.XMC_ETH_MAC_DisableJumboFrame:00000000 XMC_ETH_MAC_DisableJumboFrame
    {standard input}:515    .text.XMC_ETH_MAC_SetLink:00000000 $t
    {standard input}:519    .text.XMC_ETH_MAC_SetLink:00000000 XMC_ETH_MAC_SetLink
    {standard input}:574    .text.XMC_ETH_MAC_IsRxDescriptorOwnedByDma:00000000 $t
    {standard input}:578    .text.XMC_ETH_MAC_IsRxDescriptorOwnedByDma:00000000 XMC_ETH_MAC_IsRxDescriptorOwnedByDma
    {standard input}:624    .text.XMC_ETH_MAC_IsTxDescriptorOwnedByDma:00000000 $t
    {standard input}:628    .text.XMC_ETH_MAC_IsTxDescriptorOwnedByDma:00000000 XMC_ETH_MAC_IsTxDescriptorOwnedByDma
    {standard input}:674    .text.XMC_ETH_MAC_EnableRx:00000000 $t
    {standard input}:678    .text.XMC_ETH_MAC_EnableRx:00000000 XMC_ETH_MAC_EnableRx
    {standard input}:733    .text.XMC_ETH_MAC_DisableRx:00000000 $t
    {standard input}:737    .text.XMC_ETH_MAC_DisableRx:00000000 XMC_ETH_MAC_DisableRx
    {standard input}:792    .text.XMC_ETH_MAC_EnableTx:00000000 $t
    {standard input}:796    .text.XMC_ETH_MAC_EnableTx:00000000 XMC_ETH_MAC_EnableTx
    {standard input}:851    .text.XMC_ETH_MAC_DisableTx:00000000 $t
    {standard input}:855    .text.XMC_ETH_MAC_DisableTx:00000000 XMC_ETH_MAC_DisableTx
    {standard input}:910    .text.XMC_ETH_MAC_ResumeTx:00000000 $t
    {standard input}:914    .text.XMC_ETH_MAC_ResumeTx:00000000 XMC_ETH_MAC_ResumeTx
    {standard input}:963    .text.XMC_ETH_MAC_ResumeRx:00000000 $t
    {standard input}:967    .text.XMC_ETH_MAC_ResumeRx:00000000 XMC_ETH_MAC_ResumeRx
    {standard input}:1016   .text.XMC_ETH_MAC_GetTxBuffer:00000000 $t
    {standard input}:1020   .text.XMC_ETH_MAC_GetTxBuffer:00000000 XMC_ETH_MAC_GetTxBuffer
    {standard input}:1064   .text.XMC_ETH_MAC_GetRxBuffer:00000000 $t
    {standard input}:1068   .text.XMC_ETH_MAC_GetRxBuffer:00000000 XMC_ETH_MAC_GetRxBuffer
    {standard input}:1112   .text.XMC_ETH_MAC_SetTxBufferSize:00000000 $t
    {standard input}:1116   .text.XMC_ETH_MAC_SetTxBufferSize:00000000 XMC_ETH_MAC_SetTxBufferSize
    {standard input}:1161   ETH_RAM:00000000 $d
    {standard input}:1164   ETH_RAM:00000000 ETH_LWIP_0_rx_desc
    {standard input}:1169   ETH_RAM:00000080 ETH_LWIP_0_tx_desc
    {standard input}:1174   ETH_RAM:00000100 ETH_LWIP_0_rx_buf
    {standard input}:1179   ETH_RAM:000018d0 ETH_LWIP_0_tx_buf
    {standard input}:1186   .rodata.eth_phy_config:00000000 eth_phy_config
    {standard input}:1183   .rodata.eth_phy_config:00000000 $d
    {standard input}:1196   .data.eth_mac:00000000 eth_mac
    {standard input}:1193   .data.eth_mac:00000000 $d
    {standard input}:1214   .data.xnetif:00000000 xnetif
    {standard input}:1211   .data.xnetif:00000000 $d
    {standard input}:1229   .text.ethernetif_link_callback:00000000 $t
    {standard input}:1233   .text.ethernetif_link_callback:00000000 ethernetif_link_callback
    {standard input}:2171   .text.ETH_LWIP_Error:00000000 ETH_LWIP_Error
    {standard input}:1388   .text.ethernetif_link_callback:000000fc $d
    {standard input}:1396   .text.ethernetif_link_status:00000000 $t
    {standard input}:1400   .text.ethernetif_link_status:00000000 ethernetif_link_status
    {standard input}:1463   .text.ethernetif_link_status:00000054 $d
    {standard input}:1470   .text.low_level_init:00000000 $t
    {standard input}:1474   .text.low_level_init:00000000 low_level_init
    {standard input}:1655   .text.low_level_init:00000134 $d
    {standard input}:1662   .text.low_level_output:00000000 $t
    {standard input}:1666   .text.low_level_output:00000000 low_level_output
    {standard input}:1787   .text.low_level_output:000000ac $d
    {standard input}:1792   .text.low_level_input:00000000 $t
    {standard input}:1796   .text.low_level_input:00000000 low_level_input
    {standard input}:1930   .text.low_level_input:000000c4 $d
    {standard input}:1935   .text.ethernetif_input:00000000 $t
    {standard input}:1939   .text.ethernetif_input:00000000 ethernetif_input
    {standard input}:2030   .text.ethernetif_init:00000000 $t
    {standard input}:2035   .text.ethernetif_init:00000000 ethernetif_init
    {standard input}:2089   .text.ethernetif_init:0000003c $d
    {standard input}:2097   .text.ETH0_0_IRQHandler:00000000 $t
    {standard input}:2102   .text.ETH0_0_IRQHandler:00000000 ETH0_0_IRQHandler
    {standard input}:2128   .text.ETH0_0_IRQHandler:00000014 $d
    {standard input}:2134   .text.ETH_LWIP_Poll:00000000 $t
    {standard input}:2139   .text.ETH_LWIP_Poll:00000000 ETH_LWIP_Poll
    {standard input}:2161   .text.ETH_LWIP_Poll:0000000c $d
    {standard input}:2166   .text.ETH_LWIP_Error:00000000 $t
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_ETH_PHY_Init
XMC_ETH_PHY_IsAutonegotiationCompleted
XMC_ETH_PHY_GetLinkSpeed
XMC_ETH_PHY_GetLinkDuplex
XMC_ETH_MAC_EnableEvent
netif_set_up
XMC_ETH_MAC_DisableEvent
netif_set_down
XMC_ETH_PHY_GetLinkStatus
netif_set_link_down
netif_set_link_up
sys_timeout
XMC_GPIO_Init
XMC_GPIO_SetHardwareControl
XMC_ETH_MAC_Init
pbuf_header
thumb2_memcpy
XMC_ETH_MAC_ReturnTxDescriptor
XMC_ETH_MAC_GetRxFrameSize
pbuf_alloc
XMC_ETH_MAC_ReturnRxDescriptor
lwip_htons
pbuf_free
netif_set_link_callback
etharp_output
XMC_ETH_MAC_ClearEventStatus
